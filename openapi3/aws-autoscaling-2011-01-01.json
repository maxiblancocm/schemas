{
  "openapi": "3.0.0",
  "info": {
    "version": "2011-01-01",
    "x-release": "v4",
    "title": "Amazon EC2 Auto Scaling",
    "description": "Amazon EC2 Auto Scaling is designed to automatically launch or terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks. Use this service with AWS Auto Scaling, Amazon CloudWatch, and Elastic Load Balancing. For more information, including information about granting IAM users required permissions for Amazon EC2 Auto Scaling actions, see the Amazon EC2 Auto Scaling User Guide.",
    "x-logo": {
      "url": "https://raw.githubusercontent.com/chainjet/assets/master/integrations/aws/Arch_Amazon-EC2-Auto-Scaling_64.svg"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "x-providerName": "amazonaws.com",
    "x-serviceName": "autoscaling",
    "x-origin": [
      {
        "contentType": "application/json",
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/autoscaling-2011-01-01.normal.json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "x-apisguru-driver": "external"
      }
    ],
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-preferred": true
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/autoscaling/"
  },
  "servers": [
    {
      "url": "http://autoscaling.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-east-1",
            "ap-south-1",
            "sa-east-1",
            "me-south-1"
          ],
          "default": "us-east-1"
        }
      },
      "description": "The Auto Scaling multi-region endpoint"
    },
    {
      "url": "https://autoscaling.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-east-1",
            "ap-south-1",
            "sa-east-1",
            "me-south-1"
          ],
          "default": "us-east-1"
        }
      },
      "description": "The Auto Scaling multi-region endpoint"
    },
    {
      "url": "http://autoscaling.amazonaws.com",
      "variables": {},
      "description": "The general Auto Scaling endpoint for US East (N. Virginia)"
    },
    {
      "url": "https://autoscaling.amazonaws.com",
      "variables": {},
      "description": "The general Auto Scaling endpoint for US East (N. Virginia)"
    },
    {
      "url": "http://autoscaling.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": ["cn-north-1", "cn-northwest-1"],
          "default": "cn-north-1"
        }
      },
      "description": "The Auto Scaling endpoint for China (Beijing) and China (Ningxia)"
    },
    {
      "url": "https://autoscaling.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": ["cn-north-1", "cn-northwest-1"],
          "default": "cn-north-1"
        }
      },
      "description": "The Auto Scaling endpoint for China (Beijing) and China (Ningxia)"
    }
  ],
  "x-hasEquivalentPaths": true,
  "paths": {
    "/#Action=AttachInstances": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "AttachInstances",
        "operationId": "POST_AttachInstances",
        "description": "<p>Attaches one or more EC2 instances to the specified Auto Scaling group.</p> <p>When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.</p> <p>If there is a Classic Load Balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html\">Attach EC2 Instances to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "481": {
            "description": "ServiceLinkedRoleFailure",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLinkedRoleFailure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AttachInstancesQuery"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AttachInstances"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Attach Instances"
      }
    },
    "/#Action=AttachLoadBalancerTargetGroups": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "AttachLoadBalancerTargetGroups",
        "operationId": "POST_AttachLoadBalancerTargetGroups",
        "description": "<p>Attaches one or more target groups to the specified Auto Scaling group.</p> <p>To describe the target groups for an Auto Scaling group, call the <a>DescribeLoadBalancerTargetGroups</a> API. To detach the target group from the Auto Scaling group, call the <a>DetachLoadBalancerTargetGroups</a> API.</p> <p>With Application Load Balancers and Network Load Balancers, instances are registered as targets with a target group. With Classic Load Balancers, instances are registered with the load balancer. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html\">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AttachLoadBalancerTargetGroupsResultType"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "481": {
            "description": "ServiceLinkedRoleFailure",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLinkedRoleFailure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AttachLoadBalancerTargetGroupsType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AttachLoadBalancerTargetGroups"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Attach Load Balancer Target Groups"
      }
    },
    "/#Action=AttachLoadBalancers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "AttachLoadBalancers",
        "operationId": "POST_AttachLoadBalancers",
        "description": "<note> <p>To attach an Application Load Balancer or a Network Load Balancer, use the <a>AttachLoadBalancerTargetGroups</a> API operation instead.</p> </note> <p>Attaches one or more Classic Load Balancers to the specified Auto Scaling group. Amazon EC2 Auto Scaling registers the running instances with these Classic Load Balancers.</p> <p>To describe the load balancers for an Auto Scaling group, call the <a>DescribeLoadBalancers</a> API. To detach the load balancer from the Auto Scaling group, call the <a>DetachLoadBalancers</a> API.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html\">Attaching a Load Balancer to Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AttachLoadBalancersResultType"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "481": {
            "description": "ServiceLinkedRoleFailure",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLinkedRoleFailure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AttachLoadBalancersType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["AttachLoadBalancers"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Attach Load Balancers"
      }
    },
    "/#Action=BatchDeleteScheduledAction": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "BatchDeleteScheduledAction",
        "operationId": "POST_BatchDeleteScheduledAction",
        "description": "Deletes one or more scheduled actions for the specified Auto Scaling group.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDeleteScheduledActionAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteScheduledActionType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["BatchDeleteScheduledAction"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Batch Delete Scheduled Action"
      }
    },
    "/#Action=BatchPutScheduledUpdateGroupAction": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "BatchPutScheduledUpdateGroupAction",
        "operationId": "POST_BatchPutScheduledUpdateGroupAction",
        "description": "Creates or updates one or more scheduled scaling actions for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchPutScheduledUpdateGroupActionAnswer"
                }
              }
            }
          },
          "480": {
            "description": "AlreadyExistsFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AlreadyExistsFault"
                }
              }
            }
          },
          "481": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "482": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BatchPutScheduledUpdateGroupActionType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["BatchPutScheduledUpdateGroupAction"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Batch Put Scheduled Update Group Action"
      }
    },
    "/#Action=CancelInstanceRefresh": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "CancelInstanceRefresh",
        "operationId": "POST_CancelInstanceRefresh",
        "description": "<p>Cancels an instance refresh operation in progress. Cancellation does not roll back any replacements that have already been completed, but it prevents new replacements from being started. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html\">Replacing Auto Scaling Instances Based on an Instance Refresh</a>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CancelInstanceRefreshAnswer"
                }
              }
            }
          },
          "480": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "482": {
            "description": "ActiveInstanceRefreshNotFoundFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveInstanceRefreshNotFoundFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CancelInstanceRefreshType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["CancelInstanceRefresh"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Cancel Instance Refresh"
      }
    },
    "/#Action=CompleteLifecycleAction": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "CompleteLifecycleAction",
        "operationId": "POST_CompleteLifecycleAction",
        "description": "<p>Completes the lifecycle action for the specified token or instance with the specified result.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p> <b>If you finish before the timeout period ends, complete the lifecycle action.</b> </p> </li> </ol> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html\">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteLifecycleActionAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CompleteLifecycleActionType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["CompleteLifecycleAction"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Complete Lifecycle Action"
      }
    },
    "/#Action=CreateAutoScalingGroup": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "CreateAutoScalingGroup",
        "operationId": "POST_CreateAutoScalingGroup",
        "description": "<p>Creates an Auto Scaling group with the specified name and attributes. </p> <p>If you exceed your maximum limit of Auto Scaling groups, the call fails. To query this limit, call the <a>DescribeAccountLimits</a> API. For information about updating this limit, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html\">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For introductory exercises for creating an Auto Scaling group, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/GettingStartedTutorial.html\">Getting Started with Amazon EC2 Auto Scaling</a> and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-register-lbs-with-asg.html\">Tutorial: Set Up a Scaled and Load-Balanced Application</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroup.html\">Auto Scaling Groups</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Every Auto Scaling group has three size parameters (<code>DesiredCapacity</code>, <code>MaxSize</code>, and <code>MinSize</code>). Usually, you set these sizes based on a specific number of instances. However, if you configure a mixed instances policy that defines weights for the instance types, you must specify these sizes with the same units that you use for weighting instances.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "AlreadyExistsFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AlreadyExistsFault"
                }
              }
            }
          },
          "481": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "482": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "483": {
            "description": "ServiceLinkedRoleFailure",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLinkedRoleFailure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateAutoScalingGroupType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["CreateAutoScalingGroup"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Create Auto Scaling Group"
      }
    },
    "/#Action=CreateLaunchConfiguration": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "CreateLaunchConfiguration",
        "operationId": "POST_CreateLaunchConfiguration",
        "description": "<p>Creates a launch configuration.</p> <p>If you exceed your maximum limit of launch configurations, the call fails. To query this limit, call the <a>DescribeAccountLimits</a> API. For information about updating this limit, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html\">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html\">Launch Configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "AlreadyExistsFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AlreadyExistsFault"
                }
              }
            }
          },
          "481": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "482": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateLaunchConfigurationType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["CreateLaunchConfiguration"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Create Launch Configuration"
      }
    },
    "/#Action=CreateOrUpdateTags": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "CreateOrUpdateTags",
        "operationId": "POST_CreateOrUpdateTags",
        "description": "<p>Creates or updates tags for the specified Auto Scaling group.</p> <p>When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html\">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "481": {
            "description": "AlreadyExistsFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AlreadyExistsFault"
                }
              }
            }
          },
          "482": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "483": {
            "description": "ResourceInUseFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceInUseFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateTagsType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["CreateOrUpdateTags"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Create Or Update Tags"
      }
    },
    "/#Action=DeleteAutoScalingGroup": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DeleteAutoScalingGroup",
        "operationId": "POST_DeleteAutoScalingGroup",
        "description": "<p>Deletes the specified Auto Scaling group.</p> <p>If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed.</p> <p>If the group has policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.</p> <p>To remove instances from the Auto Scaling group before deleting it, call the <a>DetachInstances</a> API with the list of instances and the option to decrement the desired capacity. This ensures that Amazon EC2 Auto Scaling does not launch replacement instances.</p> <p>To terminate all instances before deleting the Auto Scaling group, call the <a>UpdateAutoScalingGroup</a> API and set the minimum size and desired capacity of the Auto Scaling group to zero.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ScalingActivityInProgressFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScalingActivityInProgressFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceInUseFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceInUseFault"
                }
              }
            }
          },
          "482": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAutoScalingGroupType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DeleteAutoScalingGroup"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Delete Auto Scaling Group"
      }
    },
    "/#Action=DeleteLaunchConfiguration": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DeleteLaunchConfiguration",
        "operationId": "POST_DeleteLaunchConfiguration",
        "description": "<p>Deletes the specified launch configuration.</p> <p>The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceInUseFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceInUseFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/LaunchConfigurationNameType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DeleteLaunchConfiguration"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Delete Launch Configuration"
      }
    },
    "/#Action=DeleteLifecycleHook": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DeleteLifecycleHook",
        "operationId": "POST_DeleteLifecycleHook",
        "description": "<p>Deletes the specified lifecycle hook.</p> <p>If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code> for launching instances, <code>CONTINUE</code> for terminating instances).</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteLifecycleHookAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteLifecycleHookType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DeleteLifecycleHook"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Delete Lifecycle Hook"
      }
    },
    "/#Action=DeleteNotificationConfiguration": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DeleteNotificationConfiguration",
        "operationId": "POST_DeleteNotificationConfiguration",
        "description": "Deletes the specified notification.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteNotificationConfigurationType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DeleteNotificationConfiguration"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Delete Notification Configuration"
      }
    },
    "/#Action=DeletePolicy": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DeletePolicy",
        "operationId": "POST_DeletePolicy",
        "description": "<p>Deletes the specified scaling policy.</p> <p>Deleting either a step scaling policy or a simple scaling policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html\">Deleting a Scaling Policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "481": {
            "description": "ServiceLinkedRoleFailure",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLinkedRoleFailure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeletePolicyType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DeletePolicy"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Delete Policy"
      }
    },
    "/#Action=DeleteScheduledAction": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DeleteScheduledAction",
        "operationId": "POST_DeleteScheduledAction",
        "description": "Deletes the specified scheduled action.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteScheduledActionType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DeleteScheduledAction"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Delete Scheduled Action"
      }
    },
    "/#Action=DeleteTags": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DeleteTags",
        "operationId": "POST_DeleteTags",
        "description": "Deletes the specified tags.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceInUseFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceInUseFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTagsType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DeleteTags"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Delete Tags"
      }
    },
    "/#Action=DescribeAccountLimits": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeAccountLimits",
        "operationId": "POST_DescribeAccountLimits",
        "description": "<p>Describes the current Amazon EC2 Auto Scaling resource quotas for your AWS account.</p> <p>For information about requesting an increase, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-account-limits.html\">Amazon EC2 Auto Scaling Service Quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAccountLimitsAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeAccountLimits"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Account Limits"
      }
    },
    "/#Action=DescribeAdjustmentTypes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeAdjustmentTypes",
        "operationId": "POST_DescribeAdjustmentTypes",
        "description": "<p>Describes the available adjustment types for Amazon EC2 Auto Scaling scaling policies. These settings apply to step scaling policies and simple scaling policies; they do not apply to target tracking scaling policies.</p> <p>The following adjustment types are supported:</p> <ul> <li> <p>ChangeInCapacity</p> </li> <li> <p>ExactCapacity</p> </li> <li> <p>PercentChangeInCapacity</p> </li> </ul>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAdjustmentTypesAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeAdjustmentTypes"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Adjustment Types"
      }
    },
    "/#Action=DescribeAutoScalingGroups": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeAutoScalingGroups",
        "operationId": "POST_DescribeAutoScalingGroups",
        "description": "Describes one or more Auto Scaling groups.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AutoScalingGroupsType"
                }
              }
            }
          },
          "480": {
            "description": "InvalidNextToken",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidNextToken"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AutoScalingGroupNamesType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "MaxRecords",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeAutoScalingGroups"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Auto Scaling Groups"
      }
    },
    "/#Action=DescribeAutoScalingInstances": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeAutoScalingInstances",
        "operationId": "POST_DescribeAutoScalingInstances",
        "description": "Describes one or more Auto Scaling instances.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AutoScalingInstancesType"
                }
              }
            }
          },
          "480": {
            "description": "InvalidNextToken",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidNextToken"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribeAutoScalingInstancesType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "MaxRecords",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeAutoScalingInstances"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Auto Scaling Instances"
      }
    },
    "/#Action=DescribeAutoScalingNotificationTypes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeAutoScalingNotificationTypes",
        "operationId": "POST_DescribeAutoScalingNotificationTypes",
        "description": "Describes the notification types that are supported by Amazon EC2 Auto Scaling.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAutoScalingNotificationTypesAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeAutoScalingNotificationTypes"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Auto Scaling Notification Types"
      }
    },
    "/#Action=DescribeInstanceRefreshes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeInstanceRefreshes",
        "operationId": "POST_DescribeInstanceRefreshes",
        "description": "<p>Describes one or more instance refreshes.</p> <p>You can determine the status of a request by looking at the <code>Status</code> parameter. The following are the possible statuses: </p> <ul> <li> <p> <code>Pending</code> - The request was created, but the operation has not started.</p> </li> <li> <p> <code>InProgress</code> - The operation is in progress.</p> </li> <li> <p> <code>Successful</code> - The operation completed successfully.</p> </li> <li> <p> <code>Failed</code> - The operation failed to complete. You can troubleshoot using the status reason and the scaling activities. </p> </li> <li> <p> <code>Cancelling</code> - An ongoing operation is being cancelled. Cancellation does not roll back any replacements that have already been completed, but it prevents new replacements from being started. </p> </li> <li> <p> <code>Cancelled</code> - The operation is cancelled. </p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html\">Replacing Auto Scaling Instances Based on an Instance Refresh</a>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeInstanceRefreshesAnswer"
                }
              }
            }
          },
          "480": {
            "description": "InvalidNextToken",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidNextToken"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribeInstanceRefreshesType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeInstanceRefreshes"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Instance Refreshes"
      }
    },
    "/#Action=DescribeLaunchConfigurations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeLaunchConfigurations",
        "operationId": "POST_DescribeLaunchConfigurations",
        "description": "Describes one or more launch configurations.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LaunchConfigurationsType"
                }
              }
            }
          },
          "480": {
            "description": "InvalidNextToken",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidNextToken"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/LaunchConfigurationNamesType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "MaxRecords",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeLaunchConfigurations"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Launch Configurations"
      }
    },
    "/#Action=DescribeLifecycleHookTypes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeLifecycleHookTypes",
        "operationId": "POST_DescribeLifecycleHookTypes",
        "description": "<p>Describes the available types of lifecycle hooks.</p> <p>The following hook types are supported:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeLifecycleHookTypesAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeLifecycleHookTypes"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Lifecycle Hook Types"
      }
    },
    "/#Action=DescribeLifecycleHooks": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeLifecycleHooks",
        "operationId": "POST_DescribeLifecycleHooks",
        "description": "Describes the lifecycle hooks for the specified Auto Scaling group.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeLifecycleHooksAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribeLifecycleHooksType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeLifecycleHooks"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Lifecycle Hooks"
      }
    },
    "/#Action=DescribeLoadBalancerTargetGroups": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeLoadBalancerTargetGroups",
        "operationId": "POST_DescribeLoadBalancerTargetGroups",
        "description": "Describes the target groups for the specified Auto Scaling group.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeLoadBalancerTargetGroupsResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribeLoadBalancerTargetGroupsRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeLoadBalancerTargetGroups"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Load Balancer Target Groups"
      }
    },
    "/#Action=DescribeLoadBalancers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeLoadBalancers",
        "operationId": "POST_DescribeLoadBalancers",
        "description": "<p>Describes the load balancers for the specified Auto Scaling group.</p> <p>This operation describes only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use the <a>DescribeLoadBalancerTargetGroups</a> API instead.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeLoadBalancersResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribeLoadBalancersRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeLoadBalancers"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Load Balancers"
      }
    },
    "/#Action=DescribeMetricCollectionTypes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeMetricCollectionTypes",
        "operationId": "POST_DescribeMetricCollectionTypes",
        "description": "<p>Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.</p> <p>The <code>GroupStandbyInstances</code> metric is not returned by default. You must explicitly request this metric when calling the <a>EnableMetricsCollection</a> API.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeMetricCollectionTypesAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeMetricCollectionTypes"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Metric Collection Types"
      }
    },
    "/#Action=DescribeNotificationConfigurations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeNotificationConfigurations",
        "operationId": "POST_DescribeNotificationConfigurations",
        "description": "Describes the notification actions associated with the specified Auto Scaling group.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeNotificationConfigurationsAnswer"
                }
              }
            }
          },
          "480": {
            "description": "InvalidNextToken",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidNextToken"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribeNotificationConfigurationsType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "MaxRecords",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeNotificationConfigurations"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Notification Configurations"
      }
    },
    "/#Action=DescribePolicies": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribePolicies",
        "operationId": "POST_DescribePolicies",
        "description": "Describes the policies for the specified Auto Scaling group.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PoliciesType"
                }
              }
            }
          },
          "480": {
            "description": "InvalidNextToken",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidNextToken"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "482": {
            "description": "ServiceLinkedRoleFailure",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLinkedRoleFailure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribePoliciesType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "MaxRecords",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribePolicies"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Policies"
      }
    },
    "/#Action=DescribeScalingActivities": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeScalingActivities",
        "operationId": "POST_DescribeScalingActivities",
        "description": "Describes one or more scaling activities for the specified Auto Scaling group.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitiesType"
                }
              }
            }
          },
          "480": {
            "description": "InvalidNextToken",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidNextToken"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribeScalingActivitiesType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "MaxRecords",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeScalingActivities"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Scaling Activities"
      }
    },
    "/#Action=DescribeScalingProcessTypes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeScalingProcessTypes",
        "operationId": "POST_DescribeScalingProcessTypes",
        "description": "Describes the scaling process types for use with the <a>ResumeProcesses</a> and <a>SuspendProcesses</a> APIs.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessesType"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeScalingProcessTypes"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Scaling Process Types"
      }
    },
    "/#Action=DescribeScheduledActions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeScheduledActions",
        "operationId": "POST_DescribeScheduledActions",
        "description": "Describes the actions scheduled for your Auto Scaling group that haven't run or that have not reached their end time. To describe the actions that have already run, call the <a>DescribeScalingActivities</a> API.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledActionsType"
                }
              }
            }
          },
          "480": {
            "description": "InvalidNextToken",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidNextToken"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribeScheduledActionsType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "MaxRecords",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeScheduledActions"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Scheduled Actions"
      }
    },
    "/#Action=DescribeTags": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeTags",
        "operationId": "POST_DescribeTags",
        "description": "<p>Describes the specified tags.</p> <p>You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.</p> <p>You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there's no match, no special message is returned.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html\">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TagsType"
                }
              }
            }
          },
          "480": {
            "description": "InvalidNextToken",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidNextToken"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribeTagsType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "MaxRecords",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeTags"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Tags"
      }
    },
    "/#Action=DescribeTerminationPolicyTypes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DescribeTerminationPolicyTypes",
        "operationId": "POST_DescribeTerminationPolicyTypes",
        "description": "<p>Describes the termination policies supported by Amazon EC2 Auto Scaling.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html\">Controlling Which Auto Scaling Instances Terminate During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeTerminationPolicyTypesAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeTerminationPolicyTypes"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Termination Policy Types"
      }
    },
    "/#Action=DetachInstances": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DetachInstances",
        "operationId": "POST_DetachInstances",
        "description": "<p>Removes one or more instances from the specified Auto Scaling group.</p> <p>After the instances are detached, you can manage them independent of the Auto Scaling group.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are detached.</p> <p>If there is a Classic Load Balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html\">Detach EC2 Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DetachInstancesAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DetachInstancesQuery"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DetachInstances"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Detach Instances"
      }
    },
    "/#Action=DetachLoadBalancerTargetGroups": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DetachLoadBalancerTargetGroups",
        "operationId": "POST_DetachLoadBalancerTargetGroups",
        "description": "Detaches one or more target groups from the specified Auto Scaling group.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DetachLoadBalancerTargetGroupsResultType"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DetachLoadBalancerTargetGroupsType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DetachLoadBalancerTargetGroups"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Detach Load Balancer Target Groups"
      }
    },
    "/#Action=DetachLoadBalancers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DetachLoadBalancers",
        "operationId": "POST_DetachLoadBalancers",
        "description": "<p>Detaches one or more Classic Load Balancers from the specified Auto Scaling group.</p> <p>This operation detaches only Classic Load Balancers. If you have Application Load Balancers or Network Load Balancers, use the <a>DetachLoadBalancerTargetGroups</a> API instead.</p> <p>When you detach a load balancer, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using the <a>DescribeLoadBalancers</a> API call. The instances remain running.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DetachLoadBalancersResultType"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DetachLoadBalancersType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DetachLoadBalancers"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Detach Load Balancers"
      }
    },
    "/#Action=DisableMetricsCollection": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "DisableMetricsCollection",
        "operationId": "POST_DisableMetricsCollection",
        "description": "Disables group metrics for the specified Auto Scaling group.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DisableMetricsCollectionQuery"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DisableMetricsCollection"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Disable Metrics Collection"
      }
    },
    "/#Action=EnableMetricsCollection": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "EnableMetricsCollection",
        "operationId": "POST_EnableMetricsCollection",
        "description": "Enables group metrics for the specified Auto Scaling group. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html\">Monitoring Your Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnableMetricsCollectionQuery"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["EnableMetricsCollection"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Enable Metrics Collection"
      }
    },
    "/#Action=EnterStandby": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "EnterStandby",
        "operationId": "POST_EnterStandby",
        "description": "<p>Moves the specified instances into the standby state.</p> <p>If you choose to decrement the desired capacity of the Auto Scaling group, the instances can enter standby as long as the desired capacity of the Auto Scaling group after the instances are placed into standby is equal to or greater than the minimum capacity of the group.</p> <p>If you choose not to decrement the desired capacity of the Auto Scaling group, the Auto Scaling group launches new instances to replace the instances on standby.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html\">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnterStandbyAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnterStandbyQuery"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["EnterStandby"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Enter Standby"
      }
    },
    "/#Action=ExecutePolicy": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "ExecutePolicy",
        "operationId": "POST_ExecutePolicy",
        "description": "Executes the specified policy. This can be useful for testing the design of your scaling policy.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ScalingActivityInProgressFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScalingActivityInProgressFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExecutePolicyType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["ExecutePolicy"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Execute Policy"
      }
    },
    "/#Action=ExitStandby": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "ExitStandby",
        "operationId": "POST_ExitStandby",
        "description": "<p>Moves the specified instances out of the standby state.</p> <p>After you put the instances back in service, the desired capacity is incremented.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html\">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExitStandbyAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExitStandbyQuery"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["ExitStandby"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Exit Standby"
      }
    },
    "/#Action=PutLifecycleHook": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "PutLifecycleHook",
        "operationId": "POST_PutLifecycleHook",
        "description": "<p>Creates or updates a lifecycle hook for the specified Auto Scaling group.</p> <p>A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on an instance when the instance launches (before it is put into service) or as the instance terminates (before it is fully terminated).</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state using the <a>RecordLifecycleActionHeartbeat</a> API call.</p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action using the <a>CompleteLifecycleAction</a> API call.</p> </li> </ol> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html\">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto Scaling group, the call fails.</p> <p>You can view the lifecycle hooks for an Auto Scaling group using the <a>DescribeLifecycleHooks</a> API call. If you are no longer using a lifecycle hook, you can delete it by calling the <a>DeleteLifecycleHook</a> API.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PutLifecycleHookAnswer"
                }
              }
            }
          },
          "480": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PutLifecycleHookType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PutLifecycleHook"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Put Lifecycle Hook"
      }
    },
    "/#Action=PutNotificationConfiguration": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "PutNotificationConfiguration",
        "operationId": "POST_PutNotificationConfiguration",
        "description": "<p>Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.</p> <p>This configuration overwrites any existing configuration.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html\">Getting Amazon SNS Notifications When Your Auto Scaling Group Scales</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "482": {
            "description": "ServiceLinkedRoleFailure",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLinkedRoleFailure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PutNotificationConfigurationType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PutNotificationConfiguration"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Put Notification Configuration"
      }
    },
    "/#Action=PutScalingPolicy": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "PutScalingPolicy",
        "operationId": "POST_PutScalingPolicy",
        "description": "<p>Creates or updates a scaling policy for an Auto Scaling group.</p> <p>For more information about using scaling policies to scale your Auto Scaling group, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-target-tracking.html\">Target Tracking Scaling Policies</a> and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html\">Step and Simple Scaling Policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyARNType"
                }
              }
            }
          },
          "480": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "482": {
            "description": "ServiceLinkedRoleFailure",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLinkedRoleFailure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PutScalingPolicyType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PutScalingPolicy"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Put Scaling Policy"
      }
    },
    "/#Action=PutScheduledUpdateGroupAction": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "PutScheduledUpdateGroupAction",
        "operationId": "POST_PutScheduledUpdateGroupAction",
        "description": "<p>Creates or updates a scheduled scaling action for an Auto Scaling group. If you leave a parameter unspecified when updating a scheduled scaling action, the corresponding value remains unchanged.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html\">Scheduled Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "AlreadyExistsFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AlreadyExistsFault"
                }
              }
            }
          },
          "481": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "482": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PutScheduledUpdateGroupActionType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PutScheduledUpdateGroupAction"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Put Scheduled Update Group Action"
      }
    },
    "/#Action=RecordLifecycleActionHeartbeat": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "RecordLifecycleActionHeartbeat",
        "operationId": "POST_RecordLifecycleActionHeartbeat",
        "description": "<p>Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using the <a>PutLifecycleHook</a> API call.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p> <b>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</b> </p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroupLifecycle.html\">Auto Scaling Lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RecordLifecycleActionHeartbeatAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RecordLifecycleActionHeartbeatType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["RecordLifecycleActionHeartbeat"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Record Lifecycle Action Heartbeat"
      }
    },
    "/#Action=ResumeProcesses": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "ResumeProcesses",
        "operationId": "POST_ResumeProcesses",
        "description": "<p>Resumes the specified suspended automatic scaling processes, or all suspended process, for the specified Auto Scaling group.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html\">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceInUseFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceInUseFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScalingProcessQuery"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["ResumeProcesses"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Resume Processes"
      }
    },
    "/#Action=SetDesiredCapacity": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "SetDesiredCapacity",
        "operationId": "POST_SetDesiredCapacity",
        "description": "<p>Sets the size of the specified Auto Scaling group.</p> <p>If a scale-in activity occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-manual-scaling.html\">Manual Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ScalingActivityInProgressFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScalingActivityInProgressFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SetDesiredCapacityType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["SetDesiredCapacity"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Set Desired Capacity"
      }
    },
    "/#Action=SetInstanceHealth": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "SetInstanceHealth",
        "operationId": "POST_SetInstanceHealth",
        "description": "<p>Sets the health status of the specified instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html\">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SetInstanceHealthQuery"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["SetInstanceHealth"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Set Instance Health"
      }
    },
    "/#Action=SetInstanceProtection": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "SetInstanceProtection",
        "operationId": "POST_SetInstanceProtection",
        "description": "<p>Updates the instance protection settings of the specified instances.</p> <p>For more information about preventing instances that are part of an Auto Scaling group from terminating on scale in, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection\">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SetInstanceProtectionAnswer"
                }
              }
            }
          },
          "480": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SetInstanceProtectionQuery"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["SetInstanceProtection"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Set Instance Protection"
      }
    },
    "/#Action=StartInstanceRefresh": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "StartInstanceRefresh",
        "operationId": "POST_StartInstanceRefresh",
        "description": "<p>Starts a new instance refresh operation, which triggers a rolling replacement of all previously launched instances in the Auto Scaling group with a new group of instances.</p> <p>If successful, this call creates a new instance refresh request with a unique ID that you can use to track its progress. To query its status, call the <a>DescribeInstanceRefreshes</a> API. To describe the instance refreshes that have already run, call the <a>DescribeInstanceRefreshes</a> API. To cancel an instance refresh operation in progress, use the <a>CancelInstanceRefresh</a> API. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html\">Replacing Auto Scaling Instances Based on an Instance Refresh</a>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StartInstanceRefreshAnswer"
                }
              }
            }
          },
          "480": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "482": {
            "description": "InstanceRefreshInProgressFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceRefreshInProgressFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StartInstanceRefreshType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["StartInstanceRefresh"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Start Instance Refresh"
      }
    },
    "/#Action=SuspendProcesses": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "SuspendProcesses",
        "operationId": "POST_SuspendProcesses",
        "description": "<p>Suspends the specified automatic scaling processes, or all processes, for the specified Auto Scaling group.</p> <p>If you suspend either the <code>Launch</code> or <code>Terminate</code> process types, it can prevent other process types from functioning properly. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html\">Suspending and Resuming Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>To resume processes that have been suspended, call the <a>ResumeProcesses</a> API.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceInUseFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceInUseFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ScalingProcessQuery"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["SuspendProcesses"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Suspend Processes"
      }
    },
    "/#Action=TerminateInstanceInAutoScalingGroup": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "TerminateInstanceInAutoScalingGroup",
        "operationId": "POST_TerminateInstanceInAutoScalingGroup",
        "description": "<p>Terminates the specified instance and optionally adjusts the desired group size. </p> <p>This call simply makes a termination request. The instance is not terminated immediately. When an instance is terminated, the instance status changes to <code>terminated</code>. You can't connect to or start an instance after you've terminated it.</p> <p>If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto Scaling launches instances to replace the ones that are terminated. </p> <p>By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones. If you decrement the desired capacity, your Auto Scaling group can become unbalanced between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group, and rebalancing might terminate instances in other zones. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage\">Rebalancing Activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityType"
                }
              }
            }
          },
          "480": {
            "description": "ScalingActivityInProgressFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScalingActivityInProgressFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TerminateInstanceInAutoScalingGroupType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["TerminateInstanceInAutoScalingGroup"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Terminate Instance In Auto Scaling Group"
      }
    },
    "/#Action=UpdateAutoScalingGroup": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "x-aws-operation-name": "UpdateAutoScalingGroup",
        "operationId": "POST_UpdateAutoScalingGroup",
        "description": "<p>Updates the configuration for the specified Auto Scaling group.</p> <p>To update an Auto Scaling group, specify the name of the group and the parameter that you want to change. Any parameters that you don't specify are not changed by this update request. The new settings take effect on any scaling activities after this call returns. </p> <p>If you associate a new launch configuration or template with an Auto Scaling group, all new instances will get the updated configuration. Existing instances continue to run with the configuration that they were originally launched with. When you update a group to specify a mixed instances policy instead of a launch configuration or template, existing instances may be replaced to match the new purchasing options that you specified in the policy. For example, if the group currently has 100% On-Demand capacity and the policy specifies 50% Spot capacity, this means that half of your instances will be gradually terminated and relaunched as Spot Instances. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so that updating your group does not compromise the performance or availability of your application.</p> <p>Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>, or <code>MinSize</code>:</p> <ul> <li> <p>If a scale-in activity occurs as a result of a new <code>DesiredCapacity</code> value that is lower than the current size of the group, the Auto Scaling group uses its termination policy to determine which instances to terminate.</p> </li> <li> <p>If you specify a new value for <code>MinSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MinSize</code> value.</p> </li> <li> <p>If you specify a new value for <code>MaxSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the current size of the group, this sets the group's <code>DesiredCapacity</code> to the new <code>MaxSize</code> value.</p> </li> </ul> <p>To see which parameters have been set, call the <a>DescribeAutoScalingGroups</a> API. To view the scaling policies for an Auto Scaling group, call the <a>DescribePolicies</a> API. If the group has scaling policies, you can update them by calling the <a>PutScalingPolicy</a> API.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ScalingActivityInProgressFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScalingActivityInProgressFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "482": {
            "description": "ServiceLinkedRoleFailure",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLinkedRoleFailure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAutoScalingGroupType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["UpdateAutoScalingGroup"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Update Auto Scaling Group"
      }
    },
    "/#Action=DeleteWarmPool": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "operationId": "POST_DeleteWarmPool",
        "description": "<p>Deletes the warm pool for the specified Auto Scaling group.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html\">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWarmPoolAnswer"
                }
              }
            }
          },
          "480": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          },
          "482": {
            "description": "ScalingActivityInProgressFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ScalingActivityInProgressFault"
                }
              }
            }
          },
          "483": {
            "description": "ResourceInUseFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceInUseFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteWarmPoolType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DeleteWarmPool"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Delete Warm Pool"
      }
    },
    "/#Action=DescribeWarmPool": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "operationId": "POST_DescribeWarmPool",
        "description": "<p>Gets information about a warm pool and its instances.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html\">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeWarmPoolAnswer"
                }
              }
            }
          },
          "480": {
            "description": "InvalidNextToken",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidNextToken"
                }
              }
            }
          },
          "481": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "482": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DescribeWarmPoolType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DescribeWarmPool"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Describe Warm Pool"
      }
    },
    "/#Action=GetPredictiveScalingForecast": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "operationId": "POST_GetPredictiveScalingForecast",
        "description": "<p>Retrieves the forecast data for a predictive scaling policy.</p> <p>Load forecasts are predictions of the hourly load values using historical load data from CloudWatch and an analysis of historical trends. Capacity forecasts are represented as predicted values for the minimum capacity that is needed on an hourly basis, based on the hourly load forecast.</p> <p>A minimum of 24 hours of data is required to create the initial forecasts. However, having a full 14 days of historical data results in more accurate forecasts.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html\">Predictive scaling for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetPredictiveScalingForecastAnswer"
                }
              }
            }
          },
          "480": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GetPredictiveScalingForecastType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["GetPredictiveScalingForecast"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Get Predictive Scaling Forecast"
      }
    },
    "/#Action=PutWarmPool": {
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "operationId": "POST_PutWarmPool",
        "description": "<p>Creates or updates a warm pool for the specified Auto Scaling group. A warm pool is a pool of pre-initialized EC2 instances that sits alongside the Auto Scaling group. Whenever your application needs to scale out, the Auto Scaling group can draw on the warm pool to meet its new desired capacity. For more information and example configurations, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html\">Warm pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>This operation must be called from the Region in which the Auto Scaling group was created. This operation cannot be called on an Auto Scaling group that has a mixed instances policy or a launch template or launch configuration that requests Spot Instances.</p> <p>You can view the instances in the warm pool using the <a>DescribeWarmPool</a> API call. If you are no longer using a warm pool, you can delete it by calling the <a>DeleteWarmPool</a> API.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PutWarmPoolAnswer"
                }
              }
            }
          },
          "480": {
            "description": "LimitExceededFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LimitExceededFault"
                }
              }
            }
          },
          "481": {
            "description": "ResourceContentionFault",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentionFault"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PutWarmPoolType"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PutWarmPool"]
            }
          },
          {
            "name": "Version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2011-01-01"]
            }
          }
        ],
        "summary": "Put Warm Pool"
      }
    }
  },
  "components": {
    "parameters": {
      "X-Amz-Content-Sha256": {
        "name": "X-Amz-Content-Sha256",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Date": {
        "name": "X-Amz-Date",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Algorithm": {
        "name": "X-Amz-Algorithm",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Credential": {
        "name": "X-Amz-Credential",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Security-Token": {
        "name": "X-Amz-Security-Token",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Signature": {
        "name": "X-Amz-Signature",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-SignedHeaders": {
        "name": "X-Amz-SignedHeaders",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      }
    },
    "securitySchemes": {
      "hmac": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Amazon Signature authorization v4",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "XmlStringMaxLen19": {
        "type": "string",
        "minLength": 1,
        "maxLength": 19,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "ResourceContentionFault": {},
      "ServiceLinkedRoleFailure": {},
      "AttachLoadBalancerTargetGroupsResultType": {
        "type": "object",
        "properties": {}
      },
      "XmlStringMaxLen511": {
        "type": "string",
        "minLength": 1,
        "maxLength": 511,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "AttachLoadBalancersResultType": {
        "type": "object",
        "properties": {}
      },
      "XmlStringMaxLen255": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "BatchDeleteScheduledActionAnswer": {
        "type": "object",
        "properties": {
          "FailedScheduledActions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FailedScheduledUpdateGroupActionRequests"
              },
              {
                "description": "The names of the scheduled actions that could not be deleted, including an error message."
              }
            ]
          }
        }
      },
      "ResourceName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1600,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "BatchPutScheduledUpdateGroupActionAnswer": {
        "type": "object",
        "properties": {
          "FailedScheduledUpdateGroupActions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FailedScheduledUpdateGroupActionRequests"
              },
              {
                "description": "The names of the scheduled actions that could not be created or updated, including an error message."
              }
            ]
          }
        }
      },
      "ScheduledUpdateGroupActionRequest": {
        "type": "object",
        "required": ["ScheduledActionName"],
        "properties": {
          "ScheduledActionName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the scaling action."
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "<p>The date and time for the action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, <code>\"2019-06-01T00:00:00Z\"</code>).</p> <p>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.</p> <p>If you try to schedule the action in the past, Amazon EC2 Auto Scaling returns an error message.</p>"
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The date and time for the recurring schedule to end. Amazon EC2 Auto Scaling does not perform the action after this time."
              }
            ]
          },
          "Recurrence": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The recurring schedule for the action, in Unix cron syntax format. This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, <code>\"30 0 1 1,6,12 *\"</code>). For more information about this format, see <a href=\"http://crontab.org\">Crontab</a>.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p>"
              }
            ]
          },
          "MinSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMinSize"
              },
              {
                "description": "The minimum size of the Auto Scaling group."
              }
            ]
          },
          "MaxSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMaxSize"
              },
              {
                "description": "The maximum size of the Auto Scaling group."
              }
            ]
          },
          "DesiredCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupDesiredCapacity"
              },
              {
                "description": "The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain."
              }
            ]
          },
          "TimeZone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>Specifies the time zone for a cron expression. If a time zone is not provided, UTC is used by default. </p> <p>Valid values are the canonical names of the IANA time zones, derived from the IANA Time Zone Database (such as <code>Etc/GMT+9</code> or <code>Pacific/Tahiti</code>). For more information, see <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.</p>"
              }
            ]
          }
        },
        "description": "<p>Describes information used for one or more scheduled scaling action updates in a <a>BatchPutScheduledUpdateGroupAction</a> operation.</p> <p>When updating a scheduled scaling action, all optional parameters are left unchanged if not specified.</p>"
      },
      "AlreadyExistsFault": {},
      "LimitExceededFault": {},
      "CancelInstanceRefreshAnswer": {
        "type": "object",
        "example": {
          "InstanceRefreshId": "08b91cf7-8fa6-48af-b6a6-d227f40f1b9b"
        },
        "properties": {
          "InstanceRefreshId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The instance refresh ID."
              }
            ]
          }
        }
      },
      "ActiveInstanceRefreshNotFoundFault": {},
      "CompleteLifecycleActionAnswer": {
        "type": "object",
        "properties": {}
      },
      "LaunchTemplateName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9\\(\\)\\.-/_]+",
        "minLength": 3,
        "maxLength": 128
      },
      "LaunchTemplate": {
        "type": "object",
        "properties": {
          "LaunchTemplateSpecification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchTemplateSpecification"
              },
              {
                "description": "The launch template to use. You must specify either the launch template ID or launch template name in the request."
              }
            ]
          },
          "Overrides": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Overrides"
              },
              {
                "description": "<p>Any parameters that you specify override the same parameters in the launch template. Currently, the only supported override is instance type. You can specify between 1 and 20 instance types.</p> <p>If not provided, Amazon EC2 Auto Scaling will use the instance type specified in the launch template to launch instances. </p>"
              }
            ]
          }
        },
        "description": "<p>Describes a launch template and overrides.</p> <p>The overrides are used to override the instance type specified by the launch template with multiple instance types that can be used to launch On-Demand Instances and Spot Instances.</p> <p>When you update the launch template or overrides, existing Amazon EC2 instances continue to run. When scale out occurs, Amazon EC2 Auto Scaling launches instances to match the new settings. When scale in occurs, Amazon EC2 Auto Scaling terminates instances according to the group's termination policies.</p>"
      },
      "InstancesDistribution": {
        "type": "object",
        "properties": {
          "OnDemandAllocationStrategy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "<p>Indicates how to allocate instance types to fulfill On-Demand capacity.</p> <p>The only valid value is <code>prioritized</code>, which is also the default value. This strategy uses the order of instance type overrides for the <a>LaunchTemplate</a> to define the launch priority of each instance type. The first instance type in the array is prioritized higher than the last. If all your On-Demand capacity cannot be fulfilled using your highest priority instance, then the Auto Scaling groups launches the remaining capacity using the second priority instance type, and so on.</p>"
              }
            ]
          },
          "OnDemandBaseCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OnDemandBaseCapacity"
              },
              {
                "description": "<p>The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.</p> <p>Default if not set is 0. If you leave it set to 0, On-Demand Instances are launched as a percentage of the Auto Scaling group's desired capacity, per the <code>OnDemandPercentageAboveBaseCapacity</code> setting.</p> <note> <p>An update to this setting means a gradual replacement of instances to maintain the specified number of On-Demand Instances for your base capacity. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones.</p> </note>"
              }
            ]
          },
          "OnDemandPercentageAboveBaseCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OnDemandPercentageAboveBaseCapacity"
              },
              {
                "description": "<p>Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond <code>OnDemandBaseCapacity</code>.</p> <p>Default if not set is 100. If you leave it set to 100, the percentages are 100% for On-Demand Instances and 0% for Spot Instances.</p> <note> <p>An update to this setting means a gradual replacement of instances to maintain the percentage of On-Demand Instances for your additional capacity above the base capacity. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the old ones.</p> </note> <p>Valid Range: Minimum value of 0. Maximum value of 100.</p>"
              }
            ]
          },
          "SpotAllocationStrategy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "<p>Indicates how to allocate instances across Spot Instance pools.</p> <p>If the allocation strategy is <code>lowest-price</code>, the Auto Scaling group launches instances using the Spot pools with the lowest price, and evenly allocates your instances across the number of Spot pools that you specify. If the allocation strategy is <code>capacity-optimized</code>, the Auto Scaling group launches instances using Spot pools that are optimally chosen based on the available Spot capacity.</p> <p>The default Spot allocation strategy for calls that you make through the API, the AWS CLI, or the AWS SDKs is <code>lowest-price</code>. The default Spot allocation strategy for the AWS Management Console is <code>capacity-optimized</code>.</p> <p>Valid values: <code>lowest-price</code> | <code>capacity-optimized</code> </p>"
              }
            ]
          },
          "SpotInstancePools": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SpotInstancePools"
              },
              {
                "description": "<p>The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the different instance types in the Overrides array of <a>LaunchTemplate</a>. Default if not set is 2.</p> <p>Used only when the Spot allocation strategy is <code>lowest-price</code>.</p> <p>Valid Range: Minimum value of 1. Maximum value of 20.</p>"
              }
            ]
          },
          "SpotMaxPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MixedInstanceSpotPrice"
              },
              {
                "description": "<p>The maximum price per unit hour that you are willing to pay for a Spot Instance. If you leave the value of this parameter blank (which is the default), the maximum Spot price is set at the On-Demand price.</p> <p>To remove a value that you previously set, include the parameter but leave the value blank.</p>"
              }
            ]
          }
        },
        "description": "<p>Describes an instances distribution for an Auto Scaling group with a <a>MixedInstancesPolicy</a>.</p> <p>The instances distribution specifies the distribution of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances, and how the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacity.</p> <p>When you update <code>SpotAllocationStrategy</code>, <code>SpotInstancePools</code>, or <code>SpotMaxPrice</code>, this update action does not deploy any changes across the running Amazon EC2 instances in the group. Your existing Spot Instances continue to run as long as the maximum price for those instances is higher than the current Spot price. When scale out occurs, Amazon EC2 Auto Scaling launches instances based on the new settings. When scale in occurs, Amazon EC2 Auto Scaling terminates instances according to the group's termination policies.</p>"
      },
      "XmlStringMaxLen1600": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1600,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "LifecycleHookSpecification": {
        "type": "object",
        "required": ["LifecycleHookName", "LifecycleTransition"],
        "properties": {
          "LifecycleHookName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AsciiStringMaxLen255"
              },
              {
                "description": "The name of the lifecycle hook."
              }
            ]
          },
          "LifecycleTransition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleTransition"
              },
              {
                "description": "<p>The state of the EC2 instance to which you want to attach the lifecycle hook. The valid values are:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul>"
              }
            ]
          },
          "NotificationMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1023"
              },
              {
                "description": "Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target."
              }
            ]
          },
          "HeartbeatTimeout": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HeartbeatTimeout"
              },
              {
                "description": "<p>The maximum time, in seconds, that can elapse before the lifecycle hook times out.</p> <p>If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the <code>DefaultResult</code> parameter. You can prevent the lifecycle hook from timing out by calling <a>RecordLifecycleActionHeartbeat</a>.</p>"
              }
            ]
          },
          "DefaultResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleActionResult"
              },
              {
                "description": "Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are <code>CONTINUE</code> and <code>ABANDON</code>. The default value is <code>ABANDON</code>."
              }
            ]
          },
          "NotificationTargetARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationTargetResourceName"
              },
              {
                "description": "The ARN of the target that Amazon EC2 Auto Scaling sends notifications to when an instance is in the transition state for the lifecycle hook. The notification target can be either an SQS queue or an SNS topic."
              }
            ]
          },
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue."
              }
            ]
          }
        },
        "description": "<p>Describes information used to specify a lifecycle hook for an Auto Scaling group.</p> <p>A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on an instance when the instance launches (before it is put into service) or as the instance terminates (before it is fully terminated).</p> <p>This step is a part of the procedure for creating a lifecycle hook for an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html\">Amazon EC2 Auto Scaling Lifecycle Hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
      },
      "Tag": {
        "type": "object",
        "required": ["Key"],
        "properties": {
          "ResourceId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The name of the group."
              }
            ]
          },
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The type of resource. The only supported value is <code>auto-scaling-group</code>."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagKey"
              },
              {
                "description": "The tag key."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          },
          "PropagateAtLaunch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PropagateAtLaunch"
              },
              {
                "description": "Determines whether the tag is added to new instances as they are launched in the group."
              }
            ]
          }
        },
        "description": "Describes a tag for an Auto Scaling group."
      },
      "XmlString": {
        "type": "string",
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "BlockDeviceMapping": {
        "type": "object",
        "required": ["DeviceName"],
        "properties": {
          "VirtualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The name of the virtual device (for example, <code>ephemeral0</code>).</p> <p>You can specify either <code>VirtualName</code> or <code>Ebs</code>, but not both.</p>"
              }
            ]
          },
          "DeviceName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The device name exposed to the EC2 instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>). For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html\">Device Naming on Linux Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
              }
            ]
          },
          "Ebs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Ebs"
              },
              {
                "description": "<p>Parameters used to automatically set up EBS volumes when an instance is launched.</p> <p>You can specify either <code>VirtualName</code> or <code>Ebs</code>, but not both.</p>"
              }
            ]
          },
          "NoDevice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NoDevice"
              },
              {
                "description": "<p>Setting this value to <code>true</code> suppresses the specified device included in the block device mapping of the AMI.</p> <p>If <code>NoDevice</code> is <code>true</code> for the root device, instances might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling launches replacement instances.</p> <p>If you specify <code>NoDevice</code>, you cannot specify <code>Ebs</code>.</p>"
              }
            ]
          }
        },
        "description": "Describes a block device mapping."
      },
      "MonitoringEnabled": {
        "type": "boolean"
      },
      "InstanceMetadataHttpTokensState": {
        "type": "string",
        "enum": ["optional", "required"]
      },
      "InstanceMetadataHttpPutResponseHopLimit": {
        "type": "integer",
        "minimum": 1,
        "maximum": 64
      },
      "InstanceMetadataEndpointState": {
        "type": "string",
        "enum": ["disabled", "enabled"]
      },
      "ResourceInUseFault": {},
      "ScalingActivityInProgressFault": {},
      "DeleteLifecycleHookAnswer": {
        "type": "object",
        "properties": {}
      },
      "DescribeAccountLimitsAnswer": {
        "type": "object",
        "example": {
          "MaxNumberOfAutoScalingGroups": 20,
          "MaxNumberOfLaunchConfigurations": 100,
          "NumberOfAutoScalingGroups": 3,
          "NumberOfLaunchConfigurations": 5
        },
        "properties": {
          "MaxNumberOfAutoScalingGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxNumberOfAutoScalingGroups"
              },
              {
                "description": "The maximum number of groups allowed for your AWS account. The default is 200 groups per AWS Region."
              }
            ]
          },
          "MaxNumberOfLaunchConfigurations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxNumberOfLaunchConfigurations"
              },
              {
                "description": "The maximum number of launch configurations allowed for your AWS account. The default is 200 launch configurations per AWS Region."
              }
            ]
          },
          "NumberOfAutoScalingGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberOfAutoScalingGroups"
              },
              {
                "description": "The current number of groups for your AWS account."
              }
            ]
          },
          "NumberOfLaunchConfigurations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberOfLaunchConfigurations"
              },
              {
                "description": "The current number of launch configurations for your AWS account."
              }
            ]
          }
        }
      },
      "DescribeAdjustmentTypesAnswer": {
        "type": "object",
        "example": {
          "AdjustmentTypes": [
            {
              "AdjustmentType": "ChangeInCapacity"
            },
            {
              "AdjustmentType": "ExactCapcity"
            },
            {
              "AdjustmentType": "PercentChangeInCapacity"
            }
          ]
        },
        "properties": {
          "AdjustmentTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdjustmentTypes"
              },
              {
                "description": "The policy adjustment types."
              }
            ]
          }
        }
      },
      "AutoScalingGroupsType": {
        "type": "object",
        "required": ["AutoScalingGroups"],
        "example": {
          "AutoScalingGroups": [
            {
              "AutoScalingGroupARN": "arn:aws:autoscaling:us-west-2:123456789012:autoScalingGroup:930d940e-891e-4781-a11a-7b0acd480f03:autoScalingGroupName/my-auto-scaling-group",
              "AutoScalingGroupName": "my-auto-scaling-group",
              "AvailabilityZones": ["us-west-2c"],
              "CreatedTime": "2013-08-19T20:53:25.584Z",
              "DefaultCooldown": 300,
              "DesiredCapacity": 1,
              "EnabledMetrics": [],
              "HealthCheckGracePeriod": 300,
              "HealthCheckType": "EC2",
              "Instances": [
                {
                  "AvailabilityZone": "us-west-2c",
                  "HealthStatus": "Healthy",
                  "InstanceId": "i-4ba0837f",
                  "LaunchConfigurationName": "my-launch-config",
                  "LifecycleState": "InService",
                  "ProtectedFromScaleIn": false
                }
              ],
              "LaunchConfigurationName": "my-launch-config",
              "LoadBalancerNames": [],
              "MaxSize": 1,
              "MinSize": 0,
              "NewInstancesProtectedFromScaleIn": false,
              "SuspendedProcesses": [],
              "Tags": [],
              "TerminationPolicies": ["Default"],
              "VPCZoneIdentifier": "subnet-12345678"
            }
          ]
        },
        "properties": {
          "AutoScalingGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroups"
              },
              {
                "description": "The groups."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "InvalidNextToken": {},
      "AutoScalingInstancesType": {
        "type": "object",
        "example": {
          "AutoScalingInstances": [
            {
              "AutoScalingGroupName": "my-auto-scaling-group",
              "AvailabilityZone": "us-west-2c",
              "HealthStatus": "HEALTHY",
              "InstanceId": "i-4ba0837f",
              "LaunchConfigurationName": "my-launch-config",
              "LifecycleState": "InService",
              "ProtectedFromScaleIn": false
            }
          ]
        },
        "properties": {
          "AutoScalingInstances": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingInstances"
              },
              {
                "description": "The instances."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "DescribeAutoScalingNotificationTypesAnswer": {
        "type": "object",
        "example": {
          "AutoScalingNotificationTypes": [
            "autoscaling:EC2_INSTANCE_LAUNCH",
            "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
            "autoscaling:EC2_INSTANCE_TERMINATE",
            "autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
            "autoscaling:TEST_NOTIFICATION"
          ]
        },
        "properties": {
          "AutoScalingNotificationTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingNotificationTypes"
              },
              {
                "description": "The notification types."
              }
            ]
          }
        }
      },
      "DescribeInstanceRefreshesAnswer": {
        "type": "object",
        "example": {
          "InstanceRefreshes": [
            {
              "AutoScalingGroupName": "my-auto-scaling-group",
              "InstanceRefreshId": "08b91cf7-8fa6-48af-b6a6-d227f40f1b9b",
              "InstancesToUpdate": 5,
              "PercentageComplete": 0,
              "StartTime": "2020-06-02T18:11:27Z",
              "Status": "InProgress"
            },
            {
              "AutoScalingGroupName": "my-auto-scaling-group",
              "EndTime": "2020-06-02T16:53:37Z",
              "InstanceRefreshId": "dd7728d0-5bc4-4575-96a3-1b2c52bf8bb1",
              "InstancesToUpdate": 0,
              "PercentageComplete": 100,
              "StartTime": "2020-06-02T16:43:19Z",
              "Status": "Successful"
            }
          ]
        },
        "properties": {
          "InstanceRefreshes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceRefreshes"
              },
              {
                "description": "The instance refreshes for the specified group."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "LaunchConfigurationsType": {
        "type": "object",
        "required": ["LaunchConfigurations"],
        "example": {
          "LaunchConfigurations": [
            {
              "AssociatePublicIpAddress": true,
              "BlockDeviceMappings": [],
              "CreatedTime": "2014-05-07T17:39:28.599Z",
              "EbsOptimized": false,
              "ImageId": "ami-043a5034",
              "InstanceMonitoring": {
                "Enabled": true
              },
              "InstanceType": "t1.micro",
              "LaunchConfigurationARN": "arn:aws:autoscaling:us-west-2:123456789012:launchConfiguration:98d3b196-4cf9-4e88-8ca1-8547c24ced8b:launchConfigurationName/my-launch-config",
              "LaunchConfigurationName": "my-launch-config",
              "SecurityGroups": ["sg-67ef0308"]
            }
          ]
        },
        "properties": {
          "LaunchConfigurations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchConfigurations"
              },
              {
                "description": "The launch configurations."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "DescribeLifecycleHookTypesAnswer": {
        "type": "object",
        "example": {
          "LifecycleHookTypes": [
            "autoscaling:EC2_INSTANCE_LAUNCHING",
            "autoscaling:EC2_INSTANCE_TERMINATING"
          ]
        },
        "properties": {
          "LifecycleHookTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingNotificationTypes"
              },
              {
                "description": "The lifecycle hook types."
              }
            ]
          }
        }
      },
      "DescribeLifecycleHooksAnswer": {
        "type": "object",
        "example": {
          "LifecycleHooks": [
            {
              "AutoScalingGroupName": "my-auto-scaling-group",
              "DefaultResult": "ABANDON",
              "GlobalTimeout": 172800,
              "HeartbeatTimeout": 3600,
              "LifecycleHookName": "my-lifecycle-hook",
              "LifecycleTransition": "autoscaling:EC2_INSTANCE_LAUNCHING",
              "NotificationTargetARN": "arn:aws:sns:us-west-2:123456789012:my-sns-topic",
              "RoleARN": "arn:aws:iam::123456789012:role/my-auto-scaling-role"
            }
          ]
        },
        "properties": {
          "LifecycleHooks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleHooks"
              },
              {
                "description": "The lifecycle hooks for the specified group."
              }
            ]
          }
        }
      },
      "AsciiStringMaxLen255": {
        "type": "string",
        "pattern": "[A-Za-z0-9\\-_\\/]+",
        "minLength": 1,
        "maxLength": 255
      },
      "DescribeLoadBalancerTargetGroupsResponse": {
        "type": "object",
        "example": {
          "LoadBalancerTargetGroups": [
            {
              "LoadBalancerTargetGroupARN": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
              "State": "Added"
            }
          ]
        },
        "properties": {
          "LoadBalancerTargetGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoadBalancerTargetGroupStates"
              },
              {
                "description": "Information about the target groups."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "DescribeLoadBalancersResponse": {
        "type": "object",
        "example": {
          "LoadBalancers": [
            {
              "LoadBalancerName": "my-load-balancer",
              "State": "Added"
            }
          ]
        },
        "properties": {
          "LoadBalancers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoadBalancerStates"
              },
              {
                "description": "The load balancers."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "DescribeMetricCollectionTypesAnswer": {
        "type": "object",
        "example": {
          "Granularities": [
            {
              "Granularity": "1Minute"
            }
          ],
          "Metrics": [
            {
              "Metric": "GroupMinSize"
            },
            {
              "Metric": "GroupMaxSize"
            },
            {
              "Metric": "GroupDesiredCapacity"
            },
            {
              "Metric": "GroupInServiceInstances"
            },
            {
              "Metric": "GroupPendingInstances"
            },
            {
              "Metric": "GroupTerminatingInstances"
            },
            {
              "Metric": "GroupStandbyInstances"
            },
            {
              "Metric": "GroupTotalInstances"
            }
          ]
        },
        "properties": {
          "Metrics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricCollectionTypes"
              },
              {
                "description": "One or more metrics."
              }
            ]
          },
          "Granularities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricGranularityTypes"
              },
              {
                "description": "The granularities for the metrics."
              }
            ]
          }
        }
      },
      "DescribeNotificationConfigurationsAnswer": {
        "type": "object",
        "required": ["NotificationConfigurations"],
        "example": {
          "NotificationConfigurations": [
            {
              "AutoScalingGroupName": "my-auto-scaling-group",
              "NotificationType": "autoscaling:TEST_NOTIFICATION",
              "TopicARN": "arn:aws:sns:us-west-2:123456789012:my-sns-topic-2"
            },
            {
              "AutoScalingGroupName": "my-auto-scaling-group",
              "NotificationType": "autoscaling:TEST_NOTIFICATION",
              "TopicARN": "arn:aws:sns:us-west-2:123456789012:my-sns-topic"
            }
          ]
        },
        "properties": {
          "NotificationConfigurations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationConfigurations"
              },
              {
                "description": "The notification configurations."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "PoliciesType": {
        "type": "object",
        "example": {
          "ScalingPolicies": [
            {
              "AdjustmentType": "ChangeInCapacity",
              "Alarms": [],
              "AutoScalingGroupName": "my-auto-scaling-group",
              "PolicyARN": "arn:aws:autoscaling:us-west-2:123456789012:scalingPolicy:2233f3d7-6290-403b-b632-93c553560106:autoScalingGroupName/my-auto-scaling-group:policyName/ScaleIn",
              "PolicyName": "ScaleIn",
              "ScalingAdjustment": -1
            },
            {
              "AdjustmentType": "PercentChangeInCapacity",
              "Alarms": [],
              "AutoScalingGroupName": "my-auto-scaling-group",
              "Cooldown": 60,
              "MinAdjustmentStep": 2,
              "PolicyARN": "arn:aws:autoscaling:us-west-2:123456789012:scalingPolicy:2b435159-cf77-4e89-8c0e-d63b497baad7:autoScalingGroupName/my-auto-scaling-group:policyName/ScalePercentChange",
              "PolicyName": "ScalePercentChange",
              "ScalingAdjustment": 25
            }
          ]
        },
        "properties": {
          "ScalingPolicies": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScalingPolicies"
              },
              {
                "description": "The scaling policies."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "XmlStringMaxLen64": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "ActivitiesType": {
        "type": "object",
        "required": ["Activities"],
        "example": {
          "Activities": [
            {
              "ActivityId": "f9f2d65b-f1f2-43e7-b46d-d86756459699",
              "AutoScalingGroupName": "my-auto-scaling-group",
              "Cause": "At 2013-08-19T20:53:25Z a user request created an AutoScalingGroup changing the desired capacity from 0 to 1.  At 2013-08-19T20:53:29Z an instance was started in response to a difference between desired and actual capacity, increasing the capacity from 0 to 1.",
              "Description": "Launching a new EC2 instance: i-4ba0837f",
              "Details": "details",
              "EndTime": "2013-08-19T20:54:02Z",
              "Progress": 100,
              "StartTime": "2013-08-19T20:53:29.930Z",
              "StatusCode": "Successful"
            }
          ]
        },
        "properties": {
          "Activities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Activities"
              },
              {
                "description": "The scaling activities. Activities are sorted by start time. Activities still in progress are described first."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "ProcessesType": {
        "type": "object",
        "example": {
          "Processes": [
            {
              "ProcessName": "AZRebalance"
            },
            {
              "ProcessName": "AddToLoadBalancer"
            },
            {
              "ProcessName": "AlarmNotification"
            },
            {
              "ProcessName": "HealthCheck"
            },
            {
              "ProcessName": "Launch"
            },
            {
              "ProcessName": "ReplaceUnhealthy"
            },
            {
              "ProcessName": "ScheduledActions"
            },
            {
              "ProcessName": "Terminate"
            }
          ]
        },
        "properties": {
          "Processes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Processes"
              },
              {
                "description": "The names of the process types."
              }
            ]
          }
        }
      },
      "ScheduledActionsType": {
        "type": "object",
        "example": {
          "ScheduledUpdateGroupActions": [
            {
              "AutoScalingGroupName": "my-auto-scaling-group",
              "DesiredCapacity": 4,
              "MaxSize": 6,
              "MinSize": 2,
              "Recurrence": "30 0 1 12 0",
              "ScheduledActionARN": "arn:aws:autoscaling:us-west-2:123456789012:scheduledUpdateGroupAction:8e86b655-b2e6-4410-8f29-b4f094d6871c:autoScalingGroupName/my-auto-scaling-group:scheduledActionName/my-scheduled-action",
              "ScheduledActionName": "my-scheduled-action",
              "StartTime": "2016-12-01T00:30:00Z",
              "Time": "2016-12-01T00:30:00Z"
            }
          ]
        },
        "properties": {
          "ScheduledUpdateGroupActions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledUpdateGroupActions"
              },
              {
                "description": "The scheduled actions."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "TagsType": {
        "type": "object",
        "example": {
          "Tags": [
            {
              "Key": "Dept",
              "PropagateAtLaunch": true,
              "ResourceId": "my-auto-scaling-group",
              "ResourceType": "auto-scaling-group",
              "Value": "Research"
            },
            {
              "Key": "Role",
              "PropagateAtLaunch": true,
              "ResourceId": "my-auto-scaling-group",
              "ResourceType": "auto-scaling-group",
              "Value": "WebServer"
            }
          ]
        },
        "properties": {
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagDescriptionList"
              },
              {
                "description": "One or more tags."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return."
              }
            ]
          }
        }
      },
      "Filter": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The name of the filter. The valid values are: <code>auto-scaling-group</code>, <code>key</code>, <code>value</code>, and <code>propagate-at-launch</code>."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Values"
              },
              {
                "description": "One or more filter values. Filter values are case-sensitive."
              }
            ]
          }
        },
        "description": "<p>Describes a filter that is used to return a more specific list of results when describing tags.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html\">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
      },
      "DescribeTerminationPolicyTypesAnswer": {
        "type": "object",
        "example": {
          "TerminationPolicyTypes": [
            "ClosestToNextInstanceHour",
            "Default",
            "NewestInstance",
            "OldestInstance",
            "OldestLaunchConfiguration"
          ]
        },
        "properties": {
          "TerminationPolicyTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TerminationPolicies"
              },
              {
                "description": "The termination policies supported by Amazon EC2 Auto Scaling: <code>OldestInstance</code>, <code>OldestLaunchConfiguration</code>, <code>NewestInstance</code>, <code>ClosestToNextInstanceHour</code>, <code>Default</code>, <code>OldestLaunchTemplate</code>, and <code>AllocationStrategy</code>."
              }
            ]
          }
        }
      },
      "DetachInstancesAnswer": {
        "type": "object",
        "example": {
          "Activities": [
            {
              "ActivityId": "5091cb52-547a-47ce-a236-c9ccbc2cb2c9",
              "AutoScalingGroupName": "my-auto-scaling-group",
              "Cause": "At 2015-04-12T15:02:16Z instance i-93633f9b was detached in response to a user request, shrinking the capacity from 2 to 1.",
              "Description": "Detaching EC2 instance: i-93633f9b",
              "Details": "details",
              "Progress": 50,
              "StartTime": "2015-04-12T15:02:16.179Z",
              "StatusCode": "InProgress"
            }
          ]
        },
        "properties": {
          "Activities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Activities"
              },
              {
                "description": "The activities related to detaching the instances from the Auto Scaling group."
              }
            ]
          }
        }
      },
      "DetachLoadBalancerTargetGroupsResultType": {
        "type": "object",
        "properties": {}
      },
      "DetachLoadBalancersResultType": {
        "type": "object",
        "properties": {}
      },
      "EnterStandbyAnswer": {
        "type": "object",
        "example": {
          "Activities": [
            {
              "ActivityId": "ffa056b4-6ed3-41ba-ae7c-249dfae6eba1",
              "AutoScalingGroupName": "my-auto-scaling-group",
              "Cause": "At 2015-04-12T15:10:23Z instance i-93633f9b was moved to standby in response to a user request, shrinking the capacity from 2 to 1.",
              "Description": "Moving EC2 instance to Standby: i-93633f9b",
              "Details": "details",
              "Progress": 50,
              "StartTime": "2015-04-12T15:10:23.640Z",
              "StatusCode": "InProgress"
            }
          ]
        },
        "properties": {
          "Activities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Activities"
              },
              {
                "description": "The activities related to moving instances into <code>Standby</code> mode."
              }
            ]
          }
        }
      },
      "ExitStandbyAnswer": {
        "type": "object",
        "example": {
          "Activities": [
            {
              "ActivityId": "142928e1-a2dc-453a-9b24-b85ad6735928",
              "AutoScalingGroupName": "my-auto-scaling-group",
              "Cause": "At 2015-04-12T15:14:29Z instance i-93633f9b was moved out of standby in response to a user request, increasing the capacity from 1 to 2.",
              "Description": "Moving EC2 instance out of Standby: i-93633f9b",
              "Details": "details",
              "Progress": 30,
              "StartTime": "2015-04-12T15:14:29.886Z",
              "StatusCode": "PreInService"
            }
          ]
        },
        "properties": {
          "Activities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Activities"
              },
              {
                "description": "The activities related to moving instances out of <code>Standby</code> mode."
              }
            ]
          }
        }
      },
      "PutLifecycleHookAnswer": {
        "type": "object",
        "properties": {}
      },
      "PolicyARNType": {
        "type": "object",
        "example": {
          "Alarms": [
            {
              "AlarmARN": "arn:aws:cloudwatch:us-west-2:123456789012:alarm:TargetTracking-my-asg-AlarmHigh-fc0e4183-23ac-497e-9992-691c9980c38e",
              "AlarmName": "TargetTracking-my-asg-AlarmHigh-fc0e4183-23ac-497e-9992-691c9980c38e"
            },
            {
              "AlarmARN": "arn:aws:cloudwatch:us-west-2:123456789012:alarm:TargetTracking-my-asg-AlarmLow-61a39305-ed0c-47af-bd9e-471a352ee1a2",
              "AlarmName": "TargetTracking-my-asg-AlarmLow-61a39305-ed0c-47af-bd9e-471a352ee1a2"
            }
          ],
          "PolicyARN": "arn:aws:autoscaling:us-west-2:123456789012:scalingPolicy:228f02c2-c665-4bfd-aaac-8b04080bea3c:autoScalingGroupName/my-auto-scaling-group:policyName/alb1000-target-tracking-scaling-policy"
        },
        "properties": {
          "PolicyARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the policy."
              }
            ]
          },
          "Alarms": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Alarms"
              },
              {
                "description": "The CloudWatch alarms created for the target tracking scaling policy."
              }
            ]
          }
        },
        "description": "Contains the output of PutScalingPolicy."
      },
      "StepAdjustment": {
        "type": "object",
        "required": ["ScalingAdjustment"],
        "properties": {
          "MetricIntervalLowerBound": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricScale"
              },
              {
                "description": "The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity."
              }
            ]
          },
          "MetricIntervalUpperBound": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricScale"
              },
              {
                "description": "<p>The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.</p> <p>The upper bound must be greater than the lower bound.</p>"
              }
            ]
          },
          "ScalingAdjustment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PolicyIncrement"
              },
              {
                "description": "The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity."
              }
            ]
          }
        },
        "description": "<p>Describes information used to create a step adjustment for a step scaling policy.</p> <p>For the following examples, suppose that you have an alarm with a breach threshold of 50:</p> <ul> <li> <p>To trigger the adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.</p> </li> <li> <p>To trigger the adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.</p> </li> </ul> <p>There are a few rules for the step adjustments for your step policy:</p> <ul> <li> <p>The ranges of your step adjustments can't overlap or have a gap.</p> </li> <li> <p>At most, one step adjustment can have a null lower bound. If one step adjustment has a negative lower bound, then there must be a step adjustment with a null lower bound.</p> </li> <li> <p>At most, one step adjustment can have a null upper bound. If one step adjustment has a positive upper bound, then there must be a step adjustment with a null upper bound.</p> </li> <li> <p>The upper and lower bound can't be null in the same step adjustment.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-steps\">Step Adjustments</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
      },
      "PredefinedMetricSpecification": {
        "type": "object",
        "required": ["PredefinedMetricType"],
        "properties": {
          "PredefinedMetricType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricType"
              },
              {
                "description": "<p>The metric type. The following predefined metrics are available:</p> <ul> <li> <p> <code>ASGAverageCPUUtilization</code> - Average CPU utilization of the Auto Scaling group.</p> </li> <li> <p> <code>ASGAverageNetworkIn</code> - Average number of bytes received on all network interfaces by the Auto Scaling group.</p> </li> <li> <p> <code>ASGAverageNetworkOut</code> - Average number of bytes sent out on all network interfaces by the Auto Scaling group.</p> </li> <li> <p> <code>ALBRequestCountPerTarget</code> - Number of requests completed per target in an Application Load Balancer target group.</p> </li> </ul>"
              }
            ]
          },
          "ResourceLabel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1023"
              },
              {
                "description": "<p>Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is <code>ALBRequestCountPerTarget</code> and there is a target group attached to the Auto Scaling group.</p> <p>Elastic Load Balancing sends data about your load balancers to Amazon CloudWatch. CloudWatch collects the data and specifies the format to use to access the data. The format is <code>app/<i>load-balancer-name</i>/<i>load-balancer-id</i>/targetgroup/<i>target-group-name</i>/<i>target-group-id</i> </code>, where </p> <ul> <li> <p> <code>app/<i>load-balancer-name</i>/<i>load-balancer-id</i> </code> is the final portion of the load balancer ARN, and</p> </li> <li> <p> <code>targetgroup/<i>target-group-name</i>/<i>target-group-id</i> </code> is the final portion of the target group ARN.</p> </li> </ul> <p>To find the ARN for an Application Load Balancer, use the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html\">DescribeLoadBalancers</a> API operation. To find the ARN for the target group, use the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html\">DescribeTargetGroups</a> API operation.</p>"
              }
            ]
          }
        },
        "description": "Represents a predefined metric for a target tracking scaling policy to use with Amazon EC2 Auto Scaling."
      },
      "CustomizedMetricSpecification": {
        "type": "object",
        "required": ["MetricName", "Namespace", "Statistic"],
        "properties": {
          "MetricName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricName"
              },
              {
                "description": "The name of the metric."
              }
            ]
          },
          "Namespace": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricNamespace"
              },
              {
                "description": "The namespace of the metric."
              }
            ]
          },
          "Dimensions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricDimensions"
              },
              {
                "description": "<p>The dimensions of the metric.</p> <p>Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.</p>"
              }
            ]
          },
          "Statistic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricStatistic"
              },
              {
                "description": "The statistic of the metric."
              }
            ]
          },
          "Unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricUnit"
              },
              {
                "description": "The unit of the metric."
              }
            ]
          }
        },
        "description": "<p>Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Amazon EC2 Auto Scaling.</p> <p>To create your customized metric specification:</p> <ul> <li> <p>Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html\">Publish Custom Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </li> <li> <p>Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases.</p> </li> </ul> <p>For more information about CloudWatch, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html\">Amazon CloudWatch Concepts</a>.</p>"
      },
      "MetricScale": {
        "type": "number",
        "format": "double"
      },
      "DisableScaleIn": {
        "type": "boolean"
      },
      "RecordLifecycleActionHeartbeatAnswer": {
        "type": "object",
        "properties": {}
      },
      "SetInstanceProtectionAnswer": {
        "type": "object",
        "properties": {}
      },
      "StartInstanceRefreshAnswer": {
        "type": "object",
        "example": {
          "InstanceRefreshId": "08b91cf7-8fa6-48af-b6a6-d227f40f1b9b"
        },
        "properties": {
          "InstanceRefreshId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "A unique ID for tracking the progress of the request."
              }
            ]
          }
        }
      },
      "IntPercent": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      },
      "RefreshInstanceWarmup": {
        "type": "integer",
        "minimum": 0
      },
      "InstanceRefreshInProgressFault": {},
      "ActivityType": {
        "type": "object",
        "properties": {
          "Activity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Activity"
              },
              {
                "description": "A scaling activity."
              }
            ]
          }
        }
      },
      "Activity": {
        "type": "object",
        "required": [
          "ActivityId",
          "AutoScalingGroupName",
          "Cause",
          "StartTime",
          "StatusCode"
        ],
        "properties": {
          "ActivityId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The ID of the activity."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "A friendly, more verbose description of the activity."
              }
            ]
          },
          "Cause": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1023"
              },
              {
                "description": "The reason the activity began."
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The start time of the activity."
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The end time of the activity."
              }
            ]
          },
          "StatusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScalingActivityStatusCode"
              },
              {
                "description": "The current status of the activity."
              }
            ]
          },
          "StatusMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "A friendly, more verbose description of the activity status."
              }
            ]
          },
          "Progress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Progress"
              },
              {
                "description": "A value between 0 and 100 that indicates the progress of the activity."
              }
            ]
          },
          "Details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The details about the activity."
              }
            ]
          },
          "AutoScalingGroupState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupState"
              },
              {
                "description": "The state of the Auto Scaling group, which is either <code>InService</code> or <code>Deleted</code>."
              }
            ]
          },
          "AutoScalingGroupARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Auto Scaling group."
              }
            ]
          }
        },
        "description": "Describes scaling activity, which is a long-running process that represents a change to your Auto Scaling group, such as changing its size or replacing an instance."
      },
      "Activities": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Activity"
        }
      },
      "XmlStringMaxLen1023": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1023,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "TimestampType": {
        "type": "string",
        "format": "date-time"
      },
      "ScalingActivityStatusCode": {
        "type": "string",
        "enum": [
          "PendingSpotBidPlacement",
          "WaitingForSpotInstanceRequestId",
          "WaitingForSpotInstanceId",
          "WaitingForInstanceId",
          "PreInService",
          "InProgress",
          "WaitingForELBConnectionDraining",
          "MidLifecycleAction",
          "WaitingForInstanceWarmup",
          "Successful",
          "Failed",
          "Cancelled"
        ]
      },
      "Progress": {
        "type": "integer"
      },
      "ActivityIds": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlString"
        }
      },
      "AdjustmentType": {
        "type": "object",
        "properties": {
          "AdjustmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The policy adjustment type. The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>."
              }
            ]
          }
        },
        "description": "Describes a policy adjustment type."
      },
      "AdjustmentTypes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdjustmentType"
        }
      },
      "Alarm": {
        "type": "object",
        "properties": {
          "AlarmName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the alarm."
              }
            ]
          },
          "AlarmARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the alarm."
              }
            ]
          }
        },
        "description": "Describes an alarm."
      },
      "Alarms": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Alarm"
        }
      },
      "AssociatePublicIpAddress": {
        "type": "boolean"
      },
      "InstanceIds": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen19"
        }
      },
      "AttachInstancesQuery": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "AttachInstancesQuery",
        "properties": {
          "InstanceIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceIds"
              },
              {
                "description": "The IDs of the instances. You can specify up to 20 instances."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          }
        }
      },
      "TargetGroupARNs": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen511"
        }
      },
      "AttachLoadBalancerTargetGroupsType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "TargetGroupARNs"],
        "title": "AttachLoadBalancerTargetGroupsType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "TargetGroupARNs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetGroupARNs"
              },
              {
                "description": "The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups."
              }
            ]
          }
        }
      },
      "LoadBalancerNames": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen255"
        }
      },
      "AttachLoadBalancersType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "LoadBalancerNames"],
        "title": "AttachLoadBalancersType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "LoadBalancerNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoadBalancerNames"
              },
              {
                "description": "The names of the load balancers. You can specify up to 10 load balancers."
              }
            ]
          }
        }
      },
      "LaunchTemplateSpecification": {
        "type": "object",
        "properties": {
          "LaunchTemplateId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The ID of the launch template. To get the template ID, use the Amazon EC2 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html\">DescribeLaunchTemplates</a> API operation. New launch templates can be created using the Amazon EC2 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html\">CreateLaunchTemplate</a> API.</p> <p>You must specify either a template ID or a template name.</p>"
              }
            ]
          },
          "LaunchTemplateName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchTemplateName"
              },
              {
                "description": "<p>The name of the launch template. To get the template name, use the Amazon EC2 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html\">DescribeLaunchTemplates</a> API operation. New launch templates can be created using the Amazon EC2 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html\">CreateLaunchTemplate</a> API.</p> <p>You must specify either a template ID or a template name.</p>"
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The version number, <code>$Latest</code>, or <code>$Default</code>. To get the version number, use the Amazon EC2 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html\">DescribeLaunchTemplateVersions</a> API operation. New launch template versions can be created using the Amazon EC2 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html\">CreateLaunchTemplateVersion</a> API.</p> <p>If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest version of the launch template when launching instances. If the value is <code>$Default</code>, Amazon EC2 Auto Scaling selects the default version of the launch template when launching instances. The default value is <code>$Default</code>.</p>"
              }
            ]
          }
        },
        "description": "<p>Describes the Amazon EC2 launch template and the launch template version that can be used by an Auto Scaling group to configure Amazon EC2 instances.</p> <p>The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html\">Creating a Launch Template for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
      },
      "MixedInstancesPolicy": {
        "type": "object",
        "properties": {
          "LaunchTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchTemplate"
              },
              {
                "description": "<p>The launch template and instance types (overrides).</p> <p>Required when creating a mixed instances policy.</p>"
              }
            ]
          },
          "InstancesDistribution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstancesDistribution"
              },
              {
                "description": "<p>The instances distribution to use.</p> <p>If you leave this parameter unspecified, the value for each parameter in <code>InstancesDistribution</code> uses a default value.</p>"
              }
            ]
          }
        },
        "description": "<p>Describes a mixed instances policy for an Auto Scaling group. With mixed instances, your Auto Scaling group can provision a combination of On-Demand Instances and Spot Instances across multiple instance types. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html\">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You can create a mixed instances policy for a new Auto Scaling group, or you can create it for an existing group by updating the group to specify <code>MixedInstancesPolicy</code> as the top-level parameter instead of a launch configuration or launch template. For more information, see <a>CreateAutoScalingGroup</a> and <a>UpdateAutoScalingGroup</a>.</p>"
      },
      "AutoScalingGroupMinSize": {
        "type": "integer"
      },
      "AutoScalingGroupMaxSize": {
        "type": "integer"
      },
      "AutoScalingGroupDesiredCapacity": {
        "type": "integer"
      },
      "Cooldown": {
        "type": "integer"
      },
      "AvailabilityZones": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen255"
        },
        "minItems": 1
      },
      "XmlStringMaxLen32": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "HealthCheckGracePeriod": {
        "type": "integer"
      },
      "Instances": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Instance"
        }
      },
      "SuspendedProcesses": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SuspendedProcess"
        }
      },
      "XmlStringMaxLen2047": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2047,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "EnabledMetrics": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EnabledMetric"
        }
      },
      "TagDescriptionList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TagDescription"
        }
      },
      "TerminationPolicies": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen1600"
        }
      },
      "InstanceProtected": {
        "type": "boolean"
      },
      "MaxInstanceLifetime": {
        "type": "integer"
      },
      "AutoScalingGroup": {
        "type": "object",
        "required": [
          "AutoScalingGroupName",
          "MinSize",
          "MaxSize",
          "DesiredCapacity",
          "DefaultCooldown",
          "AvailabilityZones",
          "HealthCheckType",
          "CreatedTime"
        ],
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "AutoScalingGroupARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Auto Scaling group."
              }
            ]
          },
          "LaunchConfigurationName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the associated launch configuration."
              }
            ]
          },
          "LaunchTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchTemplateSpecification"
              },
              {
                "description": "The launch template for the group."
              }
            ]
          },
          "MixedInstancesPolicy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MixedInstancesPolicy"
              },
              {
                "description": "The mixed instances policy for the group."
              }
            ]
          },
          "MinSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMinSize"
              },
              {
                "description": "The minimum size of the group."
              }
            ]
          },
          "MaxSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMaxSize"
              },
              {
                "description": "The maximum size of the group."
              }
            ]
          },
          "DesiredCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupDesiredCapacity"
              },
              {
                "description": "The desired size of the group."
              }
            ]
          },
          "DefaultCooldown": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Cooldown"
              },
              {
                "description": "The duration of the default cooldown period, in seconds."
              }
            ]
          },
          "AvailabilityZones": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailabilityZones"
              },
              {
                "description": "One or more Availability Zones for the group."
              }
            ]
          },
          "LoadBalancerNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoadBalancerNames"
              },
              {
                "description": "One or more load balancers associated with the group."
              }
            ]
          },
          "TargetGroupARNs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetGroupARNs"
              },
              {
                "description": "The Amazon Resource Names (ARN) of the target groups for your load balancer."
              }
            ]
          },
          "HealthCheckType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks."
              }
            ]
          },
          "HealthCheckGracePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HealthCheckGracePeriod"
              },
              {
                "description": "The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service."
              }
            ]
          },
          "Instances": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Instances"
              },
              {
                "description": "The EC2 instances associated with the group."
              }
            ]
          },
          "CreatedTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The date and time the group was created."
              }
            ]
          },
          "SuspendedProcesses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SuspendedProcesses"
              },
              {
                "description": "The suspended processes associated with the group."
              }
            ]
          },
          "PlacementGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the placement group into which to launch your instances, if any."
              }
            ]
          },
          "VPCZoneIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen2047"
              },
              {
                "description": "One or more subnet IDs, if applicable, separated by commas."
              }
            ]
          },
          "EnabledMetrics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EnabledMetrics"
              },
              {
                "description": "The metrics enabled for the group."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The current state of the group when the <a>DeleteAutoScalingGroup</a> operation is in progress."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagDescriptionList"
              },
              {
                "description": "The tags for the group."
              }
            ]
          },
          "TerminationPolicies": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TerminationPolicies"
              },
              {
                "description": "The termination policies for the group."
              }
            ]
          },
          "NewInstancesProtectedFromScaleIn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceProtected"
              },
              {
                "description": "Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in."
              }
            ]
          },
          "ServiceLinkedRoleARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf."
              }
            ]
          },
          "MaxInstanceLifetime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxInstanceLifetime"
              },
              {
                "description": "<p>The maximum amount of time, in seconds, that an instance can be in service.</p> <p>Valid Range: Minimum value of 0.</p>"
              }
            ]
          },
          "CapacityRebalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CapacityRebalanceEnabled"
              },
              {
                "description": "Indicates whether Capacity Rebalancing is enabled."
              }
            ]
          },
          "PredictedCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupPredictedCapacity"
              },
              {
                "description": "The predicted capacity of the group when it has a predictive scaling policy."
              }
            ]
          },
          "WarmPoolConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarmPoolConfiguration"
              },
              {
                "description": "The warm pool for the group."
              }
            ]
          },
          "WarmPoolSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarmPoolSize"
              },
              {
                "description": "The current size of the warm pool."
              }
            ]
          },
          "Context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Context"
              },
              {
                "description": "Reserved."
              }
            ]
          }
        },
        "description": "Describes an Auto Scaling group."
      },
      "AutoScalingGroupNames": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResourceName"
        }
      },
      "MaxRecords": {
        "type": "integer"
      },
      "AutoScalingGroupNamesType": {
        "type": "object",
        "title": "AutoScalingGroupNamesType",
        "properties": {
          "AutoScalingGroupNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupNames"
              },
              {
                "description": "<p>The names of the Auto Scaling groups. Each name can be a maximum of 1600 characters. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> parameter.</p> <p>If you omit this parameter, all Auto Scaling groups are described.</p>"
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>."
              }
            ]
          }
        }
      },
      "AutoScalingGroups": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AutoScalingGroup"
        }
      },
      "AutoScalingInstanceDetails": {
        "type": "object",
        "required": [
          "InstanceId",
          "AutoScalingGroupName",
          "AvailabilityZone",
          "LifecycleState",
          "HealthStatus",
          "ProtectedFromScaleIn"
        ],
        "properties": {
          "InstanceId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen19"
              },
              {
                "description": "The ID of the instance."
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The instance type of the EC2 instance."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group for the instance."
              }
            ]
          },
          "AvailabilityZone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The Availability Zone for the instance."
              }
            ]
          },
          "LifecycleState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "The lifecycle state for the instance."
              }
            ]
          },
          "HealthStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "The last reported health status of this instance. \"Healthy\" means that the instance is healthy and should remain in service. \"Unhealthy\" means that the instance is unhealthy and Amazon EC2 Auto Scaling should terminate and replace it."
              }
            ]
          },
          "LaunchConfigurationName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The launch configuration used to launch the instance. This value is not available if you attached the instance to the Auto Scaling group."
              }
            ]
          },
          "LaunchTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchTemplateSpecification"
              },
              {
                "description": "The launch template for the instance."
              }
            ]
          },
          "ProtectedFromScaleIn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceProtected"
              },
              {
                "description": "Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in."
              }
            ]
          },
          "WeightedCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "<p>The number of capacity units contributed by the instance based on its instance type.</p> <p>Valid Range: Minimum value of 1. Maximum value of 999.</p>"
              }
            ]
          }
        },
        "description": "Describes an EC2 instance associated with an Auto Scaling group."
      },
      "AutoScalingInstances": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AutoScalingInstanceDetails"
        }
      },
      "AutoScalingNotificationTypes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen255"
        }
      },
      "FailedScheduledUpdateGroupActionRequests": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FailedScheduledUpdateGroupActionRequest"
        }
      },
      "ScheduledActionNames": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResourceName"
        }
      },
      "BatchDeleteScheduledActionType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "ScheduledActionNames"],
        "title": "BatchDeleteScheduledActionType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ScheduledActionNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledActionNames"
              },
              {
                "description": "The names of the scheduled actions to delete. The maximum number allowed is 50. "
              }
            ]
          }
        }
      },
      "ScheduledUpdateGroupActionRequests": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScheduledUpdateGroupActionRequest"
        }
      },
      "BatchPutScheduledUpdateGroupActionType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "ScheduledUpdateGroupActions"],
        "title": "BatchPutScheduledUpdateGroupActionType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ScheduledUpdateGroupActions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledUpdateGroupActionRequests"
              },
              {
                "description": "One or more scheduled actions. The maximum number allowed is 50."
              }
            ]
          }
        }
      },
      "BlockDeviceEbsDeleteOnTermination": {
        "type": "boolean"
      },
      "BlockDeviceEbsEncrypted": {
        "type": "boolean"
      },
      "BlockDeviceEbsIops": {
        "type": "integer",
        "minimum": 100,
        "maximum": 20000
      },
      "BlockDeviceEbsVolumeSize": {
        "type": "integer",
        "minimum": 1,
        "maximum": 16384
      },
      "BlockDeviceEbsVolumeType": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "Ebs": {
        "type": "object",
        "properties": {
          "SnapshotId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The snapshot ID of the volume to use.</p> <p>You must specify either a <code>VolumeSize</code> or a <code>SnapshotId</code>.</p>"
              }
            ]
          },
          "VolumeSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockDeviceEbsVolumeSize"
              },
              {
                "description": "<p>The volume size, in Gibibytes (GiB).</p> <p>This can be a number from 1-1,024 for <code>standard</code>, 4-16,384 for <code>io1</code>, 1-16,384 for <code>gp2</code>, and 500-16,384 for <code>st1</code> and <code>sc1</code>. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.</p> <p>Default: If you create a volume from a snapshot and you don't specify a volume size, the default is the snapshot size.</p> <p>You must specify either a <code>VolumeSize</code> or a <code>SnapshotId</code>. If you specify both <code>SnapshotId</code> and <code>VolumeSize</code>, the volume size must be equal or greater than the size of the snapshot.</p>"
              }
            ]
          },
          "VolumeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockDeviceEbsVolumeType"
              },
              {
                "description": "<p>The volume type, which can be <code>standard</code> for Magnetic, <code>io1</code> for Provisioned IOPS SSD, <code>gp2</code> for General Purpose SSD, <code>st1</code> for Throughput Optimized HDD, or <code>sc1</code> for Cold HDD. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\">Amazon EBS Volume Types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>Valid Values: <code>standard</code> | <code>io1</code> | <code>gp2</code> | <code>st1</code> | <code>sc1</code> </p>"
              }
            ]
          },
          "DeleteOnTermination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockDeviceEbsDeleteOnTermination"
              },
              {
                "description": "Indicates whether the volume is deleted on instance termination. For Amazon EC2 Auto Scaling, the default value is <code>true</code>."
              }
            ]
          },
          "Iops": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockDeviceEbsIops"
              },
              {
                "description": "<p>The number of I/O operations per second (IOPS) to provision for the volume. The maximum ratio of IOPS to volume size (in GiB) is 50:1. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\">Amazon EBS Volume Types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>Required when the volume type is <code>io1</code>. (Not used with <code>standard</code>, <code>gp2</code>, <code>st1</code>, or <code>sc1</code> volumes.) </p>"
              }
            ]
          },
          "Encrypted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockDeviceEbsEncrypted"
              },
              {
                "description": "<p>Specifies whether the volume should be encrypted. Encrypted EBS volumes can only be attached to instances that support Amazon EBS encryption. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances\">Supported Instance Types</a>. If your AMI uses encrypted volumes, you can also only launch it on supported instance types.</p> <note> <p>If you are creating a volume from a snapshot, you cannot specify an encryption value. Volumes that are created from encrypted snapshots are automatically encrypted, and volumes that are created from unencrypted snapshots are automatically unencrypted. By default, encrypted snapshots use the AWS managed CMK that is used for EBS encryption, but you can specify a custom CMK when you create the snapshot. The ability to encrypt a snapshot during copying also allows you to apply a new CMK to an already-encrypted snapshot. Volumes restored from the resulting copy are only accessible using the new CMK.</p> <p>Enabling <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default\">encryption by default</a> results in all EBS volumes being encrypted with the AWS managed CMK or a customer managed CMK, whether or not the snapshot was encrypted.</p> </note> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIEncryption.html\">Using Encryption with EBS-Backed AMIs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/key-policy-requirements-EBS-encryption.html\">Required CMK Key Policy for Use with Encrypted Volumes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "Throughput": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockDeviceEbsThroughput"
              },
              {
                "description": "The throughput (MiBps) to provision for a <code>gp3</code> volume."
              }
            ]
          }
        },
        "description": "Describes information used to set up an Amazon EBS volume specified in a block device mapping."
      },
      "NoDevice": {
        "type": "boolean"
      },
      "BlockDeviceMappings": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BlockDeviceMapping"
        }
      },
      "CancelInstanceRefreshType": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "CancelInstanceRefreshType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          }
        }
      },
      "ClassicLinkVPCSecurityGroups": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen255"
        }
      },
      "LifecycleActionToken": {
        "type": "string",
        "minLength": 36,
        "maxLength": 36
      },
      "LifecycleActionResult": {
        "type": "string"
      },
      "CompleteLifecycleActionType": {
        "type": "object",
        "required": [
          "LifecycleHookName",
          "AutoScalingGroupName",
          "LifecycleActionResult"
        ],
        "title": "CompleteLifecycleActionType",
        "properties": {
          "LifecycleHookName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AsciiStringMaxLen255"
              },
              {
                "description": "The name of the lifecycle hook."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "LifecycleActionToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleActionToken"
              },
              {
                "description": "A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook."
              }
            ]
          },
          "LifecycleActionResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleActionResult"
              },
              {
                "description": "The action for the group to take. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>."
              }
            ]
          },
          "InstanceId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen19"
              },
              {
                "description": "The ID of the instance."
              }
            ]
          }
        }
      },
      "LifecycleHookSpecifications": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LifecycleHookSpecification"
        }
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Tag"
        }
      },
      "CreateAutoScalingGroupType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "MinSize", "MaxSize"],
        "title": "CreateAutoScalingGroupType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group. This name must be unique per Region per account."
              }
            ]
          },
          "LaunchConfigurationName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "<p>The name of the launch configuration to use when an instance is launched. To get the launch configuration name, use the <a>DescribeLaunchConfigurations</a> API operation. New launch configurations can be created with the <a>CreateLaunchConfiguration</a> API.</p> <p>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>, <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</p>"
              }
            ]
          },
          "LaunchTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchTemplateSpecification"
              },
              {
                "description": "<p>Parameters used to specify the launch template and version to use when an instance is launched.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_LaunchTemplateSpecification.html\">LaunchTemplateSpecification</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p> <p>You can alternatively associate a launch template to the Auto Scaling group by using the <code>MixedInstancesPolicy</code> parameter.</p> <p>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>, <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</p>"
              }
            ]
          },
          "MixedInstancesPolicy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MixedInstancesPolicy"
              },
              {
                "description": "<p>An embedded object that specifies a mixed instances policy. The required parameters must be specified. If optional parameters are unspecified, their default values are used.</p> <p>The policy includes parameters that not only define the distribution of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances, and how the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacity, but also the parameters that specify the instance configuration information—the launch template and instance types.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_MixedInstancesPolicy.html\">MixedInstancesPolicy</a> in the <i>Amazon EC2 Auto Scaling API Reference</i> and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html\">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>, <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</p>"
              }
            ]
          },
          "InstanceId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen19"
              },
              {
                "description": "<p>The ID of the instance used to create a launch configuration for the group. To get the instance ID, use the Amazon EC2 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html\">DescribeInstances</a> API operation.</p> <p>When you specify an ID of an instance, Amazon EC2 Auto Scaling creates a new launch configuration and associates it with the group. This launch configuration derives its attributes from the specified instance, except for the block device mapping.</p> <p>You must specify one of the following parameters in your request: <code>LaunchConfigurationName</code>, <code>LaunchTemplate</code>, <code>InstanceId</code>, or <code>MixedInstancesPolicy</code>.</p>"
              }
            ]
          },
          "MinSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMinSize"
              },
              {
                "description": "The minimum size of the group."
              }
            ]
          },
          "MaxSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMaxSize"
              },
              {
                "description": "<p>The maximum size of the group.</p> <note> <p>With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above <code>MaxSize</code> to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above <code>MaxSize</code> by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).</p> </note>"
              }
            ]
          },
          "DesiredCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupDesiredCapacity"
              },
              {
                "description": "<p>The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain. It can scale beyond this capacity if you configure automatic scaling.</p> <p>This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity, the default is the minimum size of the group.</p>"
              }
            ]
          },
          "DefaultCooldown": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Cooldown"
              },
              {
                "description": "<p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is <code>300</code>.</p> <p>This setting applies when using simple scaling policies, but not when using other scaling policies or scheduled scaling. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html\">Scaling Cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "AvailabilityZones": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailabilityZones"
              },
              {
                "description": "<p>One or more Availability Zones for the group. This parameter is optional if you specify one or more subnets for <code>VPCZoneIdentifier</code>.</p> <p>Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into EC2-Classic.</p>"
              }
            ]
          },
          "LoadBalancerNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoadBalancerNames"
              },
              {
                "description": "<p>A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers and Network Load Balancers, specify a list of target groups using the <code>TargetGroupARNs</code> property instead.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html\">Using a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "TargetGroupARNs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetGroupARNs"
              },
              {
                "description": "<p>The Amazon Resource Names (ARN) of the target groups to associate with the Auto Scaling group. Instances are registered as targets in a target group, and traffic is routed to the target group.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html\">Using a Load Balancer with an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "HealthCheckType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "<p>The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. The default value is <code>EC2</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html\">Health Checks for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "HealthCheckGracePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HealthCheckGracePeriod"
              },
              {
                "description": "<p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default value is <code>0</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period\">Health Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Required if you are adding an <code>ELB</code> health check.</p>"
              }
            ]
          },
          "PlacementGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html\">Placement Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
              }
            ]
          },
          "VPCZoneIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen2047"
              },
              {
                "description": "<p>A comma-separated list of subnet IDs for your virtual private cloud (VPC).</p> <p>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify for this parameter must reside in those Availability Zones.</p> <p>Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into a VPC.</p>"
              }
            ]
          },
          "TerminationPolicies": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TerminationPolicies"
              },
              {
                "description": "<p>One or more termination policies used to select the instance to terminate. These policies are executed in the order that they are listed.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html\">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "NewInstancesProtectedFromScaleIn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceProtected"
              },
              {
                "description": "<p>Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.</p> <p>For more information about preventing instances from terminating on scale in, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection\">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "LifecycleHookSpecificationList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleHookSpecifications"
              },
              {
                "description": "One or more lifecycle hooks."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "description": "<p>One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches.</p> <p>Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html\">Tagging Auto Scaling Groups and Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "ServiceLinkedRoleARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named AWSServiceRoleForAutoScaling, which it creates if it does not exist. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html\">Service-Linked Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>."
              }
            ]
          },
          "MaxInstanceLifetime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxInstanceLifetime"
              },
              {
                "description": "<p>The maximum amount of time, in seconds, that an instance can be in service. The default is null.</p> <p>This parameter is optional, but if you specify a value for it, you must specify a value of at least 604,800 seconds (7 days). To clear a previously set value, specify a new value of 0.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html\">Replacing Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 0.</p>"
              }
            ]
          },
          "CapacityRebalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CapacityRebalanceEnabled"
              },
              {
                "description": "Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/capacity-rebalance.html\">Amazon EC2 Auto Scaling Capacity Rebalancing</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>."
              }
            ]
          },
          "Context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Context"
              },
              {
                "description": "Reserved."
              }
            ]
          }
        }
      },
      "SecurityGroups": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlString"
        }
      },
      "XmlStringUserData": {
        "type": "string",
        "maxLength": 21847,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "InstanceMonitoring": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonitoringEnabled"
              },
              {
                "description": "If <code>true</code>, detailed monitoring is enabled. Otherwise, basic monitoring is enabled."
              }
            ]
          }
        },
        "description": "Describes whether detailed monitoring is enabled for the Auto Scaling instances."
      },
      "SpotPrice": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "EbsOptimized": {
        "type": "boolean"
      },
      "InstanceMetadataOptions": {
        "type": "object",
        "properties": {
          "HttpTokens": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMetadataHttpTokensState"
              },
              {
                "description": "<p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>"
              }
            ]
          },
          "HttpPutResponseHopLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMetadataHttpPutResponseHopLimit"
              },
              {
                "description": "<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p> <p>Default: 1</p> <p>Possible values: Integers from 1 to 64</p>"
              }
            ]
          },
          "HttpEndpoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMetadataEndpointState"
              },
              {
                "description": "<p>This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p> <note> <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata. </p> </note>"
              }
            ]
          }
        },
        "description": "The metadata options for the instances. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html\">Instance Metadata and User Data</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
      },
      "CreateLaunchConfigurationType": {
        "type": "object",
        "required": ["LaunchConfigurationName"],
        "title": "CreateLaunchConfigurationType",
        "properties": {
          "LaunchConfigurationName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the launch configuration. This name must be unique per Region per account."
              }
            ]
          },
          "ImageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The ID of the Amazon Machine Image (AMI) that was assigned during registration. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html\">Finding an AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>ImageId</code>.</p>"
              }
            ]
          },
          "KeyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the key pair. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html\">Amazon EC2 Key Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
              }
            ]
          },
          "SecurityGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SecurityGroups"
              },
              {
                "description": "<p>A list that contains the security groups to assign to the instances in the Auto Scaling group.</p> <p>[EC2-VPC] Specify the security group IDs. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html\">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>[EC2-Classic] Specify either the security group names or the security group IDs. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html\">Amazon EC2 Security Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>"
              }
            ]
          },
          "ClassicLinkVPCId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html\">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink\">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>This parameter can only be used if you are launching EC2-Classic instances.</p>"
              }
            ]
          },
          "ClassicLinkVPCSecurityGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ClassicLinkVPCSecurityGroups"
              },
              {
                "description": "<p>The IDs of one or more security groups for the specified ClassicLink-enabled VPC. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html\">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink\">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify the <code>ClassicLinkVPCId</code> parameter, you must specify this parameter.</p>"
              }
            ]
          },
          "UserData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringUserData"
              },
              {
                "description": "The Base64-encoded user data to make available to the launched EC2 instances. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html\">Instance Metadata and User Data</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
              }
            ]
          },
          "InstanceId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen19"
              },
              {
                "description": "<p>The ID of the instance to use to create the launch configuration. The new launch configuration derives attributes from the instance, except for the block device mapping.</p> <p>To create a launch configuration with a block device mapping or override any other instance attributes, specify them as part of the same request.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-lc-with-instanceID.html\">Create a Launch Configuration Using an EC2 Instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you do not specify <code>InstanceId</code>, you must specify both <code>ImageId</code> and <code>InstanceType</code>.</p>"
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>Specifies the instance type of the EC2 instance.</p> <p>For information about available instance types, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes\">Available Instance Types</a> in the <i>Amazon EC2 User Guide for Linux Instances.</i> </p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>InstanceType</code>.</p>"
              }
            ]
          },
          "KernelId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The ID of the kernel associated with the AMI."
              }
            ]
          },
          "RamdiskId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The ID of the RAM disk to select."
              }
            ]
          },
          "BlockDeviceMappings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockDeviceMappings"
              },
              {
                "description": "A block device mapping, which specifies the block devices for the instance. You can specify virtual devices and EBS volumes. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html\">Block Device Mapping</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
              }
            ]
          },
          "InstanceMonitoring": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMonitoring"
              },
              {
                "description": "<p>Controls whether instances in this group are launched with detailed (<code>true</code>) or basic (<code>false</code>) monitoring.</p> <p>The default value is <code>true</code> (enabled).</p> <important> <p>When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics\">Configure Monitoring for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> </important>"
              }
            ]
          },
          "SpotPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SpotPrice"
              },
              {
                "description": "<p>The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-launch-spot-instances.html\">Launching Spot Instances in Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <note> <p>When you change your maximum price by creating a new launch configuration, running instances will continue to run as long as the maximum price for those running instances is higher than the current Spot price.</p> </note>"
              }
            ]
          },
          "IamInstanceProfile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1600"
              },
              {
                "description": "<p>The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html\">IAM Role for Applications That Run on Amazon EC2 Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "EbsOptimized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EbsOptimized"
              },
              {
                "description": "<p>Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>) or not (<code>false</code>). The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional fees are incurred when you enable EBS optimization for an instance type that is not EBS-optimized by default. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html\">Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> <p>The default value is <code>false</code>.</p>"
              }
            ]
          },
          "AssociatePublicIpAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssociatePublicIpAddress"
              },
              {
                "description": "<p>For Auto Scaling groups that are running in a virtual private cloud (VPC), specifies whether to assign a public IP address to the group's instances. If you specify <code>true</code>, each instance in the Auto Scaling group receives a unique public IP address. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html\">Launching Auto Scaling Instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>If you specify this parameter, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <note> <p>If the instance is launched into a default subnet, the default is to assign a public IP address, unless you disabled the option to assign a public IP address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IP address, unless you enabled the option to assign a public IP address on the subnet.</p> </note>"
              }
            ]
          },
          "PlacementTenancy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen64"
              },
              {
                "description": "<p>The tenancy of the instance. An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC.</p> <p>To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to <code>default</code>), you must set the value of this parameter to <code>dedicated</code>.</p> <p>If you specify <code>PlacementTenancy</code>, you must specify at least one subnet for <code>VPCZoneIdentifier</code> when you create your group.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-vpc-tenancy\">Instance Placement Tenancy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Values: <code>default</code> | <code>dedicated</code> </p>"
              }
            ]
          },
          "MetadataOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMetadataOptions"
              },
              {
                "description": "The metadata options for the instances. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html\">Instance Metadata and User Data</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
              }
            ]
          }
        }
      },
      "CreateOrUpdateTagsType": {
        "type": "object",
        "required": ["Tags"],
        "title": "CreateOrUpdateTagsType",
        "properties": {
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "description": "One or more tags."
              }
            ]
          }
        }
      },
      "MetricName": {
        "type": "string"
      },
      "MetricNamespace": {
        "type": "string"
      },
      "MetricDimensions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MetricDimension"
        }
      },
      "MetricStatistic": {
        "type": "string",
        "enum": ["Average", "Minimum", "Maximum", "SampleCount", "Sum"]
      },
      "MetricUnit": {
        "type": "string"
      },
      "ForceDelete": {
        "type": "boolean"
      },
      "DeleteAutoScalingGroupType": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "DeleteAutoScalingGroupType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ForceDelete": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ForceDelete"
              },
              {
                "description": "Specifies that the group is to be deleted along with all instances associated with the group, without waiting for all instances to be terminated. This parameter also deletes any lifecycle actions associated with the group."
              }
            ]
          }
        }
      },
      "DeleteLifecycleHookType": {
        "type": "object",
        "required": ["LifecycleHookName", "AutoScalingGroupName"],
        "title": "DeleteLifecycleHookType",
        "properties": {
          "LifecycleHookName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AsciiStringMaxLen255"
              },
              {
                "description": "The name of the lifecycle hook."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          }
        }
      },
      "DeleteNotificationConfigurationType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "TopicARN"],
        "title": "DeleteNotificationConfigurationType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "TopicARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic."
              }
            ]
          }
        }
      },
      "DeletePolicyType": {
        "type": "object",
        "required": ["PolicyName"],
        "title": "DeletePolicyType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "PolicyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name or Amazon Resource Name (ARN) of the policy."
              }
            ]
          }
        }
      },
      "DeleteScheduledActionType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "ScheduledActionName"],
        "title": "DeleteScheduledActionType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ScheduledActionName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the action to delete."
              }
            ]
          }
        }
      },
      "DeleteTagsType": {
        "type": "object",
        "required": ["Tags"],
        "title": "DeleteTagsType",
        "properties": {
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "description": "One or more tags."
              }
            ]
          }
        }
      },
      "MaxNumberOfAutoScalingGroups": {
        "type": "integer"
      },
      "MaxNumberOfLaunchConfigurations": {
        "type": "integer"
      },
      "NumberOfAutoScalingGroups": {
        "type": "integer"
      },
      "NumberOfLaunchConfigurations": {
        "type": "integer"
      },
      "DescribeAutoScalingInstancesType": {
        "type": "object",
        "title": "DescribeAutoScalingInstancesType",
        "properties": {
          "InstanceIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceIds"
              },
              {
                "description": "The IDs of the instances. You can specify up to <code>MaxRecords</code> IDs. If you omit this parameter, all Auto Scaling instances are described. If you specify an ID that does not exist, it is ignored with no error."
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>50</code>."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          }
        }
      },
      "InstanceRefreshes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/InstanceRefresh"
        }
      },
      "InstanceRefreshIds": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen255"
        }
      },
      "DescribeInstanceRefreshesType": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "DescribeInstanceRefreshesType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "InstanceRefreshIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceRefreshIds"
              },
              {
                "description": "One or more instance refresh IDs."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>."
              }
            ]
          }
        }
      },
      "LifecycleHooks": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LifecycleHook"
        }
      },
      "LifecycleHookNames": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AsciiStringMaxLen255"
        },
        "maxItems": 50
      },
      "DescribeLifecycleHooksType": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "DescribeLifecycleHooksType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "LifecycleHookNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleHookNames"
              },
              {
                "description": "The names of one or more lifecycle hooks. If you omit this parameter, all lifecycle hooks are described."
              }
            ]
          }
        }
      },
      "DescribeLoadBalancerTargetGroupsRequest": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "DescribeLoadBalancerTargetGroupsRequest",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>."
              }
            ]
          }
        }
      },
      "LoadBalancerTargetGroupStates": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LoadBalancerTargetGroupState"
        }
      },
      "DescribeLoadBalancersRequest": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "DescribeLoadBalancersRequest",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>."
              }
            ]
          }
        }
      },
      "LoadBalancerStates": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LoadBalancerState"
        }
      },
      "MetricCollectionTypes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MetricCollectionType"
        }
      },
      "MetricGranularityTypes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MetricGranularityType"
        }
      },
      "NotificationConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/NotificationConfiguration"
        }
      },
      "DescribeNotificationConfigurationsType": {
        "type": "object",
        "title": "DescribeNotificationConfigurationsType",
        "properties": {
          "AutoScalingGroupNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupNames"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>."
              }
            ]
          }
        }
      },
      "PolicyNames": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResourceName"
        }
      },
      "PolicyTypes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen64"
        }
      },
      "DescribePoliciesType": {
        "type": "object",
        "title": "DescribePoliciesType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "PolicyNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PolicyNames"
              },
              {
                "description": "The names of one or more policies. If you omit this parameter, all policies are described. If a group name is provided, the results are limited to that group. This list is limited to 50 items. If you specify an unknown policy name, it is ignored with no error."
              }
            ]
          },
          "PolicyTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PolicyTypes"
              },
              {
                "description": "One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, and <code>TargetTrackingScaling</code>."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to be returned with each call. The default value is <code>50</code> and the maximum value is <code>100</code>."
              }
            ]
          }
        }
      },
      "DescribeScalingActivitiesType": {
        "type": "object",
        "title": "DescribeScalingActivitiesType",
        "properties": {
          "ActivityIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityIds"
              },
              {
                "description": "The activity IDs of the desired scaling activities. You can specify up to 50 IDs. If you omit this parameter, all activities for the past six weeks are described. If unknown activities are requested, they are ignored with no error. If you specify an Auto Scaling group, the results are limited to that group."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "IncludeDeletedGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IncludeDeletedGroups"
              },
              {
                "description": "Indicates whether to include scaling activity from deleted Auto Scaling groups."
              }
            ]
          }
        }
      },
      "DescribeScheduledActionsType": {
        "type": "object",
        "title": "DescribeScheduledActionsType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ScheduledActionNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledActionNames"
              },
              {
                "description": "The names of one or more scheduled actions. You can specify up to 50 actions. If you omit this parameter, all scheduled actions are described. If you specify an unknown scheduled action, it is ignored with no error."
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored."
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>."
              }
            ]
          }
        }
      },
      "Filters": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Filter"
        }
      },
      "DescribeTagsType": {
        "type": "object",
        "title": "DescribeTagsType",
        "properties": {
          "Filters": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Filters"
              },
              {
                "description": "One or more filters to scope the tags to return. The maximum number of filters per filter type (for example, <code>auto-scaling-group</code>) is 1000."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>."
              }
            ]
          }
        }
      },
      "ShouldDecrementDesiredCapacity": {
        "type": "boolean"
      },
      "DetachInstancesQuery": {
        "type": "object",
        "required": ["AutoScalingGroupName", "ShouldDecrementDesiredCapacity"],
        "title": "DetachInstancesQuery",
        "properties": {
          "InstanceIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceIds"
              },
              {
                "description": "The IDs of the instances. You can specify up to 20 instances."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ShouldDecrementDesiredCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShouldDecrementDesiredCapacity"
              },
              {
                "description": "Indicates whether the Auto Scaling group decrements the desired capacity value by the number of instances detached."
              }
            ]
          }
        }
      },
      "DetachLoadBalancerTargetGroupsType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "TargetGroupARNs"],
        "title": "DetachLoadBalancerTargetGroupsType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "TargetGroupARNs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetGroupARNs"
              },
              {
                "description": "The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target groups."
              }
            ]
          }
        }
      },
      "DetachLoadBalancersType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "LoadBalancerNames"],
        "title": "DetachLoadBalancersType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "LoadBalancerNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoadBalancerNames"
              },
              {
                "description": "The names of the load balancers. You can specify up to 10 load balancers."
              }
            ]
          }
        }
      },
      "Metrics": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen255"
        }
      },
      "DisableMetricsCollectionQuery": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "DisableMetricsCollectionQuery",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "Metrics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metrics"
              },
              {
                "description": "<p>Specifies one or more of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> <li> <p> <code>GroupInServiceCapacity</code> </p> </li> <li> <p> <code>GroupPendingCapacity</code> </p> </li> <li> <p> <code>GroupStandbyCapacity</code> </p> </li> <li> <p> <code>GroupTerminatingCapacity</code> </p> </li> <li> <p> <code>GroupTotalCapacity</code> </p> </li> </ul> <p>If you omit this parameter, all metrics are disabled. </p>"
              }
            ]
          }
        }
      },
      "EnableMetricsCollectionQuery": {
        "type": "object",
        "required": ["AutoScalingGroupName", "Granularity"],
        "title": "EnableMetricsCollectionQuery",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "Metrics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metrics"
              },
              {
                "description": "<p>Specifies which group-level metrics to start collecting. You can specify one or more of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul> <p>The instance weighting feature supports the following additional metrics: </p> <ul> <li> <p> <code>GroupInServiceCapacity</code> </p> </li> <li> <p> <code>GroupPendingCapacity</code> </p> </li> <li> <p> <code>GroupStandbyCapacity</code> </p> </li> <li> <p> <code>GroupTerminatingCapacity</code> </p> </li> <li> <p> <code>GroupTotalCapacity</code> </p> </li> </ul> <p>If you omit this parameter, all metrics are enabled. </p>"
              }
            ]
          },
          "Granularity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The granularity to associate with the metrics to collect. The only valid value is <code>1Minute</code>."
              }
            ]
          }
        }
      },
      "EnabledMetric": {
        "type": "object",
        "properties": {
          "Metric": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>One of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> <li> <p> <code>GroupInServiceCapacity</code> </p> </li> <li> <p> <code>GroupPendingCapacity</code> </p> </li> <li> <p> <code>GroupStandbyCapacity</code> </p> </li> <li> <p> <code>GroupTerminatingCapacity</code> </p> </li> <li> <p> <code>GroupTotalCapacity</code> </p> </li> </ul>"
              }
            ]
          },
          "Granularity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The granularity of the metric. The only valid value is <code>1Minute</code>."
              }
            ]
          }
        },
        "description": "Describes an enabled metric."
      },
      "EnterStandbyQuery": {
        "type": "object",
        "required": ["AutoScalingGroupName", "ShouldDecrementDesiredCapacity"],
        "title": "EnterStandbyQuery",
        "properties": {
          "InstanceIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceIds"
              },
              {
                "description": "The IDs of the instances. You can specify up to 20 instances."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ShouldDecrementDesiredCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShouldDecrementDesiredCapacity"
              },
              {
                "description": "Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode."
              }
            ]
          }
        }
      },
      "EstimatedInstanceWarmup": {
        "type": "integer"
      },
      "HonorCooldown": {
        "type": "boolean"
      },
      "ExecutePolicyType": {
        "type": "object",
        "required": ["PolicyName"],
        "title": "ExecutePolicyType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "PolicyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name or ARN of the policy."
              }
            ]
          },
          "HonorCooldown": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HonorCooldown"
              },
              {
                "description": "<p>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before executing the policy.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html\">Scaling Cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "MetricValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricScale"
              },
              {
                "description": "<p>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute a policy of type <code>StepScaling</code> and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</p> <p>If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error.</p> <p>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>"
              }
            ]
          },
          "BreachThreshold": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricScale"
              },
              {
                "description": "<p>The breach threshold for the alarm.</p> <p>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>"
              }
            ]
          }
        }
      },
      "ExitStandbyQuery": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "ExitStandbyQuery",
        "properties": {
          "InstanceIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceIds"
              },
              {
                "description": "The IDs of the instances. You can specify up to 20 instances."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          }
        }
      },
      "FailedScheduledUpdateGroupActionRequest": {
        "type": "object",
        "required": ["ScheduledActionName"],
        "properties": {
          "ScheduledActionName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the scheduled action."
              }
            ]
          },
          "ErrorCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen64"
              },
              {
                "description": "The error code."
              }
            ]
          },
          "ErrorMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The error message accompanying the error code."
              }
            ]
          }
        },
        "description": "Describes a scheduled action that could not be created, updated, or deleted."
      },
      "Values": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlString"
        }
      },
      "GlobalTimeout": {
        "type": "integer"
      },
      "HeartbeatTimeout": {
        "type": "integer"
      },
      "LifecycleState": {
        "type": "string",
        "enum": [
          "Pending",
          "Pending:Wait",
          "Pending:Proceed",
          "Quarantined",
          "InService",
          "Terminating",
          "Terminating:Wait",
          "Terminating:Proceed",
          "Terminated",
          "Detaching",
          "Detached",
          "EnteringStandby",
          "Standby",
          "Warmed:Pending",
          "Warmed:Pending:Wait",
          "Warmed:Pending:Proceed",
          "Warmed:Terminating",
          "Warmed:Terminating:Wait",
          "Warmed:Terminating:Proceed",
          "Warmed:Terminated",
          "Warmed:Stopped",
          "Warmed:Running"
        ]
      },
      "Instance": {
        "type": "object",
        "required": [
          "InstanceId",
          "AvailabilityZone",
          "LifecycleState",
          "HealthStatus",
          "ProtectedFromScaleIn"
        ],
        "properties": {
          "InstanceId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen19"
              },
              {
                "description": "The ID of the instance."
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The instance type of the EC2 instance."
              }
            ]
          },
          "AvailabilityZone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The Availability Zone in which the instance is running."
              }
            ]
          },
          "LifecycleState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleState"
              },
              {
                "description": "A description of the current lifecycle state. The <code>Quarantined</code> state is not used."
              }
            ]
          },
          "HealthStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "The last reported health status of the instance. \"Healthy\" means that the instance is healthy and should remain in service. \"Unhealthy\" means that the instance is unhealthy and that Amazon EC2 Auto Scaling should terminate and replace it."
              }
            ]
          },
          "LaunchConfigurationName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The launch configuration associated with the instance."
              }
            ]
          },
          "LaunchTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchTemplateSpecification"
              },
              {
                "description": "The launch template for the instance."
              }
            ]
          },
          "ProtectedFromScaleIn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceProtected"
              },
              {
                "description": "Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in."
              }
            ]
          },
          "WeightedCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "<p>The number of capacity units contributed by the instance based on its instance type.</p> <p>Valid Range: Minimum value of 1. Maximum value of 999.</p>"
              }
            ]
          }
        },
        "description": "Describes an EC2 instance."
      },
      "InstanceRefreshStatus": {
        "type": "string",
        "enum": [
          "Pending",
          "InProgress",
          "Successful",
          "Failed",
          "Cancelling",
          "Cancelled"
        ]
      },
      "InstancesToUpdate": {
        "type": "integer",
        "minimum": 0
      },
      "InstanceRefresh": {
        "type": "object",
        "properties": {
          "InstanceRefreshId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The instance refresh ID."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceRefreshStatus"
              },
              {
                "description": "<p>The current status for the instance refresh operation:</p> <ul> <li> <p> <code>Pending</code> - The request was created, but the operation has not started.</p> </li> <li> <p> <code>InProgress</code> - The operation is in progress.</p> </li> <li> <p> <code>Successful</code> - The operation completed successfully.</p> </li> <li> <p> <code>Failed</code> - The operation failed to complete. You can troubleshoot using the status reason and the scaling activities. </p> </li> <li> <p> <code>Cancelling</code> - An ongoing operation is being cancelled. Cancellation does not roll back any replacements that have already been completed, but it prevents new replacements from being started. </p> </li> <li> <p> <code>Cancelled</code> - The operation is cancelled. </p> </li> </ul>"
              }
            ]
          },
          "StatusReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1023"
              },
              {
                "description": "Provides more details about the current status of the instance refresh. "
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The date and time at which the instance refresh began."
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The date and time at which the instance refresh ended."
              }
            ]
          },
          "PercentageComplete": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntPercent"
              },
              {
                "description": "The percentage of the instance refresh that is complete. For each instance replacement, Amazon EC2 Auto Scaling tracks the instance's health status and warm-up time. When the instance's health status changes to healthy and the specified warm-up time passes, the instance is considered updated and added to the percentage complete."
              }
            ]
          },
          "InstancesToUpdate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstancesToUpdate"
              },
              {
                "description": "The number of instances remaining to update before the instance refresh is complete."
              }
            ]
          },
          "ProgressDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceRefreshProgressDetails"
              },
              {
                "description": "Additional progress details for an Auto Scaling group that has a warm pool."
              }
            ]
          },
          "Preferences": {
            "$ref": "#/components/schemas/RefreshPreferences"
          },
          "DesiredConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DesiredConfiguration"
              },
              {
                "description": "Describes the specific update you want to deploy."
              }
            ]
          }
        },
        "description": "Describes an instance refresh for an Auto Scaling group. "
      },
      "OnDemandBaseCapacity": {
        "type": "integer"
      },
      "OnDemandPercentageAboveBaseCapacity": {
        "type": "integer"
      },
      "SpotInstancePools": {
        "type": "integer"
      },
      "MixedInstanceSpotPrice": {
        "type": "string",
        "minLength": 0,
        "maxLength": 255
      },
      "LaunchConfiguration": {
        "type": "object",
        "required": [
          "LaunchConfigurationName",
          "ImageId",
          "InstanceType",
          "CreatedTime"
        ],
        "properties": {
          "LaunchConfigurationName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the launch configuration."
              }
            ]
          },
          "LaunchConfigurationARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the launch configuration."
              }
            ]
          },
          "ImageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The ID of the Amazon Machine Image (AMI) to use to launch your EC2 instances.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html\">Finding an AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>"
              }
            ]
          },
          "KeyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The name of the key pair.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html\">Amazon EC2 Key Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>"
              }
            ]
          },
          "SecurityGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SecurityGroups"
              },
              {
                "description": "<p>A list that contains the security groups to assign to the instances in the Auto Scaling group.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html\">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>"
              }
            ]
          },
          "ClassicLinkVPCId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html\">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink\">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "ClassicLinkVPCSecurityGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ClassicLinkVPCSecurityGroups"
              },
              {
                "description": "<p>The IDs of one or more security groups for the VPC specified in <code>ClassicLinkVPCId</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html\">ClassicLink</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink\">Linking EC2-Classic Instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "UserData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringUserData"
              },
              {
                "description": "<p>The Base64-encoded user data to make available to the launched EC2 instances.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html\">Instance Metadata and User Data</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>"
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The instance type for the instances.</p> <p>For information about available instance types, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes\">Available Instance Types</a> in the <i>Amazon EC2 User Guide for Linux Instances.</i> </p>"
              }
            ]
          },
          "KernelId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The ID of the kernel associated with the AMI."
              }
            ]
          },
          "RamdiskId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The ID of the RAM disk associated with the AMI."
              }
            ]
          },
          "BlockDeviceMappings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockDeviceMappings"
              },
              {
                "description": "<p>A block device mapping, which specifies the block devices for the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html\">Block Device Mapping</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>"
              }
            ]
          },
          "InstanceMonitoring": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMonitoring"
              },
              {
                "description": "<p>Controls whether instances in this group are launched with detailed (<code>true</code>) or basic (<code>false</code>) monitoring.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics\">Configure Monitoring for Auto Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "SpotPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SpotPrice"
              },
              {
                "description": "<p>The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot price.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-launch-spot-instances.html\">Launching Spot Instances in Your Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "IamInstanceProfile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1600"
              },
              {
                "description": "<p>The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html\">IAM Role for Applications That Run on Amazon EC2 Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "CreatedTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The creation date and time for the launch configuration."
              }
            ]
          },
          "EbsOptimized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EbsOptimized"
              },
              {
                "description": "<p>Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>) or not (<code>false</code>).</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html\">Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>"
              }
            ]
          },
          "AssociatePublicIpAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssociatePublicIpAddress"
              },
              {
                "description": "<p>For Auto Scaling groups that are running in a VPC, specifies whether to assign a public IP address to the group's instances.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html\">Launching Auto Scaling Instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "PlacementTenancy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen64"
              },
              {
                "description": "<p>The tenancy of the instance, either <code>default</code> or <code>dedicated</code>. An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-vpc-tenancy\">Instance Placement Tenancy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "MetadataOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceMetadataOptions"
              },
              {
                "description": "The metadata options for the instances. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html\">Instance Metadata and User Data</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
              }
            ]
          }
        },
        "description": "Describes a launch configuration."
      },
      "LaunchConfigurationNameType": {
        "type": "object",
        "required": ["LaunchConfigurationName"],
        "title": "LaunchConfigurationNameType",
        "properties": {
          "LaunchConfigurationName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the launch configuration."
              }
            ]
          }
        }
      },
      "LaunchConfigurationNames": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResourceName"
        }
      },
      "LaunchConfigurationNamesType": {
        "type": "object",
        "title": "LaunchConfigurationNamesType",
        "properties": {
          "LaunchConfigurationNames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchConfigurationNames"
              },
              {
                "description": "The launch configuration names. If you omit this parameter, all launch configurations are described."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>."
              }
            ]
          }
        }
      },
      "LaunchConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LaunchConfiguration"
        }
      },
      "Overrides": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LaunchTemplateOverrides"
        }
      },
      "LaunchTemplateOverrides": {
        "type": "object",
        "properties": {
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The instance type. You must use an instance type that is supported in your requested Region and Availability Zones. </p> <p>For information about available instance types, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes\">Available Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide.</i> </p>"
              }
            ]
          },
          "WeightedCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "<p>The number of capacity units, which gives the instance type a proportional weight to other instance types. For example, larger instance types are generally weighted more than smaller instance types. These are the same units that you chose to set the desired capacity in terms of instances, or a performance attribute such as vCPUs, memory, or I/O.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-weighting.html\">Instance Weighting for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 1. Maximum value of 999.</p>"
              }
            ]
          },
          "LaunchTemplateSpecification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchTemplateSpecification"
              },
              {
                "description": "Provides the launch template to be used when launching the instance type. For example, some instance types might require a launch template with a different AMI. If not provided, Amazon EC2 Auto Scaling uses the launch template that's defined for your mixed instances policy. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-launch-template-overrides.html\">Specifying a different launch template for an instance type</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. "
              }
            ]
          }
        },
        "description": "<p>Describes an override for a launch template. Currently, the only supported override is instance type.</p> <p>The maximum number of instance type overrides that can be associated with an Auto Scaling group is 20.</p>"
      },
      "LifecycleTransition": {
        "type": "string"
      },
      "LifecycleHook": {
        "type": "object",
        "properties": {
          "LifecycleHookName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AsciiStringMaxLen255"
              },
              {
                "description": "The name of the lifecycle hook."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group for the lifecycle hook."
              }
            ]
          },
          "LifecycleTransition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleTransition"
              },
              {
                "description": "<p>The state of the EC2 instance to which to attach the lifecycle hook. The following are possible values:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul>"
              }
            ]
          },
          "NotificationTargetARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The ARN of the target that Amazon EC2 Auto Scaling sends notifications to when an instance is in the transition state for the lifecycle hook. The notification target can be either an SQS queue or an SNS topic."
              }
            ]
          },
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target."
              }
            ]
          },
          "NotificationMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1023"
              },
              {
                "description": "Additional information that is included any time Amazon EC2 Auto Scaling sends a message to the notification target."
              }
            ]
          },
          "HeartbeatTimeout": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HeartbeatTimeout"
              },
              {
                "description": "The maximum time, in seconds, that can elapse before the lifecycle hook times out. If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the <code>DefaultResult</code> parameter."
              }
            ]
          },
          "GlobalTimeout": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GlobalTimeout"
              },
              {
                "description": "The maximum time, in seconds, that an instance can remain in a <code>Pending:Wait</code> or <code>Terminating:Wait</code> state. The maximum is 172800 seconds (48 hours) or 100 times <code>HeartbeatTimeout</code>, whichever is smaller."
              }
            ]
          },
          "DefaultResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleActionResult"
              },
              {
                "description": "Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The possible values are <code>CONTINUE</code> and <code>ABANDON</code>."
              }
            ]
          }
        },
        "description": "Describes a lifecycle hook, which tells Amazon EC2 Auto Scaling that you want to perform an action whenever it launches instances or terminates instances."
      },
      "NotificationTargetResourceName": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1600,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "LoadBalancerState": {
        "type": "object",
        "properties": {
          "LoadBalancerName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the load balancer."
              }
            ]
          },
          "State": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>One of the following load balancer states:</p> <ul> <li> <p> <code>Adding</code> - The instances in the group are being registered with the load balancer.</p> </li> <li> <p> <code>Added</code> - All instances in the group are registered with the load balancer.</p> </li> <li> <p> <code>InService</code> - At least one instance in the group passed an ELB health check.</p> </li> <li> <p> <code>Removing</code> - The instances in the group are being deregistered from the load balancer. If connection draining is enabled, Elastic Load Balancing waits for in-flight requests to complete before deregistering the instances.</p> </li> <li> <p> <code>Removed</code> - All instances in the group are deregistered from the load balancer.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "<p>Describes the state of a Classic Load Balancer.</p> <p>If you specify a load balancer when creating the Auto Scaling group, the state of the load balancer is <code>InService</code>.</p> <p>If you attach a load balancer to an existing Auto Scaling group, the initial state is <code>Adding</code>. The state transitions to <code>Added</code> after all instances in the group are registered with the load balancer. If Elastic Load Balancing health checks are enabled for the load balancer, the state transitions to <code>InService</code> after at least one instance in the group passes the health check. If EC2 health checks are enabled instead, the load balancer remains in the <code>Added</code> state.</p>"
      },
      "LoadBalancerTargetGroupState": {
        "type": "object",
        "properties": {
          "LoadBalancerTargetGroupARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen511"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the target group."
              }
            ]
          },
          "State": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The state of the target group.</p> <ul> <li> <p> <code>Adding</code> - The Auto Scaling instances are being registered with the target group.</p> </li> <li> <p> <code>Added</code> - All Auto Scaling instances are registered with the target group.</p> </li> <li> <p> <code>InService</code> - At least one Auto Scaling instance passed an ELB health check.</p> </li> <li> <p> <code>Removing</code> - The Auto Scaling instances are being deregistered from the target group. If connection draining is enabled, Elastic Load Balancing waits for in-flight requests to complete before deregistering the instances.</p> </li> <li> <p> <code>Removed</code> - All Auto Scaling instances are deregistered from the target group.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "<p>Describes the state of a target group.</p> <p>If you attach a target group to an existing Auto Scaling group, the initial state is <code>Adding</code>. The state transitions to <code>Added</code> after all Auto Scaling instances are registered with the target group. If Elastic Load Balancing health checks are enabled, the state transitions to <code>InService</code> after at least one Auto Scaling instance passes the health check. If EC2 health checks are enabled instead, the target group remains in the <code>Added</code> state.</p>"
      },
      "MetricCollectionType": {
        "type": "object",
        "properties": {
          "Metric": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>One of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> <li> <p> <code>GroupInServiceCapacity</code> </p> </li> <li> <p> <code>GroupPendingCapacity</code> </p> </li> <li> <p> <code>GroupStandbyCapacity</code> </p> </li> <li> <p> <code>GroupTerminatingCapacity</code> </p> </li> <li> <p> <code>GroupTotalCapacity</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Describes a metric."
      },
      "MetricDimensionName": {
        "type": "string"
      },
      "MetricDimensionValue": {
        "type": "string"
      },
      "MetricDimension": {
        "type": "object",
        "required": ["Name", "Value"],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricDimensionName"
              },
              {
                "description": "The name of the dimension."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricDimensionValue"
              },
              {
                "description": "The value of the dimension."
              }
            ]
          }
        },
        "description": "Describes the dimension of a metric."
      },
      "MetricGranularityType": {
        "type": "object",
        "properties": {
          "Granularity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The granularity. The only valid value is <code>1Minute</code>."
              }
            ]
          }
        },
        "description": "Describes a granularity of a metric."
      },
      "MetricType": {
        "type": "string",
        "enum": [
          "ASGAverageCPUUtilization",
          "ASGAverageNetworkIn",
          "ASGAverageNetworkOut",
          "ALBRequestCountPerTarget"
        ]
      },
      "MinAdjustmentMagnitude": {
        "type": "integer"
      },
      "MinAdjustmentStep": {
        "type": "integer",
        "deprecated": true
      },
      "NotificationConfiguration": {
        "type": "object",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "TopicARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic."
              }
            ]
          },
          "NotificationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>One of the following event notification types:</p> <ul> <li> <p> <code>autoscaling:EC2_INSTANCE_LAUNCH</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_TERMINATE</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</code> </p> </li> <li> <p> <code>autoscaling:TEST_NOTIFICATION</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Describes a notification."
      },
      "ScalingPolicies": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScalingPolicy"
        }
      },
      "PolicyIncrement": {
        "type": "integer"
      },
      "ProcessNames": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XmlStringMaxLen255"
        }
      },
      "ProcessType": {
        "type": "object",
        "required": ["ProcessName"],
        "properties": {
          "ProcessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>One of the following processes:</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>InstanceRefresh</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "<p>Describes a process type.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html#process-types\">Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
      },
      "Processes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProcessType"
        }
      },
      "PropagateAtLaunch": {
        "type": "boolean"
      },
      "ProtectedFromScaleIn": {
        "type": "boolean"
      },
      "PutLifecycleHookType": {
        "type": "object",
        "required": ["LifecycleHookName", "AutoScalingGroupName"],
        "title": "PutLifecycleHookType",
        "properties": {
          "LifecycleHookName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AsciiStringMaxLen255"
              },
              {
                "description": "The name of the lifecycle hook."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "LifecycleTransition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleTransition"
              },
              {
                "description": "<p>The instance state to which you want to attach the lifecycle hook. The valid values are:</p> <ul> <li> <p>autoscaling:EC2_INSTANCE_LAUNCHING</p> </li> <li> <p>autoscaling:EC2_INSTANCE_TERMINATING</p> </li> </ul> <p>Required for new lifecycle hooks, but optional when updating existing hooks.</p>"
              }
            ]
          },
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "<p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.</p> <p>Required for new lifecycle hooks, but optional when updating existing hooks.</p>"
              }
            ]
          },
          "NotificationTargetARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationTargetResourceName"
              },
              {
                "description": "<p>The ARN of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. This target can be either an SQS queue or an SNS topic.</p> <p>If you specify an empty string, this overrides the current ARN.</p> <p>This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key-value pair format when sending notifications to an Amazon SNS topic.</p> <p>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message. Test messages contain the following additional key-value pair: <code>\"Event\": \"autoscaling:TEST_NOTIFICATION\"</code>.</p>"
              }
            ]
          },
          "NotificationMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1023"
              },
              {
                "description": "Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target."
              }
            ]
          },
          "HeartbeatTimeout": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HeartbeatTimeout"
              },
              {
                "description": "<p>The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from <code>30</code> to <code>7200</code> seconds. The default value is <code>3600</code> seconds (1 hour).</p> <p>If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the <code>DefaultResult</code> parameter. You can prevent the lifecycle hook from timing out by calling the <a>RecordLifecycleActionHeartbeat</a> API.</p>"
              }
            ]
          },
          "DefaultResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleActionResult"
              },
              {
                "description": "Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>. The default value is <code>ABANDON</code>."
              }
            ]
          }
        }
      },
      "PutNotificationConfigurationType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "TopicARN", "NotificationTypes"],
        "title": "PutNotificationConfigurationType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "TopicARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic."
              }
            ]
          },
          "NotificationTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingNotificationTypes"
              },
              {
                "description": "The type of event that causes the notification to be sent. To query the notification types supported by Amazon EC2 Auto Scaling, call the <a>DescribeAutoScalingNotificationTypes</a> API."
              }
            ]
          }
        }
      },
      "StepAdjustments": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StepAdjustment"
        }
      },
      "TargetTrackingConfiguration": {
        "type": "object",
        "required": ["TargetValue"],
        "properties": {
          "PredefinedMetricSpecification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredefinedMetricSpecification"
              },
              {
                "description": "A predefined metric. You must specify either a predefined metric or a customized metric."
              }
            ]
          },
          "CustomizedMetricSpecification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomizedMetricSpecification"
              },
              {
                "description": "A customized metric. You must specify either a predefined metric or a customized metric."
              }
            ]
          },
          "TargetValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricScale"
              },
              {
                "description": "The target value for the metric."
              }
            ]
          },
          "DisableScaleIn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DisableScaleIn"
              },
              {
                "description": "Indicates whether scaling in by the target tracking scaling policy is disabled. If scaling in is disabled, the target tracking scaling policy doesn't remove instances from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove instances from the Auto Scaling group. The default is <code>false</code>."
              }
            ]
          }
        },
        "description": "Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling."
      },
      "ScalingPolicyEnabled": {
        "type": "boolean"
      },
      "PutScalingPolicyType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "PolicyName"],
        "title": "PutScalingPolicyType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "PolicyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the policy."
              }
            ]
          },
          "PolicyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen64"
              },
              {
                "description": "<p>One of the following policy types: </p> <ul> <li> <p> <code>TargetTrackingScaling</code> </p> </li> <li> <p> <code>StepScaling</code> </p> </li> <li> <p> <code>SimpleScaling</code> (default)</p> </li> </ul>"
              }
            ]
          },
          "AdjustmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>Specifies how the scaling adjustment is interpreted (for example, an absolute number or a percentage). The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.</p> <p>Required if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment\">Scaling Adjustment Types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "MinAdjustmentStep": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MinAdjustmentStep"
              },
              {
                "description": "Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead."
              }
            ]
          },
          "MinAdjustmentMagnitude": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MinAdjustmentMagnitude"
              },
              {
                "description": "<p>The minimum value to scale by when the adjustment type is <code>PercentChangeInCapacity</code>. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a <code>MinAdjustmentMagnitude</code> of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a <code>MinAdjustmentMagnitude</code> of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.</p> <p>Valid only if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment\">Scaling Adjustment Types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <note> <p>Some Auto Scaling groups use instance weights. In this case, set the <code>MinAdjustmentMagnitude</code> to a value that is at least as large as your largest instance weight.</p> </note>"
              }
            ]
          },
          "ScalingAdjustment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PolicyIncrement"
              },
              {
                "description": "<p>The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value.</p> <p>Required if the policy type is <code>SimpleScaling</code>. (Not used with any other policy type.) </p>"
              }
            ]
          },
          "Cooldown": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Cooldown"
              },
              {
                "description": "<p>The duration of the policy's cooldown period, in seconds. When a cooldown period is specified here, it overrides the default cooldown period defined for the Auto Scaling group.</p> <p>Valid only if the policy type is <code>SimpleScaling</code>. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html\">Scaling Cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "MetricAggregationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "<p>The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the value is treated as <code>Average</code>.</p> <p>Valid only if the policy type is <code>StepScaling</code>.</p>"
              }
            ]
          },
          "StepAdjustments": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StepAdjustments"
              },
              {
                "description": "<p>A set of adjustments that enable you to scale based on the size of the alarm breach.</p> <p>Required if the policy type is <code>StepScaling</code>. (Not used with any other policy type.) </p>"
              }
            ]
          },
          "EstimatedInstanceWarmup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EstimatedInstanceWarmup"
              },
              {
                "description": "<p>The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. If not provided, the default is to use the value from the default cooldown period for the Auto Scaling group.</p> <p>Valid only if the policy type is <code>TargetTrackingScaling</code> or <code>StepScaling</code>.</p>"
              }
            ]
          },
          "TargetTrackingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetTrackingConfiguration"
              },
              {
                "description": "<p>A target tracking scaling policy. Includes support for predefined or customized metrics.</p> <p>The following predefined metrics are available:</p> <ul> <li> <p> <code>ASGAverageCPUUtilization</code> </p> </li> <li> <p> <code>ASGAverageNetworkIn</code> </p> </li> <li> <p> <code>ASGAverageNetworkOut</code> </p> </li> <li> <p> <code>ALBRequestCountPerTarget</code> </p> </li> </ul> <p>If you specify <code>ALBRequestCountPerTarget</code> for the metric, you must specify the <code>ResourceLabel</code> parameter with the <code>PredefinedMetricSpecification</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_TargetTrackingConfiguration.html\">TargetTrackingConfiguration</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p> <p>Required if the policy type is <code>TargetTrackingScaling</code>.</p>"
              }
            ]
          },
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScalingPolicyEnabled"
              },
              {
                "description": "Indicates whether the scaling policy is enabled or disabled. The default is enabled. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enable-disable-scaling-policy.html\">Disabling a Scaling Policy for an Auto Scaling Group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>."
              }
            ]
          },
          "PredictiveScalingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingConfiguration"
              },
              {
                "description": "<p>A predictive scaling policy. Provides support for only predefined metrics.</p> <p>Predictive scaling works with CPU utilization, network in/out, and the Application Load Balancer request count.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_PredictiveScalingConfiguration.html\">PredictiveScalingConfiguration</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p> <p>Required if the policy type is <code>PredictiveScaling</code>.</p>"
              }
            ]
          }
        }
      },
      "PutScheduledUpdateGroupActionType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "ScheduledActionName"],
        "title": "PutScheduledUpdateGroupActionType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ScheduledActionName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of this scaling action."
              }
            ]
          },
          "Time": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "This parameter is no longer used."
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "<p>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, <code>\"2019-06-01T00:00:00Z\"</code>).</p> <p>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.</p> <p>If you try to schedule your action in the past, Amazon EC2 Auto Scaling returns an error message.</p>"
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The date and time for the recurring schedule to end. Amazon EC2 Auto Scaling does not perform the action after this time."
              }
            ]
          },
          "Recurrence": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The recurring schedule for this action, in Unix cron syntax format. This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, <code>\"30 0 1 1,6,12 *\"</code>). For more information about this format, see <a href=\"http://crontab.org\">Crontab</a>.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p>"
              }
            ]
          },
          "MinSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMinSize"
              },
              {
                "description": "The minimum size of the Auto Scaling group."
              }
            ]
          },
          "MaxSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMaxSize"
              },
              {
                "description": "The maximum size of the Auto Scaling group."
              }
            ]
          },
          "DesiredCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupDesiredCapacity"
              },
              {
                "description": "The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain. It can scale beyond this capacity if you add more scaling conditions. "
              }
            ]
          },
          "TimeZone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>Specifies the time zone for a cron expression. If a time zone is not provided, UTC is used by default. </p> <p>Valid values are the canonical names of the IANA time zones, derived from the IANA Time Zone Database (such as <code>Etc/GMT+9</code> or <code>Pacific/Tahiti</code>). For more information, see <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.</p>"
              }
            ]
          }
        }
      },
      "RecordLifecycleActionHeartbeatType": {
        "type": "object",
        "required": ["LifecycleHookName", "AutoScalingGroupName"],
        "title": "RecordLifecycleActionHeartbeatType",
        "properties": {
          "LifecycleHookName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AsciiStringMaxLen255"
              },
              {
                "description": "The name of the lifecycle hook."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "LifecycleActionToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LifecycleActionToken"
              },
              {
                "description": "A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook."
              }
            ]
          },
          "InstanceId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen19"
              },
              {
                "description": "The ID of the instance."
              }
            ]
          }
        }
      },
      "RefreshPreferences": {
        "type": "object",
        "properties": {
          "MinHealthyPercentage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntPercent"
              },
              {
                "description": "The amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group (rounded up to the nearest integer). The default is <code>90</code>. "
              }
            ]
          },
          "InstanceWarmup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RefreshInstanceWarmup"
              },
              {
                "description": "The number of seconds until a newly launched instance is configured and ready to use. During this time, Amazon EC2 Auto Scaling does not immediately move on to the next replacement. The default is to use the value for the health check grace period defined for the group."
              }
            ]
          },
          "CheckpointPercentages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CheckpointPercentages"
              },
              {
                "description": "<p>Threshold values for each checkpoint in ascending order. Each number must be unique. To replace all instances in the Auto Scaling group, the last number in the array must be <code>100</code>.</p> <p>For usage examples, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-adding-checkpoints-instance-refresh.html\">Adding checkpoints to an instance refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "CheckpointDelay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CheckpointDelay"
              },
              {
                "description": "The amount of time, in seconds, to wait after a checkpoint before continuing. This property is optional, but if you specify a value for it, you must also specify a value for <code>CheckpointPercentages</code>. If you specify a value for <code>CheckpointPercentages</code> and not for <code>CheckpointDelay</code>, the <code>CheckpointDelay</code> defaults to <code>3600</code> (1 hour). "
              }
            ]
          },
          "SkipMatching": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkipMatching"
              },
              {
                "description": "A boolean value that indicates whether skip matching is enabled. If true, then Amazon EC2 Auto Scaling skips replacing instances that match the desired configuration. If no desired configuration is specified, then it skips replacing instances that have the same configuration that is already set on the group. The default is <code>false</code>."
              }
            ]
          }
        },
        "description": "Describes information used to start an instance refresh. "
      },
      "RefreshStrategy": {
        "type": "string",
        "enum": ["Rolling"]
      },
      "ScalingPolicy": {
        "type": "object",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "PolicyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the scaling policy."
              }
            ]
          },
          "PolicyARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the policy."
              }
            ]
          },
          "PolicyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen64"
              },
              {
                "description": "<p>One of the following policy types: </p> <ul> <li> <p> <code>TargetTrackingScaling</code> </p> </li> <li> <p> <code>StepScaling</code> </p> </li> <li> <p> <code>SimpleScaling</code> (default)</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-target-tracking.html\">Target Tracking Scaling Policies</a> and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html\">Step and Simple Scaling Policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "AdjustmentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "Specifies how the scaling adjustment is interpreted (for example, an absolute number or a percentage). The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>."
              }
            ]
          },
          "MinAdjustmentStep": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MinAdjustmentStep"
              },
              {
                "description": "Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead."
              }
            ]
          },
          "MinAdjustmentMagnitude": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MinAdjustmentMagnitude"
              },
              {
                "description": "The minimum value to scale by when the adjustment type is <code>PercentChangeInCapacity</code>. "
              }
            ]
          },
          "ScalingAdjustment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PolicyIncrement"
              },
              {
                "description": "The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity."
              }
            ]
          },
          "Cooldown": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Cooldown"
              },
              {
                "description": "The duration of the policy's cooldown period, in seconds."
              }
            ]
          },
          "StepAdjustments": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StepAdjustments"
              },
              {
                "description": "A set of adjustments that enable you to scale based on the size of the alarm breach."
              }
            ]
          },
          "MetricAggregationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>."
              }
            ]
          },
          "EstimatedInstanceWarmup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EstimatedInstanceWarmup"
              },
              {
                "description": "The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics."
              }
            ]
          },
          "Alarms": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Alarms"
              },
              {
                "description": "The CloudWatch alarms related to the policy."
              }
            ]
          },
          "TargetTrackingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetTrackingConfiguration"
              },
              {
                "description": "A target tracking scaling policy."
              }
            ]
          },
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScalingPolicyEnabled"
              },
              {
                "description": "Indicates whether the policy is enabled (<code>true</code>) or disabled (<code>false</code>)."
              }
            ]
          },
          "PredictiveScalingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingConfiguration"
              },
              {
                "description": "A predictive scaling policy."
              }
            ]
          }
        },
        "description": "Describes a scaling policy."
      },
      "ScalingProcessQuery": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "ScalingProcessQuery",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ScalingProcesses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProcessNames"
              },
              {
                "description": "<p>One or more of the following processes:</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>InstanceRefresh</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> </ul> <p>If you omit this parameter, all processes are specified.</p>"
              }
            ]
          }
        }
      },
      "ScheduledUpdateGroupActions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScheduledUpdateGroupAction"
        }
      },
      "ScheduledUpdateGroupAction": {
        "type": "object",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ScheduledActionName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the scheduled action."
              }
            ]
          },
          "ScheduledActionARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the scheduled action."
              }
            ]
          },
          "Time": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "This parameter is no longer used."
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The date and time in UTC for this action to start. For example, <code>\"2019-06-01T00:00:00Z\"</code>. "
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The date and time in UTC for the recurring schedule to end. For example, <code>\"2019-06-01T00:00:00Z\"</code>. "
              }
            ]
          },
          "Recurrence": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "<p>The recurring schedule for the action, in Unix cron syntax format.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action starts and stops.</p>"
              }
            ]
          },
          "MinSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMinSize"
              },
              {
                "description": "The minimum size of the Auto Scaling group."
              }
            ]
          },
          "MaxSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMaxSize"
              },
              {
                "description": "The maximum size of the Auto Scaling group."
              }
            ]
          },
          "DesiredCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupDesiredCapacity"
              },
              {
                "description": "The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain."
              }
            ]
          },
          "TimeZone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The time zone for the cron expression."
              }
            ]
          }
        },
        "description": "Describes a scheduled scaling action."
      },
      "SetDesiredCapacityType": {
        "type": "object",
        "required": ["AutoScalingGroupName", "DesiredCapacity"],
        "title": "SetDesiredCapacityType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "DesiredCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupDesiredCapacity"
              },
              {
                "description": "The desired capacity is the initial capacity of the Auto Scaling group after this operation completes and the capacity it attempts to maintain."
              }
            ]
          },
          "HonorCooldown": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HonorCooldown"
              },
              {
                "description": "Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity. By default, Amazon EC2 Auto Scaling does not honor the cooldown period during manual scaling activities."
              }
            ]
          }
        }
      },
      "ShouldRespectGracePeriod": {
        "type": "boolean"
      },
      "SetInstanceHealthQuery": {
        "type": "object",
        "required": ["InstanceId", "HealthStatus"],
        "title": "SetInstanceHealthQuery",
        "properties": {
          "InstanceId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen19"
              },
              {
                "description": "The ID of the instance."
              }
            ]
          },
          "HealthStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "The health status of the instance. Set to <code>Healthy</code> to have the instance remain in service. Set to <code>Unhealthy</code> to have the instance be out of service. Amazon EC2 Auto Scaling terminates and replaces the unhealthy instance."
              }
            ]
          },
          "ShouldRespectGracePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShouldRespectGracePeriod"
              },
              {
                "description": "<p>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code> specified for the group, by default, this call respects the grace period. Set this to <code>False</code>, to have the call not respect the grace period associated with the group.</p> <p>For more information about the health check grace period, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CreateAutoScalingGroup.html\">CreateAutoScalingGroup</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p>"
              }
            ]
          }
        }
      },
      "SetInstanceProtectionQuery": {
        "type": "object",
        "required": [
          "InstanceIds",
          "AutoScalingGroupName",
          "ProtectedFromScaleIn"
        ],
        "title": "SetInstanceProtectionQuery",
        "properties": {
          "InstanceIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceIds"
              },
              {
                "description": "One or more instance IDs."
              }
            ]
          },
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ProtectedFromScaleIn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProtectedFromScaleIn"
              },
              {
                "description": "Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in."
              }
            ]
          }
        }
      },
      "StartInstanceRefreshType": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "StartInstanceRefreshType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "Strategy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RefreshStrategy"
              },
              {
                "description": "<p>The strategy to use for the instance refresh. The only valid value is <code>Rolling</code>.</p> <p>A rolling update is an update that is applied to all instances in an Auto Scaling group until all instances have been updated. A rolling update can fail due to failed health checks or if instances are on standby or are protected from scale in. If the rolling update process fails, any instances that were already replaced are not rolled back to their previous configuration. </p>"
              }
            ]
          },
          "Preferences": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RefreshPreferences"
              },
              {
                "description": "<p>Set of preferences associated with the instance refresh request.</p> <p>If not provided, the default values are used. For <code>MinHealthyPercentage</code>, the default value is <code>90</code>. For <code>InstanceWarmup</code>, the default is to use the value specified for the health check grace period for the Auto Scaling group.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_RefreshPreferences.html\">RefreshPreferences</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p>"
              }
            ]
          },
          "DesiredConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DesiredConfiguration"
              },
              {
                "description": "<p>The desired configuration. For example, the desired configuration can specify a new launch template or a new version of the current launch template.</p> <p>Once the instance refresh succeeds, Amazon EC2 Auto Scaling updates the settings of the Auto Scaling group to reflect the new desired configuration. </p> <note> <p>When you specify a new launch template or a new version of the current launch template for your desired configuration, consider enabling the <code>SkipMatching</code> property in preferences. If it's enabled, Amazon EC2 Auto Scaling skips replacing instances that already use the specified launch template and version. This can help you reduce the number of replacements that are required to apply updates. </p> </note>"
              }
            ]
          }
        }
      },
      "SuspendedProcess": {
        "type": "object",
        "properties": {
          "ProcessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the suspended process."
              }
            ]
          },
          "SuspensionReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The reason that the process was suspended."
              }
            ]
          }
        },
        "description": "<p>Describes an automatic scaling process that has been suspended.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html#process-types\">Scaling Processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "TagDescription": {
        "type": "object",
        "properties": {
          "ResourceId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The name of the group."
              }
            ]
          },
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The type of resource. The only supported value is <code>auto-scaling-group</code>."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagKey"
              },
              {
                "description": "The tag key."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          },
          "PropagateAtLaunch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PropagateAtLaunch"
              },
              {
                "description": "Determines whether the tag is added to new instances as they are launched in the group."
              }
            ]
          }
        },
        "description": "Describes a tag for an Auto Scaling group."
      },
      "TerminateInstanceInAutoScalingGroupType": {
        "type": "object",
        "required": ["InstanceId", "ShouldDecrementDesiredCapacity"],
        "title": "TerminateInstanceInAutoScalingGroupType",
        "properties": {
          "InstanceId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen19"
              },
              {
                "description": "The ID of the instance."
              }
            ]
          },
          "ShouldDecrementDesiredCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShouldDecrementDesiredCapacity"
              },
              {
                "description": "Indicates whether terminating the instance also decrements the size of the Auto Scaling group."
              }
            ]
          }
        }
      },
      "UpdateAutoScalingGroupType": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "UpdateAutoScalingGroupType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "LaunchConfigurationName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name of the launch configuration. If you specify <code>LaunchConfigurationName</code> in your update request, you can't specify <code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>."
              }
            ]
          },
          "LaunchTemplate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaunchTemplateSpecification"
              },
              {
                "description": "<p>The launch template and version to use to specify the updates. If you specify <code>LaunchTemplate</code> in your update request, you can't specify <code>LaunchConfigurationName</code> or <code>MixedInstancesPolicy</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_LaunchTemplateSpecification.html\">LaunchTemplateSpecification</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p>"
              }
            ]
          },
          "MixedInstancesPolicy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MixedInstancesPolicy"
              },
              {
                "description": "<p>An embedded object that specifies a mixed instances policy.</p> <p>In your call to <code>UpdateAutoScalingGroup</code>, you can make changes to the policy that is specified. All optional parameters are left unchanged if not specified.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_MixedInstancesPolicy.html\">MixedInstancesPolicy</a> in the <i>Amazon EC2 Auto Scaling API Reference</i> and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html\">Auto Scaling Groups with Multiple Instance Types and Purchase Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "MinSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMinSize"
              },
              {
                "description": "The minimum size of the Auto Scaling group."
              }
            ]
          },
          "MaxSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupMaxSize"
              },
              {
                "description": "<p>The maximum size of the Auto Scaling group.</p> <note> <p>With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above <code>MaxSize</code> to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above <code>MaxSize</code> by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).</p> </note>"
              }
            ]
          },
          "DesiredCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoScalingGroupDesiredCapacity"
              },
              {
                "description": "<p>The desired capacity is the initial capacity of the Auto Scaling group after this operation completes and the capacity it attempts to maintain.</p> <p>This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.</p>"
              }
            ]
          },
          "DefaultCooldown": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Cooldown"
              },
              {
                "description": "<p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is <code>300</code>.</p> <p>This setting applies when using simple scaling policies, but not when using other scaling policies or scheduled scaling. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html\">Scaling Cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "AvailabilityZones": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailabilityZones"
              },
              {
                "description": "One or more Availability Zones for the group."
              }
            ]
          },
          "HealthCheckType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen32"
              },
              {
                "description": "The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>. If you configure an Auto Scaling group to use ELB health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks."
              }
            ]
          },
          "HealthCheckGracePeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HealthCheckGracePeriod"
              },
              {
                "description": "<p>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. The default value is <code>0</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period\">Health Check Grace Period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Required if you are adding an <code>ELB</code> health check.</p>"
              }
            ]
          },
          "PlacementGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html\">Placement Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
              }
            ]
          },
          "VPCZoneIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen2047"
              },
              {
                "description": "<p>A comma-separated list of subnet IDs for virtual private cloud (VPC).</p> <p>If you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that you specify for this parameter must reside in those Availability Zones.</p>"
              }
            ]
          },
          "TerminationPolicies": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TerminationPolicies"
              },
              {
                "description": "<p>A standalone termination policy or a list of termination policies used to select the instance to terminate. The policies are executed in the order that they are listed.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html\">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "NewInstancesProtectedFromScaleIn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceProtected"
              },
              {
                "description": "<p>Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.</p> <p>For more information about preventing instances from terminating on scale in, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection\">Instance Protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "ServiceLinkedRoleARN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html\">Service-Linked Roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>."
              }
            ]
          },
          "MaxInstanceLifetime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxInstanceLifetime"
              },
              {
                "description": "<p>The maximum amount of time, in seconds, that an instance can be in service. The default is null.</p> <p>This parameter is optional, but if you specify a value for it, you must specify a value of at least 604,800 seconds (7 days). To clear a previously set value, specify a new value of 0.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html\">Replacing Auto Scaling Instances Based on Maximum Instance Lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p> <p>Valid Range: Minimum value of 0.</p>"
              }
            ]
          },
          "CapacityRebalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CapacityRebalanceEnabled"
              },
              {
                "description": "Enables or disables Capacity Rebalancing. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/capacity-rebalance.html\">Amazon EC2 Auto Scaling Capacity Rebalancing</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>."
              }
            ]
          },
          "Context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Context"
              },
              {
                "description": "Reserved."
              }
            ]
          }
        }
      },
      "CapacityRebalanceEnabled": {
        "type": "boolean"
      },
      "DeleteWarmPoolAnswer": {
        "type": "object",
        "properties": {}
      },
      "DescribeWarmPoolAnswer": {
        "type": "object",
        "properties": {
          "WarmPoolConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarmPoolConfiguration"
              },
              {
                "description": "The warm pool configuration details. "
              }
            ]
          },
          "Instances": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Instances"
              },
              {
                "description": "The instances that are currently in the warm pool."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          }
        }
      },
      "GetPredictiveScalingForecastAnswer": {
        "type": "object",
        "required": ["LoadForecast", "CapacityForecast", "UpdateTime"],
        "properties": {
          "LoadForecast": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoadForecasts"
              },
              {
                "description": "The load forecast."
              }
            ]
          },
          "CapacityForecast": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CapacityForecast"
              },
              {
                "description": "The capacity forecast."
              }
            ]
          },
          "UpdateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The time the forecast was made."
              }
            ]
          }
        }
      },
      "PredictiveScalingMetricSpecifications": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PredictiveScalingMetricSpecification"
        }
      },
      "PredictiveScalingMode": {
        "type": "string",
        "enum": ["ForecastAndScale", "ForecastOnly"]
      },
      "PredictiveScalingSchedulingBufferTime": {
        "type": "integer",
        "minimum": 0
      },
      "PredictiveScalingMaxCapacityBreachBehavior": {
        "type": "string",
        "enum": ["HonorMaxCapacity", "IncreaseMaxCapacity"]
      },
      "PredictiveScalingMaxCapacityBuffer": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      },
      "PutWarmPoolAnswer": {
        "type": "object",
        "properties": {}
      },
      "CheckpointPercentages": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/NonZeroIntPercent"
        }
      },
      "CheckpointDelay": {
        "type": "integer",
        "minimum": 0,
        "maximum": 172800
      },
      "SkipMatching": {
        "type": "boolean"
      },
      "AutoScalingGroupState": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32
      },
      "AutoScalingGroupPredictedCapacity": {
        "type": "integer"
      },
      "WarmPoolConfiguration": {
        "type": "object",
        "properties": {
          "MaxGroupPreparedCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxGroupPreparedCapacity"
              },
              {
                "description": "The maximum number of instances that are allowed to be in the warm pool or in any state except <code>Terminated</code> for the Auto Scaling group."
              }
            ]
          },
          "MinSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarmPoolMinSize"
              },
              {
                "description": "The minimum number of instances to maintain in the warm pool."
              }
            ]
          },
          "PoolState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarmPoolState"
              },
              {
                "description": "The instance state to transition to after the lifecycle actions are complete."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarmPoolStatus"
              },
              {
                "description": "The status of a warm pool that is marked for deletion."
              }
            ]
          }
        },
        "description": "Describes a warm pool configuration. "
      },
      "WarmPoolSize": {
        "type": "integer"
      },
      "Context": {
        "type": "string"
      },
      "BlockDeviceEbsThroughput": {
        "type": "integer",
        "minimum": 125,
        "maximum": 1000
      },
      "PredictiveScalingForecastTimestamps": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TimestampType"
        }
      },
      "PredictiveScalingForecastValues": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MetricScale"
        }
      },
      "CapacityForecast": {
        "type": "object",
        "required": ["Timestamps", "Values"],
        "properties": {
          "Timestamps": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingForecastTimestamps"
              },
              {
                "description": "The time stamps for the data points, in UTC format."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingForecastValues"
              },
              {
                "description": "The values of the data points."
              }
            ]
          }
        },
        "description": "A <code>GetPredictiveScalingForecast</code> call returns the capacity forecast for a predictive scaling policy. This structure includes the data points for that capacity forecast, along with the timestamps of those data points. "
      },
      "NonZeroIntPercent": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "DeleteWarmPoolType": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "DeleteWarmPoolType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "ForceDelete": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ForceDelete"
              },
              {
                "description": "Specifies that the warm pool is to be deleted along with all of its associated instances, without waiting for all instances to be terminated. This parameter also deletes any outstanding lifecycle actions associated with the warm pool instances."
              }
            ]
          }
        }
      },
      "IncludeDeletedGroups": {
        "type": "boolean"
      },
      "DescribeWarmPoolType": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "DescribeWarmPoolType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "MaxRecords": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxRecords"
              },
              {
                "description": "The maximum number of instances to return with this call. The maximum value is <code>50</code>."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlString"
              },
              {
                "description": "The token for the next set of instances to return. (You received this token from a previous call.)"
              }
            ]
          }
        }
      },
      "DesiredConfiguration": {
        "type": "object",
        "properties": {
          "LaunchTemplate": {
            "$ref": "#/components/schemas/LaunchTemplateSpecification"
          },
          "MixedInstancesPolicy": {
            "$ref": "#/components/schemas/MixedInstancesPolicy"
          }
        },
        "description": "<p>Describes the desired configuration for an instance refresh. </p> <p>If you specify a desired configuration, you must specify either a <code>LaunchTemplate</code> or a <code>MixedInstancesPolicy</code>. </p>"
      },
      "LoadForecasts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LoadForecast"
        }
      },
      "GetPredictiveScalingForecastType": {
        "type": "object",
        "required": [
          "AutoScalingGroupName",
          "PolicyName",
          "StartTime",
          "EndTime"
        ],
        "title": "GetPredictiveScalingForecastType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "PolicyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the policy."
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "The inclusive start time of the time range for the forecast data to get. At most, the date and time can be one year before the current date and time."
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimestampType"
              },
              {
                "description": "<p>The exclusive end time of the time range for the forecast data to get. The maximum time duration between the start and end time is 30 days. </p> <p>Although this parameter can accept a date and time that is more than two days in the future, the availability of forecast data has limits. Amazon EC2 Auto Scaling only issues forecasts for periods of two days in advance.</p>"
              }
            ]
          }
        }
      },
      "InstanceRefreshProgressDetails": {
        "type": "object",
        "properties": {
          "LivePoolProgress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceRefreshLivePoolProgress"
              },
              {
                "description": "Indicates the progress of an instance refresh on instances that are in the Auto Scaling group."
              }
            ]
          },
          "WarmPoolProgress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceRefreshWarmPoolProgress"
              },
              {
                "description": "Indicates the progress of an instance refresh on instances that are in the warm pool."
              }
            ]
          }
        },
        "description": "Reports the progress of an instance refresh on an Auto Scaling group that has a warm pool. This includes separate details for instances in the warm pool and instances in the Auto Scaling group (the live pool)."
      },
      "InstanceRefreshLivePoolProgress": {
        "type": "object",
        "properties": {
          "PercentageComplete": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntPercent"
              },
              {
                "description": "The percentage of instances in the Auto Scaling group that have been replaced. For each instance replacement, Amazon EC2 Auto Scaling tracks the instance's health status and warm-up time. When the instance's health status changes to healthy and the specified warm-up time passes, the instance is considered updated and is added to the percentage complete."
              }
            ]
          },
          "InstancesToUpdate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstancesToUpdate"
              },
              {
                "description": "The number of instances remaining to update."
              }
            ]
          }
        },
        "description": "Reports the progress of an instance refresh on instances that are in the Auto Scaling group."
      },
      "InstanceRefreshWarmPoolProgress": {
        "type": "object",
        "properties": {
          "PercentageComplete": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntPercent"
              },
              {
                "description": "The percentage of instances in the warm pool that have been replaced. For each instance replacement, Amazon EC2 Auto Scaling tracks the instance's health status and warm-up time. When the instance's health status changes to healthy and the specified warm-up time passes, the instance is considered updated and is added to the percentage complete."
              }
            ]
          },
          "InstancesToUpdate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstancesToUpdate"
              },
              {
                "description": "The number of instances remaining to update."
              }
            ]
          }
        },
        "description": "Reports the progress of an instance refresh on instances that are in the warm pool."
      },
      "PredictiveScalingMetricSpecification": {
        "type": "object",
        "required": ["TargetValue"],
        "properties": {
          "TargetValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricScale"
              },
              {
                "description": "Specifies the target utilization."
              }
            ]
          },
          "PredefinedMetricPairSpecification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingPredefinedMetricPair"
              },
              {
                "description": "The metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use."
              }
            ]
          },
          "PredefinedScalingMetricSpecification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingPredefinedScalingMetric"
              },
              {
                "description": "The scaling metric specification."
              }
            ]
          },
          "PredefinedLoadMetricSpecification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingPredefinedLoadMetric"
              },
              {
                "description": "The load metric specification."
              }
            ]
          }
        },
        "description": "<p>This structure specifies the metrics and target utilization settings for a predictive scaling policy. </p> <p>You must specify either a metric pair, or a load metric and a scaling metric individually. Specifying a metric pair instead of individual metrics provides a simpler way to configure metrics for a scaling policy. You choose the metric pair, and the policy automatically knows the correct sum and average statistics to use for the load metric and the scaling metric.</p> <p>Example</p> <ul> <li> <p>You create a predictive scaling policy and specify <code>ALBRequestCount</code> as the value for the metric pair and <code>1000.0</code> as the target value. For this type of metric, you must provide the metric dimension for the corresponding target group, so you also provide a resource label for the Application Load Balancer target group that is attached to your Auto Scaling group.</p> </li> <li> <p>The number of requests the target group receives per minute provides the load metric, and the request count averaged between the members of the target group provides the scaling metric. In CloudWatch, this refers to the <code>RequestCount</code> and <code>RequestCountPerTarget</code> metrics, respectively.</p> </li> <li> <p>For optimal use of predictive scaling, you adhere to the best practice of using a dynamic scaling policy to automatically scale between the minimum capacity and maximum capacity in response to real-time changes in resource utilization.</p> </li> <li> <p>Amazon EC2 Auto Scaling consumes data points for the load metric over the last 14 days and creates an hourly load forecast for predictive scaling. (A minimum of 24 hours of data is required.)</p> </li> <li> <p>After creating the load forecast, Amazon EC2 Auto Scaling determines when to reduce or increase the capacity of your Auto Scaling group in each hour of the forecast period so that the average number of requests received by each instance is as close to 1000 requests per minute as possible at all times.</p> </li> </ul>"
      },
      "LoadForecast": {
        "type": "object",
        "required": ["Timestamps", "Values", "MetricSpecification"],
        "properties": {
          "Timestamps": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingForecastTimestamps"
              },
              {
                "description": "The time stamps for the data points, in UTC format."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingForecastValues"
              },
              {
                "description": "The values of the data points."
              }
            ]
          },
          "MetricSpecification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingMetricSpecification"
              },
              {
                "description": "The metric specification for the load forecast."
              }
            ]
          }
        },
        "description": "A <code>GetPredictiveScalingForecast</code> call returns the load forecast for a predictive scaling policy. This structure includes the data points for that load forecast, along with the timestamps of those data points and the metric specification. "
      },
      "MaxGroupPreparedCapacity": {
        "type": "integer",
        "minimum": -1
      },
      "PredefinedLoadMetricType": {
        "type": "string",
        "enum": [
          "ASGTotalCPUUtilization",
          "ASGTotalNetworkIn",
          "ASGTotalNetworkOut",
          "ALBTargetGroupRequestCount"
        ]
      },
      "PredefinedMetricPairType": {
        "type": "string",
        "enum": [
          "ASGCPUUtilization",
          "ASGNetworkIn",
          "ASGNetworkOut",
          "ALBRequestCount"
        ]
      },
      "PredefinedScalingMetricType": {
        "type": "string",
        "enum": [
          "ASGAverageCPUUtilization",
          "ASGAverageNetworkIn",
          "ASGAverageNetworkOut",
          "ALBRequestCountPerTarget"
        ]
      },
      "PredictiveScalingConfiguration": {
        "type": "object",
        "required": ["MetricSpecifications"],
        "properties": {
          "MetricSpecifications": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingMetricSpecifications"
              },
              {
                "description": "<p>This structure includes the metrics and target utilization to use for predictive scaling. </p> <p>This is an array, but we currently only support a single metric specification. That is, you can specify a target value and a single metric pair, or a target value and one scaling metric and one load metric.</p>"
              }
            ]
          },
          "Mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingMode"
              },
              {
                "description": "The predictive scaling mode. Defaults to <code>ForecastOnly</code> if not specified."
              }
            ]
          },
          "SchedulingBufferTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingSchedulingBufferTime"
              },
              {
                "description": "<p>The amount of time, in seconds, by which the instance launch time can be advanced. For example, the forecast says to add capacity at 10:00 AM, and you choose to pre-launch instances by 5 minutes. In that case, the instances will be launched at 9:55 AM. The intention is to give resources time to be provisioned. It can take a few minutes to launch an EC2 instance. The actual amount of time required depends on several factors, such as the size of the instance and whether there are startup scripts to complete. </p> <p>The value must be less than the forecast interval duration of 3600 seconds (60 minutes). Defaults to 300 seconds if not specified. </p>"
              }
            ]
          },
          "MaxCapacityBreachBehavior": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingMaxCapacityBreachBehavior"
              },
              {
                "description": "<p>Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Defaults to <code>HonorMaxCapacity</code> if not specified.</p> <p>The following are possible values:</p> <ul> <li> <p> <code>HonorMaxCapacity</code> - Amazon EC2 Auto Scaling cannot scale out capacity higher than the maximum capacity. The maximum capacity is enforced as a hard limit. </p> </li> <li> <p> <code>IncreaseMaxCapacity</code> - Amazon EC2 Auto Scaling can scale out capacity higher than the maximum capacity when the forecast capacity is close to or exceeds the maximum capacity. The upper limit is determined by the forecasted capacity and the value for <code>MaxCapacityBuffer</code>.</p> </li> </ul>"
              }
            ]
          },
          "MaxCapacityBuffer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredictiveScalingMaxCapacityBuffer"
              },
              {
                "description": "<p>The size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.</p> <p>If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity. </p> <p>Required if the <code>MaxCapacityBreachBehavior</code> property is set to <code>IncreaseMaxCapacity</code>, and cannot be used otherwise.</p>"
              }
            ]
          }
        },
        "description": "Represents a predictive scaling policy configuration to use with Amazon EC2 Auto Scaling."
      },
      "PredictiveScalingPredefinedMetricPair": {
        "type": "object",
        "required": ["PredefinedMetricType"],
        "properties": {
          "PredefinedMetricType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredefinedMetricPairType"
              },
              {
                "description": "Indicates which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric. For example, if the metric type is <code>ASGCPUUtilization</code>, the Auto Scaling group's total CPU metric is used as the load metric, and the average CPU metric is used for the scaling metric."
              }
            ]
          },
          "ResourceLabel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1023"
              },
              {
                "description": "<p>A label that uniquely identifies a specific Application Load Balancer target group from which to determine the total and average request count served by your Auto Scaling group. You can't specify a resource label unless the target group is attached to the Auto Scaling group.</p> <p>You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:</p> <p> <code>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</code>.</p> <p>Where:</p> <ul> <li> <p>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the final portion of the load balancer ARN</p> </li> <li> <p>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is the final portion of the target group ARN.</p> </li> </ul> <p>To find the ARN for an Application Load Balancer, use the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html\">DescribeLoadBalancers</a> API operation. To find the ARN for the target group, use the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html\">DescribeTargetGroups</a> API operation.</p>"
              }
            ]
          }
        },
        "description": "Represents a metric pair for a predictive scaling policy. "
      },
      "PredictiveScalingPredefinedScalingMetric": {
        "type": "object",
        "required": ["PredefinedMetricType"],
        "properties": {
          "PredefinedMetricType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredefinedScalingMetricType"
              },
              {
                "description": "The metric type."
              }
            ]
          },
          "ResourceLabel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1023"
              },
              {
                "description": "<p>A label that uniquely identifies a specific Application Load Balancer target group from which to determine the average request count served by your Auto Scaling group. You can't specify a resource label unless the target group is attached to the Auto Scaling group.</p> <p>You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:</p> <p> <code>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</code>.</p> <p>Where:</p> <ul> <li> <p>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the final portion of the load balancer ARN</p> </li> <li> <p>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is the final portion of the target group ARN.</p> </li> </ul> <p>To find the ARN for an Application Load Balancer, use the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html\">DescribeLoadBalancers</a> API operation. To find the ARN for the target group, use the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html\">DescribeTargetGroups</a> API operation.</p>"
              }
            ]
          }
        },
        "description": "<p>Describes a scaling metric for a predictive scaling policy.</p> <p>When returned in the output of <code>DescribePolicies</code>, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.</p>"
      },
      "PredictiveScalingPredefinedLoadMetric": {
        "type": "object",
        "required": ["PredefinedMetricType"],
        "properties": {
          "PredefinedMetricType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PredefinedLoadMetricType"
              },
              {
                "description": "The metric type."
              }
            ]
          },
          "ResourceLabel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen1023"
              },
              {
                "description": "<p>A label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You can't specify a resource label unless the target group is attached to the Auto Scaling group.</p> <p>You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:</p> <p> <code>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</code>.</p> <p>Where:</p> <ul> <li> <p>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the final portion of the load balancer ARN</p> </li> <li> <p>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is the final portion of the target group ARN.</p> </li> </ul> <p>To find the ARN for an Application Load Balancer, use the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html\">DescribeLoadBalancers</a> API operation. To find the ARN for the target group, use the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html\">DescribeTargetGroups</a> API operation.</p>"
              }
            ]
          }
        },
        "description": "<p>Describes a load metric for a predictive scaling policy.</p> <p>When returned in the output of <code>DescribePolicies</code>, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.</p>"
      },
      "WarmPoolMinSize": {
        "type": "integer",
        "minimum": 0
      },
      "WarmPoolState": {
        "type": "string",
        "enum": ["Stopped", "Running"]
      },
      "PutWarmPoolType": {
        "type": "object",
        "required": ["AutoScalingGroupName"],
        "title": "PutWarmPoolType",
        "properties": {
          "AutoScalingGroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/XmlStringMaxLen255"
              },
              {
                "description": "The name of the Auto Scaling group."
              }
            ]
          },
          "MaxGroupPreparedCapacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaxGroupPreparedCapacity"
              },
              {
                "description": "<p>Specifies the maximum number of instances that are allowed to be in the warm pool or in any state except <code>Terminated</code> for the Auto Scaling group. This is an optional property. Specify it only if you do not want the warm pool size to be determined by the difference between the group's maximum capacity and its desired capacity. </p> <important> <p>If a value for <code>MaxGroupPreparedCapacity</code> is not specified, Amazon EC2 Auto Scaling launches and maintains the difference between the group's maximum capacity and its desired capacity. If you specify a value for <code>MaxGroupPreparedCapacity</code>, Amazon EC2 Auto Scaling uses the difference between the <code>MaxGroupPreparedCapacity</code> and the desired capacity instead. </p> <p>The size of the warm pool is dynamic. Only when <code>MaxGroupPreparedCapacity</code> and <code>MinSize</code> are set to the same value does the warm pool have an absolute size.</p> </important> <p>If the desired capacity of the Auto Scaling group is higher than the <code>MaxGroupPreparedCapacity</code>, the capacity of the warm pool is 0, unless you specify a value for <code>MinSize</code>. To remove a value that you previously set, include the property but specify -1 for the value. </p>"
              }
            ]
          },
          "MinSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarmPoolMinSize"
              },
              {
                "description": "Specifies the minimum number of instances to maintain in the warm pool. This helps you to ensure that there is always a certain number of warmed instances available to handle traffic spikes. Defaults to 0 if not specified."
              }
            ]
          },
          "PoolState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarmPoolState"
              },
              {
                "description": "Sets the instance state to transition to after the lifecycle actions are complete. Default is <code>Stopped</code>."
              }
            ]
          }
        }
      },
      "WarmPoolStatus": {
        "type": "string",
        "enum": ["PendingDelete"]
      }
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "x-metadata": {
    "apiVersion": "2011-01-01",
    "endpointPrefix": "autoscaling",
    "protocol": "query",
    "serviceFullName": "Auto Scaling",
    "serviceId": "Auto Scaling",
    "signatureVersion": "v4",
    "uid": "autoscaling-2011-01-01",
    "xmlNamespace": "http://autoscaling.amazonaws.com/doc/2011-01-01/",
    "targetPrefix": "AutoScaling_2011_01_01"
  }
}
