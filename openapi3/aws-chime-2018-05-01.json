{
  "openapi": "3.0.0",
  "info": {
    "version": "2018-05-01",
    "x-release": "v4",
    "title": "Amazon Chime",
    "description": "The Amazon Chime API (application programming interface) is designed for developers to perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes. It also includes some server-side API actions to use with the Amazon Chime SDK. For more information about the Amazon Chime SDK, see Using the Amazon Chime SDK in the Amazon Chime Developer Guide. You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls. We recommend using an AWS SDK or the AWS CLI. Each API operation includes links to information about using it with a language-specific AWS SDK or the AWS CLI.  Using an AWS SDK  You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the AWS Developer Center.  Using the AWS CLI  Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see Installing the AWS Command Line Interface in the AWS Command Line Interface User Guide. For a list of available Amazon Chime commands, see the Amazon Chime commands in the AWS CLI Command Reference.  Using REST API  If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports signature version 4. For more information, see Signature Version 4 Signing Process in the Amazon Web Services General Reference. When making REST API calls, use the service name chime and REST endpoint https&#x3A;//service.chime.aws.amazon.com.   Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see Identity and Access Management for Amazon Chime in the Amazon Chime Administration Guide.",
    "x-categories": ["chat"],
    "x-logo": {
      "url": "/logos/aws/Arch_Amazon-Chime_64.svg"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "x-providerName": "amazonaws.com",
    "x-serviceName": "chime",
    "x-origin": [
      {
        "contentType": "application/json",
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/chime-2018-05-01.normal.json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "x-apisguru-driver": "external"
      }
    ],
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-preferred": true
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/chime/"
  },
  "servers": [
    {
      "url": "http://service.chime.aws.amazon.com",
      "variables": {},
      "description": "The general Amazon Chime multi-region endpoint"
    },
    {
      "url": "https://service.chime.aws.amazon.com",
      "variables": {},
      "description": "The general Amazon Chime multi-region endpoint"
    },
    {
      "url": "http://chime.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": ["cn-north-1", "cn-northwest-1"],
          "default": "cn-north-1"
        }
      },
      "description": "The Amazon Chime endpoint for China (Beijing) and China (Ningxia)"
    },
    {
      "url": "https://chime.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": ["cn-north-1", "cn-northwest-1"],
          "default": "cn-north-1"
        }
      },
      "description": "The Amazon Chime endpoint for China (Beijing) and China (Ningxia)"
    }
  ],
  "x-hasEquivalentPaths": true,
  "paths": {
    "/accounts/{accountId}/users/{userId}#operation=associate-phone-number": {
      "post": {
        "operationId": "AssociatePhoneNumberWithUser",
        "description": "Associates a phone number with the specified Amazon Chime user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociatePhoneNumberWithUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["associate-phone-number"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["E164PhoneNumber"],
                "properties": {
                  "E164PhoneNumber": {
                    "description": "The phone number, in E.164 format.",
                    "type": "string",
                    "pattern": "^\\+?[1-9]\\d{1,14}$",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Associate Phone Number With User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/voice-connectors/{voiceConnectorId}#operation=associate-phone-numbers": {
      "post": {
        "operationId": "AssociatePhoneNumbersWithVoiceConnector",
        "description": "Associates phone numbers with the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociatePhoneNumbersWithVoiceConnectorResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["associate-phone-numbers"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["E164PhoneNumbers"],
                "properties": {
                  "E164PhoneNumbers": {
                    "description": "List of phone numbers, in E.164 format.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/E164PhoneNumber"
                    }
                  },
                  "ForceAssociate": {
                    "description": "If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "summary": "Associate Phone Numbers With Voice Connector"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/voice-connector-groups/{voiceConnectorGroupId}#operation=associate-phone-numbers": {
      "post": {
        "operationId": "AssociatePhoneNumbersWithVoiceConnectorGroup",
        "description": "Associates phone numbers with the specified Amazon Chime Voice Connector group.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociatePhoneNumbersWithVoiceConnectorGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorGroupId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector group ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["associate-phone-numbers"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["E164PhoneNumbers"],
                "properties": {
                  "E164PhoneNumbers": {
                    "description": "List of phone numbers, in E.164 format.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/E164PhoneNumber"
                    }
                  },
                  "ForceAssociate": {
                    "description": "If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "summary": "Associate Phone Numbers With Voice Connector Group"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}#operation=associate-signin-delegate-groups": {
      "post": {
        "operationId": "AssociateSigninDelegateGroupsWithAccount",
        "description": "Associates the specified sign-in delegate groups with the specified Amazon Chime account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateSigninDelegateGroupsWithAccountResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["associate-signin-delegate-groups"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["SigninDelegateGroups"],
                "properties": {
                  "SigninDelegateGroups": {
                    "description": "The sign-in delegate groups.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SigninDelegateGroup"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Associate Signin Delegate Groups With Account"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/meetings/{meetingId}/attendees#operation=batch-create": {
      "post": {
        "operationId": "BatchCreateAttendee",
        "description": "Creates up to 100 new attendees for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. ",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCreateAttendeeResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["batch-create"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Attendees"],
                "properties": {
                  "Attendees": {
                    "description": "The request containing the attendees to create.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CreateAttendeeRequestItem"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Batch Create Attendee"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/rooms/{roomId}/memberships#operation=batch-create": {
      "post": {
        "operationId": "BatchCreateRoomMembership",
        "description": "Adds up to 50 members to a chat room in an Amazon Chime Enterprise account. Members can be either users or bots. The member role designates whether the member is a chat room administrator or a general chat room member.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCreateRoomMembershipResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "description": "The room ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["batch-create"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["MembershipItemList"],
                "properties": {
                  "MembershipItemList": {
                    "description": "The list of membership items.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MembershipItem"
                    },
                    "maxItems": 50
                  }
                }
              }
            }
          }
        },
        "summary": "Batch Create Room Membership"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/phone-numbers#operation=batch-delete": {
      "post": {
        "operationId": "BatchDeletePhoneNumber",
        "description": "<p>Moves phone numbers into the <b>Deletion queue</b>. Phone numbers must be disassociated from any users or Amazon Chime Voice Connectors before they can be deleted.</p> <p>Phone numbers remain in the <b>Deletion queue</b> for 7 days before they are deleted permanently.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDeletePhoneNumberResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["batch-delete"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["PhoneNumberIds"],
                "properties": {
                  "PhoneNumberIds": {
                    "description": "List of phone number IDs.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/String"
                    },
                    "minItems": 1
                  }
                }
              }
            }
          }
        },
        "summary": "Batch Delete Phone Number"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/users#operation=suspend": {
      "post": {
        "operationId": "BatchSuspendUser",
        "description": "<p>Suspends up to 50 users from a <code>Team</code> or <code>EnterpriseLWA</code> Amazon Chime account. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>Users suspended from a <code>Team</code> account are disassociated from the account, but they can continue to use Amazon Chime as free users. To remove the suspension from suspended <code>Team</code> account users, invite them to the <code>Team</code> account again. You can use the <a>InviteUsers</a> action to do so.</p> <p>Users suspended from an <code>EnterpriseLWA</code> account are immediately signed out of Amazon Chime and can no longer sign in. To remove the suspension from suspended <code>EnterpriseLWA</code> account users, use the <a>BatchUnsuspendUser</a> action. </p> <p>To sign out users without suspending them, use the <a>LogoutUser</a> action.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchSuspendUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["suspend"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["UserIdList"],
                "properties": {
                  "UserIdList": {
                    "description": "The request containing the user IDs to suspend.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NonEmptyString"
                    },
                    "maxItems": 50
                  }
                }
              }
            }
          }
        },
        "summary": "Batch Suspend User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/users#operation=unsuspend": {
      "post": {
        "operationId": "BatchUnsuspendUser",
        "description": "<p>Removes the suspension from up to 50 previously suspended users for the specified Amazon Chime <code>EnterpriseLWA</code> account. Only users on <code>EnterpriseLWA</code> accounts can be unsuspended using this action. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>Previously suspended users who are unsuspended using this action are returned to <code>Registered</code> status. Users who are not previously suspended are ignored.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUnsuspendUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["unsuspend"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["UserIdList"],
                "properties": {
                  "UserIdList": {
                    "description": "The request containing the user IDs to unsuspend.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NonEmptyString"
                    },
                    "maxItems": 50
                  }
                }
              }
            }
          }
        },
        "summary": "Batch Unsuspend User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/phone-numbers#operation=batch-update": {
      "post": {
        "operationId": "BatchUpdatePhoneNumber",
        "description": "<p>Updates phone number product types or calling names. You can update one attribute at a time for each <code>UpdatePhoneNumberRequestItem</code>. For example, you can update either the product type or the calling name.</p> <p>For product types, choose from Amazon Chime Business Calling and Amazon Chime Voice Connector. For toll-free numbers, you must use the Amazon Chime Voice Connector product type.</p> <p>Updates to outbound calling names can take up to 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpdatePhoneNumberResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["batch-update"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["UpdatePhoneNumberRequestItems"],
                "properties": {
                  "UpdatePhoneNumberRequestItems": {
                    "description": "The request containing the phone number IDs and product types or calling names to update.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdatePhoneNumberRequestItem"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Batch Update Phone Number"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/users": {
      "post": {
        "operationId": "BatchUpdateUser",
        "description": "Updates user details within the <a>UpdateUserRequestItem</a> object for up to 20 users for the specified Amazon Chime account. Currently, only <code>LicenseType</code> updates are supported for this action.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpdateUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["UpdateUserRequestItems"],
                "properties": {
                  "UpdateUserRequestItems": {
                    "description": "The request containing the user IDs and details to update.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdateUserRequestItem"
                    },
                    "maxItems": 20
                  }
                }
              }
            }
          }
        },
        "summary": "Batch Update User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListUsers",
        "description": "Lists the users that belong to the specified Amazon Chime account. You can specify an email address to list only the user that the email address belongs to.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsersResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "user-email",
            "in": "query",
            "required": false,
            "description": "Optional. The user email address used to filter results. Maximum 1.",
            "schema": {
              "type": "string",
              "pattern": ".+@.+\\..+",
              "format": "password"
            }
          },
          {
            "name": "user-type",
            "in": "query",
            "required": false,
            "description": "The user type.",
            "schema": {
              "type": "string",
              "enum": ["PrivateUser", "SharedDevice"]
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call. Defaults to 100.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Users"
      }
    },
    "/accounts": {
      "post": {
        "operationId": "CreateAccount",
        "description": "Creates an Amazon Chime account under the administrator's AWS account. Only <code>Team</code> account types are currently supported for this action. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "properties": {
                  "Name": {
                    "description": "The name of the Amazon Chime account.",
                    "type": "string",
                    "pattern": ".*\\S.*",
                    "minLength": 1,
                    "maxLength": 100
                  }
                }
              }
            }
          }
        },
        "summary": "Create Account"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListAccounts",
        "description": "Lists the Amazon Chime accounts under the administrator's AWS account. You can filter accounts by account name prefix. To find out which Amazon Chime account a user belongs to, you can filter by the user's email address, which returns one account result.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAccountsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Amazon Chime account name prefix with which to filter results.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 100
            }
          },
          {
            "name": "user-email",
            "in": "query",
            "required": false,
            "description": "User email address with which to filter results.",
            "schema": {
              "type": "string",
              "pattern": ".+@.+\\..+",
              "format": "password"
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call. Defaults to 100.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Accounts"
      }
    },
    "/meetings/{meetingId}/attendees": {
      "post": {
        "operationId": "CreateAttendee",
        "description": "Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAttendeeResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ExternalUserId"],
                "properties": {
                  "ExternalUserId": {
                    "description": "The Amazon Chime SDK external user ID. Links the attendee to an identity managed by a builder application.",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  },
                  "Tags": {
                    "description": "The tag key-value pairs.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "minItems": 1,
                    "maxItems": 10
                  }
                }
              }
            }
          }
        },
        "summary": "Create Attendee"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListAttendees",
        "description": "Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttendeesResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Attendees"
      }
    },
    "/accounts/{accountId}/bots": {
      "post": {
        "operationId": "CreateBot",
        "description": "Creates a bot for an Amazon Chime Enterprise account.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBotResponse"
                }
              }
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "487": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["DisplayName"],
                "properties": {
                  "DisplayName": {
                    "description": "The bot display name.",
                    "type": "string",
                    "format": "password"
                  },
                  "Domain": {
                    "description": "The domain of the Amazon Chime Enterprise account.",
                    "type": "string",
                    "pattern": ".*\\S.*"
                  }
                }
              }
            }
          }
        },
        "summary": "Create Bot"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListBots",
        "description": "Lists the bots associated with the administrator's Amazon Chime Enterprise account ID.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBotsResponse"
                }
              }
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "485": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "486": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call. The default is 10.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Bots"
      }
    },
    "/meetings": {
      "post": {
        "operationId": "CreateMeeting",
        "description": "Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html\">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime Developer Guide</i>. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMeetingResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ClientRequestToken"],
                "properties": {
                  "ClientRequestToken": {
                    "description": "The unique identifier for the client request. Use a different token for different meetings.",
                    "type": "string",
                    "pattern": "[-_a-zA-Z0-9]*",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  },
                  "ExternalMeetingId": {
                    "description": "The external meeting ID.",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  },
                  "MeetingHostId": {
                    "description": "Reserved.",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  },
                  "MediaRegion": {
                    "description": "<p>The Region in which to create the meeting. Default: <code>us-east-1</code>.</p> <p>Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>.</p>",
                    "type": "string"
                  },
                  "Tags": {
                    "description": "The tag key-value pairs.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  },
                  "NotificationsConfiguration": {
                    "description": "The configuration for resource targets to receive notifications when Amazon Chime SDK meeting and attendee events occur. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>).",
                    "type": "object",
                    "properties": {
                      "SnsTopicArn": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Arn"
                          },
                          {
                            "description": "The SNS topic ARN."
                          }
                        ]
                      },
                      "SqsQueueArn": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Arn"
                          },
                          {
                            "description": "The SQS queue ARN."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create Meeting"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListMeetings",
        "description": "Lists up to 100 active Amazon Chime SDK meetings. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMeetingsResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Meetings"
      }
    },
    "/meetings#operation=create-attendees": {
      "post": {
        "operationId": "CreateMeetingWithAttendees",
        "description": "Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html\">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime Developer Guide</i>. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMeetingWithAttendeesResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["create-attendees"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ClientRequestToken"],
                "properties": {
                  "ClientRequestToken": {
                    "description": "The unique identifier for the client request. Use a different token for different meetings.",
                    "type": "string",
                    "pattern": "[-_a-zA-Z0-9]*",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  },
                  "ExternalMeetingId": {
                    "description": "The external meeting ID.",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  },
                  "MeetingHostId": {
                    "description": "Reserved.",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  },
                  "MediaRegion": {
                    "description": "<p>The Region in which to create the meeting. Default: <code>us-east-1</code>.</p> <p>Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>.</p>",
                    "type": "string"
                  },
                  "Tags": {
                    "description": "The tag key-value pairs.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  },
                  "NotificationsConfiguration": {
                    "description": "The configuration for resource targets to receive notifications when Amazon Chime SDK meeting and attendee events occur. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>).",
                    "type": "object",
                    "properties": {
                      "SnsTopicArn": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Arn"
                          },
                          {
                            "description": "The SNS topic ARN."
                          }
                        ]
                      },
                      "SqsQueueArn": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Arn"
                          },
                          {
                            "description": "The SQS queue ARN."
                          }
                        ]
                      }
                    }
                  },
                  "Attendees": {
                    "description": "The request containing the attendees to create.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CreateAttendeeRequestItem"
                    },
                    "minItems": 1,
                    "maxItems": 10
                  }
                }
              }
            }
          }
        },
        "summary": "Create Meeting With Attendees"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/phone-number-orders": {
      "post": {
        "operationId": "CreatePhoneNumberOrder",
        "description": "Creates an order for phone numbers to be provisioned. Choose from Amazon Chime Business Calling and Amazon Chime Voice Connector product types. For toll-free numbers, you must use the Amazon Chime Voice Connector product type.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePhoneNumberOrderResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ProductType", "E164PhoneNumbers"],
                "properties": {
                  "ProductType": {
                    "description": "The phone number product type.",
                    "type": "string",
                    "enum": ["BusinessCalling", "VoiceConnector", "SipMediaApplicationDialIn"]
                  },
                  "E164PhoneNumbers": {
                    "description": "List of phone numbers, in E.164 format.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/E164PhoneNumber"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create Phone Number Order"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListPhoneNumberOrders",
        "description": "Lists the phone number orders for the administrator's Amazon Chime account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPhoneNumberOrdersResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Phone Number Orders"
      }
    },
    "/voice-connectors/{voiceConnectorId}/proxy-sessions": {
      "post": {
        "operationId": "CreateProxySession",
        "description": "Creates a proxy session on the specified Amazon Chime Voice Connector for the specified participant phone numbers.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProxySessionResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime voice connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ParticipantPhoneNumbers", "Capabilities"],
                "properties": {
                  "ParticipantPhoneNumbers": {
                    "description": "The participant phone numbers.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/E164PhoneNumber"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  },
                  "Name": {
                    "description": "The name of the proxy session.",
                    "type": "string",
                    "pattern": "^$|^[a-zA-Z0-9 ]{0,30}$",
                    "format": "password"
                  },
                  "ExpiryMinutes": {
                    "description": "The number of minutes allowed for the proxy session.",
                    "type": "integer",
                    "minimum": 1
                  },
                  "Capabilities": {
                    "description": "The proxy session capabilities.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Capability"
                    }
                  },
                  "NumberSelectionBehavior": {
                    "description": "The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.",
                    "type": "string",
                    "enum": ["PreferSticky", "AvoidSticky"]
                  },
                  "GeoMatchLevel": {
                    "description": "The preference for matching the country or area code of the proxy phone number with that of the first participant.",
                    "type": "string",
                    "enum": ["Country", "AreaCode"]
                  },
                  "GeoMatchParams": {
                    "description": "The country and area code for a proxy phone number in a proxy phone session.",
                    "type": "object",
                    "properties": {
                      "Country": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Country"
                          },
                          {
                            "description": "The country."
                          }
                        ]
                      },
                      "AreaCode": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/AreaCode"
                          },
                          {
                            "description": "The area code."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create Proxy Session"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListProxySessions",
        "description": "Lists the proxy sessions for the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListProxySessionsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime voice connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "The proxy session status.",
            "schema": {
              "type": "string",
              "enum": ["Open", "InProgress", "Closed"]
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string",
              "maxLength": 65535
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Proxy Sessions"
      }
    },
    "/accounts/{accountId}/rooms": {
      "post": {
        "operationId": "CreateRoom",
        "description": "Creates a chat room for the specified Amazon Chime Enterprise account.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomResponse"
                }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "properties": {
                  "Name": {
                    "description": "The room name.",
                    "type": "string",
                    "format": "password"
                  },
                  "ClientRequestToken": {
                    "description": "The idempotency token for the request.",
                    "type": "string",
                    "pattern": "[-_a-zA-Z0-9]*",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Create Room"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListRooms",
        "description": "Lists the room details for the specified Amazon Chime Enterprise account. Optionally, filter the results by a member ID (user ID or bot ID) to see a list of rooms that the member belongs to.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRoomsResponse"
                }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "member-id",
            "in": "query",
            "required": false,
            "description": "The member ID (user ID or bot ID).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Rooms"
      }
    },
    "/accounts/{accountId}/rooms/{roomId}/memberships": {
      "post": {
        "operationId": "CreateRoomMembership",
        "description": "Adds a member to a chat room in an Amazon Chime Enterprise account. A member can be either a user or a bot. The member role designates whether the member is a chat room administrator or a general chat room member.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomMembershipResponse"
                }
              }
            }
          },
          "480": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "481": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "488": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "description": "The room ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["MemberId"],
                "properties": {
                  "MemberId": {
                    "description": "The Amazon Chime member ID (user ID or bot ID).",
                    "type": "string",
                    "pattern": ".*\\S.*"
                  },
                  "Role": {
                    "description": "The role of the member.",
                    "type": "string",
                    "enum": ["Administrator", "Member"]
                  }
                }
              }
            }
          }
        },
        "summary": "Create Room Membership"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListRoomMemberships",
        "description": "Lists the membership details for the specified room in an Amazon Chime Enterprise account, such as the members' IDs, email addresses, and names.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRoomMembershipsResponse"
                }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "description": "The room ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Room Memberships"
      }
    },
    "/accounts/{accountId}/users#operation=create": {
      "post": {
        "operationId": "CreateUser",
        "description": "Creates a user under the specified Amazon Chime account.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["create"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Username": {
                    "description": "The user name.",
                    "type": "string"
                  },
                  "Email": {
                    "description": "The user's email address.",
                    "type": "string",
                    "pattern": ".+@.+\\..+",
                    "format": "password"
                  },
                  "UserType": {
                    "description": "The user type.",
                    "type": "string",
                    "enum": ["PrivateUser", "SharedDevice"]
                  }
                }
              }
            }
          }
        },
        "summary": "Create User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/voice-connectors": {
      "post": {
        "operationId": "CreateVoiceConnector",
        "description": "<p>Creates an Amazon Chime Voice Connector under the administrator's AWS account. You can choose to create an Amazon Chime Voice Connector in a specific AWS Region.</p> <p>Enabling <a>CreateVoiceConnectorRequest$RequireEncryption</a> configures your Amazon Chime Voice Connector to use TLS transport for SIP signaling and Secure RTP (SRTP) for media. Inbound calls use TLS transport, and unencrypted outbound calls are blocked.</p>",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVoiceConnectorResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name", "RequireEncryption"],
                "properties": {
                  "Name": {
                    "description": "The name of the Amazon Chime Voice Connector.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "AwsRegion": {
                    "description": "The AWS Region in which the Amazon Chime Voice Connector is created. Default value: <code>us-east-1</code>.",
                    "type": "string",
                    "enum": ["us-east-1", "us-west-2"]
                  },
                  "RequireEncryption": {
                    "description": "When enabled, requires encryption for the Amazon Chime Voice Connector.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "summary": "Create Voice Connector"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListVoiceConnectors",
        "description": "Lists the Amazon Chime Voice Connectors for the administrator's AWS account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVoiceConnectorsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Voice Connectors"
      }
    },
    "/voice-connector-groups": {
      "post": {
        "operationId": "CreateVoiceConnectorGroup",
        "description": "<p>Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by including <code>VoiceConnectorItems</code> in the request.</p> <p>You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.</p>",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVoiceConnectorGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "properties": {
                  "Name": {
                    "description": "The name of the Amazon Chime Voice Connector group.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "VoiceConnectorItems": {
                    "description": "The Amazon Chime Voice Connectors to route inbound calls to.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/VoiceConnectorItem"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create Voice Connector Group"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListVoiceConnectorGroups",
        "description": "Lists the Amazon Chime Voice Connector groups for the administrator's AWS account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVoiceConnectorGroupsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Voice Connector Groups"
      }
    },
    "/accounts/{accountId}": {
      "delete": {
        "operationId": "DeleteAccount",
        "description": "<p>Deletes the specified Amazon Chime account. You must suspend all users before deleting a <code>Team</code> account. You can use the <a>BatchSuspendUser</a> action to do so.</p> <p>For <code>EnterpriseLWA</code> and <code>EnterpriseAD</code> accounts, you must release the claimed domains for your Amazon Chime account before deletion. As soon as you release the domain, all users under that account are suspended.</p> <p>Deleted accounts appear in your <code>Disabled</code> accounts list for 90 days. To restore a deleted account from your <code>Disabled</code> accounts list, you must contact AWS Support.</p> <p>After 90 days, deleted accounts are permanently removed from your <code>Disabled</code> accounts list.</p>",
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAccountResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnprocessableEntityException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Account"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetAccount",
        "description": "Retrieves details for the specified Amazon Chime account, such as account type and supported licenses.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Account"
      },
      "post": {
        "operationId": "UpdateAccount",
        "description": "Updates account details for the specified Amazon Chime account. Currently, only account name updates are supported for this action.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAccountResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "description": "The new name for the specified Amazon Chime account.",
                    "type": "string",
                    "pattern": ".*\\S.*",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "DefaultLicense": {
                    "description": "The default license applied when you add users to an Amazon Chime account.",
                    "type": "string",
                    "enum": ["Basic", "Plus", "Pro", "ProTrial"]
                  }
                }
              }
            }
          }
        },
        "summary": "Update Account"
      }
    },
    "/meetings/{meetingId}/attendees/{attendeeId}": {
      "delete": {
        "operationId": "DeleteAttendee",
        "description": "Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their <code>JoinToken</code>. Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "attendeeId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK attendee ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "summary": "Delete Attendee"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetAttendee",
        "description": "Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAttendeeResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "attendeeId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK attendee ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "summary": "Get Attendee"
      }
    },
    "/accounts/{accountId}/bots/{botId}/events-configuration": {
      "delete": {
        "operationId": "DeleteEventsConfiguration",
        "description": "Deletes the events configuration that allows a bot to receive outgoing events.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "botId",
            "in": "path",
            "required": true,
            "description": "The bot ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Events Configuration"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetEventsConfiguration",
        "description": "Gets details for an events configuration that allows a bot to receive outgoing events, such as an HTTPS endpoint or Lambda function ARN. ",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventsConfigurationResponse"
                }
              }
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "botId",
            "in": "path",
            "required": true,
            "description": "The bot ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Events Configuration"
      },
      "put": {
        "operationId": "PutEventsConfiguration",
        "description": "Creates an events configuration that allows a bot to receive outgoing events sent by Amazon Chime. Choose either an HTTPS endpoint or a Lambda function ARN. For more information, see <a>Bot</a>.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutEventsConfigurationResponse"
                }
              }
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "botId",
            "in": "path",
            "required": true,
            "description": "The bot ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "OutboundEventsHTTPSEndpoint": {
                    "description": "HTTPS endpoint that allows the bot to receive outgoing events.",
                    "type": "string",
                    "format": "password"
                  },
                  "LambdaFunctionArn": {
                    "description": "Lambda function ARN that allows the bot to receive outgoing events.",
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Put Events Configuration"
      }
    },
    "/meetings/{meetingId}": {
      "delete": {
        "operationId": "DeleteMeeting",
        "description": "Deletes the specified Amazon Chime SDK meeting. When a meeting is deleted, its attendees are also deleted and clients can no longer join it. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "summary": "Delete Meeting"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetMeeting",
        "description": "Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMeetingResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "summary": "Get Meeting"
      }
    },
    "/phone-numbers/{phoneNumberId}": {
      "delete": {
        "operationId": "DeletePhoneNumber",
        "description": "<p>Moves the specified phone number into the <b>Deletion queue</b>. A phone number must be disassociated from any users or Amazon Chime Voice Connectors before it can be deleted.</p> <p>Deleted phone numbers remain in the <b>Deletion queue</b> for 7 days before they are deleted permanently.</p>",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "phoneNumberId",
            "in": "path",
            "required": true,
            "description": "The phone number ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete Phone Number"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetPhoneNumber",
        "description": "Retrieves details for the specified phone number ID, such as associations, capabilities, and product type.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPhoneNumberResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "phoneNumberId",
            "in": "path",
            "required": true,
            "description": "The phone number ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Phone Number"
      },
      "post": {
        "operationId": "UpdatePhoneNumber",
        "description": "<p>Updates phone number details, such as product type or calling name, for the specified phone number ID. You can update one phone number detail at a time. For example, you can update either the product type or the calling name in one action.</p> <p>For toll-free numbers, you must use the Amazon Chime Voice Connector product type.</p> <p>Updates to outbound calling names can take up to 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePhoneNumberResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "phoneNumberId",
            "in": "path",
            "required": true,
            "description": "The phone number ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ProductType": {
                    "description": "The product type.",
                    "type": "string",
                    "enum": ["BusinessCalling", "VoiceConnector", "SipMediaApplicationDialIn"]
                  },
                  "CallingName": {
                    "description": "The outbound calling name associated with the phone number.",
                    "type": "string",
                    "pattern": "^$|^[a-zA-Z0-9 ]{2,15}$",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Update Phone Number"
      }
    },
    "/voice-connectors/{voiceConnectorId}/proxy-sessions/{proxySessionId}": {
      "delete": {
        "operationId": "DeleteProxySession",
        "description": "Deletes the specified proxy session from the specified Amazon Chime Voice Connector.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime voice connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          },
          {
            "name": "proxySessionId",
            "in": "path",
            "required": true,
            "description": "The proxy session ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          }
        ],
        "summary": "Delete Proxy Session"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetProxySession",
        "description": "Gets the specified proxy session details for the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProxySessionResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime voice connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          },
          {
            "name": "proxySessionId",
            "in": "path",
            "required": true,
            "description": "The proxy session ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          }
        ],
        "summary": "Get Proxy Session"
      },
      "post": {
        "operationId": "UpdateProxySession",
        "description": "Updates the specified proxy session details, such as voice or SMS capabilities.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProxySessionResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime voice connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          },
          {
            "name": "proxySessionId",
            "in": "path",
            "required": true,
            "description": "The proxy session ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Capabilities"],
                "properties": {
                  "Capabilities": {
                    "description": "The proxy session capabilities.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Capability"
                    }
                  },
                  "ExpiryMinutes": {
                    "description": "The number of minutes allowed for the proxy session.",
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "summary": "Update Proxy Session"
      }
    },
    "/accounts/{accountId}/rooms/{roomId}": {
      "delete": {
        "operationId": "DeleteRoom",
        "description": "Deletes a chat room in an Amazon Chime Enterprise account.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "description": "The chat room ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Room"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetRoom",
        "description": "Retrieves room details, such as the room name, for a room in an Amazon Chime Enterprise account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoomResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "description": "The room ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Room"
      },
      "post": {
        "operationId": "UpdateRoom",
        "description": "Updates room details, such as the room name, for a room in an Amazon Chime Enterprise account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "description": "The room ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "description": "The room name.",
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Update Room"
      }
    },
    "/accounts/{accountId}/rooms/{roomId}/memberships/{memberId}": {
      "delete": {
        "operationId": "DeleteRoomMembership",
        "description": "Removes a member from a chat room in an Amazon Chime Enterprise account.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "description": "The room ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "description": "The member ID (user ID or bot ID).",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Room Membership"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "operationId": "UpdateRoomMembership",
        "description": "Updates room membership details, such as the member role, for a room in an Amazon Chime Enterprise account. The member role designates whether the member is a chat room administrator or a general chat room member. The member role can be updated only for user IDs.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomMembershipResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "description": "The room ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "description": "The member ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Role": {
                    "description": "The role of the member.",
                    "type": "string",
                    "enum": ["Administrator", "Member"]
                  }
                }
              }
            }
          }
        },
        "summary": "Update Room Membership"
      }
    },
    "/voice-connectors/{voiceConnectorId}": {
      "delete": {
        "operationId": "DeleteVoiceConnector",
        "description": "Deletes the specified Amazon Chime Voice Connector. Any phone numbers associated with the Amazon Chime Voice Connector must be disassociated from it before it can be deleted.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Voice Connector"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetVoiceConnector",
        "description": "Retrieves details for the specified Amazon Chime Voice Connector, such as timestamps, name, outbound host, and encryption requirements.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceConnectorResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Voice Connector"
      },
      "put": {
        "operationId": "UpdateVoiceConnector",
        "description": "Updates details for the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVoiceConnectorResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name", "RequireEncryption"],
                "properties": {
                  "Name": {
                    "description": "The name of the Amazon Chime Voice Connector.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "RequireEncryption": {
                    "description": "When enabled, requires encryption for the Amazon Chime Voice Connector.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "summary": "Update Voice Connector"
      }
    },
    "/voice-connectors/{voiceConnectorId}/emergency-calling-configuration": {
      "delete": {
        "operationId": "DeleteVoiceConnectorEmergencyCallingConfiguration",
        "description": "Deletes the emergency calling configuration details from the specified Amazon Chime Voice Connector.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Voice Connector Emergency Calling Configuration"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetVoiceConnectorEmergencyCallingConfiguration",
        "description": "Gets the emergency calling configuration details for the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceConnectorEmergencyCallingConfigurationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Voice Connector Emergency Calling Configuration"
      },
      "put": {
        "operationId": "PutVoiceConnectorEmergencyCallingConfiguration",
        "description": "Puts emergency calling configuration details to the specified Amazon Chime Voice Connector, such as emergency phone numbers and calling countries. Origination and termination settings must be enabled for the Amazon Chime Voice Connector before emergency calling can be configured.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutVoiceConnectorEmergencyCallingConfigurationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["EmergencyCallingConfiguration"],
                "properties": {
                  "EmergencyCallingConfiguration": {
                    "description": "The emergency calling configuration details associated with an Amazon Chime Voice Connector.",
                    "type": "object",
                    "properties": {
                      "DNIS": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/DNISEmergencyCallingConfigurationList"
                          },
                          {
                            "description": "The Dialed Number Identification Service (DNIS) emergency calling configuration details."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Put Voice Connector Emergency Calling Configuration"
      }
    },
    "/voice-connector-groups/{voiceConnectorGroupId}": {
      "delete": {
        "operationId": "DeleteVoiceConnectorGroup",
        "description": "Deletes the specified Amazon Chime Voice Connector group. Any <code>VoiceConnectorItems</code> and phone numbers associated with the group must be removed before it can be deleted.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorGroupId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector group ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Voice Connector Group"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetVoiceConnectorGroup",
        "description": "Retrieves details for the specified Amazon Chime Voice Connector group, such as timestamps, name, and associated <code>VoiceConnectorItems</code>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceConnectorGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorGroupId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector group ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Voice Connector Group"
      },
      "put": {
        "operationId": "UpdateVoiceConnectorGroup",
        "description": "Updates details for the specified Amazon Chime Voice Connector group, such as the name and Amazon Chime Voice Connector priority ranking.",
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVoiceConnectorGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorGroupId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector group ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name", "VoiceConnectorItems"],
                "properties": {
                  "Name": {
                    "description": "The name of the Amazon Chime Voice Connector group.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "VoiceConnectorItems": {
                    "description": "The <code>VoiceConnectorItems</code> to associate with the group.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/VoiceConnectorItem"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update Voice Connector Group"
      }
    },
    "/voice-connectors/{voiceConnectorId}/origination": {
      "delete": {
        "operationId": "DeleteVoiceConnectorOrigination",
        "description": "<p>Deletes the origination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the origination settings.</p> </note>",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Voice Connector Origination"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetVoiceConnectorOrigination",
        "description": "Retrieves origination setting details for the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceConnectorOriginationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Voice Connector Origination"
      },
      "put": {
        "operationId": "PutVoiceConnectorOrigination",
        "description": "<p>Adds origination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off origination settings.</p> </note>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutVoiceConnectorOriginationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Origination"],
                "properties": {
                  "Origination": {
                    "description": "Origination settings enable your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector.",
                    "type": "object",
                    "properties": {
                      "Routes": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/OriginationRouteList"
                          },
                          {
                            "description": "The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20."
                          }
                        ]
                      },
                      "Disabled": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Boolean"
                          },
                          {
                            "description": "When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Put Voice Connector Origination"
      }
    },
    "/voice-connectors/{voiceConnectorId}/programmable-numbers/proxy": {
      "delete": {
        "operationId": "DeleteVoiceConnectorProxy",
        "description": "Deletes the proxy configuration from the specified Amazon Chime Voice Connector.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          }
        ],
        "summary": "Delete Voice Connector Proxy"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetVoiceConnectorProxy",
        "description": "Gets the proxy configuration details for the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceConnectorProxyResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime voice connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          }
        ],
        "summary": "Get Voice Connector Proxy"
      },
      "put": {
        "operationId": "PutVoiceConnectorProxy",
        "description": "Puts the specified proxy configuration to the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutVoiceConnectorProxyResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime voice connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "minLength": 1,
              "maxLength": 128
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["DefaultSessionExpiryMinutes", "PhoneNumberPoolCountries"],
                "properties": {
                  "DefaultSessionExpiryMinutes": {
                    "description": "The default number of minutes allowed for proxy sessions.",
                    "type": "integer"
                  },
                  "PhoneNumberPoolCountries": {
                    "description": "The countries for proxy phone numbers to be selected from.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Country"
                    },
                    "minItems": 1,
                    "maxItems": 100
                  },
                  "FallBackPhoneNumber": {
                    "description": "The phone number to route calls to after a proxy session expires.",
                    "type": "string",
                    "pattern": "^\\+?[1-9]\\d{1,14}$",
                    "format": "password"
                  },
                  "Disabled": {
                    "description": "When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "summary": "Put Voice Connector Proxy"
      }
    },
    "/voice-connectors/{voiceConnectorId}/streaming-configuration": {
      "delete": {
        "operationId": "DeleteVoiceConnectorStreamingConfiguration",
        "description": "Deletes the streaming configuration for the specified Amazon Chime Voice Connector.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Voice Connector Streaming Configuration"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetVoiceConnectorStreamingConfiguration",
        "description": "Retrieves the streaming configuration details for the specified Amazon Chime Voice Connector. Shows whether media streaming is enabled for sending to Amazon Kinesis. It also shows the retention period, in hours, for the Amazon Kinesis data.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceConnectorStreamingConfigurationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Voice Connector Streaming Configuration"
      },
      "put": {
        "operationId": "PutVoiceConnectorStreamingConfiguration",
        "description": "Adds a streaming configuration for the specified Amazon Chime Voice Connector. The streaming configuration specifies whether media streaming is enabled for sending to Amazon Kinesis. It also sets the retention period, in hours, for the Amazon Kinesis data.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutVoiceConnectorStreamingConfigurationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["StreamingConfiguration"],
                "properties": {
                  "StreamingConfiguration": {
                    "description": "The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours.",
                    "type": "object",
                    "properties": {
                      "DataRetentionInHours": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/DataRetentionInHours"
                          },
                          {
                            "description": "The retention period, in hours, for the Amazon Kinesis data."
                          }
                        ]
                      },
                      "Disabled": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Boolean"
                          },
                          {
                            "description": "When true, media streaming to Amazon Kinesis is turned off."
                          }
                        ]
                      },
                      "StreamingNotificationTargets": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/StreamingNotificationTargetList"
                          },
                          {
                            "description": "The streaming notification targets."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Put Voice Connector Streaming Configuration"
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination": {
      "delete": {
        "operationId": "DeleteVoiceConnectorTermination",
        "description": "<p>Deletes the termination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the termination settings.</p> </note>",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Voice Connector Termination"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetVoiceConnectorTermination",
        "description": "Retrieves termination setting details for the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceConnectorTerminationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Voice Connector Termination"
      },
      "put": {
        "operationId": "PutVoiceConnectorTermination",
        "description": "<p>Adds termination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off termination settings.</p> </note>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutVoiceConnectorTerminationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Termination"],
                "properties": {
                  "Termination": {
                    "description": "Termination settings enable your SIP hosts to make outbound calls using your Amazon Chime Voice Connector.",
                    "type": "object",
                    "properties": {
                      "CpsLimit": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/CpsLimit"
                          },
                          {
                            "description": "The limit on calls per second. Max value based on account service quota. Default value of 1."
                          }
                        ]
                      },
                      "DefaultPhoneNumber": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/E164PhoneNumber"
                          },
                          {
                            "description": "The default caller ID phone number."
                          }
                        ]
                      },
                      "CallingRegions": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/CallingRegionList"
                          },
                          {
                            "description": "The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required."
                          }
                        ]
                      },
                      "CidrAllowedList": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/StringList"
                          },
                          {
                            "description": "The IP addresses allowed to make calls, in CIDR format. Required."
                          }
                        ]
                      },
                      "Disabled": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Boolean"
                          },
                          {
                            "description": "When termination settings are disabled, outbound calls can not be made."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Put Voice Connector Termination"
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination/credentials#operation=delete": {
      "post": {
        "operationId": "DeleteVoiceConnectorTerminationCredentials",
        "description": "Deletes the specified SIP credentials used by your equipment to authenticate during call termination.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["delete"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Usernames"],
                "properties": {
                  "Usernames": {
                    "description": "The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SensitiveString"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete Voice Connector Termination Credentials"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/users/{userId}#operation=disassociate-phone-number": {
      "post": {
        "operationId": "DisassociatePhoneNumberFromUser",
        "description": "Disassociates the primary provisioned phone number from the specified Amazon Chime user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociatePhoneNumberFromUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["disassociate-phone-number"]
            }
          }
        ],
        "summary": "Disassociate Phone Number From User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/voice-connectors/{voiceConnectorId}#operation=disassociate-phone-numbers": {
      "post": {
        "operationId": "DisassociatePhoneNumbersFromVoiceConnector",
        "description": "Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociatePhoneNumbersFromVoiceConnectorResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["disassociate-phone-numbers"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["E164PhoneNumbers"],
                "properties": {
                  "E164PhoneNumbers": {
                    "description": "List of phone numbers, in E.164 format.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/E164PhoneNumber"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Disassociate Phone Numbers From Voice Connector"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/voice-connector-groups/{voiceConnectorGroupId}#operation=disassociate-phone-numbers": {
      "post": {
        "operationId": "DisassociatePhoneNumbersFromVoiceConnectorGroup",
        "description": "Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector group.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociatePhoneNumbersFromVoiceConnectorGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorGroupId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector group ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["disassociate-phone-numbers"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["E164PhoneNumbers"],
                "properties": {
                  "E164PhoneNumbers": {
                    "description": "List of phone numbers, in E.164 format.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/E164PhoneNumber"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Disassociate Phone Numbers From Voice Connector Group"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}#operation=disassociate-signin-delegate-groups": {
      "post": {
        "operationId": "DisassociateSigninDelegateGroupsFromAccount",
        "description": "Disassociates the specified sign-in delegate groups from the specified Amazon Chime account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociateSigninDelegateGroupsFromAccountResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["disassociate-signin-delegate-groups"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["GroupNames"],
                "properties": {
                  "GroupNames": {
                    "description": "The sign-in delegate group names.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/String"
                    },
                    "minItems": 1
                  }
                }
              }
            }
          }
        },
        "summary": "Disassociate Signin Delegate Groups From Account"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/settings": {
      "get": {
        "operationId": "GetAccountSettings",
        "description": "Retrieves account settings for the specified Amazon Chime account ID, such as remote control and dial out settings. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountSettingsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Account Settings"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "operationId": "UpdateAccountSettings",
        "description": "Updates the settings for the specified Amazon Chime account. You can update settings for remote control of shared screens, or for the dial-out option. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAccountSettingsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["AccountSettings"],
                "properties": {
                  "AccountSettings": {
                    "description": "Settings related to the Amazon Chime account. This includes settings that start or stop remote control of shared screens, or start or stop the dial-out option in the Amazon Chime web application. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
                    "type": "object",
                    "properties": {
                      "DisableRemoteControl": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Boolean"
                          },
                          {
                            "description": "Setting that stops or starts remote control of shared screens during meetings."
                          }
                        ]
                      },
                      "EnableDialOut": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Boolean"
                          },
                          {
                            "description": "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update Account Settings"
      }
    },
    "/accounts/{accountId}/bots/{botId}": {
      "get": {
        "operationId": "GetBot",
        "description": "Retrieves details for the specified bot, such as bot email address, bot type, status, and display name.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBotResponse"
                }
              }
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "485": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "486": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "botId",
            "in": "path",
            "required": true,
            "description": "The bot ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Bot"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "operationId": "UpdateBot",
        "description": "Updates the status of the specified bot, such as starting or stopping the bot from running in your Amazon Chime Enterprise account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBotResponse"
                }
              }
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "486": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "botId",
            "in": "path",
            "required": true,
            "description": "The bot ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Disabled": {
                    "description": "When true, stops the specified bot from running in your account.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "summary": "Update Bot"
      }
    },
    "/settings": {
      "get": {
        "operationId": "GetGlobalSettings",
        "description": "Retrieves global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGlobalSettingsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "summary": "Get Global Settings"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "operationId": "UpdateGlobalSettings",
        "description": "Updates global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["BusinessCalling", "VoiceConnector"],
                "properties": {
                  "BusinessCalling": {
                    "description": "The Amazon Chime Business Calling settings for the administrator's AWS account. Includes any Amazon S3 buckets designated for storing call detail records.",
                    "type": "object",
                    "properties": {
                      "CdrBucket": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/String"
                          },
                          {
                            "description": "The Amazon S3 bucket designated for call detail record storage."
                          }
                        ]
                      }
                    }
                  },
                  "VoiceConnector": {
                    "description": "The Amazon Chime Voice Connector settings. Includes any Amazon S3 buckets designated for storing call detail records.",
                    "type": "object",
                    "properties": {
                      "CdrBucket": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/String"
                          },
                          {
                            "description": "The Amazon S3 bucket designated for call detail record storage."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update Global Settings"
      }
    },
    "/phone-number-orders/{phoneNumberOrderId}": {
      "get": {
        "operationId": "GetPhoneNumberOrder",
        "description": "Retrieves details for the specified phone number order, such as order creation timestamp, phone numbers in E.164 format, product type, and order status.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPhoneNumberOrderResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "phoneNumberOrderId",
            "in": "path",
            "required": true,
            "description": "The ID for the phone number order.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "summary": "Get Phone Number Order"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/settings/phone-number": {
      "get": {
        "operationId": "GetPhoneNumberSettings",
        "description": "Retrieves the phone number settings for the administrator's AWS account, such as the default outbound calling name.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPhoneNumberSettingsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "summary": "Get Phone Number Settings"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "operationId": "UpdatePhoneNumberSettings",
        "description": "Updates the phone number settings for the administrator's AWS account, such as the default outbound calling name. You can update the default outbound calling name once every seven days. Outbound calling names can take up to 72 hours to update.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["CallingName"],
                "properties": {
                  "CallingName": {
                    "description": "The default outbound calling name for the account.",
                    "type": "string",
                    "pattern": "^$|^[a-zA-Z0-9 ]{2,15}$",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Update Phone Number Settings"
      }
    },
    "/accounts/{accountId}/retention-settings": {
      "get": {
        "operationId": "GetRetentionSettings",
        "description": "Gets the retention settings for the specified Amazon Chime Enterprise account. For more information about retention settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html\">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRetentionSettingsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Retention Settings"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "operationId": "PutRetentionSettings",
        "description": "<p>Puts retention settings for the specified Amazon Chime Enterprise account. We recommend using AWS CloudTrail to monitor usage of this API for your account. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/cloudtrail.html\">Logging Amazon Chime API Calls with AWS CloudTrail</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>To turn off existing retention settings, remove the number of days from the corresponding <b>RetentionDays</b> field in the <b>RetentionSettings</b> object. For more information about retention settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html\">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>.</p>",
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutRetentionSettingsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["RetentionSettings"],
                "properties": {
                  "RetentionSettings": {
                    "description": "The retention settings for an Amazon Chime Enterprise account that determine how long to retain items such as chat room messages and chat conversation messages.",
                    "type": "object",
                    "properties": {
                      "RoomRetentionSettings": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/RoomRetentionSettings"
                          },
                          {
                            "description": "The chat room retention settings."
                          }
                        ]
                      },
                      "ConversationRetentionSettings": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ConversationRetentionSettings"
                          },
                          {
                            "description": "The chat conversation retention settings."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Put Retention Settings"
      }
    },
    "/accounts/{accountId}/users/{userId}": {
      "get": {
        "operationId": "GetUser",
        "description": "<p>Retrieves details for the specified user ID, such as primary email address, license type, and personal meeting PIN.</p> <p>To retrieve user details with an email address instead of a user ID, use the <a>ListUsers</a> action, and then filter by email address.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "operationId": "UpdateUser",
        "description": "Updates user details for a specified user ID. Currently, only <code>LicenseType</code> updates are supported for this action.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "LicenseType": {
                    "description": "The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to.",
                    "type": "string",
                    "enum": ["Basic", "Plus", "Pro", "ProTrial"]
                  },
                  "UserType": {
                    "description": "The user type.",
                    "type": "string",
                    "enum": ["PrivateUser", "SharedDevice"]
                  },
                  "AlexaForBusinessMetadata": {
                    "description": "The Alexa for Business metadata associated with an Amazon Chime user, used to integrate Alexa for Business with a device.",
                    "type": "object",
                    "properties": {
                      "IsAlexaForBusinessEnabled": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Boolean"
                          },
                          {
                            "description": "Starts or stops Alexa for Business."
                          }
                        ]
                      },
                      "AlexaForBusinessRoomArn": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SensitiveString"
                          },
                          {
                            "description": "The ARN of the room resource."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update User"
      }
    },
    "/accounts/{accountId}/users/{userId}/settings": {
      "get": {
        "operationId": "GetUserSettings",
        "description": "Retrieves settings for the specified user ID, such as any associated phone number settings.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserSettingsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get User Settings"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "operationId": "UpdateUserSettings",
        "description": "Updates the settings for the specified user, such as phone number settings.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["UserSettings"],
                "properties": {
                  "UserSettings": {
                    "description": "Settings associated with an Amazon Chime user, including inbound and outbound calling and text messaging.",
                    "type": "object",
                    "properties": {
                      "Telephony": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/TelephonySettings"
                          },
                          {
                            "description": "The telephony settings associated with the user."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update User Settings"
      }
    },
    "/voice-connectors/{voiceConnectorId}/logging-configuration": {
      "get": {
        "operationId": "GetVoiceConnectorLoggingConfiguration",
        "description": "Retrieves the logging configuration details for the specified Amazon Chime Voice Connector. Shows whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceConnectorLoggingConfigurationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Voice Connector Logging Configuration"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "operationId": "PutVoiceConnectorLoggingConfiguration",
        "description": "Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutVoiceConnectorLoggingConfigurationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["LoggingConfiguration"],
                "properties": {
                  "LoggingConfiguration": {
                    "description": "The logging configuration associated with an Amazon Chime Voice Connector. Specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.",
                    "type": "object",
                    "properties": {
                      "EnableSIPLogs": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Boolean"
                          },
                          {
                            "description": "When true, enables SIP message logs for sending to Amazon CloudWatch Logs."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Put Voice Connector Logging Configuration"
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination/health": {
      "get": {
        "operationId": "GetVoiceConnectorTerminationHealth",
        "description": "Retrieves information about the last time a SIP <code>OPTIONS</code> ping was received from your SIP infrastructure for the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceConnectorTerminationHealthResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Voice Connector Termination Health"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/users#operation=add": {
      "post": {
        "operationId": "InviteUsers",
        "description": "Sends email to a maximum of 50 users, inviting them to the specified Amazon Chime <code>Team</code> account. Only <code>Team</code> account types are currently supported for this action. ",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteUsersResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["add"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["UserEmailList"],
                "properties": {
                  "UserEmailList": {
                    "description": "The user email addresses to which to send the email invitation.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EmailAddress"
                    },
                    "maxItems": 50
                  },
                  "UserType": {
                    "description": "The user type.",
                    "type": "string",
                    "enum": ["PrivateUser", "SharedDevice"]
                  }
                }
              }
            }
          }
        },
        "summary": "Invite Users"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/meetings/{meetingId}/attendees/{attendeeId}/tags": {
      "get": {
        "operationId": "ListAttendeeTags",
        "description": "Lists the tags applied to an Amazon Chime SDK attendee resource.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttendeeTagsResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "attendeeId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK attendee ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "summary": "List Attendee Tags"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/meetings/{meetingId}/tags": {
      "get": {
        "operationId": "ListMeetingTags",
        "description": "Lists the tags applied to an Amazon Chime SDK meeting resource.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMeetingTagsResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "summary": "List Meeting Tags"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/phone-numbers": {
      "get": {
        "operationId": "ListPhoneNumbers",
        "description": "Lists the phone numbers for the specified Amazon Chime account, Amazon Chime user, Amazon Chime Voice Connector, or Amazon Chime Voice Connector group.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPhoneNumbersResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "The phone number status.",
            "schema": {
              "type": "string",
              "enum": [
                "AcquireInProgress",
                "AcquireFailed",
                "Unassigned",
                "Assigned",
                "ReleaseInProgress",
                "DeleteInProgress",
                "ReleaseFailed",
                "DeleteFailed"
              ]
            }
          },
          {
            "name": "product-type",
            "in": "query",
            "required": false,
            "description": "The phone number product type.",
            "schema": {
              "type": "string",
              "enum": ["BusinessCalling", "VoiceConnector", "SipMediaApplicationDialIn"]
            }
          },
          {
            "name": "filter-name",
            "in": "query",
            "required": false,
            "description": "The filter to use to limit the number of results.",
            "schema": {
              "type": "string",
              "enum": ["AccountId", "UserId", "VoiceConnectorId", "VoiceConnectorGroupId", "SipRuleId"]
            }
          },
          {
            "name": "filter-value",
            "in": "query",
            "required": false,
            "description": "The value to use for the filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Phone Numbers"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/tags#arn": {
      "get": {
        "operationId": "ListTagsForResource",
        "description": "Lists the tags applied to an Amazon Chime SDK meeting resource.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTagsForResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "arn",
            "in": "query",
            "required": true,
            "description": "The resource ARN.",
            "schema": {
              "type": "string",
              "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
              "minLength": 1,
              "maxLength": 1024,
              "format": "password"
            }
          }
        ],
        "summary": "List Tags For Resource"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/voice-connectors/{voiceConnectorId}/termination/credentials": {
      "get": {
        "operationId": "ListVoiceConnectorTerminationCredentials",
        "description": "Lists the SIP credentials for the specified Amazon Chime Voice Connector.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVoiceConnectorTerminationCredentialsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "List Voice Connector Termination Credentials"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/users/{userId}#operation=logout": {
      "post": {
        "operationId": "LogoutUser",
        "description": "Logs out the specified user from all of the devices they are currently logged into.",
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["logout"]
            }
          }
        ],
        "summary": "Logout User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/voice-connectors/{voiceConnectorId}/termination/credentials#operation=put": {
      "post": {
        "operationId": "PutVoiceConnectorTerminationCredentials",
        "description": "Adds termination SIP credentials for the specified Amazon Chime Voice Connector.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "voiceConnectorId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime Voice Connector ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["put"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Credentials": {
                    "description": "The termination SIP credentials.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Credential"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Put Voice Connector Termination Credentials"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/conversations/{conversationId}/messages/{messageId}#operation=redact": {
      "post": {
        "operationId": "RedactConversationMessage",
        "description": "Redacts the specified message from the specified Amazon Chime conversation.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedactConversationMessageResponse"
                }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "description": "The conversation ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "description": "The message ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["redact"]
            }
          }
        ],
        "summary": "Redact Conversation Message"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/rooms/{roomId}/messages/{messageId}#operation=redact": {
      "post": {
        "operationId": "RedactRoomMessage",
        "description": "Redacts the specified message from the specified Amazon Chime chat room.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedactRoomMessageResponse"
                }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "description": "The room ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "description": "The message ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["redact"]
            }
          }
        ],
        "summary": "Redact Room Message"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/bots/{botId}#operation=regenerate-security-token": {
      "post": {
        "operationId": "RegenerateSecurityToken",
        "description": "Regenerates the security token for a bot.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateSecurityTokenResponse"
                }
              }
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "486": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "botId",
            "in": "path",
            "required": true,
            "description": "The bot ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["regenerate-security-token"]
            }
          }
        ],
        "summary": "Regenerate Security Token"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/accounts/{accountId}/users/{userId}#operation=reset-personal-pin": {
      "post": {
        "operationId": "ResetPersonalPIN",
        "description": "Resets the personal meeting PIN for the specified user on an Amazon Chime account. Returns the <a>User</a> object with the updated personal meeting PIN.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPersonalPINResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime account ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["reset-personal-pin"]
            }
          }
        ],
        "summary": "Reset Personal PIN"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/phone-numbers/{phoneNumberId}#operation=restore": {
      "post": {
        "operationId": "RestorePhoneNumber",
        "description": "Moves a phone number from the <b>Deletion queue</b> back into the phone number <b>Inventory</b>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestorePhoneNumberResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "phoneNumberId",
            "in": "path",
            "required": true,
            "description": "The phone number.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["restore"]
            }
          }
        ],
        "summary": "Restore Phone Number"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/search#type=phone-numbers": {
      "get": {
        "operationId": "SearchAvailablePhoneNumbers",
        "description": "Searches phone numbers that can be ordered.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAvailablePhoneNumbersResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "area-code",
            "in": "query",
            "required": false,
            "description": "The area code used to filter results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "description": "The city used to filter results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "description": "The country used to filter results.",
            "schema": {
              "type": "string",
              "pattern": "[A-Z]{2}"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "description": "The state used to filter results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toll-free-prefix",
            "in": "query",
            "required": false,
            "description": "The toll-free prefix that you use to filter results.",
            "schema": {
              "type": "string",
              "pattern": "^8(00|33|44|55|66|77|88)$",
              "minLength": 3,
              "maxLength": 3
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "enum": ["Local", "TollFree"]
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 500
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["phone-numbers"]
            },
            "description": "The token used to retrieve the next page of results."
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["phone-numbers"]
            }
          }
        ],
        "summary": "Search Available Phone Numbers"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/meetings/{meetingId}/attendees/{attendeeId}/tags#operation=add": {
      "post": {
        "operationId": "TagAttendee",
        "description": "Applies the specified tags to the specified Amazon Chime SDK attendee.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "attendeeId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK attendee ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["add"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Tags"],
                "properties": {
                  "Tags": {
                    "description": "The tag key-value pairs.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "minItems": 1,
                    "maxItems": 10
                  }
                }
              }
            }
          }
        },
        "summary": "Tag Attendee"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/meetings/{meetingId}/tags#operation=add": {
      "post": {
        "operationId": "TagMeeting",
        "description": "Applies the specified tags to the specified Amazon Chime SDK meeting.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["add"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Tags"],
                "properties": {
                  "Tags": {
                    "description": "The tag key-value pairs.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                }
              }
            }
          }
        },
        "summary": "Tag Meeting"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/tags#operation=tag-resource": {
      "post": {
        "operationId": "TagResource",
        "description": "Applies the specified tags to the specified Amazon Chime SDK meeting resource.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["tag-resource"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ResourceARN", "Tags"],
                "properties": {
                  "ResourceARN": {
                    "description": "The resource ARN.",
                    "type": "string",
                    "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
                    "minLength": 1,
                    "maxLength": 1024,
                    "format": "password"
                  },
                  "Tags": {
                    "description": "The tag key-value pairs.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                }
              }
            }
          }
        },
        "summary": "Tag Resource"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/meetings/{meetingId}/attendees/{attendeeId}/tags#operation=delete": {
      "post": {
        "operationId": "UntagAttendee",
        "description": "Untags the specified tags from the specified Amazon Chime SDK attendee.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "attendeeId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK attendee ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["delete"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["TagKeys"],
                "properties": {
                  "TagKeys": {
                    "description": "The tag keys.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TagKey"
                    },
                    "minItems": 1,
                    "maxItems": 10
                  }
                }
              }
            }
          }
        },
        "summary": "Untag Attendee"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/meetings/{meetingId}/tags#operation=delete": {
      "post": {
        "operationId": "UntagMeeting",
        "description": "Untags the specified tags from the specified Amazon Chime SDK meeting.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The Amazon Chime SDK meeting ID.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["delete"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["TagKeys"],
                "properties": {
                  "TagKeys": {
                    "description": "The tag keys.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TagKey"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                }
              }
            }
          }
        },
        "summary": "Untag Meeting"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/tags#operation=untag-resource": {
      "post": {
        "operationId": "UntagResource",
        "description": "Untags the specified tags from the specified Amazon Chime SDK meeting resource.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["untag-resource"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ResourceARN", "TagKeys"],
                "properties": {
                  "ResourceARN": {
                    "description": "The resource ARN.",
                    "type": "string",
                    "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
                    "minLength": 1,
                    "maxLength": 1024,
                    "format": "password"
                  },
                  "TagKeys": {
                    "description": "The tag keys.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TagKey"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                }
              }
            }
          }
        },
        "summary": "Untag Resource"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/app-instances": {
      "post": {
        "operationId": "CreateAppInstance",
        "description": "Creates an Amazon Chime Messaging SDK <code>AppInstance</code> under an AWS Account. Only Messaging SDK customers use this API. <code>CreateAppInstance</code> supports <code>idempotency</code> behavior as described in the AWS API Standard.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAppInstanceResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name", "ClientRequestToken"],
                "properties": {
                  "Name": {
                    "description": "The name of the app instance.",
                    "type": "string",
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                    "minLength": 1,
                    "maxLength": 256,
                    "format": "password"
                  },
                  "Metadata": {
                    "description": "The metadata of the app instance. Limited to a 1KB string in UTF-8.",
                    "type": "string",
                    "pattern": ".*",
                    "minLength": 0,
                    "maxLength": 1024,
                    "format": "password"
                  },
                  "ClientRequestToken": {
                    "description": "The <code>ClientRequestToken</code> of the app instance.",
                    "type": "string",
                    "pattern": "[-_a-zA-Z0-9]*",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  },
                  "Tags": {
                    "description": "Tags assigned to the <code>AppInstanceUser</code>.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                }
              }
            }
          }
        },
        "summary": "Create App Instance"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListAppInstances",
        "description": "Lists all Amazon Chime app instances created under a single AWS account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAppInstancesResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of app instances that you want to return.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token passed by previous API requests until you reach the maximum number of app instances.",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "minLength": 0,
              "maxLength": 2048,
              "format": "password"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List App Instances"
      }
    },
    "/app-instances/{appInstanceArn}/admins": {
      "post": {
        "operationId": "CreateAppInstanceAdmin",
        "description": "<p>Promotes an <code>AppInstanceUser</code> to an <code>AppInstanceAdmin</code>. The promoted user can perform the following actions. </p> <ul> <li> <p> <code>ChannelModerator</code> actions across all channels in the app instance.</p> </li> <li> <p> <code>DeleteChannelMessage</code> actions.</p> </li> </ul> <p>Only an <code>AppInstanceUser</code> can be promoted to an <code>AppInstanceAdmin</code> role.</p>",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAppInstanceAdminResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["AppInstanceAdminArn"],
                "properties": {
                  "AppInstanceAdminArn": {
                    "description": "The ARN of the administrator of the current app instance.",
                    "type": "string",
                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "minLength": 5,
                    "maxLength": 1600
                  }
                }
              }
            }
          }
        },
        "summary": "Create App Instance Admin"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListAppInstanceAdmins",
        "description": "Returns a list of the administrators in the app instance.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAppInstanceAdminsResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of administrators that you want to return.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token returned from previous API requests until the number of administrators is reached.",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "minLength": 0,
              "maxLength": 2048,
              "format": "password"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List App Instance Admins"
      }
    },
    "/app-instance-users": {
      "post": {
        "operationId": "CreateAppInstanceUser",
        "description": "Creates a user under an Amazon Chime <code>AppInstance</code>. The request consists of a unique <code>appInstanceUserId</code> and <code>Name</code> for that user.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAppInstanceUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["AppInstanceArn", "AppInstanceUserId", "Name", "ClientRequestToken"],
                "properties": {
                  "AppInstanceArn": {
                    "description": "The ARN of the app instance request.",
                    "type": "string",
                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "minLength": 5,
                    "maxLength": 1600
                  },
                  "AppInstanceUserId": {
                    "description": "The user ID of the app instance.",
                    "type": "string",
                    "pattern": "[A-Za-z0-9][A-Za-z0-9\\:\\-\\_\\.\\@]{3,50}[A-Za-z0-9]",
                    "minLength": 1,
                    "maxLength": 50,
                    "format": "password"
                  },
                  "Name": {
                    "description": "The user's name.",
                    "type": "string",
                    "pattern": ".*\\S.*",
                    "minLength": 1,
                    "maxLength": 100,
                    "format": "password"
                  },
                  "Metadata": {
                    "description": "The request's metadata. Limited to a 1KB string in UTF-8.",
                    "type": "string",
                    "pattern": ".*",
                    "minLength": 0,
                    "maxLength": 1024,
                    "format": "password"
                  },
                  "ClientRequestToken": {
                    "description": "The token assigned to the user requesting an app instance.",
                    "type": "string",
                    "pattern": "[-_a-zA-Z0-9]*",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  },
                  "Tags": {
                    "description": "Tags assigned to the <code>AppInstanceUser</code>.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                }
              }
            }
          }
        },
        "summary": "Create App Instance User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/channels": {
      "post": {
        "operationId": "CreateChannel",
        "description": "<p>Creates a channel to which you can add users and send messages.</p> <p> <b>Restriction</b>: You can't change a channel's privacy.</p>",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChannelResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["AppInstanceArn", "Name", "ClientRequestToken"],
                "properties": {
                  "AppInstanceArn": {
                    "description": "The ARN of the channel request.",
                    "type": "string",
                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "minLength": 5,
                    "maxLength": 1600
                  },
                  "Name": {
                    "description": "The name of the channel.",
                    "type": "string",
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                    "minLength": 1,
                    "maxLength": 256,
                    "format": "password"
                  },
                  "Mode": {
                    "description": "The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.",
                    "type": "string",
                    "enum": ["UNRESTRICTED", "RESTRICTED"]
                  },
                  "Privacy": {
                    "description": "The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren't discoverable by users outside the channel. Public channels are discoverable by anyone in the app instance.",
                    "type": "string",
                    "enum": ["PUBLIC", "PRIVATE"]
                  },
                  "Metadata": {
                    "description": "The metadata of the creation request. Limited to 1KB and UTF-8.",
                    "type": "string",
                    "pattern": ".*",
                    "minLength": 0,
                    "maxLength": 1024,
                    "format": "password"
                  },
                  "ClientRequestToken": {
                    "description": "The client token for the request. An <code>Idempotency</code> token.",
                    "type": "string",
                    "pattern": "[-_a-zA-Z0-9]*",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  },
                  "Tags": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                }
              }
            }
          }
        },
        "summary": "Create Channel"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/channels/{channelArn}/bans": {
      "post": {
        "operationId": "CreateChannelBan",
        "description": "<p>Permanently bans a member from a channel. Moderators can't add banned members to a channel. To undo a ban, you first have to <code>DeleteChannelBan</code>, and then <code>CreateChannelMembership</code>. Bans are cleaned up when you delete users or channels. </p> <p>If you ban a user who is already part of a channel, that user is automatically kicked from the channel.</p>",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChannelBanResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the ban request.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["MemberArn"],
                "properties": {
                  "MemberArn": {
                    "description": "The ARN of the member being banned.",
                    "type": "string",
                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "minLength": 5,
                    "maxLength": 1600
                  }
                }
              }
            }
          }
        },
        "summary": "Create Channel Ban"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListChannelBans",
        "description": "Lists all the users banned from a particular channel.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListChannelBansResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of bans that you want returned.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token passed by previous API calls until all requested bans are returned.",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "minLength": 0,
              "maxLength": 2048,
              "format": "password"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Channel Bans"
      }
    },
    "/channels/{channelArn}/memberships": {
      "post": {
        "operationId": "CreateChannelMembership",
        "description": "<p>Adds a user to a channel. The <code>InvitedBy</code> response field is derived from the request header. A channel member can:</p> <ul> <li> <p>List messages</p> </li> <li> <p>Send messages</p> </li> <li> <p>Receive messages</p> </li> <li> <p>Edit their own messages</p> </li> <li> <p>Leave the channel</p> </li> </ul> <p>Privacy settings impact this action as follows:</p> <ul> <li> <p>Public Channels: You do not need to be a member to list messages, but you must be a member to send messages.</p> </li> <li> <p>Private Channels: You must be a member to list or send messages.</p> </li> </ul>",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChannelMembershipResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel to which you're adding users.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["MemberArn", "Type"],
                "properties": {
                  "MemberArn": {
                    "description": "The ARN of the member you want to add to the channel.",
                    "type": "string",
                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "minLength": 5,
                    "maxLength": 1600
                  },
                  "Type": {
                    "description": "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.",
                    "type": "string",
                    "enum": ["DEFAULT", "HIDDEN"]
                  }
                }
              }
            }
          }
        },
        "summary": "Create Channel Membership"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListChannelMemberships",
        "description": "Lists all channel memberships in a channel.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListChannelMembershipsResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The maximum number of channel memberships that you want returned.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned.",
            "schema": {
              "type": "string",
              "enum": ["DEFAULT", "HIDDEN"]
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of channel memberships that you want returned.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token passed by previous API calls until all requested channel memberships are returned..",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "minLength": 0,
              "maxLength": 2048,
              "format": "password"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Channel Memberships"
      }
    },
    "/channels/{channelArn}/moderators": {
      "post": {
        "operationId": "CreateChannelModerator",
        "description": "<p>Creates a new <code>ChannelModerator</code>. A channel moderator can:</p> <ul> <li> <p>Add and remove other members of the channel.</p> </li> <li> <p>Add and remove other moderators of the channel.</p> </li> <li> <p>Add and remove user bans for the channel.</p> </li> <li> <p>Redact messages in the channel.</p> </li> <li> <p>List messages in the channel.</p> </li> </ul>",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChannelModeratorResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["ChannelModeratorArn"],
                "properties": {
                  "ChannelModeratorArn": {
                    "description": "The ARN of the moderator.",
                    "type": "string",
                    "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                    "minLength": 5,
                    "maxLength": 1600
                  }
                }
              }
            }
          }
        },
        "summary": "Create Channel Moderator"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListChannelModerators",
        "description": "Lists all the moderators for a channel.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListChannelModeratorsResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of moderators that you want returned.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token passed by previous API calls until all requested moderators are returned.",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "minLength": 0,
              "maxLength": 2048,
              "format": "password"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Channel Moderators"
      }
    },
    "/meetings/{meetingId}/dial-outs": {
      "post": {
        "operationId": "CreateMeetingDialOut",
        "description": "<p>Uses the join token and call metadata in a meeting request (From number, To number, and so forth) to initiate an outbound call to a public switched telephone network (PSTN) and joins them into Chime meeting. Also ensures that the From number belongs to the customer.</p> <p>To play welcome audio or implement an interactive voice response (IVR), use the <code>CreateSipMediaApplicationCall</code> API with the corresponding SIP media application ID.</p>",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMeetingDialOutResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "<p>The Amazon Chime SDK meeting ID.</p> <p>Type: String</p> <p>Pattern: [a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}</p> <p>Required: No</p>",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["FromPhoneNumber", "ToPhoneNumber", "JoinToken"],
                "properties": {
                  "FromPhoneNumber": {
                    "description": "Phone number used as the caller ID when the remote party receives a call.",
                    "type": "string",
                    "pattern": "^\\+?[1-9]\\d{1,14}$",
                    "format": "password"
                  },
                  "ToPhoneNumber": {
                    "description": "Phone number called when inviting someone to a meeting.",
                    "type": "string",
                    "pattern": "^\\+?[1-9]\\d{1,14}$",
                    "format": "password"
                  },
                  "JoinToken": {
                    "description": "Token used by the Amazon Chime SDK attendee. Call the <a href=\"https://docs.aws.amazon.com/https:/docs.aws.amazon.com/chime/latest/APIReference/API_Attendee.html\"> CreateAttendee API</a> to get a join token. ",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9+/]+$",
                    "minLength": 2,
                    "maxLength": 2048,
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Create Meeting Dial Out"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/sip-media-applications": {
      "post": {
        "operationId": "CreateSipMediaApplication",
        "description": "Creates a SIP media application.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSipMediaApplicationResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "488": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["AwsRegion", "Endpoints", "Endpoints"],
                "properties": {
                  "AwsRegion": {
                    "description": "AWS Region assigned to the SIP media application.",
                    "type": "string"
                  },
                  "Name": {
                    "description": "The SIP media application name.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "Endpoints": {
                    "description": "List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SipMediaApplicationEndpoint"
                    },
                    "minItems": 1,
                    "maxItems": 1
                  }
                }
              }
            }
          }
        },
        "summary": "Create Sip Media Application"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListSipMediaApplications",
        "description": "Lists the SIP media applications under the administrator's AWS account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSipMediaApplicationsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call. Defaults to 100.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string",
              "maxLength": 65535
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Sip Media Applications"
      }
    },
    "/sip-media-applications/{sipMediaApplicationId}/calls": {
      "post": {
        "operationId": "CreateSipMediaApplicationCall",
        "description": "Creates an outbound call to a phone number from the phone number specified in the request, and it invokes the endpoint of the specified <code>sipMediaApplicationId</code>.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSipMediaApplicationCallResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sipMediaApplicationId",
            "in": "path",
            "required": true,
            "description": "The ID of the SIP media application.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "FromPhoneNumber": {
                    "description": "The phone number that a user calls from.",
                    "type": "string",
                    "pattern": "^\\+?[1-9]\\d{1,14}$",
                    "format": "password"
                  },
                  "ToPhoneNumber": {
                    "description": "The phone number that the user dials in order to connect to a meeting",
                    "type": "string",
                    "pattern": "^\\+?[1-9]\\d{1,14}$",
                    "format": "password"
                  },
                  "SipHeaders": {
                    "description": "The SIP headers added to an outbound call leg.",
                    "type": "object",
                    "minProperties": 0,
                    "maxProperties": 20,
                    "additionalProperties": {
                      "$ref": "#/components/schemas/SensitiveString"
                    }
                  }
                },
                "required": ["FromPhoneNumber", "ToPhoneNumber"]
              }
            }
          }
        },
        "summary": "Create Sip Media Application Call"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/sip-rules": {
      "post": {
        "operationId": "CreateSipRule",
        "description": "Creates a SIP rule which can be used to run a SIP media application as a target for a specific trigger type.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSipRuleResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "486": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "488": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name", "TriggerType", "TriggerValue", "TargetApplications"],
                "properties": {
                  "Name": {
                    "description": "The name of the SIP rule.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "TriggerType": {
                    "description": "The type of trigger whose value is assigned to the SIP rule in <code>TriggerValue</code>. Allowed trigger values are <code>RequestUriHostname</code> and <code>ToPhoneNumber</code>.",
                    "type": "string",
                    "enum": ["ToPhoneNumber", "RequestUriHostname"]
                  },
                  "TriggerValue": {
                    "description": "If <code>TriggerType</code> is <code>RequestUriHostname</code> then the value can be the outbound host name of an Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code> then the value can be a customer-owned phone number in E164 format. <code>SipRule</code> is triggered if the SIP application requests a host name, or a If <code>TriggerType</code> is <code>RequestUriHostname</code>, then the value can be the outbound hostname of an Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, then the value can be a customer-owned phone number in E164 format. <code>SipRule</code> is triggered if the SIP application requests a host name, or a <code>ToPhoneNumber</code> value matches the incoming SIP request.",
                    "type": "string",
                    "pattern": ".*\\S.*"
                  },
                  "Disabled": {
                    "description": "Enables or disables a rule. You must disable rules before you can delete them.",
                    "type": "boolean"
                  },
                  "TargetApplications": {
                    "description": "List of SIP media applications with priority and AWS Region. Only one SIP application per AWS Region can be used.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SipRuleTargetApplication"
                    },
                    "minItems": 1,
                    "maxItems": 25
                  }
                }
              }
            }
          }
        },
        "summary": "Create Sip Rule"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListSipRules",
        "description": "Lists the SIP rules under the administrator's AWS account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSipRulesResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sip-media-application",
            "in": "query",
            "required": false,
            "description": "The SIP media application ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call. Defaults to 100.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token to use to retrieve the next page of results.",
            "schema": {
              "type": "string",
              "maxLength": 65535
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Sip Rules"
      }
    },
    "/app-instances/{appInstanceArn}": {
      "delete": {
        "operationId": "DeleteAppInstance",
        "description": "Deletes an <code>AppInstance</code> and all associated data asynchronously.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Delete App Instance"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "DescribeAppInstance",
        "description": "Returns the full details of an <code>AppInstance</code>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAppInstanceResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Describe App Instance"
      },
      "put": {
        "operationId": "UpdateAppInstance",
        "description": "Updates <code>AppInstance</code> metadata.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppInstanceResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "properties": {
                  "Name": {
                    "description": "The name that you want to change.",
                    "type": "string",
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                    "minLength": 1,
                    "maxLength": 256,
                    "format": "password"
                  },
                  "Metadata": {
                    "description": "The metadata that you want to change.",
                    "type": "string",
                    "pattern": ".*",
                    "minLength": 0,
                    "maxLength": 1024,
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Update App Instance"
      }
    },
    "/app-instances/{appInstanceArn}/admins/{appInstanceAdminArn}": {
      "delete": {
        "operationId": "DeleteAppInstanceAdmin",
        "description": "Demotes an <code>AppInstanceAdmin</code> to an <code>AppInstanceUser</code>. This action does not delete the user.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceAdminArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance's administrator.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Delete App Instance Admin"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "DescribeAppInstanceAdmin",
        "description": "Returns the full details of an <code>AppInstanceAdmin</code>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAppInstanceAdminResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceAdminArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance administrator.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Describe App Instance Admin"
      }
    },
    "/app-instances/{appInstanceArn}/streaming-configurations": {
      "delete": {
        "operationId": "DeleteAppInstanceStreamingConfigurations",
        "description": "Deletes the streaming configurations of an app instance.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the streaming configurations being deleted.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Delete App Instance Streaming Configurations"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetAppInstanceStreamingConfigurations",
        "description": "Gets the streaming settings for an app instance.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppInstanceStreamingConfigurationsResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance. ",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Get App Instance Streaming Configurations"
      },
      "put": {
        "operationId": "PutAppInstanceStreamingConfigurations",
        "description": "The data streaming configurations of an app instance.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutAppInstanceStreamingConfigurationsResponse"
                }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["AppInstanceStreamingConfigurations"],
                "properties": {
                  "AppInstanceStreamingConfigurations": {
                    "description": "The streaming configurations set for an app instance.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AppInstanceStreamingConfiguration"
                    },
                    "minItems": 1,
                    "maxItems": 2
                  }
                }
              }
            }
          }
        },
        "summary": "Put App Instance Streaming Configurations"
      }
    },
    "/app-instance-users/{appInstanceUserArn}": {
      "delete": {
        "operationId": "DeleteAppInstanceUser",
        "description": "Deletes an <code>AppInstanceUser</code>.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceUserArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the user request being deleted.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Delete App Instance User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "DescribeAppInstanceUser",
        "description": "Returns the full details of an <code>AppInstanceUser</code>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeAppInstanceUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceUserArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance user.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Describe App Instance User"
      },
      "put": {
        "operationId": "UpdateAppInstanceUser",
        "description": "Updates the details for an <code>AppInstanceUser</code>. You can update names and metadata.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppInstanceUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceUserArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance user.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "properties": {
                  "Name": {
                    "description": "The name of the app instance user.",
                    "type": "string",
                    "pattern": ".*\\S.*",
                    "minLength": 1,
                    "maxLength": 100,
                    "format": "password"
                  },
                  "Metadata": {
                    "description": "The metadata of the app instance user.",
                    "type": "string",
                    "pattern": ".*",
                    "minLength": 0,
                    "maxLength": 1024,
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Update App Instance User"
      }
    },
    "/channels/{channelArn}": {
      "delete": {
        "operationId": "DeleteChannel",
        "description": "Immediately makes a channel and its memberships inaccessible and marks them for deletion. This is an irreversible process.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel being deleted.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Delete Channel"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "DescribeChannel",
        "description": "Returns the full details of a channel in an Amazon Chime app instance.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeChannelResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Describe Channel"
      },
      "put": {
        "operationId": "UpdateChannel",
        "description": "<p>Update a channel's attributes.</p> <p> <b>Restriction</b>: You can't change a channel's privacy.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateChannelResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name", "Mode"],
                "properties": {
                  "Name": {
                    "description": "The name of the channel.",
                    "type": "string",
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                    "minLength": 1,
                    "maxLength": 256,
                    "format": "password"
                  },
                  "Mode": {
                    "description": "The mode of the update request.",
                    "type": "string",
                    "enum": ["UNRESTRICTED", "RESTRICTED"]
                  },
                  "Metadata": {
                    "description": "The metadata of the channel.",
                    "type": "string",
                    "pattern": ".*",
                    "minLength": 0,
                    "maxLength": 1024,
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Update Channel"
      }
    },
    "/channels/{channelArn}/bans/{memberArn}": {
      "delete": {
        "operationId": "DeleteChannelBan",
        "description": "Removes a user from a channel's ban list.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel from which the app instance user was banned.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "memberArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance user that you want to reinstate.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Delete Channel Ban"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "DescribeChannelBan",
        "description": "Returns the full details of a channel ban.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeChannelBanResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel from which the user is banned.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "memberArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the member being banned.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Describe Channel Ban"
      }
    },
    "/channels/{channelArn}/memberships/{memberArn}": {
      "delete": {
        "operationId": "DeleteChannelMembership",
        "description": "Removes a member from a channel.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel from which you want to remove the user.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "memberArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the member that you're removing from the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Delete Channel Membership"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "DescribeChannelMembership",
        "description": "Returns the full details of a user's channel membership.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeChannelMembershipResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "memberArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the member.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Describe Channel Membership"
      }
    },
    "/channels/{channelArn}/messages/{messageId}": {
      "delete": {
        "operationId": "DeleteChannelMessage",
        "description": "Deletes a channel message. Only admins can perform this action. Deletion makes messages inaccessible immediately. A background process deletes any revisions created by <code>UpdateChannelMessage</code>.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "description": "The ID of the message being deleted.",
            "schema": {
              "type": "string",
              "pattern": "[-_a-zA-Z0-9]*",
              "minLength": 1,
              "maxLength": 128
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Delete Channel Message"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetChannelMessage",
        "description": "Gets the full details of a channel message.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChannelMessageResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "description": "The ID of the message.",
            "schema": {
              "type": "string",
              "pattern": "[-_a-zA-Z0-9]*",
              "minLength": 1,
              "maxLength": 128
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Get Channel Message"
      },
      "put": {
        "operationId": "UpdateChannelMessage",
        "description": "Updates the content of a message.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateChannelMessageResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "description": "The ID string of the message being updated.",
            "schema": {
              "type": "string",
              "pattern": "[-_a-zA-Z0-9]*",
              "minLength": 1,
              "maxLength": 128
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Content": {
                    "description": "The content of the message being updated.",
                    "type": "string",
                    "pattern": "[\\s\\S]*",
                    "minLength": 0,
                    "maxLength": 4096,
                    "format": "password"
                  },
                  "Metadata": {
                    "description": "The metadata of the message being updated.",
                    "type": "string",
                    "pattern": ".*",
                    "minLength": 0,
                    "maxLength": 1024,
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Update Channel Message"
      }
    },
    "/channels/{channelArn}/moderators/{channelModeratorArn}": {
      "delete": {
        "operationId": "DeleteChannelModerator",
        "description": "Deletes a channel moderator.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "channelModeratorArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the moderator being deleted.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Delete Channel Moderator"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "DescribeChannelModerator",
        "description": "Returns the full details of a single ChannelModerator.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeChannelModeratorResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "channelModeratorArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel moderator.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Describe Channel Moderator"
      }
    },
    "/sip-media-applications/{sipMediaApplicationId}": {
      "delete": {
        "operationId": "DeleteSipMediaApplication",
        "description": "Deletes a SIP media application.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sipMediaApplicationId",
            "in": "path",
            "required": true,
            "description": "The SIP media application ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Sip Media Application"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetSipMediaApplication",
        "description": "Retrieves the information for a SIP media application, including name, AWS Region, and endpoints.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSipMediaApplicationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sipMediaApplicationId",
            "in": "path",
            "required": true,
            "description": "The SIP media application ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Sip Media Application"
      },
      "put": {
        "operationId": "UpdateSipMediaApplication",
        "description": "Updates the details for the specified SIP media application.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSipMediaApplicationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sipMediaApplicationId",
            "in": "path",
            "required": true,
            "description": "The SIP media application ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "description": "The new name for the specified SIP media application.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "Endpoints": {
                    "description": "The new set of endpoints for the specified SIP media application.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SipMediaApplicationEndpoint"
                    },
                    "minItems": 1,
                    "maxItems": 1
                  }
                }
              }
            }
          }
        },
        "summary": "Update Sip Media Application"
      }
    },
    "/sip-rules/{sipRuleId}": {
      "delete": {
        "operationId": "DeleteSipRule",
        "description": "Deletes a SIP rule. You must disable a SIP rule before you can delete it.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sipRuleId",
            "in": "path",
            "required": true,
            "description": "The SIP rule ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Delete Sip Rule"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetSipRule",
        "description": "Retrieves the details of a SIP rule, such as the rule ID, name, triggers, and target endpoints.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSipRuleResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sipRuleId",
            "in": "path",
            "required": true,
            "description": "The SIP rule ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Sip Rule"
      },
      "put": {
        "operationId": "UpdateSipRule",
        "description": "Updates the details for the specified SIP rule.",
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSipRuleResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "488": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sipRuleId",
            "in": "path",
            "required": true,
            "description": "The SIP rule ID.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Name"],
                "properties": {
                  "Name": {
                    "description": "The new name for the specified SIP rule.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "Disabled": {
                    "description": "The new value specified to indicate whether the rule is disabled.",
                    "type": "boolean"
                  },
                  "TargetApplications": {
                    "description": "The new value of the list of target applications.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SipRuleTargetApplication"
                    },
                    "minItems": 1,
                    "maxItems": 25
                  }
                }
              }
            }
          }
        },
        "summary": "Update Sip Rule"
      }
    },
    "/channels/{channelArn}#scope=app-instance-user-membership&app-instance-user-arn": {
      "get": {
        "operationId": "DescribeChannelMembershipForAppInstanceUser",
        "description": "Returns the details of a channel based on the membership of the <code>AppInstanceUser</code> specified.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeChannelMembershipForAppInstanceUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel to which the user belongs.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "app-instance-user-arn",
            "in": "query",
            "required": true,
            "description": "The ARN of the user in a channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["app-instance-user-membership"],
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            },
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call."
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["app-instance-user-membership"]
            }
          }
        ],
        "summary": "Describe Channel Membership For App Instance User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/channels/{channelArn}#scope=app-instance-user-moderated-channel&app-instance-user-arn": {
      "get": {
        "operationId": "DescribeChannelModeratedByAppInstanceUser",
        "description": "Returns the full details of a channel moderated by the specified <code>AppInstanceUser</code>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeChannelModeratedByAppInstanceUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the moderated channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "app-instance-user-arn",
            "in": "query",
            "required": true,
            "description": "The ARN of the app instance user in the moderated channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["app-instance-user-moderated-channel"],
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            },
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call."
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["app-instance-user-moderated-channel"]
            }
          }
        ],
        "summary": "Describe Channel Moderated By App Instance User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/app-instances/{appInstanceArn}/retention-settings": {
      "get": {
        "operationId": "GetAppInstanceRetentionSettings",
        "description": "Gets the retention settings for an app instance.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppInstanceRetentionSettingsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Get App Instance Retention Settings"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "operationId": "PutAppInstanceRetentionSettings",
        "description": "Sets the amount of time in days that a given app instance retains data.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutAppInstanceRetentionSettingsResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "484": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appInstanceArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["AppInstanceRetentionSettings"],
                "properties": {
                  "AppInstanceRetentionSettings": {
                    "description": "The length of time in days to retain messages.",
                    "type": "object",
                    "properties": {
                      "ChannelRetentionSettings": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ChannelRetentionSettings"
                          },
                          {
                            "description": "The length of time in days to retain a channel."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Put App Instance Retention Settings"
      }
    },
    "/endpoints/messaging-session": {
      "get": {
        "operationId": "GetMessagingSessionEndpoint",
        "description": "The endpoint for the messaging session.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMessagingSessionEndpointResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "summary": "Get Messaging Session Endpoint"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/sip-media-applications/{sipMediaApplicationId}/logging-configuration": {
      "get": {
        "operationId": "GetSipMediaApplicationLoggingConfiguration",
        "description": "Returns the logging configuration for the specified SIP media application.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSipMediaApplicationLoggingConfigurationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sipMediaApplicationId",
            "in": "path",
            "required": true,
            "description": "The ID of the SIP media application.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "summary": "Get Sip Media Application Logging Configuration"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "put": {
        "operationId": "PutSipMediaApplicationLoggingConfiguration",
        "description": "Updates the logging configuration for the specified SIP media application.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutSipMediaApplicationLoggingConfigurationResponse"
                }
              }
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sipMediaApplicationId",
            "in": "path",
            "required": true,
            "description": "The ID of the specified SIP media application",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SipMediaApplicationLoggingConfiguration": {
                    "description": "Logging configuration of the SIP media application.",
                    "type": "object",
                    "properties": {
                      "EnableSipMediaApplicationMessageLogs": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Boolean"
                          },
                          {
                            "description": "Enables application message logs for the SIP media application."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Put Sip Media Application Logging Configuration"
      }
    },
    "/app-instance-users#app-instance-arn": {
      "get": {
        "operationId": "ListAppInstanceUsers",
        "description": "List all <code>AppInstanceUsers</code> created under a single app instance.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAppInstanceUsersResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "app-instance-arn",
            "in": "query",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of requests that you want returned.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token passed by previous API calls until all requested users are returned.",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "minLength": 0,
              "maxLength": 2048,
              "format": "password"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List App Instance Users"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/channels#scope=app-instance-user-memberships": {
      "get": {
        "operationId": "ListChannelMembershipsForAppInstanceUser",
        "description": "Lists all channels that a particular <code>AppInstanceUser</code> is a part of. Only an <code>AppInstanceAdmin</code> can call the API with a user ARN that is not their own.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListChannelMembershipsForAppInstanceUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "app-instance-user-arn",
            "in": "query",
            "required": false,
            "description": "The ARN of the app instance users",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of users that you want returned. ",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token returned from previous API requests until the number of channel memberships is reached.",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "minLength": 0,
              "maxLength": 2048,
              "format": "password"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["app-instance-user-memberships"]
            },
            "description": "Pagination token"
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["app-instance-user-memberships"]
            }
          }
        ],
        "summary": "List Channel Memberships For App Instance User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/channels/{channelArn}/messages": {
      "get": {
        "operationId": "ListChannelMessages",
        "description": "<p>List all the messages in a channel. Returns a paginated list of <code>ChannelMessages</code>. Sorted in descending order by default, based on the creation timestamp.</p> <note> <p>Redacted messages appear in the results as empty, since they are only redacted, not deleted. Deleted messages do not appear in the results. This action always returns the latest version of an edited message.</p> </note>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListChannelMessagesResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "sort-order",
            "in": "query",
            "required": false,
            "description": "The order in which you want messages sorted. Default is Descending, based on time created.",
            "schema": {
              "type": "string",
              "enum": ["ASCENDING", "DESCENDING"]
            }
          },
          {
            "name": "not-before",
            "in": "query",
            "required": false,
            "description": "The initial or starting time stamp for your requested messages. ",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "not-after",
            "in": "query",
            "required": false,
            "description": "The final or ending time stamp for your requested messages.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of messages that you want returned.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token passed by previous API calls until all requested messages are returned.",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "minLength": 0,
              "maxLength": 2048,
              "format": "password"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Channel Messages"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "operationId": "SendChannelMessage",
        "description": "<p>Sends a message to a particular channel that the member is a part of.</p> <note> <p> <code>STANDARD</code> messages can contain 4KB of data and the 1KB of metadata. <code>CONTROL</code> messages can contain 30 bytes of data and no metadata.</p> </note>",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendChannelMessageResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Content", "Type", "Persistence", "ClientRequestToken"],
                "properties": {
                  "Content": {
                    "description": "The content of the message.",
                    "type": "string",
                    "pattern": "[\\s\\S]*",
                    "minLength": 1,
                    "maxLength": 4096,
                    "format": "password"
                  },
                  "Type": {
                    "description": "The type of message, <code>STANDARD</code> or <code>CONTROL</code>.",
                    "type": "string",
                    "enum": ["STANDARD", "CONTROL"]
                  },
                  "Persistence": {
                    "description": "Boolean that controls whether the message is persisted on the back end. Required.",
                    "type": "string",
                    "enum": ["PERSISTENT", "NON_PERSISTENT"]
                  },
                  "Metadata": {
                    "description": "The optional metadata for each message. ",
                    "type": "string",
                    "pattern": ".*",
                    "minLength": 0,
                    "maxLength": 1024,
                    "format": "password"
                  },
                  "ClientRequestToken": {
                    "description": "The <code>Idempotency</code> token for each client request.",
                    "type": "string",
                    "pattern": "[-_a-zA-Z0-9]*",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Send Channel Message"
      }
    },
    "/channels#app-instance-arn": {
      "get": {
        "operationId": "ListChannels",
        "description": "<p>Lists all Channels created under a single Chime App as a paginated list. You can specify filters to narrow results.</p> <p class=\"title\"> <b>Functionality &amp; restrictions</b> </p> <ul> <li> <p>Use privacy = <code>PUBLIC</code> to retrieve all public channels in the account</p> </li> <li> <p>Only an <code>AppInstanceAdmin</code> can set privacy = <code>PRIVATE</code> to list the private channels in an account.</p> </li> </ul>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListChannelsResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "app-instance-arn",
            "in": "query",
            "required": true,
            "description": "The ARN of the app instance.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "privacy",
            "in": "query",
            "required": false,
            "description": "The privacy setting. <code>PUBLIC</code> retrieves all the public channels. <code>PRIVATE</code> retrieves private channels. Only an app instance administrator can retrieve private channels.",
            "schema": {
              "type": "string",
              "enum": ["PUBLIC", "PRIVATE"]
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of channels that you want to return.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token passed by previous API calls until all requested channels are returned.",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "minLength": 0,
              "maxLength": 2048,
              "format": "password"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Channels"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/channels#scope=app-instance-user-moderated-channels": {
      "get": {
        "operationId": "ListChannelsModeratedByAppInstanceUser",
        "description": "A list of the channels moderated by an app instance user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListChannelsModeratedByAppInstanceUserResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "app-instance-user-arn",
            "in": "query",
            "required": false,
            "description": "The ARN of the user in the moderated channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of channels in the request.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token returned from previous API requests until the number of channels moderated by the user is reached.",
            "schema": {
              "type": "string",
              "pattern": ".*",
              "minLength": 0,
              "maxLength": 2048,
              "format": "password"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["app-instance-user-moderated-channels"]
            },
            "description": "Pagination token"
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["app-instance-user-moderated-channels"]
            }
          }
        ],
        "summary": "List Channels Moderated By App Instance User"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/channels/{channelArn}/messages/{messageId}#operation=redact": {
      "post": {
        "operationId": "RedactChannelMessage",
        "description": "Redacts message content, but not metadata. The message exists in the back end, but the action returns null content, and the state shows as redacted.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedactChannelMessageResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel containing the messages that you want to redact.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "description": "The ID of the message being redacted.",
            "schema": {
              "type": "string",
              "pattern": "[-_a-zA-Z0-9]*",
              "minLength": 1,
              "maxLength": 128
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["redact"],
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            },
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call."
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["redact"]
            }
          }
        ],
        "summary": "Redact Channel Message"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/channels/{channelArn}/readMarker": {
      "put": {
        "operationId": "UpdateChannelReadMarker",
        "description": "Sets the timestamp to the point when a user last read messages in a channel.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateChannelReadMarkerResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          }
        ],
        "summary": "Update Channel Read Marker"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/channels/{channelArn}/memberships#operation=batch-create": {
      "post": {
        "operationId": "BatchCreateChannelMembership",
        "description": "Adds a specified number of users to a channel.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCreateChannelMembershipResponse"
                }
              }
            }
          },
          "480": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          },
          "481": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "483": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "484": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channelArn",
            "in": "path",
            "required": true,
            "description": "The ARN of the channel to which you're adding users.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "x-amz-chime-bearer",
            "in": "header",
            "required": false,
            "description": "The <code>AppInstanceUserArn</code> of the user that makes the API call.",
            "schema": {
              "type": "string",
              "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
              "minLength": 5,
              "maxLength": 1600
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["batch-create"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["MemberArns"],
                "properties": {
                  "Type": {
                    "description": "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.",
                    "type": "string",
                    "enum": ["DEFAULT", "HIDDEN"]
                  },
                  "MemberArns": {
                    "description": "The ARNs of the members you want to add to the channel.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ChimeArn"
                    },
                    "minItems": 1,
                    "maxItems": 100
                  }
                }
              }
            }
          }
        },
        "summary": "Batch Create Channel Membership"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/media-capture-pipelines": {
      "post": {
        "operationId": "CreateMediaCapturePipeline",
        "description": "Creates a media capture pipeline.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMediaCapturePipelineResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["SourceType", "SourceArn", "SinkType", "SinkArn"],
                "properties": {
                  "SourceType": {
                    "description": "Source type from which the media artifacts will be captured. A Chime SDK Meeting is the only supported source.",
                    "type": "string",
                    "enum": ["ChimeSdkMeeting"]
                  },
                  "SourceArn": {
                    "description": "ARN of the source from which the media artifacts are captured.",
                    "type": "string",
                    "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
                    "minLength": 1,
                    "maxLength": 1024,
                    "format": "password"
                  },
                  "SinkType": {
                    "description": "Destination type to which the media artifacts are saved. You must use an S3 bucket. ",
                    "type": "string",
                    "enum": ["S3Bucket"]
                  },
                  "SinkArn": {
                    "description": "The ARN of the sink type.",
                    "type": "string",
                    "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
                    "minLength": 1,
                    "maxLength": 1024,
                    "format": "password"
                  },
                  "ClientRequestToken": {
                    "description": "The token assigned to the client making the pipeline request.",
                    "type": "string",
                    "pattern": "[-_a-zA-Z0-9]*",
                    "minLength": 2,
                    "maxLength": 64,
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "summary": "Create Media Capture Pipeline"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListMediaCapturePipelines",
        "description": "Returns a list of media capture pipelines.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMediaCapturePipelinesResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "next-token",
            "in": "query",
            "required": false,
            "description": "The token used to retrieve the next page of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max-results",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to return in a single call. Valid Range: 1 - 99.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "NextToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination token",
            "required": false
          }
        ],
        "summary": "List Media Capture Pipelines"
      }
    },
    "/media-capture-pipelines/{mediaPipelineId}": {
      "delete": {
        "operationId": "DeleteMediaCapturePipeline",
        "description": "Deletes the media capture pipeline.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "mediaPipelineId",
            "in": "path",
            "required": true,
            "description": "The ID of the media capture pipeline being deleted. ",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "summary": "Delete Media Capture Pipeline"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetMediaCapturePipeline",
        "description": "Gets an existing media capture pipeline.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMediaCapturePipelineResponse"
                }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "mediaPipelineId",
            "in": "path",
            "required": true,
            "description": "The ID of the pipeline that you want to get.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          }
        ],
        "summary": "Get Media Capture Pipeline"
      }
    },
    "/phone-number-countries#product-type": {
      "get": {
        "operationId": "ListSupportedPhoneNumberCountries",
        "description": "Lists supported phone number countries.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSupportedPhoneNumberCountriesResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "product-type",
            "in": "query",
            "required": true,
            "description": "The phone number product type.",
            "schema": {
              "type": "string",
              "enum": ["BusinessCalling", "VoiceConnector", "SipMediaApplicationDialIn"]
            }
          }
        ],
        "summary": "List Supported Phone Number Countries"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/meetings/{meetingId}/transcription#operation=start": {
      "post": {
        "operationId": "StartMeetingTranscription",
        "description": "Starts transcription for the specified <code>meetingId</code>. ",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartMeetingTranscriptionResponse"
                }
              }
            }
          },
          "480": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486": {
            "description": "UnprocessableEntityException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "488": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the meeting being transcribed.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["start"]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["TranscriptionConfiguration"],
                "properties": {
                  "TranscriptionConfiguration": {
                    "description": "The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.",
                    "type": "object",
                    "properties": {
                      "EngineTranscribeSettings": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/EngineTranscribeSettings"
                          },
                          {
                            "description": "The transcription configuration settings passed to Amazon Transcribe."
                          }
                        ]
                      },
                      "EngineTranscribeMedicalSettings": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/EngineTranscribeMedicalSettings"
                          },
                          {
                            "description": "The transcription configuration settings passed to Amazon Transcribe Medical."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Start Meeting Transcription"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/meetings/{meetingId}/transcription#operation=stop": {
      "post": {
        "operationId": "StopMeetingTranscription",
        "description": "Stops transcription for the specified <code>meetingId</code>.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopMeetingTranscriptionResponse"
                }
              }
            }
          },
          "480": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnprocessableEntityException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the meeting for which you stop transcription.",
            "schema": {
              "type": "string",
              "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["stop"]
            }
          }
        ],
        "summary": "Stop Meeting Transcription"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/sip-media-applications/{sipMediaApplicationId}/calls/{transactionId}": {
      "post": {
        "operationId": "UpdateSipMediaApplicationCall",
        "description": "Allows you to trigger a Lambda function at any time while a call is active, and replace the current actions with new actions returned by the invocation.",
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSipMediaApplicationCallResponse"
                }
              }
            }
          },
          "480": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "ForbiddenException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenException"
                }
              }
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLimitExceededException"
                }
              }
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottledClientException"
                }
              }
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedClientException"
                }
              }
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableException"
                }
              }
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceFailureException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sipMediaApplicationId",
            "in": "path",
            "required": true,
            "description": "The ID of the SIP media application handling the call.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "description": "The ID of the call transaction.",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Arguments"],
                "properties": {
                  "Arguments": {
                    "description": "Arguments made available to the Lambda function as part of the <code>CALL_UPDATE_REQUESTED</code> event. Can contain 0-20 key-value pairs.",
                    "type": "object",
                    "minProperties": 0,
                    "maxProperties": 20,
                    "additionalProperties": {
                      "$ref": "#/components/schemas/SensitiveString"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update Sip Media Application Call"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    }
  },
  "components": {
    "parameters": {
      "X-Amz-Content-Sha256": {
        "name": "X-Amz-Content-Sha256",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Date": {
        "name": "X-Amz-Date",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Algorithm": {
        "name": "X-Amz-Algorithm",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Credential": {
        "name": "X-Amz-Credential",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Security-Token": {
        "name": "X-Amz-Security-Token",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Signature": {
        "name": "X-Amz-Signature",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-SignedHeaders": {
        "name": "X-Amz-SignedHeaders",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      }
    },
    "securitySchemes": {
      "hmac": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Amazon Signature authorization v4",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "AssociatePhoneNumberWithUserResponse": {
        "type": "object",
        "properties": {}
      },
      "UnauthorizedClientException": {},
      "NotFoundException": {},
      "ForbiddenException": {},
      "BadRequestException": {},
      "AccessDeniedException": {},
      "ThrottledClientException": {},
      "ServiceUnavailableException": {},
      "ServiceFailureException": {},
      "AssociatePhoneNumbersWithVoiceConnectorResponse": {
        "type": "object",
        "properties": {
          "PhoneNumberErrors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberErrorList"
              },
              {
                "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "E164PhoneNumber": {
        "type": "string",
        "pattern": "^\\+?[1-9]\\d{1,14}$",
        "format": "password"
      },
      "AssociatePhoneNumbersWithVoiceConnectorGroupResponse": {
        "type": "object",
        "properties": {
          "PhoneNumberErrors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberErrorList"
              },
              {
                "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "AssociateSigninDelegateGroupsWithAccountResponse": {
        "type": "object",
        "properties": {}
      },
      "SigninDelegateGroup": {
        "type": "object",
        "properties": {
          "GroupName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The group name."
              }
            ]
          }
        },
        "description": "An Active Directory (AD) group whose members are granted permission to act as delegates."
      },
      "BatchCreateAttendeeResponse": {
        "type": "object",
        "properties": {
          "Attendees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttendeeList"
              },
              {
                "description": "The attendee information, including attendees IDs and join tokens."
              }
            ]
          },
          "Errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchCreateAttendeeErrorList"
              },
              {
                "description": "If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "CreateAttendeeRequestItem": {
        "type": "object",
        "required": ["ExternalUserId"],
        "properties": {
          "ExternalUserId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalUserIdType"
              },
              {
                "description": "The Amazon Chime SDK external user ID. Links the attendee to an identity managed by a builder application."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttendeeTagList"
              },
              {
                "description": "The tag key-value pairs."
              }
            ]
          }
        },
        "description": "The Amazon Chime SDK attendee fields to create, used with the BatchCreateAttendee action."
      },
      "ResourceLimitExceededException": {},
      "BatchCreateRoomMembershipResponse": {
        "type": "object",
        "properties": {
          "Errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberErrorList"
              },
              {
                "description": "If the action fails for one or more of the member IDs in the request, a list of the member IDs is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "MembershipItem": {
        "type": "object",
        "properties": {
          "MemberId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The member ID."
              }
            ]
          },
          "Role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoomMembershipRole"
              },
              {
                "description": "The member role."
              }
            ]
          }
        },
        "description": "Membership details, such as member ID and member role."
      },
      "BatchDeletePhoneNumberResponse": {
        "type": "object",
        "properties": {
          "PhoneNumberErrors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberErrorList"
              },
              {
                "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "String": {
        "type": "string"
      },
      "BatchSuspendUserResponse": {
        "type": "object",
        "properties": {
          "UserErrors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserErrorList"
              },
              {
                "description": "If the <a>BatchSuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "NonEmptyString": {
        "type": "string",
        "pattern": ".*\\S.*"
      },
      "BatchUnsuspendUserResponse": {
        "type": "object",
        "properties": {
          "UserErrors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserErrorList"
              },
              {
                "description": "If the <a>BatchUnsuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "BatchUpdatePhoneNumberResponse": {
        "type": "object",
        "properties": {
          "PhoneNumberErrors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberErrorList"
              },
              {
                "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "UpdatePhoneNumberRequestItem": {
        "type": "object",
        "required": ["PhoneNumberId"],
        "properties": {
          "PhoneNumberId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The phone number ID to update."
              }
            ]
          },
          "ProductType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberProductType"
              },
              {
                "description": "The product type to update."
              }
            ]
          },
          "CallingName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallingName"
              },
              {
                "description": "The outbound calling name to update."
              }
            ]
          }
        },
        "description": "The phone number ID, product type, or calling name fields to update, used with the <a>BatchUpdatePhoneNumber</a> and <a>UpdatePhoneNumber</a> actions."
      },
      "BatchUpdateUserResponse": {
        "type": "object",
        "properties": {
          "UserErrors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserErrorList"
              },
              {
                "description": "If the <a>BatchUpdateUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "UpdateUserRequestItem": {
        "type": "object",
        "required": ["UserId"],
        "properties": {
          "UserId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The user ID."
              }
            ]
          },
          "LicenseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/License"
              },
              {
                "description": "The user license type."
              }
            ]
          },
          "UserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserType"
              },
              {
                "description": "The user type."
              }
            ]
          },
          "AlexaForBusinessMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlexaForBusinessMetadata"
              },
              {
                "description": "The Alexa for Business metadata."
              }
            ]
          }
        },
        "description": "The user ID and user fields to update, used with the <a>BatchUpdateUser</a> action."
      },
      "CreateAccountResponse": {
        "type": "object",
        "properties": {
          "Account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Account"
              },
              {
                "description": "The Amazon Chime account details."
              }
            ],
            "$ref": "#/components/schemas/Account"
          }
        }
      },
      "CreateAttendeeResponse": {
        "type": "object",
        "properties": {
          "Attendee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Attendee"
              },
              {
                "description": "The attendee information, including attendee ID and join token."
              }
            ]
          }
        }
      },
      "Tag": {
        "type": "object",
        "required": ["Key", "Value"],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagKey"
              },
              {
                "description": "The key of the tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagValue"
              },
              {
                "description": "The value of the tag."
              }
            ]
          }
        },
        "description": "Describes a tag applied to a resource."
      },
      "CreateBotResponse": {
        "type": "object",
        "properties": {
          "Bot": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bot"
              },
              {
                "description": "The bot details."
              }
            ]
          }
        }
      },
      "CreateMeetingResponse": {
        "type": "object",
        "properties": {
          "Meeting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Meeting"
              },
              {
                "description": "The meeting information, including the meeting ID and <code>MediaPlacement</code>."
              }
            ]
          }
        }
      },
      "Arn": {
        "type": "string",
        "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
        "minLength": 1,
        "maxLength": 1024,
        "format": "password"
      },
      "CreateMeetingWithAttendeesResponse": {
        "type": "object",
        "properties": {
          "Meeting": {
            "$ref": "#/components/schemas/Meeting"
          },
          "Attendees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttendeeList"
              },
              {
                "description": "The attendee information, including attendees IDs and join tokens."
              }
            ]
          },
          "Errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchCreateAttendeeErrorList"
              },
              {
                "description": "If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "CreatePhoneNumberOrderResponse": {
        "type": "object",
        "properties": {
          "PhoneNumberOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberOrder"
              },
              {
                "description": "The phone number order details."
              }
            ]
          }
        }
      },
      "CreateProxySessionResponse": {
        "type": "object",
        "properties": {
          "ProxySession": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProxySession"
              },
              {
                "description": "The proxy session details."
              }
            ]
          }
        }
      },
      "Capability": {
        "type": "string",
        "enum": ["Voice", "SMS"]
      },
      "Country": {
        "type": "string",
        "pattern": "^$|^[A-Z]{2,2}$"
      },
      "AreaCode": {
        "type": "string",
        "pattern": "^$|^[0-9]{3,3}$"
      },
      "CreateRoomResponse": {
        "type": "object",
        "properties": {
          "Room": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Room"
              },
              {
                "description": "The room details."
              }
            ]
          }
        }
      },
      "CreateRoomMembershipResponse": {
        "type": "object",
        "properties": {
          "RoomMembership": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoomMembership"
              },
              {
                "description": "The room membership details."
              }
            ]
          }
        }
      },
      "ConflictException": {},
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "User": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "CreateVoiceConnectorResponse": {
        "type": "object",
        "properties": {
          "VoiceConnector": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnector"
              },
              {
                "description": "The Amazon Chime Voice Connector details."
              }
            ]
          }
        }
      },
      "CreateVoiceConnectorGroupResponse": {
        "type": "object",
        "properties": {
          "VoiceConnectorGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorGroup"
              },
              {
                "description": "The Amazon Chime Voice Connector group details."
              }
            ]
          }
        }
      },
      "VoiceConnectorItem": {
        "type": "object",
        "required": ["VoiceConnectorId", "Priority"],
        "properties": {
          "VoiceConnectorId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The Amazon Chime Voice Connector ID."
              }
            ]
          },
          "Priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorItemPriority"
              },
              {
                "description": "The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first. "
              }
            ]
          }
        },
        "description": "For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3 <code>VoiceConnectorItems</code> per Amazon Chime Voice Connector group."
      },
      "DeleteAccountResponse": {
        "type": "object",
        "properties": {}
      },
      "UnprocessableEntityException": {},
      "SensitiveString": {
        "type": "string",
        "format": "password"
      },
      "DisassociatePhoneNumberFromUserResponse": {
        "type": "object",
        "properties": {}
      },
      "DisassociatePhoneNumbersFromVoiceConnectorResponse": {
        "type": "object",
        "properties": {
          "PhoneNumberErrors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberErrorList"
              },
              {
                "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "DisassociatePhoneNumbersFromVoiceConnectorGroupResponse": {
        "type": "object",
        "properties": {
          "PhoneNumberErrors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberErrorList"
              },
              {
                "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "DisassociateSigninDelegateGroupsFromAccountResponse": {
        "type": "object",
        "properties": {}
      },
      "GetAccountResponse": {
        "type": "object",
        "properties": {
          "Account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Account"
              },
              {
                "description": "The Amazon Chime account details."
              }
            ],
            "$ref": "#/components/schemas/Account"
          }
        }
      },
      "GetAccountSettingsResponse": {
        "type": "object",
        "properties": {
          "AccountSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountSettings"
              },
              {
                "description": "The Amazon Chime account settings."
              }
            ]
          }
        }
      },
      "GetAttendeeResponse": {
        "type": "object",
        "properties": {
          "Attendee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Attendee"
              },
              {
                "description": "The Amazon Chime SDK attendee information."
              }
            ]
          }
        }
      },
      "GetBotResponse": {
        "type": "object",
        "properties": {
          "Bot": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bot"
              },
              {
                "description": "The chat bot details."
              }
            ]
          }
        }
      },
      "GetEventsConfigurationResponse": {
        "type": "object",
        "properties": {
          "EventsConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventsConfiguration"
              },
              {
                "description": "The events configuration details."
              }
            ]
          }
        }
      },
      "GetGlobalSettingsResponse": {
        "type": "object",
        "properties": {
          "BusinessCalling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessCallingSettings"
              },
              {
                "description": "The Amazon Chime Business Calling settings."
              }
            ]
          },
          "VoiceConnector": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorSettings"
              },
              {
                "description": "The Amazon Chime Voice Connector settings."
              }
            ]
          }
        }
      },
      "GetMeetingResponse": {
        "type": "object",
        "properties": {
          "Meeting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Meeting"
              },
              {
                "description": "The Amazon Chime SDK meeting information."
              }
            ]
          }
        }
      },
      "GetPhoneNumberResponse": {
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumber"
              },
              {
                "description": "The phone number details."
              }
            ]
          }
        }
      },
      "GetPhoneNumberOrderResponse": {
        "type": "object",
        "properties": {
          "PhoneNumberOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberOrder"
              },
              {
                "description": "The phone number order details."
              }
            ]
          }
        }
      },
      "GetPhoneNumberSettingsResponse": {
        "type": "object",
        "properties": {
          "CallingName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallingName"
              },
              {
                "description": "The default outbound calling name for the account."
              }
            ]
          },
          "CallingNameUpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The updated outbound calling name timestamp, in ISO 8601 format."
              }
            ]
          }
        }
      },
      "GetProxySessionResponse": {
        "type": "object",
        "properties": {
          "ProxySession": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProxySession"
              },
              {
                "description": "The proxy session details."
              }
            ]
          }
        }
      },
      "GetRetentionSettingsResponse": {
        "type": "object",
        "properties": {
          "RetentionSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RetentionSettings"
              },
              {
                "description": "The retention settings."
              }
            ]
          },
          "InitiateDeletionTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format."
              }
            ]
          }
        }
      },
      "GetRoomResponse": {
        "type": "object",
        "properties": {
          "Room": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Room"
              },
              {
                "description": "The room details."
              }
            ]
          }
        }
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "description": "The user details."
              }
            ]
          }
        }
      },
      "GetUserSettingsResponse": {
        "type": "object",
        "properties": {
          "UserSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSettings"
              },
              {
                "description": "The user settings."
              }
            ]
          }
        }
      },
      "GetVoiceConnectorResponse": {
        "type": "object",
        "properties": {
          "VoiceConnector": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnector"
              },
              {
                "description": "The Amazon Chime Voice Connector details."
              }
            ]
          }
        }
      },
      "GetVoiceConnectorEmergencyCallingConfigurationResponse": {
        "type": "object",
        "properties": {
          "EmergencyCallingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmergencyCallingConfiguration"
              },
              {
                "description": "The emergency calling configuration details."
              }
            ]
          }
        }
      },
      "GetVoiceConnectorGroupResponse": {
        "type": "object",
        "properties": {
          "VoiceConnectorGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorGroup"
              },
              {
                "description": "The Amazon Chime Voice Connector group details."
              }
            ]
          }
        }
      },
      "GetVoiceConnectorLoggingConfigurationResponse": {
        "type": "object",
        "properties": {
          "LoggingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoggingConfiguration"
              },
              {
                "description": "The logging configuration details."
              }
            ]
          }
        }
      },
      "GetVoiceConnectorOriginationResponse": {
        "type": "object",
        "properties": {
          "Origination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Origination"
              },
              {
                "description": "The origination setting details."
              }
            ]
          }
        }
      },
      "GetVoiceConnectorProxyResponse": {
        "type": "object",
        "properties": {
          "Proxy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Proxy"
              },
              {
                "description": "The proxy configuration details."
              }
            ]
          }
        }
      },
      "GetVoiceConnectorStreamingConfigurationResponse": {
        "type": "object",
        "properties": {
          "StreamingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StreamingConfiguration"
              },
              {
                "description": "The streaming configuration details."
              }
            ]
          }
        }
      },
      "GetVoiceConnectorTerminationResponse": {
        "type": "object",
        "properties": {
          "Termination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Termination"
              },
              {
                "description": "The termination setting details."
              }
            ]
          }
        }
      },
      "GetVoiceConnectorTerminationHealthResponse": {
        "type": "object",
        "properties": {
          "TerminationHealth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TerminationHealth"
              },
              {
                "description": "The termination health details."
              }
            ]
          }
        }
      },
      "InviteUsersResponse": {
        "type": "object",
        "properties": {
          "Invites": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InviteList"
              },
              {
                "description": "The email invitation details."
              }
            ]
          }
        }
      },
      "EmailAddress": {
        "type": "string",
        "pattern": ".+@.+\\..+",
        "format": "password"
      },
      "ListAccountsResponse": {
        "type": "object",
        "properties": {
          "Accounts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountList"
              },
              {
                "description": "List of Amazon Chime accounts and account details."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListAttendeeTagsResponse": {
        "type": "object",
        "properties": {
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagList"
              },
              {
                "description": "A list of tag key-value pairs."
              }
            ]
          }
        }
      },
      "ListAttendeesResponse": {
        "type": "object",
        "properties": {
          "Attendees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttendeeList"
              },
              {
                "description": "The Amazon Chime SDK attendee information."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListBotsResponse": {
        "type": "object",
        "properties": {
          "Bots": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BotList"
              },
              {
                "description": "List of bots and bot details."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListMeetingTagsResponse": {
        "type": "object",
        "properties": {
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagList"
              },
              {
                "description": "A list of tag key-value pairs."
              }
            ]
          }
        }
      },
      "ListMeetingsResponse": {
        "type": "object",
        "properties": {
          "Meetings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingList"
              },
              {
                "description": "The Amazon Chime SDK meeting information."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListPhoneNumberOrdersResponse": {
        "type": "object",
        "properties": {
          "PhoneNumberOrders": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberOrderList"
              },
              {
                "description": "The phone number order details."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListPhoneNumbersResponse": {
        "type": "object",
        "properties": {
          "PhoneNumbers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberList"
              },
              {
                "description": "The phone number details."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListProxySessionsResponse": {
        "type": "object",
        "properties": {
          "ProxySessions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProxySessions"
              },
              {
                "description": "The proxy session details."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextTokenString"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListRoomMembershipsResponse": {
        "type": "object",
        "properties": {
          "RoomMemberships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoomMembershipList"
              },
              {
                "description": "The room membership details."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListRoomsResponse": {
        "type": "object",
        "properties": {
          "Rooms": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoomList"
              },
              {
                "description": "The room details."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListTagsForResourceResponse": {
        "type": "object",
        "properties": {
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagList"
              },
              {
                "description": "A list of tag-key value pairs."
              }
            ]
          }
        }
      },
      "ListUsersResponse": {
        "type": "object",
        "properties": {
          "Users": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserList"
              },
              {
                "description": "List of users and user details."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListVoiceConnectorGroupsResponse": {
        "type": "object",
        "properties": {
          "VoiceConnectorGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorGroupList"
              },
              {
                "description": "The details of the Amazon Chime Voice Connector groups."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListVoiceConnectorTerminationCredentialsResponse": {
        "type": "object",
        "properties": {
          "Usernames": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveStringList"
              },
              {
                "description": "A list of user names."
              }
            ]
          }
        }
      },
      "ListVoiceConnectorsResponse": {
        "type": "object",
        "properties": {
          "VoiceConnectors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorList"
              },
              {
                "description": "The details of the Amazon Chime Voice Connectors."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "LogoutUserResponse": {
        "type": "object",
        "properties": {}
      },
      "PutEventsConfigurationResponse": {
        "type": "object",
        "properties": {
          "EventsConfiguration": {
            "$ref": "#/components/schemas/EventsConfiguration"
          }
        }
      },
      "PutRetentionSettingsResponse": {
        "type": "object",
        "properties": {
          "RetentionSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RetentionSettings"
              },
              {
                "description": "The retention settings."
              }
            ]
          },
          "InitiateDeletionTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format."
              }
            ]
          }
        }
      },
      "RoomRetentionSettings": {
        "type": "object",
        "properties": {
          "RetentionDays": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RetentionDays"
              },
              {
                "description": "The number of days for which to retain chat room messages."
              }
            ]
          }
        },
        "description": "The retention settings that determine how long to retain chat room messages for an Amazon Chime Enterprise account."
      },
      "ConversationRetentionSettings": {
        "type": "object",
        "properties": {
          "RetentionDays": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RetentionDays"
              },
              {
                "description": "The number of days for which to retain chat conversation messages."
              }
            ]
          }
        },
        "description": "The retention settings that determine how long to retain chat conversation messages for an Amazon Chime Enterprise account."
      },
      "PutVoiceConnectorEmergencyCallingConfigurationResponse": {
        "type": "object",
        "properties": {
          "EmergencyCallingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmergencyCallingConfiguration"
              },
              {
                "description": "The emergency calling configuration details."
              }
            ]
          }
        }
      },
      "DNISEmergencyCallingConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DNISEmergencyCallingConfiguration"
        }
      },
      "PutVoiceConnectorLoggingConfigurationResponse": {
        "type": "object",
        "properties": {
          "LoggingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoggingConfiguration"
              },
              {
                "description": "The updated logging configuration details."
              }
            ]
          }
        }
      },
      "Boolean": {
        "type": "boolean"
      },
      "PutVoiceConnectorOriginationResponse": {
        "type": "object",
        "properties": {
          "Origination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Origination"
              },
              {
                "description": "The updated origination setting details."
              }
            ]
          }
        }
      },
      "OriginationRouteList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OriginationRoute"
        }
      },
      "PutVoiceConnectorProxyResponse": {
        "type": "object",
        "properties": {
          "Proxy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Proxy"
              },
              {
                "description": "The proxy configuration details."
              }
            ]
          }
        }
      },
      "PutVoiceConnectorStreamingConfigurationResponse": {
        "type": "object",
        "properties": {
          "StreamingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StreamingConfiguration"
              },
              {
                "description": "The updated streaming configuration details."
              }
            ]
          }
        }
      },
      "DataRetentionInHours": {
        "type": "integer",
        "minimum": 0
      },
      "StreamingNotificationTargetList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StreamingNotificationTarget"
        },
        "minItems": 1,
        "maxItems": 3
      },
      "PutVoiceConnectorTerminationResponse": {
        "type": "object",
        "properties": {
          "Termination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Termination"
              },
              {
                "description": "The updated termination setting details."
              }
            ]
          }
        }
      },
      "CpsLimit": {
        "type": "integer",
        "minimum": 1
      },
      "CallingRegionList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CallingRegion"
        }
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/String"
        }
      },
      "Credential": {
        "type": "object",
        "properties": {
          "Username": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The RFC2617 compliant user name associated with the SIP credentials, in US-ASCII format."
              }
            ]
          },
          "Password": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The RFC2617 compliant password associated with the SIP credentials, in US-ASCII format."
              }
            ]
          }
        },
        "description": "The SIP credentials used to authenticate requests to your Amazon Chime Voice Connector."
      },
      "RedactConversationMessageResponse": {
        "type": "object",
        "properties": {}
      },
      "RedactRoomMessageResponse": {
        "type": "object",
        "properties": {}
      },
      "RegenerateSecurityTokenResponse": {
        "type": "object",
        "properties": {
          "Bot": {
            "$ref": "#/components/schemas/Bot"
          }
        }
      },
      "ResetPersonalPINResponse": {
        "type": "object",
        "properties": {
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "description": "The user details and new personal meeting PIN."
              }
            ]
          }
        }
      },
      "RestorePhoneNumberResponse": {
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumber"
              },
              {
                "description": "The phone number details."
              }
            ]
          }
        }
      },
      "SearchAvailablePhoneNumbersResponse": {
        "type": "object",
        "properties": {
          "E164PhoneNumbers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/E164PhoneNumberList"
              },
              {
                "description": "List of phone numbers, in E.164 format."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token used to retrieve the next page of search results."
              }
            ]
          }
        }
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "UpdateAccountResponse": {
        "type": "object",
        "properties": {
          "Account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Account"
              },
              {
                "description": "The updated Amazon Chime account details."
              }
            ],
            "$ref": "#/components/schemas/Account"
          }
        }
      },
      "UpdateAccountSettingsResponse": {
        "type": "object",
        "properties": {}
      },
      "UpdateBotResponse": {
        "type": "object",
        "properties": {
          "Bot": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bot"
              },
              {
                "description": "The updated bot details."
              }
            ]
          }
        }
      },
      "UpdatePhoneNumberResponse": {
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumber"
              },
              {
                "description": "The updated phone number details."
              }
            ]
          }
        }
      },
      "UpdateProxySessionResponse": {
        "type": "object",
        "properties": {
          "ProxySession": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProxySession"
              },
              {
                "description": "The proxy session details."
              }
            ]
          }
        }
      },
      "UpdateRoomResponse": {
        "type": "object",
        "properties": {
          "Room": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Room"
              },
              {
                "description": "The room details."
              }
            ]
          }
        }
      },
      "UpdateRoomMembershipResponse": {
        "type": "object",
        "properties": {
          "RoomMembership": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoomMembership"
              },
              {
                "description": "The room membership details."
              }
            ]
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "description": "The updated user details."
              }
            ]
          }
        }
      },
      "TelephonySettings": {
        "type": "object",
        "required": ["InboundCalling", "OutboundCalling", "SMS"],
        "properties": {
          "InboundCalling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "Allows or denies inbound calling."
              }
            ]
          },
          "OutboundCalling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "Allows or denies outbound calling."
              }
            ]
          },
          "SMS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "Allows or denies SMS messaging."
              }
            ]
          }
        },
        "description": "Settings that allow management of telephony permissions for an Amazon Chime user, such as inbound and outbound calling and text messaging."
      },
      "UpdateVoiceConnectorResponse": {
        "type": "object",
        "properties": {
          "VoiceConnector": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnector"
              },
              {
                "description": "The updated Amazon Chime Voice Connector details."
              }
            ]
          }
        }
      },
      "UpdateVoiceConnectorGroupResponse": {
        "type": "object",
        "properties": {
          "VoiceConnectorGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorGroup"
              },
              {
                "description": "The updated Amazon Chime Voice Connector group details."
              }
            ]
          }
        }
      },
      "AccountType": {
        "type": "string",
        "enum": ["Team", "EnterpriseDirectory", "EnterpriseLWA", "EnterpriseOIDC"]
      },
      "Iso8601Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "License": {
        "type": "string",
        "enum": ["Basic", "Plus", "Pro", "ProTrial"]
      },
      "LicenseList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/License"
        }
      },
      "SigninDelegateGroupList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SigninDelegateGroup"
        }
      },
      "Account": {
        "type": "object",
        "required": ["AwsAccountId", "AccountId", "Name"],
        "properties": {
          "AwsAccountId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The AWS account ID."
              }
            ]
          },
          "AccountId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The Amazon Chime account ID."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The Amazon Chime account name."
              }
            ]
          },
          "AccountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              },
              {
                "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The Amazon Chime account creation timestamp, in ISO 8601 format."
              }
            ]
          },
          "DefaultLicense": {
            "allOf": [
              {
                "$ref": "#/components/schemas/License"
              },
              {
                "description": "The default license for the Amazon Chime account."
              }
            ]
          },
          "SupportedLicenses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LicenseList"
              },
              {
                "description": "Supported licenses for the Amazon Chime account."
              }
            ]
          },
          "SigninDelegateGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SigninDelegateGroupList"
              },
              {
                "description": "The sign-in delegate groups associated with the account."
              }
            ]
          },
          "AccountStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountStatus"
              },
              {
                "description": "The status of the account."
              }
            ]
          }
        },
        "description": "The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts."
      },
      "AccountList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Account"
        }
      },
      "AccountSettings": {
        "type": "object",
        "properties": {
          "DisableRemoteControl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "Setting that stops or starts remote control of shared screens during meetings."
              }
            ]
          },
          "EnableDialOut": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>."
              }
            ]
          }
        },
        "description": "Settings related to the Amazon Chime account. This includes settings that start or stop remote control of shared screens, or start or stop the dial-out option in the Amazon Chime web application. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>."
      },
      "AlexaForBusinessMetadata": {
        "type": "object",
        "properties": {
          "IsAlexaForBusinessEnabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "Starts or stops Alexa for Business."
              }
            ]
          },
          "AlexaForBusinessRoomArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The ARN of the room resource."
              }
            ]
          }
        },
        "description": "The Alexa for Business metadata associated with an Amazon Chime user, used to integrate Alexa for Business with a device."
      },
      "Alpha2CountryCode": {
        "type": "string",
        "pattern": "[A-Z]{2}"
      },
      "E164PhoneNumberList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/E164PhoneNumber"
        }
      },
      "NullableBoolean": {
        "type": "boolean"
      },
      "PhoneNumberErrorList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PhoneNumberError"
        }
      },
      "ExternalUserIdType": {
        "type": "string",
        "minLength": 2,
        "maxLength": 64,
        "format": "password"
      },
      "GuidString": {
        "type": "string",
        "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
      },
      "JoinTokenString": {
        "type": "string",
        "minLength": 2,
        "maxLength": 2048,
        "format": "password",
        "pattern": "^[a-zA-Z0-9+/]+$"
      },
      "Attendee": {
        "type": "object",
        "properties": {
          "ExternalUserId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalUserIdType"
              },
              {
                "description": "The Amazon Chime SDK external user ID. Links the attendee to an identity managed by a builder application."
              }
            ]
          },
          "AttendeeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GuidString"
              },
              {
                "description": "The Amazon Chime SDK attendee ID."
              }
            ]
          },
          "JoinToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JoinTokenString"
              },
              {
                "description": "The join token used by the Amazon Chime SDK attendee."
              }
            ]
          }
        },
        "description": "<p>An Amazon Chime SDK meeting attendee. Includes a unique <code>AttendeeId</code> and <code>JoinToken</code>. The <code>JoinToken</code> allows a client to authenticate and join as the specified attendee. The <code>JoinToken</code> expires when the meeting ends or when <a>DeleteAttendee</a> is called. After that, the attendee is unable to join the meeting.</p> <p>We recommend securely transferring each <code>JoinToken</code> from your server application to the client so that no other client has access to the token except for the one authorized to represent the attendee.</p>"
      },
      "AttendeeList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Attendee"
        }
      },
      "AttendeeTagList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Tag"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "CreateAttendeeError": {
        "type": "object",
        "properties": {
          "ExternalUserId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalUserIdType"
              },
              {
                "description": "The Amazon Chime SDK external user ID. Links the attendee to an identity managed by a builder application."
              }
            ]
          },
          "ErrorCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The error code."
              }
            ]
          },
          "ErrorMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The error message."
              }
            ]
          }
        },
        "description": "The list of errors returned when errors are encountered during the BatchCreateAttendee and CreateAttendee actions. This includes external user IDs, error codes, and error messages."
      },
      "BatchCreateAttendeeErrorList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CreateAttendeeError"
        }
      },
      "MemberErrorList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MemberError"
        }
      },
      "UserErrorList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserError"
        }
      },
      "BotType": {
        "type": "string",
        "enum": ["ChatBot"]
      },
      "Bot": {
        "type": "object",
        "properties": {
          "BotId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The bot ID."
              }
            ]
          },
          "UserId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The unique ID for the bot user."
              }
            ]
          },
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The bot display name."
              }
            ]
          },
          "BotType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BotType"
              },
              {
                "description": "The bot type."
              }
            ]
          },
          "Disabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NullableBoolean"
              },
              {
                "description": "When true, the bot is stopped from running in your account."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The bot creation timestamp, in ISO 8601 format."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The updated bot timestamp, in ISO 8601 format."
              }
            ]
          },
          "BotEmail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The bot email address."
              }
            ]
          },
          "SecurityToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The security token used to authenticate Amazon Chime with the outgoing event endpoint."
              }
            ]
          }
        },
        "description": "A resource that allows Enterprise account administrators to configure an interface to receive events from Amazon Chime."
      },
      "BotList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Bot"
        }
      },
      "BusinessCallingSettings": {
        "type": "object",
        "properties": {
          "CdrBucket": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The Amazon S3 bucket designated for call detail record storage."
              }
            ]
          }
        },
        "description": "The Amazon Chime Business Calling settings for the administrator's AWS account. Includes any Amazon S3 buckets designated for storing call detail records."
      },
      "CallingName": {
        "type": "string",
        "pattern": "^$|^[a-zA-Z0-9 ]{2,15}$",
        "format": "password"
      },
      "CallingNameStatus": {
        "type": "string",
        "enum": ["Unassigned", "UpdateInProgress", "UpdateSucceeded", "UpdateFailed"]
      },
      "CallingRegion": {
        "type": "string"
      },
      "CapabilityList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Capability"
        }
      },
      "RetentionDays": {
        "type": "integer",
        "minimum": 1,
        "maximum": 5475
      },
      "ExternalMeetingIdType": {
        "type": "string",
        "minLength": 2,
        "maxLength": 64,
        "format": "password"
      },
      "Meeting": {
        "type": "object",
        "properties": {
          "MeetingId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GuidString"
              },
              {
                "description": "The Amazon Chime SDK meeting ID."
              }
            ]
          },
          "ExternalMeetingId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalMeetingIdType"
              },
              {
                "description": "The external meeting ID."
              }
            ]
          },
          "MediaPlacement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaPlacement"
              },
              {
                "description": "The media placement for the meeting."
              }
            ]
          },
          "MediaRegion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The Region in which to create the meeting. Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>."
              }
            ]
          }
        },
        "description": "A meeting created using the Amazon Chime SDK."
      },
      "PhoneNumberProductType": {
        "type": "string",
        "enum": ["BusinessCalling", "VoiceConnector", "SipMediaApplicationDialIn"]
      },
      "PhoneNumberOrder": {
        "type": "object",
        "properties": {
          "PhoneNumberOrderId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GuidString"
              },
              {
                "description": "The phone number order ID."
              }
            ]
          },
          "ProductType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberProductType"
              },
              {
                "description": "The phone number order product type."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberOrderStatus"
              },
              {
                "description": "The status of the phone number order."
              }
            ]
          },
          "OrderedPhoneNumbers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderedPhoneNumberList"
              },
              {
                "description": "The ordered phone number details, such as the phone number in E.164 format and the phone number status."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The phone number order creation timestamp, in ISO 8601 format."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The updated phone number order timestamp, in ISO 8601 format."
              }
            ]
          }
        },
        "description": "The details of a phone number order created for Amazon Chime."
      },
      "NonEmptyString128": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 128
      },
      "PositiveInteger": {
        "type": "integer",
        "minimum": 1
      },
      "NumberSelectionBehavior": {
        "type": "string",
        "enum": ["PreferSticky", "AvoidSticky"]
      },
      "GeoMatchLevel": {
        "type": "string",
        "enum": ["Country", "AreaCode"]
      },
      "GeoMatchParams": {
        "type": "object",
        "required": ["Country", "AreaCode"],
        "properties": {
          "Country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Country"
              },
              {
                "description": "The country."
              }
            ]
          },
          "AreaCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AreaCode"
              },
              {
                "description": "The area code."
              }
            ]
          }
        },
        "description": "The country and area code for a proxy phone number in a proxy phone session."
      },
      "ProxySession": {
        "type": "object",
        "properties": {
          "VoiceConnectorId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString128"
              },
              {
                "description": "The Amazon Chime voice connector ID."
              }
            ]
          },
          "ProxySessionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString128"
              },
              {
                "description": "The proxy session ID."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String128"
              },
              {
                "description": "The name of the proxy session."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProxySessionStatus"
              },
              {
                "description": "The status of the proxy session."
              }
            ]
          },
          "ExpiryMinutes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PositiveInteger"
              },
              {
                "description": "The number of minutes allowed for the proxy session."
              }
            ]
          },
          "Capabilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CapabilityList"
              },
              {
                "description": "The proxy session capabilities."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The created timestamp, in ISO 8601 format."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The updated timestamp, in ISO 8601 format."
              }
            ]
          },
          "EndedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The ended timestamp, in ISO 8601 format."
              }
            ]
          },
          "Participants": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Participants"
              },
              {
                "description": "The proxy session participants."
              }
            ]
          },
          "NumberSelectionBehavior": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberSelectionBehavior"
              },
              {
                "description": "The preference for proxy phone number reuse, or stickiness, between the same participants across sessions."
              }
            ]
          },
          "GeoMatchLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeoMatchLevel"
              },
              {
                "description": "The preference for matching the country or area code of the proxy phone number with that of the first participant."
              }
            ]
          },
          "GeoMatchParams": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeoMatchParams"
              },
              {
                "description": "The country and area code for the proxy phone number."
              }
            ]
          }
        },
        "description": "The proxy session for an Amazon Chime Voice Connector."
      },
      "RoomMembershipRole": {
        "type": "string",
        "enum": ["Administrator", "Member"]
      },
      "RoomMembership": {
        "type": "object",
        "properties": {
          "RoomId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The room ID."
              }
            ]
          },
          "Member": {
            "$ref": "#/components/schemas/Member"
          },
          "Role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoomMembershipRole"
              },
              {
                "description": "The membership role."
              }
            ]
          },
          "InvitedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The identifier of the user that invited the room member."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The room membership update timestamp, in ISO 8601 format."
              }
            ]
          }
        },
        "description": "The room membership details."
      },
      "Room": {
        "type": "object",
        "properties": {
          "RoomId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The room ID."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The room name."
              }
            ]
          },
          "AccountId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The Amazon Chime account ID."
              }
            ]
          },
          "CreatedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The identifier of the room creator."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The room creation timestamp, in ISO 8601 format."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The room update timestamp, in ISO 8601 format."
              }
            ]
          }
        },
        "description": "The Amazon Chime chat room details."
      },
      "UserType": {
        "type": "string",
        "enum": ["PrivateUser", "SharedDevice"]
      },
      "User": {
        "type": "object",
        "required": ["UserId"],
        "properties": {
          "UserId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The user ID."
              }
            ]
          },
          "AccountId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The Amazon Chime account ID."
              }
            ]
          },
          "PrimaryEmail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailAddress"
              },
              {
                "description": "The primary email address of the user."
              }
            ]
          },
          "PrimaryProvisionedNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The primary phone number associated with the user."
              }
            ]
          },
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The display name of the user."
              }
            ]
          },
          "LicenseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/License"
              },
              {
                "description": "The license type for the user."
              }
            ]
          },
          "UserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserType"
              },
              {
                "description": "The user type."
              }
            ]
          },
          "UserRegistrationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegistrationStatus"
              },
              {
                "description": "The user registration status."
              }
            ]
          },
          "UserInvitationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InviteStatus"
              },
              {
                "description": "The user invite status."
              }
            ]
          },
          "RegisteredOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "Date and time when the user is registered, in ISO 8601 format."
              }
            ]
          },
          "InvitedOn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format."
              }
            ]
          },
          "AlexaForBusinessMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlexaForBusinessMetadata"
              },
              {
                "description": "The Alexa for Business metadata."
              }
            ]
          },
          "PersonalPIN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The user's personal meeting PIN."
              }
            ]
          }
        },
        "description": "The user on the Amazon Chime account."
      },
      "VoiceConnectorGroupName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "VoiceConnectorItemList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/VoiceConnectorItem"
        }
      },
      "VoiceConnectorGroup": {
        "type": "object",
        "properties": {
          "VoiceConnectorGroupId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The Amazon Chime Voice Connector group ID."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorGroupName"
              },
              {
                "description": "The name of the Amazon Chime Voice Connector group."
              }
            ]
          },
          "VoiceConnectorItems": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorItemList"
              },
              {
                "description": "The Amazon Chime Voice Connectors to which to route inbound calls."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The Amazon Chime Voice Connector group creation timestamp, in ISO 8601 format."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The updated Amazon Chime Voice Connector group timestamp, in ISO 8601 format."
              }
            ]
          }
        },
        "description": "The Amazon Chime Voice Connector group configuration, including associated Amazon Chime Voice Connectors. You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events."
      },
      "VoiceConnectorName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "VoiceConnectorAwsRegion": {
        "type": "string",
        "enum": ["us-east-1", "us-west-2"]
      },
      "VoiceConnector": {
        "type": "object",
        "properties": {
          "VoiceConnectorId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The Amazon Chime Voice Connector ID."
              }
            ]
          },
          "AwsRegion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorAwsRegion"
              },
              {
                "description": "The AWS Region in which the Amazon Chime Voice Connector is created. Default: <code>us-east-1</code>."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConnectorName"
              },
              {
                "description": "The name of the Amazon Chime Voice Connector."
              }
            ]
          },
          "OutboundHostName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The outbound host name for the Amazon Chime Voice Connector."
              }
            ]
          },
          "RequireEncryption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "Designates whether encryption is required for the Amazon Chime Voice Connector."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The Amazon Chime Voice Connector creation timestamp, in ISO 8601 format."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The updated Amazon Chime Voice Connector timestamp, in ISO 8601 format."
              }
            ]
          }
        },
        "description": "The Amazon Chime Voice Connector configuration, including outbound host name and encryption settings."
      },
      "DNISEmergencyCallingConfiguration": {
        "type": "object",
        "required": ["EmergencyPhoneNumber", "CallingCountry"],
        "properties": {
          "EmergencyPhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/E164PhoneNumber"
              },
              {
                "description": "The DNIS phone number to route emergency calls to, in E.164 format."
              }
            ]
          },
          "TestPhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/E164PhoneNumber"
              },
              {
                "description": "The DNIS phone number to route test emergency calls to, in E.164 format."
              }
            ]
          },
          "CallingCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Alpha2CountryCode"
              },
              {
                "description": "The country from which emergency calls are allowed, in ISO 3166-1 alpha-2 format."
              }
            ]
          }
        },
        "description": "The Dialed Number Identification Service (DNIS) emergency calling configuration details associated with an Amazon Chime Voice Connector's emergency calling configuration."
      },
      "SensitiveStringList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SensitiveString"
        }
      },
      "EmailStatus": {
        "type": "string",
        "enum": ["NotSent", "Sent", "Failed"]
      },
      "EmergencyCallingConfiguration": {
        "type": "object",
        "properties": {
          "DNIS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DNISEmergencyCallingConfigurationList"
              },
              {
                "description": "The Dialed Number Identification Service (DNIS) emergency calling configuration details."
              }
            ]
          }
        },
        "description": "The emergency calling configuration details associated with an Amazon Chime Voice Connector."
      },
      "ErrorCode": {
        "type": "string",
        "enum": [
          "BadRequest",
          "Conflict",
          "Forbidden",
          "NotFound",
          "PreconditionFailed",
          "ResourceLimitExceeded",
          "ServiceFailure",
          "AccessDenied",
          "ServiceUnavailable",
          "Throttled",
          "Throttling",
          "Unauthorized",
          "Unprocessable",
          "VoiceConnectorGroupAssociationsExist",
          "PhoneNumberAssociationsExist"
        ]
      },
      "EventsConfiguration": {
        "type": "object",
        "properties": {
          "BotId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The bot ID."
              }
            ]
          },
          "OutboundEventsHTTPSEndpoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "HTTPS endpoint that allows a bot to receive outgoing events."
              }
            ]
          },
          "LambdaFunctionArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "Lambda function ARN that allows a bot to receive outgoing events."
              }
            ]
          }
        },
        "description": "The configuration that allows a bot to receive outgoing events. Can be either an HTTPS endpoint or a Lambda function ARN."
      },
      "VoiceConnectorSettings": {
        "type": "object",
        "properties": {
          "CdrBucket": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The Amazon S3 bucket designated for call detail record storage."
              }
            ]
          }
        },
        "description": "The Amazon Chime Voice Connector settings. Includes any Amazon S3 buckets designated for storing call detail records."
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "PhoneNumberId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The phone number ID."
              }
            ]
          },
          "E164PhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/E164PhoneNumber"
              },
              {
                "description": "The phone number, in E.164 format."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberType"
              },
              {
                "description": "The phone number type."
              }
            ]
          },
          "ProductType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberProductType"
              },
              {
                "description": "The phone number product type."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberStatus"
              },
              {
                "description": "The phone number status."
              }
            ]
          },
          "Capabilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberCapabilities"
              },
              {
                "description": "The phone number capabilities."
              }
            ]
          },
          "Associations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberAssociationList"
              },
              {
                "description": "The phone number associations."
              }
            ]
          },
          "CallingName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallingName"
              },
              {
                "description": "The outbound calling name associated with the phone number."
              }
            ]
          },
          "CallingNameStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallingNameStatus"
              },
              {
                "description": "The outbound calling name status."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The phone number creation timestamp, in ISO 8601 format."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The updated phone number timestamp, in ISO 8601 format."
              }
            ]
          },
          "DeletionTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The deleted phone number timestamp, in ISO 8601 format."
              }
            ]
          },
          "Country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Alpha2CountryCode"
              },
              {
                "description": "The phone number country. Format: ISO 3166-1 alpha-2."
              }
            ]
          }
        },
        "description": "A phone number used for Amazon Chime Business Calling or an Amazon Chime Voice Connector."
      },
      "RetentionSettings": {
        "type": "object",
        "properties": {
          "RoomRetentionSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoomRetentionSettings"
              },
              {
                "description": "The chat room retention settings."
              }
            ]
          },
          "ConversationRetentionSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConversationRetentionSettings"
              },
              {
                "description": "The chat conversation retention settings."
              }
            ]
          }
        },
        "description": "The retention settings for an Amazon Chime Enterprise account that determine how long to retain items such as chat room messages and chat conversation messages."
      },
      "UserSettings": {
        "type": "object",
        "required": ["Telephony"],
        "properties": {
          "Telephony": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephonySettings"
              },
              {
                "description": "The telephony settings associated with the user."
              }
            ]
          }
        },
        "description": "Settings associated with an Amazon Chime user, including inbound and outbound calling and text messaging."
      },
      "LoggingConfiguration": {
        "type": "object",
        "properties": {
          "EnableSIPLogs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "When true, enables SIP message logs for sending to Amazon CloudWatch Logs."
              }
            ]
          }
        },
        "description": "The logging configuration associated with an Amazon Chime Voice Connector. Specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs."
      },
      "Origination": {
        "type": "object",
        "properties": {
          "Routes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OriginationRouteList"
              },
              {
                "description": "The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20."
              }
            ]
          },
          "Disabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector."
              }
            ]
          }
        },
        "description": "Origination settings enable your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector."
      },
      "Proxy": {
        "type": "object",
        "properties": {
          "DefaultSessionExpiryMinutes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Integer"
              },
              {
                "description": "The default number of minutes allowed for proxy sessions."
              }
            ]
          },
          "Disabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector."
              }
            ]
          },
          "FallBackPhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/E164PhoneNumber"
              },
              {
                "description": "The phone number to route calls to after a proxy session expires."
              }
            ]
          },
          "PhoneNumberCountries": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StringList"
              },
              {
                "description": "The countries for proxy phone numbers to be selected from."
              }
            ]
          }
        },
        "description": "The proxy configuration for an Amazon Chime Voice Connector."
      },
      "StreamingConfiguration": {
        "type": "object",
        "required": ["DataRetentionInHours"],
        "properties": {
          "DataRetentionInHours": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataRetentionInHours"
              },
              {
                "description": "The retention period, in hours, for the Amazon Kinesis data."
              }
            ]
          },
          "Disabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "When true, media streaming to Amazon Kinesis is turned off."
              }
            ]
          },
          "StreamingNotificationTargets": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StreamingNotificationTargetList"
              },
              {
                "description": "The streaming notification targets."
              }
            ]
          }
        },
        "description": "The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours."
      },
      "TerminationHealth": {
        "type": "object",
        "properties": {
          "Timestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The timestamp, in ISO 8601 format."
              }
            ]
          },
          "Source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The source IP address."
              }
            ]
          }
        },
        "description": "The termination health details, including the source IP address and timestamp of the last successful SIP <code>OPTIONS</code> message from your SIP infrastructure."
      },
      "Termination": {
        "type": "object",
        "properties": {
          "CpsLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CpsLimit"
              },
              {
                "description": "The limit on calls per second. Max value based on account service quota. Default value of 1."
              }
            ]
          },
          "DefaultPhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/E164PhoneNumber"
              },
              {
                "description": "The default caller ID phone number."
              }
            ]
          },
          "CallingRegions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallingRegionList"
              },
              {
                "description": "The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required."
              }
            ]
          },
          "CidrAllowedList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StringList"
              },
              {
                "description": "The IP addresses allowed to make calls, in CIDR format. Required."
              }
            ]
          },
          "Disabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "When termination settings are disabled, outbound calls can not be made."
              }
            ]
          }
        },
        "description": "Termination settings enable your SIP hosts to make outbound calls using your Amazon Chime Voice Connector."
      },
      "Integer": {
        "type": "integer"
      },
      "InviteStatus": {
        "type": "string",
        "enum": ["Pending", "Accepted", "Failed"]
      },
      "Invite": {
        "type": "object",
        "properties": {
          "InviteId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The invite ID."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InviteStatus"
              },
              {
                "description": "The status of the invite."
              }
            ]
          },
          "EmailAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailAddress"
              },
              {
                "description": "The email address to which the invite is sent."
              }
            ]
          },
          "EmailStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailStatus"
              },
              {
                "description": "The status of the invite email."
              }
            ]
          }
        },
        "description": "Invitation object returned after emailing users to invite them to join the Amazon Chime <code>Team</code> account."
      },
      "InviteList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Invite"
        }
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Tag"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "MeetingList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Meeting"
        }
      },
      "PhoneNumberOrderList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PhoneNumberOrder"
        }
      },
      "PhoneNumberStatus": {
        "type": "string",
        "enum": [
          "AcquireInProgress",
          "AcquireFailed",
          "Unassigned",
          "Assigned",
          "ReleaseInProgress",
          "DeleteInProgress",
          "ReleaseFailed",
          "DeleteFailed"
        ]
      },
      "PhoneNumberAssociationName": {
        "type": "string",
        "enum": ["AccountId", "UserId", "VoiceConnectorId", "VoiceConnectorGroupId", "SipRuleId"]
      },
      "PhoneNumberList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PhoneNumber"
        }
      },
      "ProxySessionStatus": {
        "type": "string",
        "enum": ["Open", "InProgress", "Closed"]
      },
      "NextTokenString": {
        "type": "string",
        "maxLength": 65535
      },
      "ProxySessions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProxySession"
        }
      },
      "RoomMembershipList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RoomMembership"
        }
      },
      "RoomList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Room"
        }
      },
      "UserList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "VoiceConnectorGroupList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/VoiceConnectorGroup"
        }
      },
      "VoiceConnectorList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/VoiceConnector"
        }
      },
      "UriType": {
        "type": "string",
        "maxLength": 4096
      },
      "MediaPlacement": {
        "type": "object",
        "properties": {
          "AudioHostUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UriType"
              },
              {
                "description": "The audio host URL."
              }
            ]
          },
          "AudioFallbackUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UriType"
              },
              {
                "description": "The audio fallback URL."
              }
            ]
          },
          "ScreenDataUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UriType"
              },
              {
                "description": "The screen data URL."
              }
            ]
          },
          "ScreenSharingUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UriType"
              },
              {
                "description": "The screen sharing URL."
              }
            ]
          },
          "ScreenViewingUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UriType"
              },
              {
                "description": "The screen viewing URL."
              }
            ]
          },
          "SignalingUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UriType"
              },
              {
                "description": "The signaling URL."
              }
            ]
          },
          "TurnControlUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UriType"
              },
              {
                "description": "The turn control URL."
              }
            ]
          },
          "EventIngestionUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UriType"
              },
              {
                "description": "The URL of the S3 bucket used to store the captured media."
              }
            ]
          }
        },
        "description": "A set of endpoints used by clients to connect to the media service group for a Amazon Chime SDK meeting."
      },
      "MemberType": {
        "type": "string",
        "enum": ["User", "Bot", "Webhook"]
      },
      "Member": {
        "type": "object",
        "properties": {
          "MemberId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The member ID (user ID or bot ID)."
              }
            ]
          },
          "MemberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemberType"
              },
              {
                "description": "The member type."
              }
            ]
          },
          "Email": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The member email address."
              }
            ]
          },
          "FullName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SensitiveString"
              },
              {
                "description": "The member name."
              }
            ]
          },
          "AccountId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The Amazon Chime account ID."
              }
            ]
          }
        },
        "description": "The member details, such as email address, name, member ID, and member type."
      },
      "MemberError": {
        "type": "object",
        "properties": {
          "MemberId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The member ID."
              }
            ]
          },
          "ErrorCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorCode"
              },
              {
                "description": "The error code."
              }
            ]
          },
          "ErrorMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The error message."
              }
            ]
          }
        },
        "description": "The list of errors returned when a member action results in an error."
      },
      "NotificationTarget": {
        "type": "string",
        "enum": ["EventBridge", "SNS", "SQS"]
      },
      "OrderedPhoneNumberStatus": {
        "type": "string",
        "enum": ["Processing", "Acquired", "Failed"]
      },
      "OrderedPhoneNumber": {
        "type": "object",
        "properties": {
          "E164PhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/E164PhoneNumber"
              },
              {
                "description": "The phone number, in E.164 format."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderedPhoneNumberStatus"
              },
              {
                "description": "The phone number status."
              }
            ]
          }
        },
        "description": "A phone number for which an order has been placed."
      },
      "OrderedPhoneNumberList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OrderedPhoneNumber"
        }
      },
      "Port": {
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      },
      "OriginationRouteProtocol": {
        "type": "string",
        "enum": ["TCP", "UDP"]
      },
      "OriginationRoutePriority": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "OriginationRouteWeight": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "OriginationRoute": {
        "type": "object",
        "properties": {
          "Host": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The FQDN or IP address to contact for origination traffic."
              }
            ]
          },
          "Port": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Port"
              },
              {
                "description": "The designated origination route port. Defaults to 5060."
              }
            ]
          },
          "Protocol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OriginationRouteProtocol"
              },
              {
                "description": "The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default."
              }
            ]
          },
          "Priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OriginationRoutePriority"
              },
              {
                "description": "The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first."
              }
            ]
          },
          "Weight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OriginationRouteWeight"
              },
              {
                "description": "The weight associated with the host. If hosts are equal in priority, calls are distributed among them based on their relative weight."
              }
            ]
          }
        },
        "description": "Origination routes define call distribution properties for your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector. Limit: Ten origination routes for each Amazon Chime Voice Connector."
      },
      "Participant": {
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/E164PhoneNumber"
              },
              {
                "description": "The participant's phone number."
              }
            ]
          },
          "ProxyPhoneNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/E164PhoneNumber"
              },
              {
                "description": "The participant's proxy phone number."
              }
            ]
          }
        },
        "description": "The phone number and proxy phone number for a participant in an Amazon Chime Voice Connector proxy session."
      },
      "Participants": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Participant"
        }
      },
      "PhoneNumberType": {
        "type": "string",
        "enum": ["Local", "TollFree"]
      },
      "PhoneNumberCapabilities": {
        "type": "object",
        "properties": {
          "InboundCall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NullableBoolean"
              },
              {
                "description": "Allows or denies inbound calling for the specified phone number."
              }
            ]
          },
          "OutboundCall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NullableBoolean"
              },
              {
                "description": "Allows or denies outbound calling for the specified phone number."
              }
            ]
          },
          "InboundSMS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NullableBoolean"
              },
              {
                "description": "Allows or denies inbound SMS messaging for the specified phone number."
              }
            ]
          },
          "OutboundSMS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NullableBoolean"
              },
              {
                "description": "Allows or denies outbound SMS messaging for the specified phone number."
              }
            ]
          },
          "InboundMMS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NullableBoolean"
              },
              {
                "description": "Allows or denies inbound MMS messaging for the specified phone number."
              }
            ]
          },
          "OutboundMMS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NullableBoolean"
              },
              {
                "description": "Allows or denies outbound MMS messaging for the specified phone number."
              }
            ]
          }
        },
        "description": "The phone number capabilities for Amazon Chime Business Calling phone numbers, such as enabled inbound and outbound calling and text messaging."
      },
      "PhoneNumberAssociationList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PhoneNumberAssociation"
        }
      },
      "PhoneNumberAssociation": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "Contains the ID for the entity specified in Name."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberAssociationName"
              },
              {
                "description": "Defines the association with an Amazon Chime account ID, user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID."
              }
            ]
          },
          "AssociatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The timestamp of the phone number association, in ISO 8601 format."
              }
            ]
          }
        },
        "description": "The phone number associations, such as Amazon Chime account ID, Amazon Chime user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID."
      },
      "PhoneNumberError": {
        "type": "object",
        "properties": {
          "PhoneNumberId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The phone number ID for which the action failed."
              }
            ]
          },
          "ErrorCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorCode"
              },
              {
                "description": "The error code."
              }
            ]
          },
          "ErrorMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The error message."
              }
            ]
          }
        },
        "description": "If the phone number action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
      },
      "PhoneNumberOrderStatus": {
        "type": "string",
        "enum": ["Processing", "Successful", "Failed", "Partial"]
      },
      "String128": {
        "type": "string",
        "maxLength": 128
      },
      "RegistrationStatus": {
        "type": "string",
        "enum": ["Unregistered", "Registered", "Suspended"]
      },
      "StreamingNotificationTarget": {
        "type": "object",
        "required": ["NotificationTarget"],
        "properties": {
          "NotificationTarget": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationTarget"
              },
              {
                "description": "The streaming notification target."
              }
            ]
          }
        },
        "description": "The targeted recipient for a streaming configuration notification."
      },
      "TagValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256,
        "format": "password"
      },
      "UserError": {
        "type": "object",
        "properties": {
          "UserId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The user ID for which the action failed."
              }
            ]
          },
          "ErrorCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorCode"
              },
              {
                "description": "The error code."
              }
            ]
          },
          "ErrorMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The error message."
              }
            ]
          }
        },
        "description": "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages."
      },
      "VoiceConnectorItemPriority": {
        "type": "integer",
        "minimum": 1,
        "maximum": 99
      },
      "CreateAppInstanceResponse": {
        "type": "object",
        "properties": {
          "AppInstanceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The Amazon Resource Number (ARN) of the app instance."
              }
            ]
          }
        }
      },
      "CreateAppInstanceAdminResponse": {
        "type": "object",
        "properties": {
          "AppInstanceAdmin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The name and ARN of the admin for the app instance."
              }
            ]
          },
          "AppInstanceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the of the admin for the app instance."
              }
            ]
          }
        }
      },
      "CreateAppInstanceUserResponse": {
        "type": "object",
        "properties": {
          "AppInstanceUserArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The user's ARN."
              }
            ]
          }
        }
      },
      "CreateChannelResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          }
        }
      },
      "CreateChannelBanResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the response to the ban request."
              }
            ]
          },
          "Member": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The <code>ChannelArn</code> and <code>BannedIdentity</code> of the member in the ban response."
              }
            ]
          }
        }
      },
      "CreateChannelMembershipResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          },
          "Member": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The ARN and metadata of the member being added."
              }
            ]
          }
        }
      },
      "CreateChannelModeratorResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          },
          "ChannelModerator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The ARNs of the channel and the moderator."
              }
            ]
          }
        }
      },
      "CreateMeetingDialOutResponse": {
        "type": "object",
        "properties": {
          "TransactionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GuidString"
              },
              {
                "description": "Unique ID that tracks API calls."
              }
            ]
          }
        }
      },
      "CreateSipMediaApplicationResponse": {
        "type": "object",
        "properties": {
          "SipMediaApplication": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipMediaApplication"
              },
              {
                "description": "The Sip media application details."
              }
            ]
          }
        }
      },
      "SipMediaApplicationEndpoint": {
        "type": "object",
        "properties": {
          "LambdaArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FunctionArn"
              },
              {
                "description": "Valid Amazon Resource Name (ARN) of the Lambda function of the same AWS Region where the SIP media application is created."
              }
            ]
          }
        },
        "description": "Endpoints to specify as part of a SIP media application."
      },
      "CreateSipMediaApplicationCallResponse": {
        "type": "object",
        "properties": {
          "SipMediaApplicationCall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipMediaApplicationCall"
              },
              {
                "description": "The actual call."
              }
            ]
          }
        }
      },
      "CreateSipRuleResponse": {
        "type": "object",
        "properties": {
          "SipRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipRule"
              },
              {
                "description": "Returns the SIP rule information, including the rule ID, triggers, and target applications."
              }
            ]
          }
        }
      },
      "SipRuleTargetApplication": {
        "type": "object",
        "properties": {
          "SipMediaApplicationId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The SIP media application ID."
              }
            ]
          },
          "Priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipApplicationPriority"
              },
              {
                "description": "Priority of the SIP media application in the target list."
              }
            ]
          },
          "AwsRegion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "AWS Region of target application."
              }
            ]
          }
        },
        "description": "Target SIP media application along with other details like priority and AWS Region to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided."
      },
      "DescribeAppInstanceResponse": {
        "type": "object",
        "properties": {
          "AppInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstance"
              },
              {
                "description": "The ARN, metadata, created and last-updated timestamps, and the name of the app instance. All timestamps use epoch milliseconds."
              }
            ]
          }
        }
      },
      "DescribeAppInstanceAdminResponse": {
        "type": "object",
        "properties": {
          "AppInstanceAdmin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceAdmin"
              },
              {
                "description": "The ARN and name of the app instance user, the ARN of the app instance, and the created and last-updated timestamps. All timestamps use epoch milliseconds."
              }
            ]
          }
        }
      },
      "DescribeAppInstanceUserResponse": {
        "type": "object",
        "properties": {
          "AppInstanceUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceUser"
              },
              {
                "description": "The name of the app instance user."
              }
            ]
          }
        }
      },
      "DescribeChannelResponse": {
        "type": "object",
        "properties": {
          "Channel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Channel"
              },
              {
                "description": "The channel details."
              }
            ]
          }
        }
      },
      "DescribeChannelBanResponse": {
        "type": "object",
        "properties": {
          "ChannelBan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelBan"
              },
              {
                "description": "The the details of the ban."
              }
            ]
          }
        }
      },
      "DescribeChannelMembershipResponse": {
        "type": "object",
        "properties": {
          "ChannelMembership": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMembership"
              },
              {
                "description": "The details of the membership."
              }
            ]
          }
        }
      },
      "DescribeChannelMembershipForAppInstanceUserResponse": {
        "type": "object",
        "properties": {
          "ChannelMembership": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMembershipForAppInstanceUserSummary"
              },
              {
                "description": "The channel to which a user belongs."
              }
            ]
          }
        }
      },
      "DescribeChannelModeratedByAppInstanceUserResponse": {
        "type": "object",
        "properties": {
          "Channel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelModeratedByAppInstanceUserSummary"
              },
              {
                "description": "The moderated channel."
              }
            ]
          }
        }
      },
      "DescribeChannelModeratorResponse": {
        "type": "object",
        "properties": {
          "ChannelModerator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelModerator"
              },
              {
                "description": "The details of the channel moderator."
              }
            ]
          }
        }
      },
      "GetAppInstanceRetentionSettingsResponse": {
        "type": "object",
        "properties": {
          "AppInstanceRetentionSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceRetentionSettings"
              },
              {
                "description": "The retention settings for the app instance."
              }
            ]
          },
          "InitiateDeletionTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The timestamp representing the time at which the specified items are retained, in Epoch Seconds."
              }
            ]
          }
        }
      },
      "GetAppInstanceStreamingConfigurationsResponse": {
        "type": "object",
        "properties": {
          "AppInstanceStreamingConfigurations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceStreamingConfigurationList"
              },
              {
                "description": "The streaming settings."
              }
            ]
          }
        }
      },
      "GetChannelMessageResponse": {
        "type": "object",
        "properties": {
          "ChannelMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMessage"
              },
              {
                "description": "The details of and content in the message."
              }
            ]
          }
        }
      },
      "GetMessagingSessionEndpointResponse": {
        "type": "object",
        "properties": {
          "Endpoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessagingSessionEndpoint"
              },
              {
                "description": "The endpoint returned in the response."
              }
            ]
          }
        }
      },
      "GetSipMediaApplicationResponse": {
        "type": "object",
        "properties": {
          "SipMediaApplication": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipMediaApplication"
              },
              {
                "description": "The SIP media application details."
              }
            ]
          }
        }
      },
      "GetSipMediaApplicationLoggingConfigurationResponse": {
        "type": "object",
        "properties": {
          "SipMediaApplicationLoggingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipMediaApplicationLoggingConfiguration"
              },
              {
                "description": "The actual logging configuration."
              }
            ]
          }
        }
      },
      "GetSipRuleResponse": {
        "type": "object",
        "properties": {
          "SipRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipRule"
              },
              {
                "description": "The SIP rule details."
              }
            ]
          }
        }
      },
      "ListAppInstanceAdminsResponse": {
        "type": "object",
        "properties": {
          "AppInstanceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the app instance."
              }
            ]
          },
          "AppInstanceAdmins": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceAdminList"
              },
              {
                "description": "The information for each administrator."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token returned from previous API requests until the number of administrators is reached."
              }
            ]
          }
        }
      },
      "ListAppInstanceUsersResponse": {
        "type": "object",
        "properties": {
          "AppInstanceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the app instance."
              }
            ]
          },
          "AppInstanceUsers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceUserList"
              },
              {
                "description": "The information for each of the requested app instance users."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token passed by previous API calls until all requested users are returned."
              }
            ]
          }
        }
      },
      "ListAppInstancesResponse": {
        "type": "object",
        "properties": {
          "AppInstances": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceList"
              },
              {
                "description": "The information for each app instance."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token passed by previous API requests until the maximum number of app instances is reached."
              }
            ]
          }
        }
      },
      "ListChannelBansResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token passed by previous API calls until all requested bans are returned."
              }
            ]
          },
          "ChannelBans": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelBanSummaryList"
              },
              {
                "description": "The information for each requested ban."
              }
            ]
          }
        }
      },
      "ListChannelMembershipsResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          },
          "ChannelMemberships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMembershipSummaryList"
              },
              {
                "description": "The information for the requested channel memberships."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token passed by previous API calls until all requested channel memberships are returned."
              }
            ]
          }
        }
      },
      "ListChannelMembershipsForAppInstanceUserResponse": {
        "type": "object",
        "properties": {
          "ChannelMemberships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMembershipForAppInstanceUserSummaryList"
              },
              {
                "description": "The token passed by previous API calls until all requested users are returned."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token passed by previous API calls until all requested users are returned."
              }
            ]
          }
        }
      },
      "ListChannelMessagesResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel containing the requested messages."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token passed by previous API calls until all requested messages are returned."
              }
            ]
          },
          "ChannelMessages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMessageSummaryList"
              },
              {
                "description": "The information about and content of each requested message."
              }
            ]
          }
        }
      },
      "ListChannelModeratorsResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token passed by previous API calls until all requested moderators are returned."
              }
            ]
          },
          "ChannelModerators": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelModeratorSummaryList"
              },
              {
                "description": "The information about and names of each moderator."
              }
            ]
          }
        }
      },
      "ListChannelsResponse": {
        "type": "object",
        "properties": {
          "Channels": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelSummaryList"
              },
              {
                "description": "The information about each channel."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token returned from previous API requests until the number of channels is reached."
              }
            ]
          }
        }
      },
      "ListChannelsModeratedByAppInstanceUserResponse": {
        "type": "object",
        "properties": {
          "Channels": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelModeratedByAppInstanceUserSummaryList"
              },
              {
                "description": "The moderated channels in the request."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token returned from previous API requests until the number of channels moderated by the user is reached."
              }
            ]
          }
        }
      },
      "ListSipMediaApplicationsResponse": {
        "type": "object",
        "properties": {
          "SipMediaApplications": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipMediaApplicationList"
              },
              {
                "description": "List of SIP media applications and application details."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextTokenString"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "ListSipRulesResponse": {
        "type": "object",
        "properties": {
          "SipRules": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipRuleList"
              },
              {
                "description": "List of SIP rules and rule details."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextTokenString"
              },
              {
                "description": "The token to use to retrieve the next page of results."
              }
            ]
          }
        }
      },
      "PutAppInstanceRetentionSettingsResponse": {
        "type": "object",
        "properties": {
          "AppInstanceRetentionSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceRetentionSettings"
              },
              {
                "description": "The time in days to retain data. Data type: number."
              }
            ]
          },
          "InitiateDeletionTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which the API deletes data."
              }
            ]
          }
        }
      },
      "ChannelRetentionSettings": {
        "type": "object",
        "properties": {
          "RetentionDays": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RetentionDays"
              },
              {
                "description": "The time in days to retain a channel."
              }
            ]
          }
        },
        "description": "The retention settings for a channel."
      },
      "PutAppInstanceStreamingConfigurationsResponse": {
        "type": "object",
        "properties": {
          "AppInstanceStreamingConfigurations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceStreamingConfigurationList"
              },
              {
                "description": "The streaming configurations of an app instance."
              }
            ]
          }
        }
      },
      "AppInstanceStreamingConfiguration": {
        "type": "object",
        "required": ["AppInstanceDataType", "ResourceArn"],
        "properties": {
          "AppInstanceDataType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceDataType"
              },
              {
                "description": "The data type of the app instance."
              }
            ]
          },
          "ResourceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Arn"
              },
              {
                "description": "The resource ARN."
              }
            ]
          }
        },
        "description": "The streaming configuration of an app instance."
      },
      "PutSipMediaApplicationLoggingConfigurationResponse": {
        "type": "object",
        "properties": {
          "SipMediaApplicationLoggingConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipMediaApplicationLoggingConfiguration"
              },
              {
                "description": "The actual logging configuration."
              }
            ],
            "$ref": "#/components/schemas/SipMediaApplicationLoggingConfiguration"
          }
        }
      },
      "RedactChannelMessageResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel containing the messages that you want to redact."
              }
            ]
          },
          "MessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageId"
              },
              {
                "description": "The ID of the message being redacted."
              }
            ]
          }
        }
      },
      "SendChannelMessageResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          },
          "MessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageId"
              },
              {
                "description": "The ID string assigned to each message. "
              }
            ]
          }
        }
      },
      "UpdateAppInstanceResponse": {
        "type": "object",
        "properties": {
          "AppInstanceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the app instance."
              }
            ]
          }
        }
      },
      "UpdateAppInstanceUserResponse": {
        "type": "object",
        "properties": {
          "AppInstanceUserArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the app instance user."
              }
            ]
          }
        }
      },
      "UpdateChannelResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          }
        }
      },
      "UpdateChannelMessageResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          },
          "MessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageId"
              },
              {
                "description": "The ID string of the message being updated."
              }
            ]
          }
        }
      },
      "UpdateChannelReadMarkerResponse": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          }
        }
      },
      "UpdateSipMediaApplicationResponse": {
        "type": "object",
        "properties": {
          "SipMediaApplication": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipMediaApplication"
              },
              {
                "description": "The updated SIP media application details."
              }
            ]
          }
        }
      },
      "UpdateSipRuleResponse": {
        "type": "object",
        "properties": {
          "SipRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipRule"
              },
              {
                "description": "Updated SIP rule details."
              }
            ]
          }
        }
      },
      "ChimeArn": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 5,
        "maxLength": 1600
      },
      "NonEmptyResourceName": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
        "minLength": 1,
        "maxLength": 256,
        "format": "password"
      },
      "Metadata": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 1024,
        "format": "password"
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "AppInstance": {
        "type": "object",
        "properties": {
          "AppInstanceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the messaging instance. "
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyResourceName"
              },
              {
                "description": "The name of an app instance."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "description": "The metadata of an app instance."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which an app instance was created. In epoch milliseconds."
              }
            ]
          },
          "LastUpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time an app instance was last updated. In epoch milliseconds."
              }
            ]
          }
        },
        "description": "An instance of a Chime messaging application."
      },
      "Identity": {
        "type": "object",
        "properties": {
          "Arn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN in an Identity."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceName"
              },
              {
                "description": "The name in an Identity."
              }
            ]
          }
        },
        "description": "The ARN and name of a user."
      },
      "AppInstanceAdmin": {
        "type": "object",
        "properties": {
          "Admin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The name and metadata of the app instance administrator."
              }
            ]
          },
          "AppInstanceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the app instance administrator."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which an administrator was created."
              }
            ]
          }
        },
        "description": "Promotes a user to the administrator role for the duration of an app instance."
      },
      "AppInstanceAdminSummary": {
        "type": "object",
        "properties": {
          "Admin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The name and metadata of the app instance administrator."
              }
            ]
          }
        },
        "description": "The identity and metadata of an administrator."
      },
      "AppInstanceAdminList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AppInstanceAdminSummary"
        }
      },
      "AppInstanceDataType": {
        "type": "string",
        "enum": ["Channel", "ChannelMessage"]
      },
      "AppInstanceSummary": {
        "type": "object",
        "properties": {
          "AppInstanceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The app instance ARN."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyResourceName"
              },
              {
                "description": "The name of the app instance summary."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "description": "The metadata of the app instance summary."
              }
            ]
          }
        },
        "description": "The summary data for an app instance."
      },
      "AppInstanceList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AppInstanceSummary"
        }
      },
      "AppInstanceRetentionSettings": {
        "type": "object",
        "properties": {
          "ChannelRetentionSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelRetentionSettings"
              },
              {
                "description": "The length of time in days to retain a channel."
              }
            ]
          }
        },
        "description": "The length of time in days to retain messages."
      },
      "AppInstanceStreamingConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AppInstanceStreamingConfiguration"
        },
        "minItems": 1,
        "maxItems": 2
      },
      "UserName": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 100,
        "format": "password"
      },
      "AppInstanceUser": {
        "type": "object",
        "properties": {
          "AppInstanceUserArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the app instance user."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserName"
              },
              {
                "description": "The name of the app instance user."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which the app instance user was created."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "description": "The metadata of the app instance user."
              }
            ]
          },
          "LastUpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which the app instance user was last updated."
              }
            ]
          }
        },
        "description": "The app instance user."
      },
      "AppInstanceUserSummary": {
        "type": "object",
        "properties": {
          "AppInstanceUserArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the app instance user."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserName"
              },
              {
                "description": "The name in an app instance user summary."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "description": "The metadata in an app instance user summary."
              }
            ]
          }
        },
        "description": "The app instance user summary data ."
      },
      "AppInstanceUserList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AppInstanceUserSummary"
        }
      },
      "ChannelMembershipType": {
        "type": "string",
        "enum": ["DEFAULT", "HIDDEN"]
      },
      "AppInstanceUserMembershipSummary": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMembershipType"
              },
              {
                "description": "The type of channel summary, "
              }
            ]
          },
          "ReadMarkerTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which a summary was last read."
              }
            ]
          }
        },
        "description": "Lists the channels to which app instance users belong."
      },
      "ChannelMode": {
        "type": "string",
        "enum": ["UNRESTRICTED", "RESTRICTED"]
      },
      "ChannelPrivacy": {
        "type": "string",
        "enum": ["PUBLIC", "PRIVATE"]
      },
      "Channel": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyResourceName"
              },
              {
                "description": "The name of the channel."
              }
            ]
          },
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          },
          "Mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMode"
              },
              {
                "description": "The mode of the channel."
              }
            ]
          },
          "Privacy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelPrivacy"
              },
              {
                "description": "The channel's privacy setting, <code>PUBLIC</code> or <code>HIDDEN</code>."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "description": "The metadata of the channel."
              }
            ]
          },
          "CreatedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The administrator who created the channel."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which the administrator created the channel."
              }
            ]
          },
          "LastMessageTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which a member sent the last message in a session."
              }
            ]
          },
          "LastUpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which a channel was last updated."
              }
            ]
          }
        },
        "description": "Creates a channel."
      },
      "ChannelBan": {
        "type": "object",
        "properties": {
          "Member": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The member being banned from the channel."
              }
            ]
          },
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel from which a member is being banned."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which the ban was created."
              }
            ]
          },
          "CreatedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The parameter of the action."
              }
            ]
          }
        },
        "description": "Bans a user from a channel."
      },
      "ChannelBanSummary": {
        "type": "object",
        "properties": {
          "Member": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The member being banned from a channel."
              }
            ]
          }
        },
        "description": "The summary data for the channel ban."
      },
      "ChannelBanSummaryList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ChannelBanSummary"
        }
      },
      "ChannelMembership": {
        "type": "object",
        "properties": {
          "InvitedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The identifier of the member who invited another member. Taken from the message header."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMembershipType"
              },
              {
                "description": "The membership type set for the channel member."
              }
            ]
          },
          "Member": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The data of the channel member."
              }
            ]
          },
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the member's channel."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which the channel membership was created. "
              }
            ]
          },
          "LastUpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which a channel membership was last updated."
              }
            ]
          }
        },
        "description": "Creates a channel member."
      },
      "ChannelSummary": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyResourceName"
              },
              {
                "description": "The parameter of the action."
              }
            ]
          },
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel summary."
              }
            ]
          },
          "Mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMode"
              },
              {
                "description": "The summary mode of the channel."
              }
            ]
          },
          "Privacy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelPrivacy"
              },
              {
                "description": "The privacy setting of the channel being summarized, <code>PUBLIC</code> or <code>HIDDEN</code>."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "description": "The metadata of the channel summary."
              }
            ]
          },
          "LastMessageTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which the last message in a channel was sent."
              }
            ]
          }
        },
        "description": "The summary data for a channel."
      },
      "ChannelMembershipForAppInstanceUserSummary": {
        "type": "object",
        "properties": {
          "ChannelSummary": {
            "$ref": "#/components/schemas/ChannelSummary"
          },
          "AppInstanceUserMembershipSummary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppInstanceUserMembershipSummary"
              },
              {
                "description": "Returns the channel membership data for an app instance."
              }
            ],
            "$ref": "#/components/schemas/AppInstanceUserMembershipSummary"
          }
        },
        "description": "Returns the channel membership summary data for an app instance."
      },
      "ChannelMembershipForAppInstanceUserSummaryList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ChannelMembershipForAppInstanceUserSummary"
        }
      },
      "ChannelMembershipSummary": {
        "type": "object",
        "properties": {
          "Member": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "A member's summary data."
              }
            ]
          }
        },
        "description": "The summary data of a channel membership."
      },
      "ChannelMembershipSummaryList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ChannelMembershipSummary"
        }
      },
      "MessageId": {
        "type": "string",
        "pattern": "[-_a-zA-Z0-9]*",
        "minLength": 1,
        "maxLength": 128
      },
      "Content": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 0,
        "maxLength": 4096,
        "format": "password"
      },
      "ChannelMessageType": {
        "type": "string",
        "enum": ["STANDARD", "CONTROL"]
      },
      "NonNullableBoolean": {
        "type": "boolean"
      },
      "ChannelMessagePersistenceType": {
        "type": "string",
        "enum": ["PERSISTENT", "NON_PERSISTENT"]
      },
      "ChannelMessage": {
        "type": "object",
        "properties": {
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel."
              }
            ]
          },
          "MessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageId"
              },
              {
                "description": "The ID of a message."
              }
            ]
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Content"
              },
              {
                "description": "The message content."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "description": "The message metadata."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMessageType"
              },
              {
                "description": "The message type."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which the message was created."
              }
            ]
          },
          "LastEditedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which a message was edited."
              }
            ]
          },
          "LastUpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which a message was updated."
              }
            ]
          },
          "Sender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The message sender."
              }
            ]
          },
          "Redacted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonNullableBoolean"
              },
              {
                "description": "Hides the content of a message. The message still exists on the back end, but this action only returns metadata."
              }
            ]
          },
          "Persistence": {
            "$ref": "#/components/schemas/ChannelMessagePersistenceType",
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMessagePersistenceType"
              },
              {
                "description": "The persistence setting for a channel message."
              }
            ]
          }
        },
        "description": "Creates a message in a channel."
      },
      "ChannelMessageSummary": {
        "type": "object",
        "properties": {
          "MessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageId"
              },
              {
                "description": "The ID of the message summary."
              }
            ]
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Content"
              },
              {
                "description": "The content of the message summary."
              }
            ]
          },
          "Metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {
                "description": "The metadata of the message summary."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMessageType"
              },
              {
                "description": "The type of message summary."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which the message summary was created."
              }
            ]
          },
          "LastUpdatedTimestamp": {
            "$ref": "#/components/schemas/Timestamp",
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which a message was last updated."
              }
            ]
          },
          "LastEditedTimestamp": {
            "$ref": "#/components/schemas/Timestamp",
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which a message was last edited."
              }
            ]
          },
          "Sender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The sender of the message summary."
              }
            ]
          },
          "Redacted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonNullableBoolean"
              },
              {
                "description": "Redacts the content of a message summary."
              }
            ]
          }
        },
        "description": "A summary of the messages in a channel."
      },
      "ChannelMessageSummaryList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ChannelMessageSummary"
        }
      },
      "ChannelModeratedByAppInstanceUserSummary": {
        "type": "object",
        "properties": {
          "ChannelSummary": {
            "$ref": "#/components/schemas/ChannelSummary",
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelSummary"
              },
              {
                "description": "Summary of the details of a <code>Channel</code>."
              }
            ]
          }
        },
        "description": "Returns the summary data for a moderated channel."
      },
      "ChannelModeratedByAppInstanceUserSummaryList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ChannelModeratedByAppInstanceUserSummary"
        }
      },
      "ChannelModerator": {
        "type": "object",
        "properties": {
          "Moderator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The moderator's data."
              }
            ]
          },
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the moderator's channel."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time at which the moderator was created."
              }
            ]
          },
          "CreatedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The member who created the moderator."
              }
            ]
          }
        },
        "description": "Creates a moderator on a channel."
      },
      "ChannelModeratorSummary": {
        "type": "object",
        "properties": {
          "Moderator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The data for a moderator."
              }
            ]
          }
        },
        "description": "Summary data of the moderators in a channel."
      },
      "ChannelModeratorSummaryList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ChannelModeratorSummary"
        }
      },
      "ChannelSummaryList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ChannelSummary"
        }
      },
      "SipMediaApplicationCall": {
        "type": "object",
        "properties": {
          "TransactionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GuidString"
              },
              {
                "description": "The transaction ID of a call."
              }
            ]
          }
        },
        "description": "A <code>Call</code> instance for a SIP media application."
      },
      "SipMediaApplicationName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "SipMediaApplicationEndpointList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SipMediaApplicationEndpoint"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "SipMediaApplication": {
        "type": "object",
        "properties": {
          "SipMediaApplicationId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The SIP media application ID."
              }
            ]
          },
          "AwsRegion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The AWS Region in which the SIP media application is created."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipMediaApplicationName"
              },
              {
                "description": "The name of the SIP media application."
              }
            ]
          },
          "Endpoints": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipMediaApplicationEndpointList"
              },
              {
                "description": "List of endpoints for SIP media application. Currently, only one endpoint per SIP media application is permitted."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The SIP media application creation timestamp, in ISO 8601 format."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The SIP media application updated timestamp, in ISO 8601 format."
              }
            ]
          }
        },
        "description": "The SIP media application details, including name and endpoints. An AWS account can have multiple SIP media applications."
      },
      "SipRuleName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "SipRuleTriggerType": {
        "type": "string",
        "enum": ["ToPhoneNumber", "RequestUriHostname"]
      },
      "SipRuleTargetApplicationList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SipRuleTargetApplication"
        },
        "minItems": 1,
        "maxItems": 25
      },
      "SipRule": {
        "type": "object",
        "properties": {
          "SipRuleId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "The SIP rule ID."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipRuleName"
              },
              {
                "description": "The name of the SIP rule."
              }
            ]
          },
          "Disabled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "Indicates if the SIP rule is enabled or disabled. You must disable a rule before you can delete it."
              }
            ]
          },
          "TriggerType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipRuleTriggerType"
              },
              {
                "description": "The type of trigger whose value is assigned to the SIP rule in <code>TriggerValue</code>."
              }
            ]
          },
          "TriggerValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NonEmptyString"
              },
              {
                "description": "If <code>TriggerType</code> is <code>RequestUriHostname</code>, then the value can be the outbound host name of the Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, then the value can be a customer-owned phone number in E164 format. <code>SipRule</code> is triggered when a SIP rule requests host name or <code>ToPhoneNumber</code> matches in the incoming SIP request."
              }
            ]
          },
          "TargetApplications": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipRuleTargetApplicationList"
              },
              {
                "description": "List of SIP media applications with priority and AWS Region. You can only use one SIP application per AWS Region and priority combination."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The SIP rule created timestamp, in ISO 8601 format."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The SIP rule updated timestamp, in ISO 8601 format."
              }
            ]
          }
        },
        "description": "The SIP rule details, including name, triggers, and target applications. An AWS account can have multiple SIP rules."
      },
      "FunctionArn": {
        "type": "string",
        "pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
        "maxLength": 10000,
        "format": "password"
      },
      "MessagingSessionEndpoint": {
        "type": "object",
        "properties": {
          "Url": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UrlType"
              },
              {
                "description": "The URL of a meeting session endpoint."
              }
            ]
          }
        },
        "description": "The endpoint of a meeting session."
      },
      "SipMediaApplicationLoggingConfiguration": {
        "type": "object",
        "properties": {
          "EnableSipMediaApplicationMessageLogs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Boolean"
              },
              {
                "description": "Enables application message logs for the SIP media application."
              }
            ]
          }
        },
        "description": "Logging configuration of the SIP media application."
      },
      "ResourceName": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
        "minLength": 0,
        "maxLength": 256,
        "format": "password"
      },
      "NextToken": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 2048,
        "format": "password"
      },
      "SipMediaApplicationList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SipMediaApplication"
        }
      },
      "SipRuleList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SipRule"
        }
      },
      "UrlType": {
        "type": "string",
        "maxLength": 4096
      },
      "SipApplicationPriority": {
        "type": "integer",
        "minimum": 1
      },
      "BatchCreateChannelMembershipResponse": {
        "type": "object",
        "properties": {
          "BatchChannelMemberships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchChannelMemberships"
              },
              {
                "description": "The list of channel memberships in the response."
              }
            ]
          },
          "Errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchCreateChannelMembershipErrors"
              },
              {
                "description": "If the action fails for one or more of the memberships in the request, a list of the memberships is returned, along with error codes and error messages."
              }
            ]
          }
        }
      },
      "CreateMediaCapturePipelineResponse": {
        "type": "object",
        "properties": {
          "MediaCapturePipeline": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaCapturePipeline"
              },
              {
                "description": "A media capture pipeline object, the ID, source type, source ARN, sink type, and sink ARN of a media capture pipeline object."
              }
            ]
          }
        }
      },
      "GetMediaCapturePipelineResponse": {
        "type": "object",
        "properties": {
          "MediaCapturePipeline": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaCapturePipeline"
              },
              {
                "description": "The media capture pipeline object."
              }
            ]
          }
        }
      },
      "ListMediaCapturePipelinesResponse": {
        "type": "object",
        "properties": {
          "MediaCapturePipelines": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaCapturePipelineList"
              },
              {
                "description": "The media capture pipeline objects in the list."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The token used to retrieve the next page of results. "
              }
            ]
          }
        }
      },
      "ListSupportedPhoneNumberCountriesResponse": {
        "type": "object",
        "properties": {
          "PhoneNumberCountries": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberCountriesList"
              },
              {
                "description": "The supported phone number countries."
              }
            ]
          }
        }
      },
      "StartMeetingTranscriptionResponse": {
        "type": "object",
        "properties": {}
      },
      "EngineTranscribeSettings": {
        "type": "object",
        "required": ["LanguageCode"],
        "properties": {
          "LanguageCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscribeLanguageCode"
              },
              {
                "description": "The language code specified for the Amazon Transcribe engine."
              }
            ]
          },
          "VocabularyFilterMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscribeVocabularyFilterMethod"
              },
              {
                "description": "The filtering method passed to Amazon Transcribe."
              }
            ]
          },
          "VocabularyFilterName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The name of the vocabulary filter passed to Amazon Transcribe."
              }
            ]
          },
          "VocabularyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The name of the vocabulary passed to Amazon Transcribe."
              }
            ]
          },
          "Region": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscribeRegion"
              },
              {
                "description": "The AWS Region passed to Amazon Transcribe. If you don't specify a Region, Amazon Chime uses the meeting's Region."
              }
            ]
          }
        },
        "description": "Settings specific to the Amazon Transcribe engine."
      },
      "EngineTranscribeMedicalSettings": {
        "type": "object",
        "required": ["LanguageCode", "Specialty", "Type"],
        "properties": {
          "LanguageCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscribeMedicalLanguageCode"
              },
              {
                "description": "The language code specified for the Amazon Transcribe Medical engine."
              }
            ]
          },
          "Specialty": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscribeMedicalSpecialty"
              },
              {
                "description": "The specialty specified for the Amazon Transcribe Medical engine."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscribeMedicalType"
              },
              {
                "description": "The type of transcription."
              }
            ]
          },
          "VocabularyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The name of the vocabulary passed to Amazon Transcribe Medical."
              }
            ]
          },
          "Region": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscribeMedicalRegion"
              },
              {
                "description": "The AWS Region passed to Amazon Transcribe Medical. If you don't specify a Region, Amazon Chime uses the meeting's Region."
              }
            ]
          }
        },
        "description": "Settings specific to the Amazon Transcribe Medical engine."
      },
      "StopMeetingTranscriptionResponse": {
        "type": "object",
        "properties": {}
      },
      "UpdateSipMediaApplicationCallResponse": {
        "type": "object",
        "properties": {
          "SipMediaApplicationCall": {
            "$ref": "#/components/schemas/SipMediaApplicationCall"
          }
        }
      },
      "AccountStatus": {
        "type": "string",
        "enum": ["Suspended", "Active"]
      },
      "Members": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Identity"
        }
      },
      "BatchChannelMemberships": {
        "type": "object",
        "properties": {
          "InvitedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "description": "The identifier of the member who invited another member."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelMembershipType"
              },
              {
                "description": "The membership types set for the channel users."
              }
            ]
          },
          "Members": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Members"
              },
              {
                "description": "The users successfully added to the request."
              }
            ]
          },
          "ChannelArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the channel to which you're adding users."
              }
            ]
          }
        },
        "description": "The membership information, including member ARNs, the channel ARN, and membership types."
      },
      "BatchCreateChannelMembershipError": {
        "type": "object",
        "properties": {
          "MemberArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChimeArn"
              },
              {
                "description": "The ARN of the member that the service couldn't add."
              }
            ]
          },
          "ErrorCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorCode"
              },
              {
                "description": "The error code."
              }
            ]
          },
          "ErrorMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The error message."
              }
            ]
          }
        },
        "description": "A list of failed member ARNs, error codes, and error messages."
      },
      "BatchCreateChannelMembershipErrors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BatchCreateChannelMembershipError"
        }
      },
      "MediaPipelineSourceType": {
        "type": "string",
        "enum": ["ChimeSdkMeeting"]
      },
      "MediaPipelineSinkType": {
        "type": "string",
        "enum": ["S3Bucket"]
      },
      "MediaCapturePipeline": {
        "type": "object",
        "properties": {
          "MediaPipelineId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GuidString"
              },
              {
                "description": "The ID of a media capture pipeline."
              }
            ]
          },
          "SourceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaPipelineSourceType"
              },
              {
                "description": "Source type from which media artifacts are saved. You must use <code>ChimeMeeting</code>."
              }
            ]
          },
          "SourceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Arn"
              },
              {
                "description": "ARN of the source from which the media artifacts will be saved."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaPipelineStatus"
              },
              {
                "description": "The status of the media capture pipeline."
              }
            ]
          },
          "SinkType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaPipelineSinkType"
              },
              {
                "description": "Destination type to which the media artifacts are saved. You must use an S3 Bucket."
              }
            ]
          },
          "SinkArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Arn"
              },
              {
                "description": "ARN of the destination to which the media artifacts are saved."
              }
            ]
          },
          "CreatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The time at which the capture pipeline was created, in ISO 8601 format."
              }
            ]
          },
          "UpdatedTimestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Iso8601Timestamp"
              },
              {
                "description": "The time at which the capture pipeline was updated, in ISO 8601 format."
              }
            ]
          }
        },
        "description": "A media capture pipeline object. A string consisting of an ID, source type, a source ARN, a sink type, and a sink ARN."
      },
      "TranscribeMedicalLanguageCode": {
        "type": "string",
        "enum": ["en-US"]
      },
      "TranscribeMedicalSpecialty": {
        "type": "string",
        "enum": ["PRIMARYCARE", "CARDIOLOGY", "NEUROLOGY", "ONCOLOGY", "RADIOLOGY", "UROLOGY"]
      },
      "TranscribeMedicalType": {
        "type": "string",
        "enum": ["CONVERSATION", "DICTATION"]
      },
      "TranscribeMedicalRegion": {
        "type": "string",
        "enum": ["us-east-1", "us-east-2", "us-west-2", "ap-southeast-2", "ca-central-1", "eu-west-1", "auto"]
      },
      "TranscribeLanguageCode": {
        "type": "string",
        "enum": [
          "en-US",
          "en-GB",
          "es-US",
          "fr-CA",
          "fr-FR",
          "en-AU",
          "it-IT",
          "de-DE",
          "pt-BR",
          "ja-JP",
          "ko-KR",
          "zh-CN"
        ]
      },
      "TranscribeVocabularyFilterMethod": {
        "type": "string",
        "enum": ["remove", "mask", "tag"]
      },
      "TranscribeRegion": {
        "type": "string",
        "enum": [
          "us-east-2",
          "us-east-1",
          "us-west-2",
          "ap-northeast-2",
          "ap-southeast-2",
          "ap-northeast-1",
          "ca-central-1",
          "eu-central-1",
          "eu-west-1",
          "eu-west-2",
          "sa-east-1",
          "auto"
        ]
      },
      "MediaCapturePipelineList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MediaCapturePipeline"
        }
      },
      "PhoneNumberCountriesList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PhoneNumberCountry"
        }
      },
      "MediaPipelineStatus": {
        "type": "string",
        "enum": ["Initializing", "InProgress", "Failed", "Stopping", "Stopped"]
      },
      "PhoneNumberCountry": {
        "type": "object",
        "properties": {
          "CountryCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Alpha2CountryCode"
              },
              {
                "description": "The phone number country code. Format: ISO 3166-1 alpha-2."
              }
            ]
          },
          "SupportedPhoneNumberTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberTypeList"
              },
              {
                "description": "The supported phone number types. "
              }
            ]
          }
        },
        "description": "The phone number country."
      },
      "PhoneNumberTypeList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PhoneNumberType"
        }
      }
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "x-metadata": {
    "apiVersion": "2018-05-01",
    "endpointPrefix": "chime",
    "protocol": "rest-json",
    "serviceFullName": "Amazon Chime",
    "serviceId": "Chime",
    "signatureVersion": "v4",
    "uid": "chime-2018-05-01",
    "targetPrefix": "UCBuzzConsoleService"
  }
}
