{
  "openapi": "3.0.0",
  "info": {
    "version": "v2",
    "title": "DocuSign",
    "description": "The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.",
    "x-categories": ["project-management"],
    "x-logo": {
      "url": "/logos/docusign.png"
    },
    "termsOfService": "https://www.docusign.com/company/terms-and-conditions/web",
    "contact": {
      "name": "DocuSign Developer Center",
      "url": "https://developers.docusign.com/",
      "email": "devcenter@docusign.com"
    }
  },
  "externalDocs": {
    "description": "See the DocuSign REST API Guide for more information.",
    "url": "https://docs.docusign.com/esign"
  },
  "paths": {
    "/service_information": {
      "get": {
        "tags": ["Services"],
        "summary": "Get Service Information",
        "description": "Retrieves the available REST API versions.\n\nDocuSign Production system: https://www.docusign.net/restapi/service_information\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\n\nYou do not need an integrator key to view the REST API versions and resources.",
        "operationId": "ServiceInformation_GetServiceInformation",
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/serviceInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2": {
      "get": {
        "tags": ["Resources"],
        "summary": "Get Resource Information",
        "description": "Retrieves the base resources available for the DocuSign REST APIs.\n\nYou do not need an integrator key to view the REST API versions and resources.\n\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\n\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\n\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and JSON request and response samples.",
        "operationId": "ServiceInformation_GetResourceInformation",
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/resourceInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Post Accounts",
        "description": "Creates new DocuSign accounts.\nYou can use this method to create\na single account\nor up to 100 accounts at a time.\n\nWhen creating a single account,\nthe body of the request is a\n[`newAccountDefinition`][newAccountDefinition]\nobject.\n\nIf the request succeeds.\nit returns a\n201 (Created) code.\nThe response returns the new account ID, password and the default user\ninformation for each newly created account.\n\n\nWhen creating multiple accounts,\nthe body of the request is a\n`newAccountRequests`\nobject,\nwhich contains one or more \n[`newAccountDefinition`][newAccountDefinition]\nobjects.\nYou can create up to 100 new accounts\nat a time this way.\n\nThe body for a multi-account\ncreation request\nlooks like this in JSON:\n\n```\n{\n  \"newAccountRequests\": [\n    {\n      \"accountName\": \"accountone\",\n      . . .\n    },\n    {\n      \"accountName\": \"accounttwo\",\n      . . .\n    }\n  ]\n}\n```\n\nA multi-account request\nlooks like this in XML:\n\n```\n<newAccountsDefinition xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.docusign.com/restapi\">\n  <newAccountRequests>\n    <newAccountDefinition>\n      . . .\n    </newAccountDefinition>\n    <newAccountDefinition>\n      . . .\n    </newAccountDefinition>\n  </newAccountRequests>\n</newAccountsDefinition>\n```\n\nA multi-account creation request\nmay succeed (report a 201 code)\neven if some accounts could not be created.\nIn this case, the `errorDetails` property\nin the response contains specific information\nabout the failure.\n\n\n### Account Settings\n\nThe `accountSettings` property\nis a [name/value][nameValue]\nlist that can contain the following settings:\n\n| Name                                               | Type    | Authorization Required                                      | Description|  \n| :------------------------------------------------- | :------ | :---------------------------------------------------------- ||  \n| adoptSigConfig                                     | Boolean | Admin                                                       | When **true**, the Signature Adoption Configuration page is available to account administrators|  \n| allowAccessCodeFormat                              | Boolean | Admin                                                       | When **true**, the Access Code Format page is available to account administrators|  \n| allowAccountManagementGranular                     | Boolean | Admin                                                       | When **true**, the Delegated Administration functionality is available to account|  \n| allowBulkSend                                      | Boolean | Admin                                                       | When **true**, the account can set if the bulk send feature can be used|  \n| allowCDWithdraw                                    | Boolean | Admin                                                       | When **true**, signers can withdraw their consent to use electronic signatures|  \n| allowConnectSendFinishLater                        | Boolean | Reserved                                                    | Reserved for DocuSign|  \n| allowDataDownload                                  | Boolean | Admin                                                       | When **true**, the account can download envelope data|  \n| allowEnvelopeCorrect                               | Boolean | Admin                                                       | When **true**, the account allows in process envelopes to be corrected|  \n| allowEnvelopePublishReporting                      | Boolean | Admin                                                       | When **true**, the account can access the Envelope Publish section in Classic DocuSign Experience Account Administration|  \n| allowExpressSignerCertificate                      | Boolean | Admin                                                       | When **true**, senders are allowed to use the DocuSign Express digital signatures|  \n| allowExternalSignaturePad                          | Boolean | Admin                                                       | When **true**, an external signature pad can be used for signing. The signature pad type is set by the externalSignaturePadType property|  \n| allowInPerson                                      | Boolean | SysAdmin                                                    | When **true**, the account allows In Person Signing|  \n| allowMarkup                                        | Boolean | Admin                                                       | When **true**, the document markup feature is enabled for the account|  \n| allowMemberTimezone                                | Boolean | Admin                                                       | When **true**, account users can set their own time zones|  \n| allowMergeFields                                   | Boolean | Admin                                                       | When **true**, the account can use merge fields in conjunction with DocuSign for Salesforce|  \n| allowMultipleSignerAttachments                     | Boolean | Admin                                                       | When **true**, multiple signer attachments are allowed for an envelope.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |  \n| allowOfflineSigning                                | Boolean | Admin                                                       | When **true**, the account can use Offline Signing and envelopes signed using offline signing on mobile devices are synchronized with this account. This option and the inSessionEnabled option must both be enabled (**true**) for a caller to use offline signing|  \n| allowOpenTrustSignerCertificate                    | Boolean | Admin                                                       | When **true**, senders are allowed to use the OpenTrust digital signatures|  \n| allowPaymentProcessing                             | Boolean | Admin                                                       | When **true**, the account can access the Payment Processing set up page|  \n| allowPersonalSignerCertificate                     | Boolean | Admin                                                       | When **true**, the account can specify that signers must use personal signer certificates during signing|  \n| allowPrivateSigningGroups                          | Boolean | SysAdmin Read Only                                          | Reserved for DocuSign. This currently returns false in a response. This setting is only shown in the response when listing account settings|  \n| allowReminders                                     | Boolean | Admin                                                       | When **true**, the reminder and expiration functionality is available when sending envelops|  \n| allowSafeBioPharmaSignerCertificate                | Boolean | Admin                                                       | When **true**, senders are allowed to use the SAFE BioPharma digital signatures.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |  \n| allowSharedTabs                                    | Boolean | Admin                                                       | When **true**, the account allows users to share custom tabs (fields). <br>   This setting is only shown when getting account settings. It cannot be modified|  \n| allowSignDocumentFromHomePage                      | Boolean | Admin                                                       | When **true**, the Sign a Document Now button is available on the Home tab|  \n| allowSignatureStamps                               | Boolean | Reserved                                                    | Reserved for DocuSign|  \n| allowSignerReassign                                | Boolean | Admin                                                       | When **true**, the account allows signers to reassign an envelope|  \n| allowSignerReassignOverride                        | Boolean | Admin                                                       | When **true**, the sender has the option override the default account setting for reassigning recipients|  \n| allowSigningGroups                                 | Boolean | SysAdmin Read Only                                          | When **true**, the account can use signing groups. This setting is only shown in the response when listing account settings|  \n| allowTabOrder                                      | Boolean | Admin                                                       | When **true**, the Tab Order field is available for use when creating tabs|  \n| allowWorkspaceComments                             | Boolean | Reserved                                                    | Reserved for DocuSign|  \n| allowWorkspaceCreate                               | Boolean | Admin                                                       | When **true**, account users can create DocuSign Rooms|  \n| attachCompletedEnvelope                            | Boolean | SysAdmin                                                    | When **true**, envelope documents are included as a PDF file attachment for signing completed emails.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |  \n| authenticationCheck                                | String  | Admin                                                       | Sets when authentication checks are applied for recipient envelope access. This setting only applies to the following ID checks: <ul> <li>Phone Authentication</li> <li>SMS Authentication</li> <li>Knowledge-Based ID</li> </ul> This setting takes one of the following options: <ul> <li><p><code>initial_access</code>: The authentication check always applies the first time a recipient accesses the documents. Recipients are not asked to authenticate again when they access the documents from the same browser on the same device. If the recipient attempts to access the documents from a different browser or a different device, the recipient must pass authentication again. Once authenticated, that recipient is not challenged again on the new device or browser. The ability for a recipient to skip authentication for documents is limited to documents sent from the same sending account.</p></li> <li><p><code>each_access</code>: Authentication checks apply every time a recipient attempts to access the envelope. However, you can configure the Authentication Expiration setting to allow recipients to skip authentication when they have recently passed authentication by setting a variable timeframe.</p></li> </ul> |  \n| autoNavRule                                        | String  | Admin                                                       | The auto-navigation rule for the account. Enumeration values are: <ul> <li><code>off</li></code> <li><code>required_fields</li></code> <li><code>required_and_blank_fields</li></code> <li><code>all_fields</li></code> <li><code>page_then_required_fields</li></code> <li><code>page_then_required_and_blank_fields</li></code> <li><code>page_then_all_fields</li></code> </ul|  \n| bulkSend                                           | Boolean | Admin                                                       | When **true**, the account allows bulk sending of envelopes|  \n| canSelfBrandSend                                   | Boolean | SysAdmin                                                    | When **true**, account administrators can self-brand their sending console through the DocuSign Console|  \n| canSelfBrandSign                                   | Boolean | SysAdmin                                                    | When **true**, account administrators can self-brand their signing console through the DocuSign Console.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |  \n| conditionalFieldsEnabled                           | Boolean | Admin                                                       | When **true**, conditional fields can be used by the account.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |  \n| consumerDisclosureFrequency                        | enum    | Admin                                                       | Possible values are: <ul> <li> <code>once</code>: Per account, the supplemental document is displayed once only per userId. </li> <li> <code>always</code>: Per envelope, the supplemental document is displayed once only per userId. </li> <li> <code>each_access</code>: - Per envelope, the supplemental document is displayed once only per recipientId. </li> </ul|  \n| dataFieldRegexEnabled                              | Boolean | Admin                                                       | When **true**, the Regex field is available for tabs with that property|  \n| dataFieldSizeEnabled                               | Boolean | Admin                                                       | When **true**, the maximum number of characters field is available for tabs with that property|  \n| dataPopulationScope                                | String  | Admin                                                       | Specifies how data is shared for tabs with the same tabLabel. There are two possible values: <ul> <li> <code>document</code>: Tabs in a document with the same label populate with the same data. </li> <li> <code>envelope</code>: Tabs in all documents in the envelope with the same label populate with the same data. </li> </ul> This setting applies to the following tab types: <ul> <li> Check box </li> <li> Company </li> <li> Data Field </li> <li> Dropdown List </li> <li> Full Name </li> <li> Formula </li> <li> Note </li> <li> Title </li> </ul> Changing this setting affects envelopes that have been sent but not completed|  \n| disableMobilePushNotifications                     | Boolean | Admin                                                       | When **true**, mobile push notifications are disabled on the account|  \n| disableMobileSending                               | Boolean | Admin                                                       | When **true**, sending from mobile applications is disabled|  \n| disableMultipleSessions                            | Boolean | Admin                                                       | When **true**, account users cannot be logged into multiple sessions at once|  \n| disableUploadSignature                             | Boolean | Admin                                                       | When **true**, signers cannot use the upload signature/initials image option when signing a document|  \n| documentConversionRestrictions                     | String  | Admin                                                       | Sets the account document upload restriction for non-account administrators. There are three possible values: <ul> <li> <code>no_restrictions</code> : there are no restrictions on the type of documents that can be uploaded. </li> <li> <code>allow_pdf_only</code> : only: non-administrators can only upload PDF files. </li> <li> <code>no_upload</code> : Non-administrators cannot upload files. </li> </ul|  \n| enableAutoNav                                      | Boolean | SysAdmin  or EnableAutoNavByDSAdmin is set                  | When **true**, the auto-navigation is enabled for the account|  \n| enableCalculatedFields                             | Boolean | Admin & AllowExpression is set                              | When **true**, this account can use the Calculated Fields feature|  \n| enableDSPro                                        | Boolean | SysAdmin                                                    | When **true**, this account can send and manage envelopes from the DocuSign Desktop Client|  \n| enableEnvelopeStampingByAccountAdmin               | Boolean | SysAdmin or account has EnableEnvelopeStampingByDSAdmin set | When **true**, senders for this account can choose to have the envelope ID stamped in the document margins.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |  \n| enablePaymentProcessing                            | Boolean | Admin & AllowPaymentProcessing is set.                      | When **true**, Payment Processing is enabled for the account|  \n| enablePowerForm                                    | Boolean | SysAdmin                                                    | When **true**, PowerForm access is enabled for the account|  \n| enablePowerFormDirect                              | Boolean | Admin                                                       | When **true**, direct PowerForms are enabled for the account.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |  \n| enableRecipientDomainValidation                    | Boolean | Admin                                                       | When **true**, validation on recipient email domains for DocuSign Access feature is enabled|  \n| enableRequireSignOnPaper                           | Boolean | Admin                                                       | When **true**, the account can use the requireSignOnPaper option|  \n| enableReservedDomain                               | Boolean | SysAdmin                                                    | When **true**, an account administrator can reserve web domain and users|  \n| enableSMSAuthentication                            | Boolean | Admin                                                       | When **true**, the account can use SMS authentication|  \n| enableSendToAgent                                  | Boolean | SysAdmin                                                    | When **true**, this account can use the Agent Recipient Type|  \n| enableSendToIntermediary                           | Boolean | Admin & AllowSendToIntermediary is set                      | When **true**, this account can use the Intermediary Recipient Type.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |  \n| enableSendToManage                                 | Boolean | Admin                                                       | When **true**, this account can use the Editor Recipient Type|  \n| enableSequentialSigningAPI                         | Boolean | SysAdmin                                                    | When **true**, the account can define the routing order of recipients for envelopes sent using the DocuSign|  \n| enableSequentialSigningUI                          | Boolean | SysAdmin                                                    | When **true**, the account can define the routing order of recipients for envelopes sent using the DocuSign console|  \n| enableSignOnPaper                                  | Boolean | Admin                                                       | When **true**, a user can allow signers to use the sign on paper option|  \n| enableSignOnPaperOverride                          | Boolean | Admin                                                       | When **true**, a user can override the default account setting for the sign on paper option|  \n| enableSignerAttachments                            | Boolean | Admin                                                       | When **true**, a user can request attachments from a signer|  \n| enableTransactionPoint                             | Boolean | SysAdmin                                                    | When **true**, Transaction Point is enabled for this account|  \n| enableVaulting                                     | Boolean | SysAdmin                                                    | When **true**, this account can use electronic vaulting for documents|  \n| enableWorkspaces                                   | Boolean | Admin                                                       | When **true**, DocuSign Rooms is enabled for the account|  \n| envelopeIntegrationAllowed                         | String  | SysAdmin                                                    | Shows the envelope integration rule for the account. <br> Enumeration values are: NotAllowed, Full, IntegrationSendOnly|  \n| envelopeIntegrationEnabled                         | Boolean | Admin & EnvelopeIntegrationAllowed is set                   | When **true**, envelope integration is enabled for the account|  \n| envelopeStamplingDefaultValue                      | Boolean | (GET only)                                                  | When **true**, envelopes sent by this account automatically have the envelope ID stamped in the margins, unless the sender selects not to have them stamped|  \n| externalSignaturePadType                           | String  | Admin                                                       | Sets the type of signature pad that can be used. Possible values are: <ul> <li> <code>none</code> </li> <li> <code>topaz</code> </li> <li> <code>e_padv9</code> </li> <li> <code>e_pad_integrisign</code> </li> </ul>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |  \n| faxOutEnabled                                      | Boolean | Admin                                                       | When **true**, the account can use the fax out feature|  \n| idCheckExpire                                      | String  | Admin                                                       | Indicates when a user's authentication expires. Possible values are: <ul> <li> <code>always</code> </li> <li> <code>never</code> </li> <li> <code>variable</code>: Use the value in <code>idCheckExpireDays</code> </li> </ul|  \n| idCheckExpireDays                                  | Integer | Admin                                                       | The number of days before a user's authentication expires.  Valid only if the `IDCheckExpire` value is Variable|  \n| idCheckRequired                                    | String  | Admin                                                       | Indicates if authentication is required by envelope signers. Possible values are: <ul> <li> <code>always</code> </li> <li> <code>never</code> </li> <li> <code>optional</code>: Authentication is determined by the sender. </li> </ul|  \n| inPersonIDCheckQuestion                            | String  | Admin                                                       | The default question used by the In Person signing host for an In Person signing session|  \n| inSessionEnabled                                   | Boolean | Admin                                                       | When **true**, the account can use In Session (embedded) and offline signing. This option and the allowOfflineSigning option must both be enabled (**true**) for a caller to use offline signing|  \n| inSessionSuppressEmails                            | Boolean | Admin                                                       | When **true**, emails are not sent to the embedded recipients on an envelope for the account|  \n| maximumSigningGroups                               | String  | SysAdmin Read Only                                          | The maximum number of signing groups an account can have. The default value for this is 50. This setting is only shown in the response when listing account settings|  \n| maximumUsersPerSigningGroup                        | String  | SysAdmin Read Only                                          | The maximum number of members in a signing group. The default value for this is 50. This setting is only shown in the response when listing account settings|  \n| mobileSessionTimeout                               | String  | Admin                                                       | Sets the amount of idle activity time, in minutes, before a mobile user is automatically logged off of the system. If the setting is 0, then DocuSign mobile application users are never automatically logged off the system. The minimum setting is 1 minute and the maximum setting is 120 minutes. <br> This setting only applies to the DocuSign for iOS v2.8.2 or later mobile app|  \n| phoneAuthRecipientMayProvidePhoneNumber            | Boolean | Admin                                                       | When **true**, senders can select to allow the recipient to provide a phone number for the Phone Authentication process|  \n| pkiSignDownloadedPDFDocs                           | String  | Admin                                                       | The policy for adding a digital certificate to downloaded, printed and emailed documents. Possible values are: <ul> <li> <code>no_sign</code> </li> <li> <code>no_sign_allow_user_override</code> </li> <li> <code>yes_sign</code> </li> </ul|  \n| recipientsCanSignOffline                           | Boolean | Admin                                                       | When **true**, envelopes signed using offline signing on mobile devices are synchronized with this account|  \n| requireDeclineReason                               | Boolean | Admin                                                       | When **true**, recipients that decline to sign an envelope must provide a reason|  \n| requireSignerCertificateType                       | String  | Admin                                                       | Sets which Digital Signature certificate is required when sending envelopes. There are three possible values: <ul> <li> <code>none</code>: a Digital Signature certificate is not required. </li> <li> <code>docusign_express</code>: signers must use a DocuSign Express certificate. </li> <li> <code>docusign_personal</code>: signers must use a DocuSign personal certificate. </li> <li> <code>open_trust</code>: signers must use an OpenTrust certificate. </li> </ul>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |  \n| rsaVeridAccountName                                | String  | Admin                                                       | The RSA account name.<br> Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  \n| rsaVeridPassword                                   | String  | Admin                                                       | The password used with the RSA account.<br>Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  \n| rsaVeridRuleset                                    | String  | Admin                                                       | The RSA rule set used with the account. <br>Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  \n| rsaVeridUserId                                     | String  | Admin                                                       | The user ID for the RSA account. <br>Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  \n| savingCustomTabsEnabled                            | Boolean | Admin                                                       | When **true**, account users can save custom tabs|  \n| selfSignedRecipientEmailDocument                   | String  | Admin                                                       | Sets how self-signed documents are presented to the email recipients. Possible values are: <ul> <li><code>include_pdf</code>: A PDF of the completed document is attached to the email</li> <li><code>include_link</code>: A secure link to the self-signed documents is included in the email.</li> </ul|  \n| selfSignedRecipientEmailDocumentRights             | Boolean | Admin                                                       | When **true**, account administrators can set the selfSignedRecipientEmailDocument option|  \n| selfSignedRecipientEmailDocumentUserOverride       | Boolean | Admin                                                       | When **true** the selfSignedRecipientEmailDocument userSetting can be set for an individual user.  The userSetting will override the account setting|  \n| selfSignedRecipientEmailDocumentUserOverrideRights | Boolean | Admin                                                       | When **true**, account administrators can set the selfSignedRecipientEmailDocumentOverride option|  \n| sendToCertifiedDeliveryEnabled                     | Boolean | Admin                                                       | When **true**, the Certified Deliveries Recipient type can be used by the account|  \n| senderMustAuthenticateSigning                      | Boolean | Admin                                                       | When **true**, a sender that is also a recipient of an envelope must follow the authentication requirements for the envelope|  \n| sessionTimeout                                     | Integer | Admin                                                       | The amount of idle activity time, in minutes, before a user is automatically logged out of the system. The minimum setting is 20 minutes and the maximum setting is 120 minutes|  \n| setRecipEmailLang                                  | Boolean | Admin                                                       | When **true**, senders can set the email languages for each recipient|  \n| setRecipSignLang                                   | Boolean | Admin                                                       | When **true**, senders can set the signing language used for each recipient|  \n| sharedCustomTabsEnabled                            | Boolean | Admin                                                       | When **true**, saved custom tabs can be shared with account users|  \n| signDateFormat                                     | String  | Admin                                                       | The date/time format applied to Date Signed fields for the account|  \n| signTimeShowAmPm                                   | Boolean | Admin                                                       | When **true**, AM or PM is shown as part of the time for signDateFormat|  \n| signerAttachCertificateToEnvelopePDF               | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the Certificate of Completion is included in the envelope documents PDF when it is downloaded|  \n| signerAttachConcat                                 | Boolean | Admin                                                       | When **true**, signer attachments are added to the parent document that the attachment tab is located on, instead of the default behavior that creates a new document in the envelope for every signer attachment|  \n| signerCanCreateAccount                             | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the signer without a DocuSign account can create a DocuSign account after signing.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |  \n| signerCanSignOnMobile                              | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, signers can use the DocuSign mobile signing user interface|  \n| signerInSessionUseEnvelopeCompleteEmail            | Boolean | Admin                                                       | When **true**, an envelope complete email is sent to an In Session (embedded) or offline signer after DocuSign processes the envelope|  \n| signerLoginRequirements                            | String  | Admin                                                       | Sets the Login requirements for the signer. There are four options: <ul> <li> <code>login_not_required</code>: The signer is not required to log on to the system. </li> <li> <code>login_required_if_account_holder</code>: If the signer has a DocuSign account, they must log on to sign the document. </li> <li> <code>login_required_per_session</code>: The sender cannot send an envelope to anyone who does not have a DocuSign account. </li> <li> <code>login_required_per_envelope</code>: The sender cannot send an envelope to anyone who does not have a DocuSign account and the signer must log on the system for each envelope they will sign. </li> </ul> If you use Direct PowerForms or captive/embedded signers, the \"Account required\" settings are bypassed for those signers. If your workflow requires that the signer have an account, you should not use those methods.                                                                                                                                                                                                                                                                                                                                                           |  \n| signerMustHaveAccount                              | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, senders can only send an envelope to a recipient that has a DocuSign account|  \n| signerMustLoginToSign                              | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, an envelope signer must log in to the DocuSign console to sign an envelope|  \n| signerShowSecureFieldInitialValues                 | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the initial value of all SecureFields is written to the document when sent|  \n| tabDataLabelEnabled                                | Boolean | Admin                                                       | When **true**, senders can change the default tabLabel for tabs|  \n| tabLockingEnabled                                  | Boolean | Admin                                                       | When **true**, the locked option is available for tabs with that property|  \n| tabTextFormattingEnabled                           | Boolean | Admin                                                       | When **true**, the formatting options (font type, font size, font color, bold, italic, and underline) are available for tabs with those properties|  \n| universalSignatureOptIn                            | Boolean | Reserved                                                    | Reserved for DocuSign|  \n| universalSignatureOptOut                           | Boolean | Reserved                                                    | Reserved for DocuSign|  \n| useAccountLevelEmail                               | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the content of notification emails is determined at the account level|  \n| useConsumerDisclosure                              | Boolean | Admin                                                       | When **true**, the account  can use supplemental documents|  \n| usesAPI                                            | Boolean | SysAdmin                                                    | When **true**, the account can use the DocuSign|  \n\n\n\n\n\n[newAccountDefinition]: #/definitions/newAccountDefinition\n[nameValue]: #/definitions/nameValue\n",
        "operationId": "Accounts_PostAccounts",
        "parameters": [
          {
            "name": "preview_billing_plan",
            "in": "query",
            "description": "When set to **true**, creates the account using a preview billing plan.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newAccountDefinition"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/newAccountSummary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get Account",
        "description": "Retrieves the account information for the specified account.\n\n**Response**\nThe `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API. ",
        "operationId": "Accounts_GetAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_account_settings",
            "in": "query",
            "description": "When set to **true**, includes the account settings for the account in the response.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/accountInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["Accounts"],
        "summary": "Delete Account",
        "description": "This closes the specified account. You must be an account admin to close your account. Once closed, an account must be reopened by DocuSign.",
        "operationId": "Accounts_DeleteAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/billing_charges": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get Account Billing Charges",
        "description": "Retrieves the list of recurring and usage charges for the account. This can be used to determine the charge structure and usage of charge plan items. \n\nPrivileges required: account administrator ",
        "operationId": "BillingCharges_GetAccountBillingCharges",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_charges",
            "in": "query",
            "description": "Specifies which billing charges to return.\nValid values are:\n\n* envelopes\n* seats\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/billingChargeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/billing_invoices": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get Billing Invoices",
        "description": "Retrieves a list of invoices for the account. If the from date or to date queries are not specified, the response returns invoices for the last 365 days.\n\nPrivileges required: account administrator ",
        "operationId": "BillingInvoices_GetBillingInvoices",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Specifies the date/time of the earliest invoice in the account to retrieve.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "Specifies the date/time of the latest invoice in the account to retrieve.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/billingInvoicesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/billing_invoices/{invoiceId}": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get Billing Invoice",
        "description": "Retrieves the specified invoice. \n\n###### Note: If the `pdfAvailable` property in the response is set to *true*, you can download a PDF version of the invoice. To download the PDF, make the call again and change the value of the `Accept` property in the header to `Accept: application/pdf`.\n\nPrivileges required: account administrator\n\nThe response returns a list of charges and information about the charges. Quantities are usually shown as 'unlimited' or an integer. Amounts are shown in the currency set for the account.\n\n**Response**\nThe following table provides a description of the different `chargeName` property values. The information will grow as more chargeable items are added to the system.\n\n| chargeName | Description |\n| --- | --- |\n| id_check | ID Check Charge |\n| in_person_signing | In Person Signing charge |\n| envelopes Included | Sent Envelopes for the account |\n| age_verify | Age verification check |\n| ofac | OFAC Check |\n| id_confirm | ID confirmation check |\n| student_authentication | STAN PIN authentication check |\n| wet_sign_fax | Pages for returning signed documents by fax |\n| attachment_fax | Pages for returning attachments by fax |\n| phone_authentication | Phone authentication charge |\n| powerforms | PowerForm envelopes sent |\n| signer_payments | Payment processing charge |\n| outbound_fax | Send by fax charge |\n| bulk_recipient_envelopes | Bulk Recipient Envelopes sent |\n| sms_authentications | SMS authentication charge |\n| saml_authentications | SAML authentication charge |\n| express_signer_certificate | DocuSign Express Certificate charge |\n| personal_signer_certificate | Personal Signer Certificate charge |\n| safe_certificate | SAFE BioPharma Signer Certificate charge |\n| seats | Included active seats charge |\n| open_trust_certificate | OpenTrust Signer Certificate charge | ",
        "operationId": "BillingInvoices_GetBillingInvoice",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/billingInvoice"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/billing_invoices_past_due": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get Billing Invoices Past Due",
        "description": "Returns a list past due invoices for the account and notes if payment can be made through the REST API. \n\nPrivileges Required: account administrator",
        "operationId": "BillingInvoices_GetBillingInvoicesPastDue",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/billingInvoicesSummary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/billing_payments": {
      "get": {
        "tags": ["Payments"],
        "summary": "Get Payment List",
        "description": "Retrieves a list containing information about one or more payments. If the from date or to date queries are not used, the response returns payment information for the last 365 days. \n\nPrivileges required: account administrator ",
        "operationId": "BillingPayments_GetPaymentList",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Specifies the date/time of the earliest payment in the account to retrieve.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "Specifies the date/time of the latest payment in the account to retrieve.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/billingPaymentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["Payments"],
        "summary": "Post Payment",
        "description": "Posts a payment to a past due invoice. \n\n###### Note: This can only be used if the `paymentAllowed` value for a past due invoice is true. This can be determined calling [ML:GetBillingInvoicesPastDue].\n\nThe response returns information for a single payment, if a payment ID was used in the endpoint, or a list of payments. If the from date or to date queries or payment ID are not used, the response returns payment information for the last 365 days. If the request was for a single payment ID, the `nextUri` and `previousUri` properties are not returned.\n\nPrivileges required: account administrator",
        "operationId": "BillingPayments_PostPayment",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/billingPaymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/billingPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/billing_payments/{paymentId}": {
      "get": {
        "tags": ["Payments"],
        "summary": "Get Payment",
        "description": "Retrieves the information for a specified payment. \n\nPrivileges required: account administrator ",
        "operationId": "BillingPayments_GetPayment",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/billingPaymentItem"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/billing_plan": {
      "get": {
        "tags": ["BillingPlans"],
        "summary": "Get Billing Plan",
        "description": "Retrieves the billing plan information for the specified account, including the current billing plan, successor plans, billing address, and billing credit card.\n\nBy default the successor plan and credit card information is included in the response. This information can be excluded from the response by adding the appropriate optional query string with the `setting` set to **false**. \n\nResponse\n\nThe response returns the billing plan information, including the currency code, for the plan. The `billingPlan` and `succesorPlans` property values are the same as those shown in the [ML:Get Billing Plan Details] reference. the `billingAddress` and `creditCardInformation` property values are the same as those shown in the [ML:Update Billing Plan] reference.\n\n###### Note: When credit card number information is shown, a mask is applied to the response so that only the last 4 digits of the card number are visible. ",
        "operationId": "BillingPlan_GetBillingPlan",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_credit_card_information",
            "in": "query",
            "description": "When set to **true**, payment information including credit card information will show in the return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_metadata",
            "in": "query",
            "description": "When set to **true**, the `canUpgrade` and `renewalStatus` properities are included the response and an array of `supportedCountries` property is added to the `billingAddress` information. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_successor_plans",
            "in": "query",
            "description": "When set to **true**, excludes successor information from the response.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/accountBillingPlanResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["BillingPlans"],
        "summary": "Put Billing Plan",
        "description": "Updates the billing plan information, billing address, and credit card information for the specified account.",
        "operationId": "BillingPlan_PutBillingPlan",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preview_billing_plan",
            "in": "query",
            "description": "When set to **true**, updates the account using a preview billing plan.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/billingPlanInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/billingPlanUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/billing_plan/credit_card": {
      "get": {
        "tags": ["BillingPlans"],
        "summary": "Get Credit Card Info",
        "operationId": "BillingPlan_GetCreditCardInfo",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/creditCardInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/billing_plan/purchased_envelopes": {
      "put": {
        "tags": ["BillingPlans"],
        "summary": "Put Purchased Envelopes",
        "description": "Reserved: At this time, this endpoint is limited to DocuSign internal use only. Completes the purchase of envelopes for your account. The actual purchase is done as part of an internal workflow interaction with an envelope vendor.",
        "operationId": "PurchasedEnvelopes_PutPurchasedEnvelopes",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/purchasedEnvelopesInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/brands": {
      "get": {
        "tags": ["AccountBrands"],
        "summary": "Get Brands",
        "description": "Retrieves the list of brand profiles associated with the account and the default brand profiles. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSend`)  must be set to **true** for the account to use this call.",
        "operationId": "Brands_GetBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exclude_distributor_brand",
            "in": "query",
            "description": "When set to **true**, excludes distributor brand information from the response set.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_logos",
            "in": "query",
            "description": "When set to **true**, returns the logos associated with the brand.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBrands"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["AccountBrands"],
        "summary": "Post Brands",
        "description": "Creates one or more brand profile files for the account. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSig`) must be set to **true** for the account to use this call.\n\nAn error is returned if `brandId` property for a brand profile is already set for the account. To upload a new version of an existing brand profile, you must delete the profile and then upload the newer version.\n\nWhen brand profile files are being uploaded, they must be combined into one zip file and the `Content-Type` must be `application/zip`.",
        "operationId": "Brands_PostBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/brand"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBrands"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["AccountBrands"],
        "summary": "Delete Brands",
        "description": "Deletes one or more brand profiles from an account. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSend`) must be set to **true** to use this call.",
        "operationId": "Brands_DeleteBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/brandsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBrands"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/brands/{brandId}": {
      "get": {
        "tags": ["AccountBrands"],
        "summary": "Get Brand",
        "operationId": "Brand_GetBrand",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "The unique identifier of a brand.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_external_references",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_logos",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/brand"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["AccountBrands"],
        "summary": "Put Brand",
        "operationId": "Brand_PutBrand",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "The unique identifier of a brand.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/brand"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/brand"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "delete": {
        "tags": ["AccountBrands"],
        "summary": "Delete Brand",
        "operationId": "Brand_DeleteBrand",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "The unique identifier of a brand.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/brands/{brandId}/file": {
      "get": {
        "tags": ["AccountBrands"],
        "summary": "Get Brand Export File",
        "operationId": "BrandExport_GetBrandExportFile",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "The unique identifier of a brand.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/brands/{brandId}/logos/{logoType}": {
      "get": {
        "tags": ["AccountBrands"],
        "summary": "Get Brand Logo",
        "operationId": "BrandLogo_GetBrandLogo",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "The unique identifier of a brand.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logoType",
            "in": "path",
            "description": "One of **Primary**, **Secondary** or **Email**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["AccountBrands"],
        "summary": "Put Brand Logo",
        "operationId": "BrandLogo_PutBrandLogo",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "The unique identifier of a brand.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logoType",
            "in": "path",
            "description": "One of **Primary**, **Secondary** or **Email**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "image/png": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "description": "Brand logo binary Stream. Supported formats: JPG, GIF, PNG. Maximum file size: 300 KB. Recommended dimensions: 296 x 76 pixels (larger images will be resized). Changes may take up to one hour to display in all places",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "delete": {
        "tags": ["AccountBrands"],
        "summary": "Delete Brand Logo",
        "operationId": "BrandLogo_DeleteBrandLogo",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "The unique identifier of a brand.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logoType",
            "in": "path",
            "description": "One of **Primary**, **Secondary** or **Email**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/brands/{brandId}/resources": {
      "get": {
        "tags": ["AccountBrands"],
        "summary": "Get Brand Resources List",
        "operationId": "BrandResources_GetBrandResourcesList",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "The unique identifier of a brand.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/brandResourcesList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/brands/{brandId}/resources/{resourceContentType}": {
      "get": {
        "tags": ["AccountBrands"],
        "summary": "Get Brand Resources",
        "operationId": "BrandResources_GetBrandResources",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "The unique identifier of a brand.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceContentType",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "langcode",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "return_master",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["AccountBrands"],
        "summary": "Put Brand Resources",
        "operationId": "BrandResources_PutBrandResources",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "The unique identifier of a brand.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceContentType",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/brandResources"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": "",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file.xml": {
                    "description": "Brand resource XML file.",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["file.xml"]
              }
            }
          },
          "required": true
        }
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/bulk_envelopes": {
      "get": {
        "tags": ["BulkEnvelopes"],
        "summary": "Get Envelopes Bulk",
        "description": "Retrieves status information about all the bulk recipient batches. A bulk recipient batch is the set of envelopes sent from a single bulk recipient file. The response includes general information about each bulk recipient batch. \n\nThe response returns information about the envelopes sent with bulk recipient batches, including the `batchId` property, which can be used to retrieve a more detailed status of individual bulk recipient batches.",
        "operationId": "BulkEnvelopes_GetEnvelopesBulk",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of results to return. This can be 1 to 20.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "Specifies which entries are included in the response. You can include multiple entries by using commas in the query string. \n\nExample: `?include=\"failed,queued\"`\n\nValid values: \n* `all`: Returns all entries. If present, overrides all other query settings.\n* `failed`: Returns entries with a `failed` status.\n* `processing`: Returns entries with a `processing` status.\n* `queued`: Returns entries with a `queued` status.\n* `sent`: Returns entries with a `sent` status. \n\n**Note**: If you do not provide a query string, no envelopes are included.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "The position of the bulk envelope items in the response. This is used for repeated calls, when the number of bulk envelopes returned is too large for one return. The default value is 0.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/bulkEnvelopesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/bulk_envelopes/{batchId}": {
      "get": {
        "tags": ["BulkEnvelopes"],
        "summary": "Get Bulk Envelopes Batch Id",
        "description": "Retrieves the status information of a single bulk recipient batch. A bulk recipient batch is the set of envelopes sent from a single bulk recipient file. ",
        "operationId": "BulkEnvelopes_GetBulkEnvelopesBatchId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "description": "Specifies the id of the batch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Specifies the number of entries to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Specifies which entries are included in the response. You can include multiple entries by using commas in the query string. \n\nExample: `?include=\"failed,queued\"`\n\nValid values: \n* `all`: Returns all entries. If present, overrides all other query settings. This is the default if no query string is provided.\n* `failed`: Entries with a failed status.\n* `processing`: Entries with a processing status.\n* `queued`: Entries with a queued status.\n* `sent`: Entries with a sent status. \n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "Specifies the location in the list of envelopes from which to start.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/bulkEnvelopeStatus"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/captive_recipients/{recipientPart}": {
      "delete": {
        "tags": ["Accounts"],
        "summary": "Delete Captive Recipients Part",
        "description": "Deletes the signature for one or more captive recipient records; it is primarily used for testing. This provides a way to reset the signature associated with a client user ID so that a new signature can be created the next time the client user ID is used.",
        "operationId": "CaptiveRecipients_DeleteCaptiveRecipientsPart",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientPart",
            "in": "path",
            "required": true,
            "description": "Signature is the only supported value. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/captiveRecipientInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/captiveRecipientInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/chunked_uploads": {
      "post": {
        "tags": ["ChunkedUploads"],
        "summary": "Post Chunked Uploads",
        "operationId": "ChunkedUploads_PostChunkedUploads",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/chunkedUploadRequest"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/chunkedUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/chunked_uploads/{chunkedUploadId}": {
      "get": {
        "tags": ["ChunkedUploads"],
        "summary": "Get Chunked Upload",
        "operationId": "ChunkedUploads_GetChunkedUpload",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chunkedUploadId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "A comma-separated list of additional information to include in the response. Valid values are: \n\n- `recipients`: Includes information about template recipients.\n- `folders`: Includes information about the folder that holds the template. \n- `documents` : Includes information about template documents.\n- `custom_fields`: Includes information about template custom fields.\n- `notifications`: Includes information about the notification settings for templates.\n- `advanced_templates`: Includes advanced templates in the response. For example, these include templates that use advanced recipient routing. We recommend that you use this option to ensure that the response includes all relevant templates. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/chunkedUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["ChunkedUploads"],
        "summary": "Put Chunked Uploads",
        "operationId": "ChunkedUploads_PutChunkedUploads",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chunkedUploadId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/chunkedUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "delete": {
        "tags": ["ChunkedUploads"],
        "summary": "Delete Chunked Upload",
        "operationId": "ChunkedUploads_DeleteChunkedUpload",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chunkedUploadId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/chunkedUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/{chunkedUploadPartSeq}": {
      "put": {
        "tags": ["ChunkedUploads"],
        "summary": "Put Chunked Upload Part",
        "operationId": "ChunkedUploads_PutChunkedUploadPart",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chunkedUploadId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chunkedUploadPartSeq",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/chunkedUploadRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/chunkedUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/connect": {
      "get": {
        "tags": ["ConnectConfigurations"],
        "summary": "Get Connect Configs",
        "description": "Retrieves all the DocuSign Custom Connect definitions for the specified account.\n\n###### Note: Connect must be enabled for your account to use this function. This does not retrieve information for Connect configurations for Box, eOriginal, or Salesforce.",
        "operationId": "Connect_GetConnectConfigs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/connectConfigResults"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["ConnectConfigurations"],
        "summary": "Put Connect Configuration",
        "description": "Updates the specified DocuSign Connect configuration in your account.\n\n###### Note: Connect must be enabled for your account to use this function. This cannot be used to update Connect configurations for Box, eOriginal, or Salesforce.",
        "operationId": "Connect_PutConnectConfiguration",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/connectCustomConfiguration"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/connectCustomConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["ConnectConfigurations"],
        "summary": "Post Connect Configuration",
        "description": "Creates a DocuSign Custom Connect definition for your account. DocuSign Connect enables the sending of real-time data updates to external applications. These updates are generated by user transactions as the envelope progresses through actions to completion. The Connect Service provides updated information about the status of these transactions and returns updates that include the actual content of document form fields. Be aware that, these updates might or might not include the document itself. For more information about Connect, see the [ML:DocuSign Connect Service Guide].\n\n###### Note: Connect must be enabled for your account to use this function. This cannot be used to set up Connect configurations for Salesforce or eOriginal.",
        "operationId": "Connect_PostConnectConfiguration",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/connectCustomConfiguration"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/connectCustomConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/connect/{connectId}": {
      "get": {
        "tags": ["ConnectConfigurations"],
        "summary": "Get Connect Config",
        "description": "Retrieves the information for the specified DocuSign Connect configuration.\n\n###### Note: Connect must be enabled for your account to use this function.\n",
        "operationId": "Connect_GetConnectConfig",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectId",
            "in": "path",
            "description": "The ID of the custom Connect configuration being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/connectConfigResults"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["ConnectConfigurations"],
        "summary": "Delete Connect Config",
        "description": "Deletes the specified DocuSign Connect configuration.\n\n###### Note: Connect must be enabled for your account to use this function.\n\n \n",
        "operationId": "Connect_DeleteConnectConfig",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectId",
            "in": "path",
            "description": "The ID of the custom Connect configuration being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/connect/{connectId}/users": {
      "get": {
        "tags": ["ConnectConfigurations"],
        "summary": "Get Connect Users",
        "description": "Returns users from the configured Connect service.",
        "operationId": "Connect_GetConnectUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectId",
            "in": "path",
            "description": "The ID of the custom Connect configuration being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "Optional. Number of items to return.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email_substring",
            "in": "query",
            "required": false,
            "description": "Filters the returned user records by the email address or a sub-string of email address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "list_included_users",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "required": false,
            "description": "The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Filters the results by user status.\nYou can specify a comma-separated\nlist of the following statuses:\n\n* ActivationRequired \n* ActivationSent \n* Active\n* Closed \n* Disabled\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_name_substring",
            "in": "query",
            "required": false,
            "description": "Filters the user records returned by the user name or a sub-string of user name.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/integratedUserInfoList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/connect/envelopes/{envelopeId}/retry_queue": {
      "put": {
        "tags": ["ConnectEvents"],
        "summary": "Put Connect Retry By Envelope",
        "description": "Republishes Connect information for the specified envelope.",
        "operationId": "ConnectPublish_PutConnectRetryByEnvelope",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/connectFailureResults"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/connect/envelopes/retry_queue": {
      "put": {
        "tags": ["ConnectEvents"],
        "summary": "Put Connect Retry",
        "description": "Republishes Connect information for the  specified set of envelopes. The primary use is to republish Connect post failures by including envelope IDs for the envelopes that failed to post in the request. The list of envelope IDs that failed to post correctly can be retrieved by calling to [ML:GetConnectLog] retrieve the failure log.",
        "operationId": "ConnectPublish_PutConnectRetry",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/connectFailureFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/connectFailureResults"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/connect/failures": {
      "get": {
        "tags": ["ConnectEvents"],
        "summary": "Get Connect Logs",
        "description": "Retrieves the Connect Failure Log information. It can be used to determine which envelopes failed to post, so a republish request can be created.",
        "operationId": "ConnectFailures_GetConnectLogs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "description": "Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "description": "End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/connectLogs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/connect/failures/{failureId}": {
      "delete": {
        "tags": ["ConnectEvents"],
        "summary": "Delete Connect Failure Log",
        "description": "Deletes the Connect failure log information for the specified entry.",
        "operationId": "ConnectFailures_DeleteConnectFailureLog",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "failureId",
            "in": "path",
            "description": "The ID of the failed connect log entry.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/connect/logs": {
      "get": {
        "tags": ["ConnectEvents"],
        "summary": "Get Connect Logs",
        "description": "Retrieves a list of connect log entries for your account.\n\n###### Note: The `enableLog` setting in the Connect configuration must be set to true to enable logging. If logging is not enabled, then no log entries are recorded. ",
        "operationId": "ConnectLog_GetConnectLogs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "description": "Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "description": "End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/connectLogs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["ConnectEvents"],
        "summary": "Delete Connect Logs",
        "description": "Retrieves a list of connect log entries for your account.\n\n###### Note: The `enableLog` property in the Connect configuration must be set to **true** to enable logging. If logging is not enabled, then no log entries are recorded.",
        "operationId": "ConnectLog_DeleteConnectLogs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/connect/logs/{logId}": {
      "get": {
        "tags": ["ConnectEvents"],
        "summary": "Get Connect Log",
        "description": "Retrieves the specified Connect log entry for your account.\n\n###### Note: The `enableLog` setting in the Connect configuration must be set to true to enable logging. If logging is not enabled, then no log entries are recorded. ",
        "operationId": "ConnectLog_GetConnectLog",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "description": "The ID of the connect log entry",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "When true, the connectDebugLog information is included in the response.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/connectLog"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["ConnectEvents"],
        "summary": "Delete Connect Log",
        "description": "Deletes a specified entry from the Connect Log.\n",
        "operationId": "ConnectLog_DeleteConnectLog",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "description": "The ID of the connect log entry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/consumer_disclosure": {
      "get": {
        "tags": ["AccountConsumerDisclosures"],
        "summary": "Get Consumer Disclosure",
        "description": "Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, associated with the account. You can use an optional query string to set the language for the disclosure.",
        "operationId": "ConsumerDisclosure_GetConsumerDisclosure",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "langCode",
            "in": "query",
            "description": "Specifies the language used in the response. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).\n\nAdditionally, the value can be set to `browser` to automatically detect the browser language being used by the viewer and display the disclosure in that language. \n",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountConsumerDisclosures"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/consumer_disclosure/{langCode}": {
      "get": {
        "tags": ["AccountConsumerDisclosures"],
        "summary": "Get Consumer Disclosure Lang Code",
        "description": "Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, for the requested envelope recipient. This might be different than the current account disclosure depending on account settings, such as branding, and when the account disclosure was last updated. An optional query string can be included to return the language for the disclosure.  ",
        "operationId": "ConsumerDisclosure_GetConsumerDisclosureLangCode",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "langCode",
            "in": "path",
            "description": "The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to \"browser\" to automatically detect the browser language being used by the viewer and display the disclosure in that language.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountConsumerDisclosures"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["AccountConsumerDisclosures"],
        "summary": "Put Consumer Disclosure",
        "operationId": "ConsumerDisclosure_PutConsumerDisclosure",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "langCode",
            "in": "path",
            "description": "The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to \"browser\" to automatically detect the browser language being used by the viewer and display the disclosure in that language.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_metadata",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/consumerDisclosure"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/consumerDisclosure"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/contacts": {
      "put": {
        "tags": ["Contacts"],
        "summary": "Put Contacts",
        "operationId": "Contacts_PutContacts",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/contactModRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/contactUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Post Contacts",
        "operationId": "Contacts_PostContacts",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/contactModRequest"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/contactUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete Contacts",
        "operationId": "Contacts_DeleteContacts",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/contactModRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/contactUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/contacts/{contactId}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Contact By Id",
        "operationId": "Contacts_GetContactById",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "The unique identifier of a person in the contacts address book.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/contactGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete Contact With Id",
        "operationId": "Contacts_DeleteContactWithId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "The unique identifier of a person in the contacts address book.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/contactUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/custom_fields": {
      "get": {
        "tags": ["AccountCustomFields"],
        "summary": "Get Account Custom Fields",
        "description": "Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.",
        "operationId": "AccountCustomFields_GetAccountCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCustomFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["AccountCustomFields"],
        "summary": "Post Account Custom Fields",
        "operationId": "AccountCustomFields_PostAccountCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apply_to_templates",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/customField"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCustomFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/custom_fields/{customFieldId}": {
      "put": {
        "tags": ["AccountCustomFields"],
        "summary": "Put Account Custom Fields",
        "operationId": "AccountCustomFields_PutAccountCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customFieldId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apply_to_templates",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/customField"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCustomFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "delete": {
        "tags": ["AccountCustomFields"],
        "summary": "Delete Account Custom Fields",
        "operationId": "AccountCustomFields_DeleteAccountCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customFieldId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apply_to_templates",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes": {
      "get": {
        "tags": ["Envelopes"],
        "summary": "Get Envelopes",
        "description": "Retrieves a list of envelopes that match your request. \nA large set of optional filters let you filter\nby date,\nby envelope ID,\nor by status codes.\n\nYour request must include one or more of the following parameters:\n\n* `from_date`\n* `envelope_ids`\n* `transaction_ids`\n\n\nGetting envelope status using `transaction_ids` is useful\nfor offline signing situations where it can be used\ndetermine if an envelope was created or not. It can be used\nfor the cases where a network connection was lost, before\nthe envelope status could be returned.\n\nTo avoid unnecessary database queries, the DocuSign\nsignature platform first checks requests to ensure that the\nfilter set supplied does not result in a zero-size response\nbefore querying the database. \n\nFor example, for a request with a `from_to_status` of\n`delivered` and a current `status` of `created,sent`,\nDocuSign will always return an empty list. \nThis is because the request translates to: find the\nenvelopes that were delivered between the `from_date` and\n`to_date` dates that have a current status of `created` or\n`sent`. Since an envelope that has been delivered can\nnever have a status of `created` or `sent`, a zero-size\nresponse would be generated. \nIn this case, DocuSign does not query the database\nand returns an empty list immediately.\n\n\nThe following table shows the valid current envelope\nstatuses (`status` parameter) for the different status\nqualifiers (`from_to_status` parameter) in the request. If\nthe status and status qualifiers in the API request do not\ncontain any of the values shown in the Valid Current\nStatuses column, then an empty list is returned.\n\nClient applications should check that the statuses (`status`\nparameter) they are requesting make sense for a given\n`from_to_status` parameter value.\n\n| Status Qualifier<br>(`from_to_status`) | Effective Status Qualifier | Valid Current Statuses                                                      |  \n| :------------------------------------- | :------------------------- | :-------------------------------------------------------------------------- |  \n| any (changed)                          | StatusChanged              | any, created, sent, delivered, signed, completed, declined, voided, deleted |  \n| created                                | Created                    | any, created, sent, delivered, signed, completed, declined, voided, deleted |  \n| sent                                   | Sent                       | any, sent, delivered, signed, completed, declined, voided, deleted          |  \n| delivered                              | StatusChanged              | any, delivered, signed, completed, declined, voided, deleted                |  \n| signed                                 | StatusChanged              | any, signed, completed, declined, voided, deleted                           |  \n| completed                              | Completed                  | any, completed, declined, voided, deleted                                   |  \n| declined                               | StatusChanged              | any, declined, voided, deleted                                              |  \n| timedout<br>always return zero results | StatusChanged              | any, voided, deleted                                                        |  \n| voided                                 | Voided                     | any, voided, deleted                                                        |  \n| deleted                                | StatusChanged              | any, deleted                                                                |  \n\n## Extraneous results\n\nIn some cases, a request for a specific envelope status will\ninclude envelopes with additional statuses. For example, in\na request with a `from_date` of 2017-01-01, a `to_date` of\n2017-01-07 and the status qualifier (`from_to_status`) set\nto `delivered`, the response set might contain envelopes\nthat were created during that time period, but not delivered\nduring the time period. As a workaround, check the envelope\nstatus values in the result set as needed. \n",
        "operationId": "Envelopes_GetEnvelopes",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ac_status",
            "in": "query",
            "description": "Specifies the Authoritative Copy Status for the envelopes. The possible values are: Unknown, Original, Transferred, AuthoritativeCopy, AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending, Deposited, DepositedEO, or DepositFailed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "block",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "Optional. Number of items to return. Currently there is no implicit maximum limit of the number of items that can be returned.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field",
            "in": "query",
            "description": "Optional. Specifies a envelope custom field name and value searched for in the envelopes. Format: `custom_envelope_field_name=desired_value`\n\nExample: If you have an envelope custom field named \"Region\" and you want to search for all envelopes where the value is \"West\" you would use set this parameter to `Region=West`. \n \n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "description": "Limit results to envelopes\nsent by the account user\nwith this email address.\n\n`user_name` must be given as well,\nand both `email` and `user_name`\nmust refer to an existing account user.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelope_ids",
            "in": "query",
            "required": false,
            "description": "Comma separated list of `envelopeId` values.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Specifies the date and time\nto start looking for status changes.\nThis parameter is required\nunless `envelopeIds` or `transactionIds`\nare set.\n\n\nAlthough you can use any date format\nsupported by the .NET system library's\n[`DateTime.Parse()`][msoft] function,\nDocuSign recommends\nusing [ISO 8601][] format dates\nwith an explicit time zone offset\nIf you do not provide\na time zone offset,\nthe method uses the server's time zone.\n\nFor example, the following dates and times refer to the same instant:\n\n* `2017-05-02T01:44Z`\n* `2017-05-01T21:44-04:00`\n* `2017-05-01T18:44-07:00`\n\n\n[msoft]: https://msdn.microsoft.com/en-us/library/system.datetime.parse(v=vs.110).aspx#StringToParse\n[ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_to_status",
            "in": "query",
            "description": "The status value checked for in the `from_date` to `to_date` time period. \n\nPossible values are: Voided, Changed, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.\n\nIf `Changed` is specified, then envelopes that changed status during the period will be returned. \n\nFor example, if `Created` is specified, then envelopes created during the period are found. \n\nThe default is `Changed`. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "required": false,
            "description": "This value is supported and currently has no implicit maximum items.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A comma-separated list of current envelope statuses to included in the response. Possible values are:\n\n* completed\n* created\n* declined\n* deleted\n* delivered\n* processing\n* sent\n* signed\n* timedout\n* voided\n\nThe `any` value is equivalent to any status.\n\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "Specifies the date and time\nto stop looking for status changes.\nThe default is the current date and time.\n\nAlthough you can use any date format\nsupported by the .NET system library's\n[`DateTime.Parse()`][msoft] function,\nDocuSign recommends\nusing [ISO 8601][] format dates\nwith an explicit time zone offset\nIf you do not provide\na time zone offset,\nthe method uses the server's time zone.\n\nFor example, the following dates and times refer to the same instant:\n\n* `2017-05-02T01:44Z`\n* `2017-05-01T21:44-04:00`\n* `2017-05-01T18:44-07:00`\n\n\n[msoft]: https://msdn.microsoft.com/en-us/library/system.datetime.parse(v=vs.110).aspx#StringToParse\n[ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transaction_ids",
            "in": "query",
            "description": "A comma-separated list of envelope transaction IDs.\nTransaction IDs are only valid for seven days.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_name",
            "in": "query",
            "required": false,
            "description": "Limit results to envelopes\nsent by the account user\nwith this user name.\n\n`email` must be given as well,\nand both `email` and `user_name`\nmust refer to an existing account user.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopesInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["Envelopes"],
        "summary": "Post Envelopes",
        "description": "Creates and sends an envelope or creates a draft envelope.\nEnvelopes are fundamental resources in the DocuSign platform.\n\nWith this method you can:\n\n* Create and send an envelope\n  with [documents][], [recipients][], and [tabs][].\n* Create and send an envelope from a template.\n* Create and send an envelope from\n  a combination of documents and templates.\n* Create a draft envelope.\n\n\nWhen you use this method\nto create and send an envelope\nin a single request,\nthe following parameters in the request body (an [`envelopeDefinition`][envelopeDefinition]) are required:\n\n| Parameter      | Description |\n| :--------      | :---------- |\n| `status`       | Set to `sent` to send the envelope to recipients.<br>Set to `created` (or don't set at all) to save the envelope as a draft. |\n| `emailSubject` | The subject of the email used to send the envelope. |\n| `documents`    | The [documents][] to be signed. |\n| `recipients`   | The email addresses of the envelope [recipients][]. |\n\n\nThere are many ways to use envelopes.\nYou can create and send an envelope\nwith a single API request,\nor you can use several API requests\nto create, populate, and send envelopes.\n\n\n| See                     | To learn about                                                                                                                    |\n| :----------------------- | :--------------------------------------------------------------------------------------------------------------------------------- |\n| [Envelopes][envelopes]   | Envelopes, [adding documents][addingdocs], [tracking][], [locking][], [deleting][], [templates][]                                  |\n| [Documents][documents]   | Documents, [attachments][], [supplemental documents][supdocs], [authoritative copies][authcopies], [purging][]                     |\n| [Recipients][recipients] | Recipients, [recipient types][reciptypes], [recipient status][recipstatus]                                                         |\n| [Tabs][tabs]             | Tabs, [tab types][tabtypes], [anchoring tabs][tabanchor], [auto-populating tabs][tabauto],  [custom tabs][tabcustom], [payments][] |\n\n\n[addingdocs]:           https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes#adding-documents-to-an-envelope\n[attachments]:          https://developers.docusign.com/esign-rest-api/guides/concepts/documents#attachments\n[authcopies]:           https://developers.docusign.com/esign-rest-api/guides/concepts/documents#authoritative-copies\n[conoverview]:          https://developers.docusign.com/esign-rest-api/guides/concepts/overview\n[deleting]:             https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes#deleting-envelopes\n[documents]:            https://developers.docusign.com/esign-rest-api/guides/concepts/documents\n[envelopeDefinition]:   https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create#envelopeDefinition\n[envelopes]:            https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes\n[locking]:              https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes#locking-envelopes\n[payments]:             https://developers.docusign.com/esign-rest-api/guides/concepts/tabs#requesting-payments\n[purging]:              https://developers.docusign.com/esign-rest-api/guides/concepts/documents#purging-documents\n[recipients]:           https://developers.docusign.com/esign-rest-api/guides/concepts/recipients\n[recipstatus]:          https://developers.docusign.com/esign-rest-api/guides/concepts/recipients#recipient-status\n[reciptypes]:           https://developers.docusign.com/esign-rest-api/guides/concepts/recipients#recipient-types\n[supdocs]:              https://developers.docusign.com/esign-rest-api/guides/concepts/documents#supplemental-documents\n[tabanchor]:            https://developers.docusign.com/esign-rest-api/guides/concepts/tabs#anchoring-tabs\n[tabauto]:              https://developers.docusign.com/esign-rest-api/guides/concepts/tabs#automatically-populating-tabs\n[tabcustom]:            https://developers.docusign.com/esign-rest-api/guides/concepts/tabs#using-custom-tabs-in-envelopes-and-templates\n[tabs]:                 https://developers.docusign.com/esign-rest-api/guides/concepts/tabs\n[tabtypes]:             https://developers.docusign.com/esign-rest-api/guides/concepts/tabs#tab-types\n[templates]:            https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes#working-with-templates\n[tracking]:             https://developers.docusign.com/esign-rest-api/guides/concepts/envelopes#tracking-envelope-status\n\n**Note**: When you create an envelope by using a [composite template](https://developers.docusign.com/esign-rest-api/guides/concepts/templates#composite-templates), you should specify the envelope custom fields in the inline template. Any custom fields that you specify at the root level are ignored.\n",
        "operationId": "Envelopes_PostEnvelopes",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cdse_mode",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "change_routing_order",
            "in": "query",
            "required": false,
            "description": "When true, users can define the routing order of recipients while sending documents for signature.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "completed_documents_only",
            "in": "query",
            "description": "Reserved for DocuSign.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_roles_on_draft",
            "in": "query",
            "description": "When set to **true**, template roles will be merged, and empty recipients will be removed. This parameter applies when you create a draft envelope with multiple templates. (To create a draft envelope, the `status` field is set to `created`.)\n\n###### Note: DocuSign recommends that this parameter should be set to **true** whenever you create a draft envelope with multiple templates.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tab_label_exact_matches",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n\n<!--\nNote from Kate Dougherty: This functionality has not been released yet. When it is (contact Alia Paddock with any questions), use the following description:\n\n\"When set to **true**, each tab in the inline template is matched and collapsed with all qualified tabs in the server template. When set to **false** (default), each tab in the inline template is matched and collapsed with at most one qualified tab in the server template.\n\nThis parameter applies when you create an envelope from a composite template.\"\n-->\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/envelopeDefinition"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeSummary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}": {
      "get": {
        "tags": ["Envelopes"],
        "summary": "Get Envelope",
        "description": "Retrieves the overall status for the specified envelope. To get the status of a list of envelopes, use [Envelope: listStatusChanges ](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/)",
        "operationId": "Envelopes_GetEnvelope",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "advanced_update",
            "in": "query",
            "description": "When true, envelope information can be added or modified.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelope"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Envelopes"],
        "summary": "Put Envelope",
        "description": "This method lets you make changes to an envelope.\nYou can use it to:\n\n* Send a draft envelope\n* Void an in-process envelope\n* Modify a draft envelope\n* Purge documents and envelope metadata from the DocuSign platform\n\n\n<div class=\"highlight highlight-info\">\n<p markdown=\"1\">\n\nAlthough the request body for this method\nis a complete envelope definition,\nyou only need to provide\nproperties that\nyou're updating. \n\n</p>\n</div>\n\n\n## Sending a Draft Envelope\n\nTo send a draft envelope, include this in the request body:\n\n```json\n{\n  \"status\": \"sent\"\n}\n```\n\n\n## Voiding an In-Process Envelope\n\nTo void an in-process envelope, include this in the request body:\n\n```json\n{\n  \"status\": \"voided\",\n  \"voidedReason\": \"The reason for voiding the envelope\"\n}\n```\n\n## Modifying Envelope Email Information\n\nTo change the email subject and message of a draft envelope,\ninclude this in the request body:\n\n```json\n{\n  \"emailSubject\": \"new email subject\",\n  \"emailBlurb\": \"new email message\"\n}\n```\n\n## Purging Documents from DocuSign\n\n\nTo place only the documents\nin the purge queue,\nleaving any\ncorresponding attachments \nand tabs in the DocuSign platform,\nset the `purgeState` property\nto `documents_queued`.\n\n\n```json\n{\n  \"purgeState\": \"documents_queued\"\n}\n```\n\nTo place documents,\nattachments,\nand tabs\nin the purge queue,\nset the `purgeState` property\nto `documents_and_metadata_queued`.\n\n```json\n{\n  \"purgeState\": \"documents_and_metadata_queued\"\n}\n```\n\n\nYou can purge documents\nonly from completed envelopes\nthat are not marked as the authoritative copy.\nThe user requesting the purge\nmust have permission to purge documents\nand\nmust be the sender or be acting on behalf of the sender.\n\n\n\nWhen the purge request is initiated\nthe items to be purged\nare placed in the purge queue\nfor deletion in 14 days.\nThe sender\nand\nall recipients with DocuSign accounts\nassociated with the envelope\nget an email notification\nthe the documents will be deleted in 14 days.\nThe notification contains a link\nto the documents.\nA second email notification\nis sent 7 days later.\nAt the end of the 14-day period\nthe documents are deleted from the system.\nRecipients without DocuSign accounts\ndo not receive email notifications.\n\n\nIf your account has a Document Retention policy,\nenvelope documents\nare automatically placed\nin the purge queue,\nand notification emails are sent\nat the end of the retention period.\nSetting a Document Retention policy is the same as setting a\nschedule for purging documents.\n",
        "operationId": "Envelopes_PutEnvelope",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "advanced_update",
            "in": "query",
            "description": "When set to **true**, allows the caller to update recipients, tabs, custom fields, notification, email settings and other envelope attributes.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resend_envelope",
            "in": "query",
            "description": "When set to **true**, sends the specified envelope again.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/envelope"
              }
            }
          },
          "description": "A container used to send documents to recipients. The envelope carries information about the sender and timestamps to indicate the progress of the delivery procedure. It can contain collections of Documents, Tabs and Recipients."
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeUpdateSummary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/attachments": {
      "get": {
        "tags": ["EnvelopeAttachments"],
        "summary": "Get Attachments",
        "operationId": "Attachments_GetAttachments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeAttachmentsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["EnvelopeAttachments"],
        "summary": "Put Attachments",
        "operationId": "Attachments_PutAttachments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/envelopeAttachmentsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeAttachmentsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": "Supported attachment formats include: .asp, .bmp, .csv, .doc, .docm, .docx, .dot, .dotm, .dotx, .gif, .htm, .html, .jpeg, .jpg, .msg, .pdf, .png, .pot, .potx, .pps, .ppt, .pptm, .pptx, .ps, .rtf, .tif, .tiff, .txt, .wpd, .xls, .xlsm, .xlsx, .xml, and .xps. For more information on supported file formats please see [Supported File Formats](https://support.docusign.com/guides/ndse-user-guide-supported-file-formats)."
      },
      "delete": {
        "tags": ["EnvelopeAttachments"],
        "summary": "Delete Attachments",
        "operationId": "Attachments_DeleteAttachments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/envelopeAttachmentsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeAttachmentsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/attachments/{attachmentId}": {
      "get": {
        "tags": ["EnvelopeAttachments"],
        "summary": "Get Attachment",
        "operationId": "Attachments_GetAttachment",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["EnvelopeAttachments"],
        "summary": "Put Attachment",
        "operationId": "Attachments_PutAttachment",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeAttachmentsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/audit_events": {
      "get": {
        "tags": ["Envelopes"],
        "summary": "Get Audit Events",
        "description": "Gets the envelope audit events for the specified envelope.",
        "operationId": "AuditEvents_GetAuditEvents",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeAuditEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/comments/transcript": {
      "get": {
        "tags": ["Comments"],
        "summary": "Get Comments Transcript",
        "operationId": "Comments_GetCommentsTranscript",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encoding",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/custom_fields": {
      "get": {
        "tags": ["EnvelopeCustomFields"],
        "summary": "Get Custom Fields",
        "description": "Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.",
        "operationId": "CustomFields_GetCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/customFieldsEnvelope"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["EnvelopeCustomFields"],
        "summary": "Put Custom Fields",
        "description": "Updates the envelope custom fields in draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.\n",
        "operationId": "CustomFields_PutCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeCustomFields"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeCustomFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["EnvelopeCustomFields"],
        "summary": "Post Custom Fields",
        "description": "Updates the envelope custom fields for draft and in-process envelopes.\n\nEach custom field used in an envelope must have a unique name.",
        "operationId": "CustomFields_PostCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeCustomFields"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeCustomFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["EnvelopeCustomFields"],
        "summary": "Delete Custom Fields",
        "description": "Deletes envelope custom fields for draft and in-process envelopes.",
        "operationId": "CustomFields_DeleteCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeCustomFields"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeCustomFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents": {
      "get": {
        "tags": ["EnvelopeDocuments"],
        "summary": "Get Documents",
        "description": "Retrieves a list of documents associated with the specified envelope.",
        "operationId": "Documents_GetDocuments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_document_size",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeDocumentsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["EnvelopeDocuments"],
        "summary": "Put Documents",
        "description": "Adds one or more documents to an existing envelope document.\n<p>**Note**: When adding or modifying documents for an in-process envelope, DocuSign recommends locking the envelope prior to making any changes.",
        "operationId": "Documents_PutDocuments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apply_document_fields",
            "in": "query",
            "description": "When **true**, document fields\ncan be added or modified\nwhile adding or modifying envelope documents.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "persist_tabs",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/envelopeDefinition"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeDocumentsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["EnvelopeDocuments"],
        "summary": "Delete Documents",
        "description": "Deletes one or more documents from an existing envelope that has not yet been completed.\n\nTo delete a document, use only the relevant parts of the [`envelopeDefinition`](#envelopeDefinition).\nFor example, this request body specifies that you want to delete the document whose `documentId` is \"1\".\n\n\n```text\n{\n  \"documents\": [\n    {\n      \"documentId\": \"1\"\n    }\n  ]\n}\n```\n\nThe envelope status must be one of:\n\n- `created`\n- `sent`\n- `delivered`\n\n\n",
        "operationId": "Documents_DeleteDocuments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/envelopeDefinition"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeDocumentsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}": {
      "get": {
        "tags": ["EnvelopeDocuments"],
        "summary": "Get Document",
        "description": "Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\n\nThe `{documentID}` parameter takes two special values:\n\n| Value      | Description |\n| :---       | :--- |\n| `combined` | Retrieve a PDF that contains the combined content of all documents and the certificate. |\n| `archive`  | Retrieve a ZIP archive that contains all of the PDF documents, the certificate, and any .WAV files used for voice authentication. |\n",
        "operationId": "Documents_GetDocument",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "certificate",
            "in": "query",
            "description": "When set to **false**, the envelope signing certificate is removed from the download.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encoding",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encrypt",
            "in": "query",
            "description": "When set to **true**, the PDF bytes returned in the response are encrypted for all the key managers configured on your DocuSign account. The documents can be decrypted with the KeyManager Decrypt Document API.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Specifies the language for the Certificate of Completion in the response. The supported languages, with the language value shown in parenthesis, are: Chinese Simplified (zh_CN), , Chinese Traditional (zh_TW), Dutch (nl), English US (en), French (fr), German (de), Italian (it), Japanese (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil) (pt_BR), Russian (ru), Spanish (es). ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient_id",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_changes",
            "in": "query",
            "description": "When set to **true**, any changed fields for the returned PDF are highlighted in yellow and optional signatures or initials outlined in red. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "watermark",
            "in": "query",
            "description": "When set to **true**, the account has the watermark feature enabled, and the envelope is not complete, the watermark for the account is added to the PDF documents. This option can remove the watermark. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["EnvelopeDocuments"],
        "summary": "Put Document",
        "description": "Adds a document to an existing draft envelope.\n<p>**Note**: When adding or modifying documents for an in-process envelope, DocuSign recommends locking the envelope prior to making any changes.",
        "operationId": "Documents_PutDocument",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apply_document_fields",
            "in": "query",
            "required": false,
            "description": "When **true**, document fields\ncan be added or modified\nwhile adding or modifying envelope documents.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/fields": {
      "get": {
        "tags": ["EnvelopeDocumentFields"],
        "summary": "Get Document Fields",
        "description": "Retrieves the custom document field information from an existing envelope document.",
        "operationId": "DocumentFields_GetDocumentFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeDocumentFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["EnvelopeDocumentFields"],
        "summary": "Put Document Fields",
        "description": "Updates existing custom document fields in an existing envelope document.",
        "operationId": "DocumentFields_PutDocumentFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeDocumentFields"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeDocumentFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["EnvelopeDocumentFields"],
        "summary": "Post Document Fields",
        "description": "Creates custom document fields in an existing envelope document.",
        "operationId": "DocumentFields_PostDocumentFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeDocumentFields"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeDocumentFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["EnvelopeDocumentFields"],
        "summary": "Delete Document Fields",
        "description": "Deletes custom document fields from an existing envelope document.",
        "operationId": "DocumentFields_DeleteDocumentFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeDocumentFields"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeDocumentFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/html_definitions": {
      "get": {
        "tags": ["EnvelopeDocumentHtmlDefinitions"],
        "summary": "Get Envelope Document Html Definitions",
        "operationId": "ResponsiveHtml_GetEnvelopeDocumentHtmlDefinitions",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentHtmlDefinitionOriginals"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages": {
      "get": {
        "tags": ["Envelopes"],
        "summary": "Get Page Images",
        "operationId": "Pages_GetPageImages",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to be returned by this request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpi",
            "in": "query",
            "required": false,
            "description": "Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_height",
            "in": "query",
            "required": false,
            "description": "Sets the maximum height (in pixels) of the returned image.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_width",
            "in": "query",
            "required": false,
            "description": "Sets the maximum width (in pixels) of the returned image.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nocache",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_changes",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "required": false,
            "description": "The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/pageImages"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}": {
      "delete": {
        "tags": ["Envelopes"],
        "summary": "Delete Page",
        "description": "Deletes a page from a document in an envelope based on the page number.",
        "operationId": "Pages_DeletePage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "path",
            "description": "The page number being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/page_image": {
      "get": {
        "tags": ["Envelopes"],
        "summary": "Get Page Image",
        "description": "Retrieves a page image for display from the specified envelope.",
        "operationId": "Pages_GetPageImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "path",
            "description": "The page number being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpi",
            "in": "query",
            "description": "Sets the dpi for the image.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_height",
            "in": "query",
            "description": "Sets the maximum height for the page image in pixels. The dpi is recalculated based on this setting.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_width",
            "in": "query",
            "description": "Sets the maximum width for the page image in pixels. The dpi is recalculated based on this setting.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_changes",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Envelopes"],
        "summary": "Put Page Image",
        "description": "Rotates page image from an envelope for display. The page image can be rotated to the left or right.",
        "operationId": "Pages_PutPageImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "path",
            "description": "The page number being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/pageRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/tabs": {
      "get": {
        "tags": ["EnvelopeDocumentTabs"],
        "summary": "Get Page Tabs",
        "operationId": "Tabs_GetPageTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "path",
            "description": "The page number being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeDocumentTabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/responsive_html_preview": {
      "post": {
        "tags": ["DocumentResponsiveHtmlPreview"],
        "summary": "Post Document Responsive Html Preview",
        "operationId": "ResponsiveHtml_PostDocumentResponsiveHtmlPreview",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentHtmlDefinition"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentHtmlDefinitions"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/tabs": {
      "get": {
        "tags": ["EnvelopeDocumentTabs"],
        "summary": "Get Document Tabs",
        "operationId": "Tabs_GetDocumentTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_numbers",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeDocumentTabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates": {
      "get": {
        "tags": ["EnvelopeTemplates"],
        "summary": "Get Document Templates",
        "description": "Retrieves the templates associated with a document in the specified envelope.",
        "operationId": "Templates_GetDocumentTemplates",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "A comma-separated list\nthat limits the results.\nValid values:\n\n* applied\n* matched\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/templateInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["EnvelopeTemplates"],
        "summary": "Post Document Templates",
        "description": "Adds templates to a document in the specified envelope.",
        "operationId": "Templates_PostDocumentTemplates",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentTemplateList"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentTemplateList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates/{templateId}": {
      "delete": {
        "tags": ["EnvelopeTemplates"],
        "summary": "Delete Document Templates",
        "description": "Deletes the specified template from a document in an existing envelope.",
        "operationId": "Templates_DeleteDocumentTemplates",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/email_settings": {
      "get": {
        "tags": ["EnvelopeEmailSettings"],
        "summary": "Get Email Settings",
        "description": "Retrieves the email override settings for the specified envelope.",
        "operationId": "EmailSettings_GetEmailSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/emailSettings"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["EnvelopeEmailSettings"],
        "summary": "Put Email Settings",
        "description": "Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\n\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.",
        "operationId": "EmailSettings_PutEmailSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/emailSettings"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/emailSettings"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["EnvelopeEmailSettings"],
        "summary": "Post Email Settings",
        "description": "Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\n\n### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copy or Certified Delivery recipient type.",
        "operationId": "EmailSettings_PostEmailSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/emailSettings"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/emailSettings"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["EnvelopeEmailSettings"],
        "summary": "Delete Email Settings",
        "description": "Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.",
        "operationId": "EmailSettings_DeleteEmailSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/emailSettings"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/form_data": {
      "get": {
        "tags": ["EnvelopeFormData"],
        "summary": "Get Form Data",
        "operationId": "FormData_GetFormData",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeFormData"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/html_definitions": {
      "get": {
        "tags": ["EnvelopeHtmlDefinitions"],
        "summary": "Get Envelope Html Definitions",
        "operationId": "ResponsiveHtml_GetEnvelopeHtmlDefinitions",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentHtmlDefinitionOriginals"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/lock": {
      "get": {
        "tags": ["EnvelopeLocks"],
        "summary": "Get Envelope Lock",
        "description": "Retrieves general information about the envelope lock.\n\nIf the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.",
        "operationId": "Lock_GetEnvelopeLock",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeLocks"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["EnvelopeLocks"],
        "summary": "Put Envelope Lock",
        "description": "Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.",
        "operationId": "Lock_PutEnvelopeLock",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/lockRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeLocks"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["EnvelopeLocks"],
        "summary": "Post Envelope Lock",
        "description": "Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\n\n###### Note: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).",
        "operationId": "Lock_PostEnvelopeLock",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/lockRequest"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeLocks"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["EnvelopeLocks"],
        "summary": "Delete Envelope Lock",
        "description": "Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.",
        "operationId": "Lock_DeleteEnvelopeLock",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeLocks"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/notification": {
      "get": {
        "tags": ["Envelopes"],
        "summary": "Get Envelopes Envelope Id Notification",
        "description": "Retrieves the envelope notification, reminders and expirations, information for an existing envelope.",
        "operationId": "Notification_GetEnvelopesEnvelopeIdNotification",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/notification"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Envelopes"],
        "summary": "Put Envelopes Envelope Id Notification",
        "operationId": "Notification_PutEnvelopesEnvelopeIdNotification",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/envelopeNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/notification"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients": {
      "get": {
        "tags": ["EnvelopeRecipients"],
        "summary": "Get Recipients",
        "description": "Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. This method can also be used to retrieve the tab values.\n\nThe `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.",
        "operationId": "Recipients_GetRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_anchor_tab_locations",
            "in": "query",
            "description": " When set to **true** and `include_tabs` value is set to **true**, all tabs with anchor tab properties are included in the response. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_extended",
            "in": "query",
            "description": " When set to **true**, the extended properties are included in the response. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_tabs",
            "in": "query",
            "description": "When set to **true**, the tab information associated with the recipient is included in the response.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeRecipients"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["EnvelopeRecipients"],
        "summary": "Put Recipients",
        "description": "Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \n\nFor draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.\n\nOnce an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `signingGroupId`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.\n\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).",
        "operationId": "Recipients_PutRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offline_signing",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resend_envelope",
            "in": "query",
            "description": "When set to **true**, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeRecipients"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/recipientsUpdateSummary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["EnvelopeRecipients"],
        "summary": "Post Recipients",
        "description": "Adds one or more recipients to an envelope.\n\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient's routing order is before or the same as the envelope's next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.",
        "operationId": "Recipients_PostRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resend_envelope",
            "in": "query",
            "description": "When set to **true**, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeRecipients"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeRecipients"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["EnvelopeRecipients"],
        "summary": "Delete Recipients",
        "description": "Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.\n\nIf the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.",
        "operationId": "Recipients_DeleteRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeRecipients"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeRecipients"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}": {
      "delete": {
        "tags": ["EnvelopeRecipients"],
        "summary": "Delete Recipient",
        "description": "Deletes a recipient from a `draft` or `sent` envelope.\n\nIf the envelope is \"In Process\" (has been sent and is not completed or voided), recipients that have completed their actions cannot be deleted.",
        "operationId": "Recipients_DeleteRecipient",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeRecipients"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/bulk_recipients": {
      "get": {
        "tags": ["EnvelopeBulkRecipients"],
        "summary": "Get Bulk Recipients",
        "description": "Retrieves the bulk recipient file information from an envelope that has a bulk recipient.",
        "operationId": "Recipients_GetBulkRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_tabs",
            "in": "query",
            "required": false,
            "description": "If **true**\ninclude the tabs in the the result.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeBulkRecipients"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["EnvelopeBulkRecipients"],
        "summary": "Put Bulk Recipients",
        "description": "Updates the bulk recipients in a draft envelope using a file upload. The Content-Type supported for uploading a bulk recipient file is CSV (text/csv).\n\nThe REST API does not support modifying individual rows or values in the bulk recipients file. It only allows the entire file to be added or replaced with a new file.",
        "operationId": "Recipients_PutBulkRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/csv": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/bulkRecipientsSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["EnvelopeBulkRecipients"],
        "summary": "Delete Bulk Recipients File",
        "description": "Deletes the bulk recipient file from an envelope. This cannot be used if the envelope has been sent.\n\nAfter using this, the `bulkRecipientsUri` property is not returned in subsequent GET calls for the envelope, but the recipient will remain as a bulk recipient.",
        "operationId": "Recipients_DeleteBulkRecipientsFile",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/bulkRecipientsUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/consumer_disclosure": {
      "get": {
        "tags": ["EnvelopeConsumerDisclosures"],
        "summary": "Get Consumer Disclosure Envelope Id Recipient Id",
        "description": "Retrieves the Electronic Record and Signature Disclosure, with html formatting, associated with the account. You can use an optional query string to set the language for the disclosure.",
        "operationId": "ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "langCode",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/consumerDisclosure"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/consumer_disclosure/{langCode}": {
      "get": {
        "tags": ["EnvelopeConsumerDisclosures"],
        "summary": "Get Consumer Disclosure Envelope Id Recipient Id Lang Code",
        "description": "Reserved: Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, associated with the account.",
        "operationId": "ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientIdLangCode",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "langCode",
            "in": "path",
            "description": "The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to \"browser\" to automatically detect the browser language being used by the viewer and display the disclosure in that language.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "langCode",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/consumerDisclosure"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/document_visibility": {
      "get": {
        "tags": ["EnvelopeDocumentVisibility"],
        "summary": "Get Recipient Document Visibility",
        "operationId": "Recipients_GetRecipientDocumentVisibility",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentVisibilityList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["EnvelopeDocumentVisibility"],
        "summary": "Put Recipient Document Visibility",
        "operationId": "Recipients_PutRecipientDocumentVisibility",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentVisibilityList"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentVisibilityList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/initials_image": {
      "get": {
        "tags": ["Envelopes"],
        "summary": "Get Recipient Initials Image",
        "description": "Retrieves the initials image for the specified user. The image is returned in the same format as it was uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.\n\nThe userId specified in the endpoint must match the authenticated user's user id and the user must be a member of the account.\n\nThe `signatureIdOrName` paramter accepts signature ID or signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly URL encode. If you use the user name, it is likely that the name includes spaces and you might need to URL encode the name before using it in the endpoint. \n\nFor example: \"Bob Smith\" to \"Bob%20Smith\"\n\nOlder envelopes might only contain chromed images. If getting the non-chromed image fails, try getting the chromed image.",
        "operationId": "Recipients_GetRecipientInitialsImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_chrome",
            "in": "query",
            "description": "The added line and identifier around the initial image. Note: Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "image/gif": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "image/gif": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Envelopes"],
        "summary": "Put Recipient Initials Image",
        "description": "Updates the initials image for a signer that does not have a DocuSign account. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.\n\nFor the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the `CanSendEnvelope` property set to **true** and the `ExpressSendOnly` property in `SendingUser` structure must be set to **false**.",
        "operationId": "Recipients_PutRecipientInitialsImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature": {
      "get": {
        "tags": ["Envelopes"],
        "summary": "Get Recipient Signature",
        "description": "Retrieves signature information for a signer or sign-in-person recipient.",
        "operationId": "Recipients_GetRecipientSignature",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userSignature"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature_image": {
      "get": {
        "tags": ["Envelopes"],
        "summary": "Get Recipient Signature Image",
        "description": "Retrieves the specified user signature image. The image is returned in the same format as uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.\n\nThe userId specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureIdOrName` parameter accepts signature ID or signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that don't properly URL encode. If you use the user name, it is likely that the name includes spaces and you might need to URL encode the name before using it in the endpoint. \n\nFor example: \"Bob Smith\" to \"Bob%20Smith\"\n\nOlder envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.",
        "operationId": "Recipients_GetRecipientSignatureImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_chrome",
            "in": "query",
            "description": "When set to **true**, indicates the chromed version of the signature image should be retrieved.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "image/gif": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "image/gif": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Envelopes"],
        "summary": "Put Recipient Signature Image",
        "description": "Updates the signature image for an accountless signer. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.\n\nFor the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the `CanSendEnvelope` property set to **true** and the `ExpressSendOnly` property in `SendingUser` structure must be set to **false**.",
        "operationId": "Recipients_PutRecipientSignatureImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/tabs": {
      "get": {
        "tags": ["EnvelopeRecipientTabs"],
        "summary": "Get Recipient Tabs",
        "description": "Retrieves information about the tabs associated with a recipient. You can make a single API call to get all the tab values and information from a given, completed envelope in addition to draft ones.  Tab values can be retrieved by using the [EnvelopeRecipients:list method](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipients/list/) with query parameter include_tabs set to \"true\".",
        "operationId": "Recipients_GetRecipientTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_anchor_tab_locations",
            "in": "query",
            "description": "When set to **true**, all tabs with anchor tab properties are included in the response. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_metadata",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["EnvelopeRecipientTabs"],
        "summary": "Put Recipient Tabs",
        "description": "Updates one or more tabs for a recipient in a draft envelope. \n**Note**: The Update method can be used if the envelope is not yet complete. To update an existing tab, the request body must include the `tabId`.",
        "operationId": "Recipients_PutRecipientTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeRecipientTabs"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["EnvelopeRecipientTabs"],
        "summary": "Post Recipient Tabs",
        "description": "Adds one or more tabs for a recipient.",
        "operationId": "Recipients_PostRecipientTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeRecipientTabs"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["EnvelopeRecipientTabs"],
        "summary": "Delete Recipient Tabs",
        "description": "Deletes one or more tabs associated with a recipient in a draft envelope.",
        "operationId": "Recipients_DeleteRecipientTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EnvelopeRecipientTabs"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/document_visibility": {
      "put": {
        "tags": ["EnvelopeDocumentVisibility"],
        "summary": "Put Recipients Document Visibility",
        "operationId": "Recipients_PutRecipientsDocumentVisibility",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentVisibilityList"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentVisibilityList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/responsive_html_preview": {
      "post": {
        "tags": ["ResponsiveHtmlPreview"],
        "summary": "Post Responsive Html Preview",
        "operationId": "ResponsiveHtml_PostResponsiveHtmlPreview",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentHtmlDefinition"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentHtmlDefinitions"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/templates": {
      "get": {
        "tags": ["EnvelopeTemplates"],
        "summary": "Get Envelope Templates",
        "description": "This returns a list of the server-side templates, their name and ID, used in an envelope.\n",
        "operationId": "Templates_GetEnvelopeTemplates",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "The possible values are:  matching_applied - This returns template matching information for the template.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/templateInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["EnvelopeTemplates"],
        "summary": "Post Envelope Templates",
        "description": "Adds templates to the specified envelope.",
        "operationId": "Templates_PostEnvelopeTemplates",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentTemplateList"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentTemplateList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/views/correct": {
      "post": {
        "tags": ["EnvelopeViews"],
        "summary": "Post Envelope Correct View",
        "description": "Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. ",
        "operationId": "Views_PostEnvelopeCorrectView",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/correctViewRequest"
              }
            }
          },
          "$ref": "#/components/requestBodies/correctViewRequest"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeViews"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": [],
      "delete": {
        "tags": ["EnvelopeViews"],
        "summary": "Delete Envelope Correct View",
        "operationId": "Views_DeleteEnvelopeCorrectView",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/correctViewRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      }
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/views/edit": {
      "post": {
        "tags": ["EnvelopeViews"],
        "summary": "Post Envelope Edit View",
        "description": "Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \n\nUpon sending completion, the user is returned to the return URL provided by the API application.\n\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. ",
        "operationId": "Views_PostEnvelopeEditView",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/returnUrlRequest"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeViews"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/views/recipient": {
      "post": {
        "tags": ["EnvelopeViews"],
        "summary": "Post Envelope Recipient View",
        "description": "Returns a URL that enables you to embed the recipient view of the DocuSign UI in your applications. If the recipient is a signer, then the view will provide the signing ceremony.\n\n###### Note: Please redirect the client to the URL. iFrames should not be used, especially if the recipient is using a mobile or tablet. \n\nThis method is only used with envelopes in the `sent` status.\n\nYour application is responsible for authenticating the identity of the recipient or signer when you use this method. Use the parameters `assertionId`, `authenticationInstant`, `authenticationMethod`, `clientUserId`, and `securityDomain` to record information on how the recipient was authenticated. At a minimum, `authenticationMethod` and `clientUserId` are required. The information that you provide is included in the envelope's certificate of completion.\n\n## The event status parameter\nAfter the signer completes or ends the signing ceremony, DocuSign will redirect the user's browser back to your app via the `returnUrl` that you supply. DocuSIgn appends an `event` query parameter to the URL with the outcome of the signing ceremony. Your app should use the event parameter to determine the next step for the envelope. Don't fetch the envelope's status via Envelopes: get or a similar method; that could break the DocuSign rule against polling.\n\n## The URL is time-limited\nThe URL returned by this method is valid for one use. It must be used/displayed within a couple of minutes after being generated. Once the recipient is redirected to the recipient view, they must interact with the DocuSign system periodically or their session will time out.\n\nBecause the URL is time-limited, it should not be stored or sent via email. Immediately redirect the user's browser to the URL after you receive it.\n\nIf you want to invite someone to an embedded signing session via email, the email invitation's URL must be to your application. When invoked, your app should request a recipientView URL from DocuSign and then redirect the signer to that URL.\n\n## Maintaining State\nAfter the recipient completes the recipient view (or signing ceremony), they are redirected to your application. Your application can recover state information about the transaction by storing information in a cookie, or by including query parameters in the `returnUrl` field. Eg, `https://myapp.eg.com/docusign_return?myState=12345` When the user is redirected to your app, the `event` query parameter will be appended. In this example, prevent spoofing by not using a guessable value as the state value.",
        "operationId": "Views_PostEnvelopeRecipientView",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/recipientViewRequest"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeViews"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/views/sender": {
      "post": {
        "tags": ["EnvelopeViews"],
        "summary": "Post Envelope Sender View",
        "description": "Returns a URL that enables you to embed the sender view of the DocuSign UI in your applications.\n\nThe returned URL can only be redirected to immediately after it is generated. It can only be used once.\nTherefore, request the URL immediately before you redirect your user to it.\n\nFor the best user experience, don't use an iFrame. For iOS devices DocuSign recommends using a WebView.\n\nMultiple solutions are available for maintaining your\nclient state. See the **Maintaining State** section of the [Embedded Signing introduction.](https://developers.docusign.com/esign-rest-api/guides/embedded-signing)\n\nAfter the user has completed the sending view, the browser is redirected to the `returnUrl` supplied.\n\nBy default, if the envelope already contains one or more documents, DocuSign will initially show the document tagging view when you redirect to the URL. \n\nTo start with the envelope's recipients and documents view instead, examine the URL in the method's response. \nThen change the query parameter from `send=1` to `send=0` to start with the recipients/documents view.\n\n<blockquote>\n<p><b>Information Security notice:</b> This method provides full access to the sender's user account.\nWhen you use this view, the sender has full access to the user account. If the sender user account has administrative privileges, then this method also provides administrator access.</p>\n\n<p>If your use case needs to enable a sender to update a draft envelope before it is sent, then either:</p>\n\n<ul>\n<li>Configure each sender to have their own individual user account to use this API method.</li>\n<li>Enhance your API integration so that this method is not needed. Your integration can create the tabs, recipients and other envelope settings as needed.</li>\n</ul>\n</blockquote>\n",
        "operationId": "Views_PostEnvelopeSenderView",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/returnUrlRequest"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeViews"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/{envelopeId}/views/shared": {
      "post": {
        "tags": ["EnvelopeViews"],
        "summary": "Post Envelope Recipient Shared View",
        "operationId": "Views_PostEnvelopeRecipientSharedView",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopeId",
            "in": "path",
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/recipientViewRequest"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/viewUrl"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/envelopes/status": {
      "put": {
        "tags": ["Envelopes"],
        "summary": "Put Status",
        "description": "Retrieves the envelope status for the specified envelopes.",
        "operationId": "Envelopes_PutStatus",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ac_status",
            "in": "query",
            "required": false,
            "description": "Specifies the Authoritative Copy Status for the envelopes. The possible values are: Unknown, Original, Transferred, AuthoritativeCopy, AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending, Deposited, DepositedEO, or DepositFailed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "block",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to be returned by this request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelope_ids",
            "in": "query",
            "required": false,
            "description": "Comma separated list of `envelopeId` values.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "description": "The date/time setting that specifies when the request begins checking for status changes for envelopes in the account. This is required unless parameters `envelope_ids` and/or `transaction_Ids` are set. \n\n****Note****: This parameter must be set to a valid  `DateTime`, or  `envelope_ids` and/or `transaction_ids` must be specified.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_to_status",
            "in": "query",
            "required": false,
            "description": "The status value checked for in the `from_date` to `to_date` time period. \n\nPossible values are: Voided, Changed, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.\n\nIf `Changed` is specified, then envelopes that changed status during the period will be returned. \n\nFor example, if `Created` is specified, then envelopes created during the period are found. \n\nThe default is `Changed`. ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Item status. <!-- TODO -->",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "description": "Optional date/time setting\nthat specifies the last date/time \nor envelope status changes in the result set. \n\nDefault: \"now\", the time that you call the method. \n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transaction_ids",
            "in": "query",
            "required": false,
            "description": "A comma-separated list of envelope transaction IDs.\nTransaction IDs are only valid for seven days.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_name",
            "in": "query",
            "required": false,
            "description": "Limit results to envelopes\nsent by the account user\nwith this user name.\n\n`email` must be given as well,\nand both `email` and `user_name`\nmust refer to an existing account user.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/envelopeIdsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopesInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/folders": {
      "get": {
        "tags": ["Folders"],
        "summary": "Get Folders",
        "description": "Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.",
        "operationId": "Folders_GetFolders",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template",
            "in": "query",
            "description": "Specifies the items that are returned. Valid values are: \n\n* include - The folder list will return normal folders plus template folders. \n* only - Only the list of template folders are returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_filter",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/foldersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/folders/{folderId}": {
      "get": {
        "tags": ["Folders"],
        "summary": "Get Folder Items",
        "description": "Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.",
        "operationId": "Folders_GetFolderItems",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "The ID of the folder being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": " Only return items on or after this date. If no value is provided, the default search is the previous 30 days. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owner_email",
            "in": "query",
            "description": " The email of the folder owner. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owner_name",
            "in": "query",
            "description": " The name of the folder owner. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "description": " The search text used to search the items of the envelope. The search looks at recipient names and emails, envelope custom fields, sender name, and subject. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "The position of the folder items to return. This is used for repeated calls, when the number of envelopes returned is too much for one return (calls return 100 envelopes at a time). The default value is 0.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A comma-separated list of current envelope statuses to included in the response. Possible values are:\n\n* completed\n* created\n* declined\n* deleted\n* delivered\n* processing\n* sent\n* signed\n* timedout\n* voided\n\nThe `any` value is equivalent to any status.\n\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "Only return items up to this date. If no value is provided, the default search is to the current date.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/folderItemsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Folders"],
        "summary": "Put Folder By Id",
        "description": "Moves an envelope from its current folder to the specified folder.\n\n###### Note: You can use this endpoint to delete envelopes by specifying `recyclebin` in the `folderId` parameter of the endpoint. Placing an in process envelope (envelope status of `sent` or `delivered`) in the recycle bin voids the envelope. You can also use this endpoint to delete templates by specifying a template ID instead of an envelope ID in the 'envelopeIds' property and specifying `recyclebin` in the `folderId` parameter. ",
        "operationId": "Folders_PutFolderById",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "The ID of the folder being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/foldersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/groups": {
      "get": {
        "tags": ["Groups"],
        "summary": "Get Groups",
        "description": "Retrieves information about groups associated with the account.",
        "operationId": "Groups_GetGroups",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records to return. The number must be greater than 1 and less than or equal to 100.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_type",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "Starting value for the list.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/groupInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Groups"],
        "summary": "Put Groups",
        "description": "Updates the group name and modifies, or sets, the permission profile for the group.",
        "operationId": "Groups_PutGroups",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/groupInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/groupInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["Groups"],
        "summary": "Post Groups",
        "description": "Creates one or more groups for the account.\n\nGroups can be used to help manage users by associating users with a group. You can associate a group with a Permission Profile, which sets the user permissions for users in that group without having to set the `userSettings` property for each user. You are not required to set Permission Profiles for a group, but it makes it easier to manage user permissions for a large number of users. You can also use groups with template sharing to limit user access to templates.",
        "operationId": "Groups_PostGroups",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/groupInformation"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/groupInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["Groups"],
        "summary": "Delete Groups",
        "description": "Deletes an existing user group.",
        "operationId": "Groups_DeleteGroups",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/groupInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/groupInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/groups/{groupId}/brands": {
      "get": {
        "tags": ["GroupBrands"],
        "summary": "Get Group Brands",
        "description": "Retrieves information about the brands associated with the requested group.",
        "operationId": "Brands_GetGroupBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The ID of the group being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/brandsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["GroupBrands"],
        "summary": "Put Group Brands",
        "description": "Adds group brand ID information to a group.",
        "operationId": "Brands_PutGroupBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The ID of the group being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/brandsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/brandsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["GroupBrands"],
        "summary": "Delete Group Brands",
        "description": "Deletes brand information from the requested group.",
        "operationId": "Brands_DeleteGroupBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The ID of the group being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/brandsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/brandsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/groups/{groupId}/users": {
      "get": {
        "tags": ["GroupUsers"],
        "summary": "Get Group Users",
        "description": "Retrieves a list of users in a group.",
        "operationId": "Groups_GetGroupUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The ID of the group being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records to return. The number must be greater than 1 and less than or equal to 100. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "Starting value for the list.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/usersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["GroupUsers"],
        "summary": "Put Group Users",
        "description": "Adds one or more users to an existing group.",
        "operationId": "Groups_PutGroupUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The ID of the group being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/userInfoList"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/usersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["GroupUsers"],
        "summary": "Delete Group Users",
        "description": "Deletes one or more users from a group.\n",
        "operationId": "Groups_DeleteGroupUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The ID of the group being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/userInfoList"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/usersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/identity_verification": {
      "get": {
        "tags": ["IdentityVerifications"],
        "summary": "Get Account Identity Verification",
        "operationId": "AccountIdentityVerification_GetAccountIdentityVerification",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/accountIdentityVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/payment_gateway_accounts": {
      "get": {
        "tags": ["PaymentGatewayAccounts"],
        "summary": "Get All Payment Gateway Accounts",
        "operationId": "PaymentGatewayAccounts_GetAllPaymentGatewayAccounts",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/paymentGatewayAccountsInfo"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": "List payment gateway account information"
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/permission_profiles": {
      "get": {
        "tags": ["AccountPermissionProfiles"],
        "summary": "Get Permission Profiles",
        "description": "Retrieves a list of Permission Profiles. Permission Profiles are a standard set of user permissions that you can apply to individual users or users in a Group. This makes it easier to manage user permissions for a large number of users, without having to change permissions on a user-by-user basis.\n\nCurrently, Permission Profiles can only be created and modified in the DocuSign console.",
        "operationId": "PermissionProfiles_GetPermissionProfiles",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/permissionProfileInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["AccountPermissionProfiles"],
        "summary": "Post Permission Profiles",
        "operationId": "PermissionProfiles_PostPermissionProfiles",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "A comma-separated list of additional information to include in the response. Valid values are: \n\n- `recipients`: Includes information about template recipients.\n- `folders`: Includes information about the folder that holds the template. \n- `documents` : Includes information about template documents.\n- `custom_fields`: Includes information about template custom fields.\n- `notifications`: Includes information about the notification settings for templates.\n- `advanced_templates`: Includes advanced templates in the response. For example, these include templates that use advanced recipient routing. We recommend that you use this option to ensure that the response includes all relevant templates. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/permissionProfile"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/permissionProfile"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/permission_profiles/{permissionProfileId}": {
      "get": {
        "tags": ["AccountPermissionProfiles"],
        "summary": "Get Permission Profile",
        "operationId": "PermissionProfiles_GetPermissionProfile",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permissionProfileId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "A comma-separated list of additional information to include in the response. Valid values are: \n\n- `recipients`: Includes information about template recipients.\n- `folders`: Includes information about the folder that holds the template. \n- `documents` : Includes information about template documents.\n- `custom_fields`: Includes information about template custom fields.\n- `notifications`: Includes information about the notification settings for templates.\n- `advanced_templates`: Includes advanced templates in the response. For example, these include templates that use advanced recipient routing. We recommend that you use this option to ensure that the response includes all relevant templates. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/permissionProfile"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["AccountPermissionProfiles"],
        "summary": "Put Permission Profiles",
        "operationId": "PermissionProfiles_PutPermissionProfiles",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permissionProfileId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "A comma-separated list of additional information to include in the response. Valid values are: \n\n- `recipients`: Includes information about template recipients.\n- `folders`: Includes information about the folder that holds the template. \n- `documents` : Includes information about template documents.\n- `custom_fields`: Includes information about template custom fields.\n- `notifications`: Includes information about the notification settings for templates.\n- `advanced_templates`: Includes advanced templates in the response. For example, these include templates that use advanced recipient routing. We recommend that you use this option to ensure that the response includes all relevant templates. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/permissionProfile"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/permissionProfile"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "delete": {
        "tags": ["AccountPermissionProfiles"],
        "summary": "Delete Permission Profiles",
        "operationId": "PermissionProfiles_DeletePermissionProfiles",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permissionProfileId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "move_users_to",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/powerforms": {
      "get": {
        "tags": ["PowerForms"],
        "summary": "Get Power Forms List",
        "operationId": "PowerForms_GetPowerFormsList",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "description": "Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "description": "An optional value that sets the direction order used to sort the item list. \n\nValid values are: \n\n* asc = ascending sort order\n* desc = descending sort order ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "description": "An optional value that sets the file attribute used to sort the item list. \n\nValid values are: \n\n* modified\n* name  ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "description": "End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/powerFormsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "post": {
        "tags": ["PowerForms"],
        "summary": "Post Power Form",
        "operationId": "PowerForms_PostPowerForm",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/powerForm"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/powerForm"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "delete": {
        "tags": ["PowerForms"],
        "summary": "Delete Power Forms List",
        "operationId": "PowerForms_DeletePowerFormsList",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/powerFormsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/powerFormsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/powerforms/{powerFormId}": {
      "get": {
        "tags": ["PowerForms"],
        "summary": "Get Power Form",
        "operationId": "PowerForms_GetPowerForm",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "powerFormId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/powerForm"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["PowerForms"],
        "summary": "Put Power Form",
        "operationId": "PowerForms_PutPowerForm",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "powerFormId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/powerForm"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/powerForm"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "delete": {
        "tags": ["PowerForms"],
        "summary": "Delete Power Form",
        "operationId": "PowerForms_DeletePowerForm",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "powerFormId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/powerforms/{powerFormId}/form_data": {
      "get": {
        "tags": ["PowerFormData"],
        "summary": "Get Power Form Form Data",
        "operationId": "PowerForms_GetPowerFormFormData",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "powerFormId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data_layout",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "description": "Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "description": "End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/powerFormsFormDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/powerforms/senders": {
      "get": {
        "tags": ["PowerForms"],
        "summary": "Get Power Forms Senders",
        "operationId": "PowerForms_GetPowerFormsSenders",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "required": false,
            "description": "The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/powerFormSendersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/recipient_names": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get Recipient Names",
        "description": "Retrieves a list of recipients in the specified account that are associated with a email address supplied in the query string.",
        "operationId": "RecipientNames_GetRecipientNames",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "The email address for the user",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/recipientNamesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/seals": {
      "get": {
        "tags": ["AccountSealProviders"],
        "summary": "Get Seal Providers",
        "operationId": "AccountSignatureProviders_GetSealProviders",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSealProviders"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/search_folders/{searchFolderId}": {
      "get": {
        "tags": ["Folders"],
        "summary": "Get Search Folder Contents",
        "description": "Retrieves a list of envelopes that match the criteria specified in the query.\n\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.",
        "operationId": "SearchFolders_GetSearchFolderContents",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchFolderId",
            "in": "path",
            "description": "Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "all",
            "in": "query",
            "description": "Specifies that all envelopes that match the criteria are returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Specifies the number of records returned in the cache. The number must be greater than 0 and less than or equal to 100.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Specifies the start of the date range to return. If no value is provided, the default search is the previous 30 days.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_recipients",
            "in": "query",
            "description": "When set to **true**, the recipient information is returned in the response.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specifies the order in which the list is returned. Valid values are: `asc` for ascending order, and `desc` for descending order.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Specifies the property used to sort the list. Valid values are: `action_required`, `created`, `completed`, `sent`, `signer_list`, `status`, or `subject`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "Specifies the the starting location in the result set of the items that are returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "Specifies the end of the date range to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/folderItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/settings": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get Settings",
        "description": "Retrieves the account settings information for the specified account.",
        "operationId": "Settings_GetSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/accountSettingsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Accounts"],
        "summary": "Put Settings",
        "description": "Updates the account settings for the specified account.",
        "operationId": "Settings_PutSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/accountSettingsInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/settings/enote_configuration": {
      "get": {
        "tags": ["ENoteConfigurations"],
        "summary": "Get ENote Configuration",
        "operationId": "ENoteConfiguration_GetENoteConfiguration",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/eNoteConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["ENoteConfigurations"],
        "summary": "Put ENote Configuration",
        "operationId": "ENoteConfiguration_PutENoteConfiguration",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eNoteConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/eNoteConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "delete": {
        "tags": ["ENoteConfigurations"],
        "summary": "Delete ENote Configuration",
        "operationId": "ENoteConfiguration_DeleteENoteConfiguration",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/settings/password_rules": {
      "get": {
        "tags": ["AccountPasswordRules"],
        "summary": "Get Account Password Rules",
        "operationId": "AccountPasswordRules_GetAccountPasswordRules",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/accountPasswordRules"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["AccountPasswordRules"],
        "summary": "Put Account Password Rules",
        "operationId": "AccountPasswordRules_PutAccountPasswordRules",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/accountPasswordRules"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/accountPasswordRules"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/settings/tabs": {
      "get": {
        "tags": ["AccountTabSettings"],
        "summary": "Get Tab Settings",
        "operationId": "TabSettings_GetTabSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/tabAccountSettings"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["AccountTabSettings"],
        "summary": "Put Settings",
        "operationId": "TabSettings_PutSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tabAccountSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/tabAccountSettings"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/shared_access": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get Shared Access",
        "description": "Retrieves shared item status for one or more users and types of items.\n\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the `shared` to `shared_from`.",
        "operationId": "SharedAccess_GetSharedAccess",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Specifies maximum number of results included in the response. If no value is specified, this defaults to 1000.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envelopes_not_shared_user_status",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder_ids",
            "in": "query",
            "required": false,
            "description": "A comma separated list of folder IDs  for which the shared item\ninformation is being requested.\n\nIf `item_type` is `folders`, at least one folder ID is required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item_type",
            "in": "query",
            "description": "Specifies the type of shared item being requested. The possible values are:\n\n- `envelopes`: Get information about envelope sharing between users.\n- `templates`: Get information about template sharing among users and groups.\n- `folders`: Get information about folder sharing among users and groups.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "description": "This can be used to filter user names in the response. The wild-card '*' (asterisk) can be used around the string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shared",
            "in": "query",
            "description": "A comma-separated list of sharing filters that specifies which users appear in the response. \n\n- `not_shared`: The response contains users who do not share items of `item_type` with the current user.\n\n- `shared_to`: The response contains users in `user_list` who are sharing items to current user.\n\n- `shared_from`: The response contains users in `user_list` who are sharing items from the current user.\n\n- `shared_to_and_from`: The response contains users in `user_list` who are sharing items to and sharing items from the current user.\n\nIf the current user does not have administrative privileges, only the `shared_to` option is valid.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "If the number of responses is greater than `count`, the number of responses to skip. Typically this value is a multiple of `count`. Default: 0.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "A comma-separated list of user IDs for whom the shared item information is being requested.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/accountSharedAccess"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Accounts"],
        "summary": "Put Shared Access",
        "description": "This sets the shared access status for one or more users or templates.\n\nWhen setting user shared access, only users with account administration privileges can set shared access status for envelopes.\n\nWhen setting template shared access, only users who own a template and have sharing permission or with account administration privileges can set shared access for templates.\n\nChanges to the shared items status are not additive. The change always replaces the current status.\n\nTo change template shared access the query parameter `item_type` =  `templates` must be added to the request. When this is set, the user and envelopes properties are not required.\n\n",
        "operationId": "SharedAccess_PutSharedAccess",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item_type",
            "in": "query",
            "required": false,
            "description": "Specifies the type of shared item being requested. The possible values are:\n\n- `envelopes`: Get information about envelope sharing between users.\n- `templates`: Get information about template sharing among users and groups.\n- `folders`: Get information about folder sharing among users and groups.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_ids",
            "in": "query",
            "required": false,
            "description": "A comma-separated list of user IDs whose shared item information is being set.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/accountSharedAccess"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/accountSharedAccess"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/signatureProviders": {
      "get": {
        "tags": ["AccountSignatureProviders"],
        "summary": "Get Signature Providers",
        "operationId": "AccountSignatureProviders_GetSignatureProviders",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/accountSignatureProviders"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/signing_groups": {
      "get": {
        "tags": ["SigningGroups"],
        "summary": "Get Signing Groups",
        "description": "Retrieves a list of all signing groups in the specified account.",
        "operationId": "SigningGroups_GetSigningGroups",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_type",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_users",
            "in": "query",
            "description": "When set to **true**, the response includes the signing group members. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/signingGroupInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["SigningGroups"],
        "summary": "Put Signing Groups",
        "description": "Updates the name of one or more existing signing groups. ",
        "operationId": "SigningGroups_PutSigningGroups",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/signingGroupInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/signingGroupInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["SigningGroups"],
        "summary": "Post Signing Groups",
        "description": "Creates one or more signing groups. \n\nMultiple signing groups can be created in one call. Only users with account administrator privileges can create signing groups. \n\nAn account can have a maximum of 50 signing groups. Each signing group can have a maximum of 50 group members.\n \nSigning groups can be used by any account user.",
        "operationId": "SigningGroups_PostSigningGroups",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/signingGroupInformation"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/signingGroupInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["SigningGroups"],
        "summary": "Delete Signing Groups",
        "description": "Deletes one or more signing groups in the specified account.",
        "operationId": "SigningGroups_DeleteSigningGroups",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/signingGroupInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/signingGroupInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/signing_groups/{signingGroupId}": {
      "get": {
        "tags": ["SigningGroups"],
        "summary": "Get Signing Group",
        "description": "Retrieves information, including group member information, for the specified signing group. ",
        "operationId": "SigningGroups_GetSigningGroup",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signingGroupId",
            "in": "path",
            "required": true,
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/signingGroup"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["SigningGroups"],
        "summary": "Put Signing Group",
        "description": "Updates signing group name and member information. You can also add new members to the signing group. A signing group can have a maximum of 50 members. ",
        "operationId": "SigningGroups_PutSigningGroup",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signingGroupId",
            "in": "path",
            "required": true,
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/signingGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/signingGroup"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/signing_groups/{signingGroupId}/users": {
      "get": {
        "tags": ["SigningGroupUsers"],
        "summary": "Get Signing Group Users",
        "description": "Retrieves the list of members in the specified Signing Group.",
        "operationId": "SigningGroups_GetSigningGroupUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signingGroupId",
            "in": "path",
            "required": true,
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/signingGroupUsers"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["SigningGroupUsers"],
        "summary": "Put Signing Group Users",
        "description": "Adds one or more new members to a signing group. A signing group can have a maximum of 50 members. ",
        "operationId": "SigningGroups_PutSigningGroupUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signingGroupId",
            "in": "path",
            "required": true,
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/signingGroupUsers"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/signingGroupUsers"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["SigningGroupUsers"],
        "summary": "Delete Signing Group Users",
        "description": "Deletes  one or more members from the specified signing group. ",
        "operationId": "SigningGroups_DeleteSigningGroupUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signingGroupId",
            "in": "path",
            "required": true,
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/signingGroupUsers"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/signingGroupUsers"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/supported_languages": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get Supported Languages",
        "operationId": "SupportedLanguages_GetSupportedLanguages",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/supportedLanguages"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": "List supported languages for the recipient language setting"
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/tab_definitions": {
      "get": {
        "tags": ["CustomTabs"],
        "summary": "Get Tab Definitions",
        "description": "Retrieves a list of all tabs associated with the account.",
        "operationId": "Tabs_GetTabDefinitions",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_tab_only",
            "in": "query",
            "description": "When set to **true**, only custom tabs are returned in the response. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/tabMetadataList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["CustomTabs"],
        "summary": "Post Tab Definitions",
        "description": "Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.",
        "operationId": "Tabs_PostTabDefinitions",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/tabMetadata"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/tabMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/tab_definitions/{customTabId}": {
      "get": {
        "tags": ["CustomTabs"],
        "summary": "Get Custom Tab",
        "description": "Retrieves information about the requested custom tab on the specified account.",
        "operationId": "Tab_GetCustomTab",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customTabId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/tabMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["CustomTabs"],
        "summary": "Put Custom Tab",
        "description": "Updates the information in a custom tab for the specified account.",
        "operationId": "Tab_PutCustomTab",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customTabId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/tabMetadata"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/tabMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["CustomTabs"],
        "summary": "Delete Custom Tab",
        "description": "Deletes the custom from the specified account.",
        "operationId": "Tab_DeleteCustomTab",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customTabId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates": {
      "get": {
        "tags": ["Templates"],
        "summary": "Get Templates",
        "description": "Retrieves the list of templates for the specified account. The request can be limited to a specific folder.",
        "operationId": "Templates_GetTemplates",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of records to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder",
            "in": "query",
            "description": "The query value can be a folder name or folder ID. The response will only return templates in the specified folder.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder_ids",
            "in": "query",
            "description": "A comma-separated list of folder ID GUIDs.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "A comma-separated list of additional information to include in the response. Valid values are: \n\n- `recipients`: Includes information about template recipients.\n- `folders`: Includes information about the folder that holds the template. \n- `documents` : Includes information about template documents.\n- `custom_fields`: Includes information about template custom fields.\n- `notifications`: Includes information about the notification settings for templates.\n- `advanced_templates`: Includes advanced templates in the response. For example, these include templates that use advanced recipient routing. We recommend that you use this option to ensure that the response includes all relevant templates. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modified_from_date",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modified_to_date",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sets the direction order used to sort the list. Valid values are: \n\n- `asc` = ascending sort order (a to z)  \n- `desc` = descending sort order (z to a)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Sets the file attribute used to sort the list. Valid values are:  \n\n- `name`: template name  \n- `modified`: The date and time the template was last modified.  \n- `used`: The date and time the template was last used.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "description": "The search text used to search the names of templates.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shared_by_me",
            "in": "query",
            "description": "If true, the response only includes templates shared by the user. If false, the response only returns template not shared by the user. If not specified, the response is not affected.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "The starting index for the first template shown in the response. This must be greater than or equal to 0 (zero).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "used_from_date",
            "in": "query",
            "description": "Start of the search date range. Only returns templates used or edited on or after this date/time. If no value is specified, there is no limit on the earliest date used.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "used_to_date",
            "in": "query",
            "description": "End of the search date range. Only returns templates used or edited up to this date/time. If no value is provided, this defaults to the current date.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_filter",
            "in": "query",
            "description": "Sets if the templates shown in the response Valid values are:  -owned_by_me: only shows templates the user owns.  -shared_with_me: only shows templates that are shared with the user.  -all: shows all templates owned or shared with the user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "description": "The id of the user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeTemplateResults"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["Templates"],
        "summary": "Post Templates",
        "description": "Creates a template definition using a multipart request.\n\n### Template Email Subject Merge Fields\n\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\n\nThe merge fields, based on the recipient's role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\n\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\n\n\n###### If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.\n\nTo add a recipient's name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n`[[<roleName>_UserName]]`\n\nExample:\n\n`\"emailSubject\":\"[[Signer 1_UserName]], Please sign this NDA\",`\n\nTo add a recipient's email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:\n\n`[[<roleName>_Email]]`\n\nExample:\n\n`\"emailSubject\":\"[[Signer 1_Email]], Please sign this NDA\",`\n\n\nIn both cases the <roleName> is the recipient's contents of the `roleName` property in the template.\n\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then `[[<roleName>_UserName]]` or `[[<roleName>_Email]]` is shown in the email subject.",
        "operationId": "Templates_PostTemplates",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/envelopeTemplate"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/templateSummary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}": {
      "get": {
        "tags": ["Templates"],
        "summary": "Get Template",
        "description": "Retrieves the definition of the specified template.",
        "operationId": "Templates_GetTemplate",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "description": "A comma-separated list of additional information to include in the response. Valid values are: \n\n- `recipients`: Includes information about template recipients.\n- `folders`: Includes information about the folder that holds the template. \n- `documents` : Includes information about template documents.\n- `custom_fields`: Includes information about template custom fields.\n- `notifications`: Includes information about the notification settings for templates.\n- `advanced_templates`: Includes advanced templates in the response. For example, these include templates that use advanced recipient routing. We recommend that you use this option to ensure that the response includes all relevant templates. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Templates"],
        "summary": "Put Template",
        "description": "Updates an existing template.",
        "operationId": "Templates_PutTemplate",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/envelopeTemplate"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/templateUpdateSummary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/{templatePart}": {
      "put": {
        "tags": ["Templates"],
        "summary": "Put Template Part",
        "description": "Shares a template with the specified members group.",
        "operationId": "Templates_PutTemplatePart",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templatePart",
            "in": "path",
            "description": "Currently, the only defined part is **groups**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/groupInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/groupInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["Templates"],
        "summary": "Delete Template Part",
        "description": "Removes a member group's sharing permissions for a specified template.",
        "operationId": "Templates_DeleteTemplatePart",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templatePart",
            "in": "path",
            "description": "Currently, the only defined part is **groups**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/groupInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/groupInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/custom_fields": {
      "get": {
        "tags": ["TemplateCustomFields"],
        "summary": "Get Template Custom Fields",
        "description": "Retrieves the custom document field information from an existing template.",
        "operationId": "CustomFields_GetTemplateCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/customFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["TemplateCustomFields"],
        "summary": "Put Template Custom Fields",
        "description": "Updates the custom fields in a template.\n\nEach custom field used in a template must have a unique name.",
        "operationId": "CustomFields_PutTemplateCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateCustomFields"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/customFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["TemplateCustomFields"],
        "summary": "Post Template Custom Fields",
        "description": "Creates custom document fields in an existing template document.",
        "operationId": "CustomFields_PostTemplateCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateCustomFields"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/customFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["TemplateCustomFields"],
        "summary": "Delete Template Custom Fields",
        "description": "Deletes envelope custom fields in a template.",
        "operationId": "CustomFields_DeleteTemplateCustomFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateCustomFields"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/customFields"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/documents": {
      "get": {
        "tags": ["TemplateDocuments"],
        "summary": "Get Template Documents",
        "description": "Retrieves a list of documents associated with the specified template.",
        "operationId": "Documents_GetTemplateDocuments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/templateDocumentsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["TemplateDocuments"],
        "summary": "Put Template Documents",
        "description": "Adds one or more documents to an existing template document.",
        "operationId": "Documents_PutTemplateDocuments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apply_document_fields",
            "in": "query",
            "required": false,
            "description": "When **true**, document fields\ncan be added or modified\nwhile adding or modifying envelope documents.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "persist_tabs",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/envelopeDefinition"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/templateDocumentsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["TemplateDocuments"],
        "summary": "Delete Template Documents",
        "description": "Deletes one or more documents from an existing template.",
        "operationId": "Documents_DeleteTemplateDocuments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/envelopeDefinition"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/templateDocumentsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}": {
      "get": {
        "tags": ["TemplateDocuments"],
        "summary": "Get Template Document",
        "description": "Retrieves one or more PDF documents from the specified template.\n\nYou can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.",
        "operationId": "Documents_GetTemplateDocument",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encrypt",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_changes",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["TemplateDocuments"],
        "summary": "Put Template Document",
        "description": "Adds the specified document to an existing template document.",
        "operationId": "Documents_PutTemplateDocument",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apply_document_fields",
            "in": "query",
            "required": false,
            "description": "When **true**, document fields\ncan be added or modified\nwhile adding or modifying envelope documents.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_envelope_definition",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/envelopeDefinition"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/envelopeDocument"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/fields": {
      "get": {
        "tags": ["TemplateDocumentFields"],
        "summary": "Get Template Document Fields",
        "description": "Retrieves the custom document fields for an existing template document.",
        "operationId": "DocumentFields_GetTemplateDocumentFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentFieldsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["TemplateDocumentFields"],
        "summary": "Put Template Document Fields",
        "description": "Updates existing custom document fields in an existing template document.",
        "operationId": "DocumentFields_PutTemplateDocumentFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentFieldsInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentFieldsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["TemplateDocumentFields"],
        "summary": "Post Template Document Fields",
        "description": "Creates custom document fields in an existing template document.",
        "operationId": "DocumentFields_PostTemplateDocumentFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentFieldsInformation"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentFieldsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["TemplateDocumentFields"],
        "summary": "Delete Template Document Fields",
        "description": "Deletes custom document fields from an existing template document.",
        "operationId": "DocumentFields_DeleteTemplateDocumentFields",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentFieldsInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentFieldsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/html_definitions": {
      "get": {
        "tags": ["TemplateDocumentHtmlDefinitions"],
        "summary": "Get Template Document Html Definitions",
        "operationId": "ResponsiveHtml_GetTemplateDocumentHtmlDefinitions",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentHtmlDefinitionOriginals"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages": {
      "get": {
        "tags": ["Templates"],
        "summary": "Get Template Page Images",
        "operationId": "Pages_GetTemplatePageImages",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to be returned by this request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpi",
            "in": "query",
            "required": false,
            "description": "Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_height",
            "in": "query",
            "required": false,
            "description": "Sets the maximum height (in pixels) of the returned image.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_width",
            "in": "query",
            "required": false,
            "description": "Sets the maximum width (in pixels) of the returned image.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nocache",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_changes",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "required": false,
            "description": "The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/pageImages"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}": {
      "delete": {
        "tags": ["Templates"],
        "summary": "Delete Template Page",
        "description": "Deletes a page from a document in a template based on the page number.",
        "operationId": "Pages_DeleteTemplatePage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "path",
            "description": "The page number being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/pageRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/page_image": {
      "get": {
        "tags": ["Templates"],
        "summary": "Get Template Page Image",
        "description": "Retrieves a page image for display from the specified template.",
        "operationId": "Pages_GetTemplatePageImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "path",
            "description": "The page number being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpi",
            "in": "query",
            "required": false,
            "description": "Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_height",
            "in": "query",
            "required": false,
            "description": "Sets the maximum height (in pixels) of the returned image.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_width",
            "in": "query",
            "required": false,
            "description": "Sets the maximum width (in pixels) of the returned image.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_changes",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Templates"],
        "summary": "Put Template Page Image",
        "description": "Rotates page image from a template for display. The page image can be rotated to the left or right.",
        "operationId": "Pages_PutTemplatePageImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "path",
            "description": "The page number being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/pageRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/tabs": {
      "get": {
        "tags": ["TemplateDocumentTabs"],
        "summary": "Get Template Page Tabs",
        "operationId": "Tabs_GetTemplatePageTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "path",
            "description": "The page number being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateDocumentTabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/responsive_html_preview": {
      "post": {
        "tags": ["TemplateDocumentResponsiveHtmlPreview"],
        "summary": "Post Template Document Responsive Html Preview",
        "operationId": "ResponsiveHtml_PostTemplateDocumentResponsiveHtmlPreview",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentHtmlDefinition"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentHtmlDefinitions"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/tabs": {
      "get": {
        "tags": ["TemplateDocumentTabs"],
        "summary": "Get Template Document Tabs",
        "operationId": "Tabs_GetTemplateDocumentTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The ID of the document being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_numbers",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateDocumentTabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/html_definitions": {
      "get": {
        "tags": ["TemplateHtmlDefinitions"],
        "summary": "Get Template Html Definitions",
        "operationId": "ResponsiveHtml_GetTemplateHtmlDefinitions",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentHtmlDefinitionOriginals"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/lock": {
      "get": {
        "tags": ["TemplateLocks"],
        "summary": "Get Template Lock",
        "description": "Retrieves general information about the template lock.\n\nIf the call is made by the user who has the lock and the request has the same integrator key as original, then the `X-DocuSign-Edit` header  field and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.",
        "operationId": "Lock_GetTemplateLock",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/lockInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["TemplateLocks"],
        "summary": "Put Template Lock",
        "description": "Updates the lock duration time or update the `lockedByApp` property information for the specified template. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.",
        "operationId": "Lock_PutTemplateLock",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/lockRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/lockInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["TemplateLocks"],
        "summary": "Post Template Lock",
        "description": "Locks the specified template, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the template.\n\n###### Note: Users must have envelope locking capability enabled to use this function (the userSetting property `canLockEnvelopes` must be set to **true** for the user).",
        "operationId": "Lock_PostTemplateLock",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/lockRequest"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/lockInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["TemplateLocks"],
        "summary": "Delete Template Lock",
        "description": "Deletes the lock from the specified template. The `X-DocuSign-Edit` header must be included in the request.",
        "operationId": "Lock_DeleteTemplateLock",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/lockRequest"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/lockInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/notification": {
      "get": {
        "tags": ["Templates"],
        "summary": "Get Templates Template Id Notification",
        "description": "Retrieves the envelope notification, reminders and expirations, information for an existing template.",
        "operationId": "Notification_GetTemplatesTemplateIdNotification",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/notification"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Templates"],
        "summary": "Put Templates Template Id Notification",
        "description": "Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.",
        "operationId": "Notification_PutTemplatesTemplateIdNotification",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/templateNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/notification"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/recipients": {
      "get": {
        "tags": ["TemplateRecipients"],
        "summary": "Get Template Recipients",
        "description": "Retrieves the information for all recipients in the specified template.",
        "operationId": "Recipients_GetTemplateRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_anchor_tab_locations",
            "in": "query",
            "description": " When set to **true** and `include_tabs` is set to **true**, all tabs with anchor tab properties are included in the response. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_extended",
            "in": "query",
            "description": " When set to **true**, the extended properties are included in the response. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_tabs",
            "in": "query",
            "description": "When set to **true**, the tab information associated with the recipient is included in the response.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/recipients"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["TemplateRecipients"],
        "summary": "Put Template Recipients",
        "description": "Updates recipients in a template. \n\nYou can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.",
        "operationId": "Recipients_PutTemplateRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resend_envelope",
            "in": "query",
            "required": false,
            "description": "When set to **true**, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateRecipients"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/recipientsUpdateSummary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["TemplateRecipients"],
        "summary": "Post Template Recipients",
        "description": "Adds one or more recipients to a template.",
        "operationId": "Recipients_PostTemplateRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resend_envelope",
            "in": "query",
            "required": false,
            "description": "When set to **true**, resends the   envelope if the new recipient's routing order is before or the same as the envelope's next recipient.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateRecipients"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/recipients"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["TemplateRecipients"],
        "summary": "Delete Template Recipients",
        "description": "Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.",
        "operationId": "Recipients_DeleteTemplateRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateRecipients"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/recipients"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}": {
      "delete": {
        "tags": ["TemplateRecipients"],
        "summary": "Delete Template Recipient",
        "description": "Deletes the specified recipient file from the specified template.",
        "operationId": "Recipients_DeleteTemplateRecipient",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateRecipients"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/recipients"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/bulk_recipients": {
      "get": {
        "tags": ["TemplateBulkRecipients"],
        "summary": "Get Template Bulk Recipients",
        "description": "Retrieves the bulk recipient file information from a template that has a bulk recipient.",
        "operationId": "Recipients_GetTemplateBulkRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_tabs",
            "in": "query",
            "required": false,
            "description": "When set to **true**, the tab information associated with the recipient is included in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/bulkRecipientsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["TemplateBulkRecipients"],
        "summary": "Put Template Bulk Recipients",
        "description": "Updates the bulk recipients in a template using a file upload. The Content-Type supported for uploading a bulk recipient file is CSV (text/csv).\n\nThe REST API does not support modifying individual rows or values in the bulk recipients file. It only allows the entire file to be added or replaced with a new file.",
        "operationId": "Recipients_PutTemplateBulkRecipients",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bulkRecipientsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/bulkRecipientsSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["TemplateBulkRecipients"],
        "summary": "Delete Template Bulk Recipients File",
        "description": "Deletes the bulk recipient list on a template.",
        "operationId": "Recipients_DeleteTemplateBulkRecipientsFile",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/bulkRecipientsUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/document_visibility": {
      "get": {
        "tags": ["TemplateDocumentVisibility"],
        "summary": "Get Template Recipient Document Visibility",
        "operationId": "Recipients_GetTemplateRecipientDocumentVisibility",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentVisibilityList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["TemplateDocumentVisibility"],
        "summary": "Put Template Recipient Document Visibility",
        "operationId": "Recipients_PutTemplateRecipientDocumentVisibility",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateDocumentVisibilityList"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/templateDocumentVisibilityList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/tabs": {
      "get": {
        "tags": ["TemplateRecipientTabs"],
        "summary": "Get Template Recipient Tabs",
        "description": "Gets the tabs information for a signer or sign-in-person recipient in a template.",
        "operationId": "Recipients_GetTemplateRecipientTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_anchor_tab_locations",
            "in": "query",
            "description": "When set to **true**, all tabs with anchor tab properties are included in the response. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_metadata",
            "in": "query",
            "required": false,
            "description": "Reserved for DocuSign.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/tabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["TemplateRecipientTabs"],
        "summary": "Put Template Recipient Tabs",
        "description": "Updates one or more tabs for a recipient in a template.",
        "operationId": "Recipients_PutTemplateRecipientTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateTabs"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/tabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["TemplateRecipientTabs"],
        "summary": "Post Template Recipient Tabs",
        "description": "Adds one or more tabs for a recipient.",
        "operationId": "Recipients_PostTemplateRecipientTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateTabs"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/tabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["TemplateRecipientTabs"],
        "summary": "Delete Template Recipient Tabs",
        "description": "Deletes one or more tabs associated with a recipient in a template.",
        "operationId": "Recipients_DeleteTemplateRecipientTabs",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateTabs"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/tabs"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/recipients/document_visibility": {
      "put": {
        "tags": ["TemplateDocumentVisibility"],
        "summary": "Put Template Recipients Document Visibility",
        "operationId": "Recipients_PutTemplateRecipientsDocumentVisibility",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/templateDocumentVisibilityList"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/templateDocumentVisibilityList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/responsive_html_preview": {
      "post": {
        "tags": ["TemplateResponsiveHtmlPreview"],
        "summary": "Post Template Responsive Html Preview",
        "operationId": "ResponsiveHtml_PostTemplateResponsiveHtmlPreview",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/documentHtmlDefinition"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/documentHtmlDefinitions"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/templates/{templateId}/views/edit": {
      "post": {
        "tags": ["TemplateViews"],
        "summary": "Post Template Edit View",
        "operationId": "Views_PostTemplateEditView",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The ID of the template being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/returnUrlRequest"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/viewUrl"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/unsupported_file_types": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get Unsupported File Types",
        "description": "Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.",
        "operationId": "UnsupportedFileTypes_GetUnsupportedFileTypes",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/fileTypeList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get Users",
        "description": "Retrieves the list of users for the specified account.\n\nThe response returns the list of users for the account along with the information about the result set. If the `additional_info` query was added to the endpoint and set to **true**, the full user information is returned for each user",
        "operationId": "Users_GetUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "When set to **true**, the full list of user information is returned for each user in the account.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records to return. The number must be greater than 0 and less than or equal to 100. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email_substring",
            "in": "query",
            "description": "Filters the returned user records by the email address or a sub-string of email address.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "Filters user records returned by one or more group Id's.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "login_status",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "not_group_id",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "Starting value for the list. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Filters the user records by account status. One of:\n\n* ActivationRequired\n* ActivationSent\n* Active\n* Closed\n* Disabled\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_name_substring",
            "in": "query",
            "description": "Filters the user records returned by the user name or a sub-string of user name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userInformationList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Users"],
        "summary": "Put Users",
        "operationId": "Users_PutUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userInformationList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userInformationList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "post": {
        "tags": ["Users"],
        "summary": "Post Users",
        "description": "Adds new users to an account.\n\nThe body of this request\nis an array\nof [`Users`][usersobject] objects.\nFor each new user,\nyou must provide at least\nthe `userName`\nand\nan `email`.\n\nThe\n[`userSettings` property](#user-settings)\nis a [name/value][nameValue]\nlist that specifies the actions users can\nperform.\nIn the example below,\nTal Mason\nwill be able to send envelopes,\nand the activation email\nwill be in French\nbecause the `locale`\nis set to `fr`.\n\n\n```\nPOST /restapi/v2/accounts/{accountId}/users\nContent-Type: application/json\n```\n```\n{\n  \"newUsers\": [\n    {\n      \"userName\": \"Claire Horace\",\n      \"email\": \"claire@example.com.com\"\n    },\n    {\n      \"userName\": \"Tal Mason\",\n      \"email\": \"tal@example.com.com\",\n      \"userSettings\": [\n        {\n          \"name\": \"canSendEnvelope\",\n          \"value\": \"true\"\n        },\n        {\n          \"name\": \"locale\",\n          \"value\": \"fr\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n\nA successful response\nis a\n`newUsers` array\nwith information about\nthe newly created users.\nIf there was problem creating a user,\nthat entry will contain\nan `errorDetails` property\nthat describes what went wrong.\n\n```json\n{\n  \"newUsers\": [\n    {\n      \"userId\": \"e064a4fc-c0da-c0c0-95fa-8bac87ede98a\",\n      \"uri\": \"/users/e064a4fc-c0da-c0c0-95fa-8bac87ede98a\",\n      \"email\": \"claire@example.com\",\n      \"userName\": \"Claire Horace\",\n      \"createdDateTime\": \"0001-01-01T08:00:00.0000000Z\",\n      \"errorDetails\": {\n        \"errorCode\": \"USER_ALREADY_EXISTS_IN_ACCOUNT\",\n        \"message\": \"Username and email combination already exists for this account.\"\n      }\n    },\n    {\n      \"userId\": \"a0e6c64b-feed-cafe-9af0-805ff3c8cffd\",\n      \"uri\": \"/users/a0e6c64b-feed-cafe-9af0-805ff3c8cffd\",\n      \"email\": \"tal@example.com\",\n      \"userName\": \"Tal Mason\",\n      \"userStatus\": \"ActivationSent\",\n      \"createdDateTime\": \"2017-09-15T05:54:36.1265683Z\"\n    }\n  ]\n}\n```\n\n\n### User Settings\n\nUser settings\nspecify the capabilities\na newly created user will have.\n\n\n| Name                             | Value   | Authorization Requried                                         | Description|\n| :------------------------------- | :------ | :------------------------------------------------------------- ||\n| allowBulkRecipients              | Boolean | Admin                                                          | When **true**, this user can use the bulk send functionality.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n| allowRecipientLanguageSelection  | Boolean | Admin                                                          | When **true**, this user can set the language used in the standard email format for a recipient when creating an envelope.                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| allowSendOnBehalfOf              | Boolean | Admin                                                          | When **true**, this user can send envelopes 'on behalf of' other users through the API.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| apiAccountWideAccess             | Boolean | Admin                                                          | When **true**, this user can send and manage envelopes for the entire account using the DocuSign API.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| canEditSharedAddressBook         | String  | Admin                                                          | Sets the address book usage and management rights for the user. Possible values: <ul> <li><code>none</code></li> <li><code>use_only_shared</code></li> <li><code>use_private_and_shared</code></li> <li><code>share</code></li> </ul>                                                                                                                                                                                                                                                                                                                                                   |\n| canManageAccount                 | Boolean | Admin &amp; not setting for self                               | When **true**, this user can manage account settings, manage user settings, add users, and remove users.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| canManageTemplates               | String  | Admin &amp; not setting for self                               | Sets the template usage and management rights for the user. Possible values: <ul> <li><code>none</code></li> <li><code>use</code></li> <li><code>create</code></li> <li><code>share</code></li> </ul>                                                                                                                                                                                                                                                                                                                                                                                   |\n| canSendAPIRequests               | Boolean | Admin &amp; [account setting][accountsettings] `usesAPI` is set| Only needed if integrator key is not used. When **true**, this user can send and manage envelopes using the DocuSign API.                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| canSendEnvelope                  | Boolean | Admin &amp; not setting for self                               | When **true**, this user can send envelopes though the DocuSign Console.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| enableDSPro                      | Boolean | SysAdmin                                                       | When **true**, this user can send and manage envelopes from the DocuSign Desktop Client.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| enableSequentialSigningAPI       | Boolean | SysAdmin                                                       | When **true**, this user can define the routing order of recipients for envelopes sent using the DocuSign API.                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| enableSequentialSigningUI        | Boolean | SysAdmin                                                       | When **true**, this user can define the routing order of recipients while sending documents for signature.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| enableSignerAttachments          | Boolean | Admin                                                          | When **true**, this user can add requests for attachments from signers while sending documents.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| enableSignOnPaperOverride        | Boolean | Admin                                                          | When **true**, this user can override the account setting that determines if signers may sign their documents on paper as an option to signing electronically.                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| enableTransactionPoint           | Boolean | SysAdmin                                                       | When **true**, this user can select an envelope from their member console and upload the envelope documents to TransactionPoint.                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| enableVaulting                   | Boolean | Admin                                                          | When **true**, this user can use electronic vaulting for documents|\n| locale                           | String  | Admin                                                          | Sets the default language for the user. The supported languages are: <ul> <li>Chinese Simplified: <code>zh_CN</code></li> <li>Chinese Traditional: <code>zh_TW</code></li> <li>Dutch: <code>nl</code></li> <li>English US: <code>en</code></li> <li>French: <code>fr</code></li> <li>German: <code>de</code></li> <li>Italian: <code>it</code></li> <li>Japanese: <code>ja</code></li> <li>Korean: <code>ko</code></li> <li>Portuguese: <code>pt</code></li> <li>Portuguese (Brazil): <code>pt_BR</code></li> <li>Russian: <code>ru</code></li> <li>Spanish: <code>es</code></li> </ul> |\n| powerFormAdmin                   | Boolean | Admin                                                          | When **true**, this user can create, manage and download the PowerForms documents.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| powerFormUser                    | Boolean | Admin                                                          | When **true**, this user can view and download PowerForms documents|\n| selfSignedRecipientEmailDocument | String  | Admin                                                          | Sets how self-signed documents are presented to the email recipients. This can only be changed if the <code>selfSignedRecipientEmailDocumentUserOverride</code> <a href=\"https://developers.docusign.com/esign-rest-api/reference/Accounts/Accounts/create/#account-settings\">account setting</a> is <strong>true</strong>. This setting overrides the account setting. Possibe values are: <ul> <li><code>include_pdf</code>: A PDF of the completed document is attached to the email.</li> <li><code>include_link</code>: A secure link to the self-signed documents is included in the email.</li> </ul>                      |\n| vaultingMode                     | String  | Admin                                                          | Sets the electronic vaulting mode for the user. Possible values: <ul> <li><code>none</code></li> <li><code>estored</code></li> <li><code>electronic_original</code></li> </ul>                                                                                                                                                                                                                                                                                                                                                                                                          |\n\n[accountsettings]:  https://developers.docusign.com/esign-rest-api/reference/Accounts/Accounts/create/#account-settings\n[nameValue]:        #/definitions/nameValue\n[usersobject]:      #/definitions/Users\n",
        "operationId": "Users_PostUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newUsersDefinition"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/newUsersSummary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete Users",
        "description": "This closes one or more user records in the account. Users are never deleted from an account, but closing a user prevents them from using account functions.\n\nThe response returns whether the API execution was successful (200 - OK) or  if it failed. The response contains a user structure similar to the request and includes the user changes. If an error occurred during the DELETE operation for any of the users, the response for that user contains an `errorDetails` node with `errorCode` and `message` properties.",
        "operationId": "Users_DeleteUsers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delete",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/userInfoList"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/usersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get User",
        "description": "Retrieves the user information for the specified user. \n\nTo return additional user information that details the last login date, login status, and the user's password expiration date, set the optional `additional_info` query string parameter to **true**.",
        "operationId": "User_GetUser",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "When set to **true**, the full list of user information is returned for each user in the account.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Users"],
        "summary": "Put User",
        "operationId": "User_PutUser",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/cloud_storage": {
      "get": {
        "tags": ["CloudStorageProviders"],
        "summary": "Get Cloud Storage Providers",
        "description": "Retrieves the list of cloud storage providers enabled for the account and the configuration information for the user.\n",
        "operationId": "CloudStorage_GetCloudStorageProviders",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirectUrl",
            "in": "query",
            "description": " The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\n\nThe redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.\n ",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/cloudStorageProviders"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["CloudStorageProviders"],
        "summary": "Post Cloud Storage",
        "description": "Configures the redirect URL information  for one or more cloud storage providers for the specified user. The redirect URL is added to the authentication URL to complete the return route.",
        "operationId": "CloudStorage_PostCloudStorage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/cloudStorageProviders"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/cloudStorageProviders"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["CloudStorageProviders"],
        "summary": "Delete Cloud Storage Providers",
        "description": "Deletes the user authentication information for one or more cloud storage providers. The next time the user tries to access the cloud storage provider, they must pass normal authentication.",
        "operationId": "CloudStorage_DeleteCloudStorageProviders",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/cloudStorageProviders"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/cloudStorageProviders"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}": {
      "get": {
        "tags": ["CloudStorageProviders"],
        "summary": "Get Cloud Storage",
        "description": "Retrieves the list of cloud storage providers enabled for the account and the configuration information for the user.",
        "operationId": "CloudStorage_GetCloudStorage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service to access. \n\nValid values are the service name (\"Box\") or the numerical serviceId (\"4136\").",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirectUrl",
            "in": "query",
            "description": " The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\n\nThe redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.\n ",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/cloudStorageProviders"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["CloudStorageProviders"],
        "summary": "Delete Cloud Storage",
        "description": "Deletes the user authentication information for the specified cloud storage provider. The next time the user tries to access the cloud storage provider, they must pass normal authentication for this cloud storage provider.",
        "operationId": "CloudStorage_DeleteCloudStorage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service to access. \n\nValid values are the service name (\"Box\") or the numerical serviceId (\"4136\").",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/cloudStorageProviders"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}/folders": {
      "get": {
        "tags": ["CloudStorage"],
        "summary": "Get Cloud Storage Folder All",
        "description": "Retrieves a list of all the items in a specified folder from the specified cloud storage provider. ",
        "operationId": "CloudStorageFolder_GetCloudStorageFolderAll",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service to access. \n\nValid values are the service name (\"Box\") or the numerical serviceId (\"4136\").",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloud_storage_folder_path",
            "in": "query",
            "description": "A comma separated list of folder IDs included in the request. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "An optional value that sets how many items are included in the response. \n\nThe default setting for this is 25. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "An optional value that sets the direction order used to sort the item list. \n\nValid values are: \n\n* asc = ascending sort order\n* desc = descending sort order ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "An optional value that sets the file attribute used to sort the item list. \n\nValid values are: \n\n* modified\n* name  ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "Indicates the starting point of the first item included in the response set. It uses a 0-based index. The default setting for this is 0.  ",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/externalFolder"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}/folders/{folderId}": {
      "get": {
        "tags": ["CloudStorage"],
        "summary": "Get Cloud Storage Folder",
        "description": "Retrieves a list of all the items in all  the folders associated with the user from the specified cloud storage provider. You can limit the scope of the returned items by providing a comma separated list of folder IDs in the request.",
        "operationId": "CloudStorageFolder_GetCloudStorageFolder",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "The ID of the folder being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service to access. \n\nValid values are the service name (\"Box\") or the numerical serviceId (\"4136\").",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloud_storage_folder_path",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "An optional value that sets how many items are included in the response. \n\nThe default setting for this is 25. ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "An optional value that sets the direction order used to sort the item list. \n\nValid values are: \n\n* asc = ascending sort order\n* desc = descending sort order ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "An optional value that sets the file attribute used to sort the item list. \n\nValid values are: \n\n* modified\n* name  ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "Indicates the starting point of the first item included in the response set. It uses a 0-based index. The default setting for this is 0.  ",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/externalFolder"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/custom_settings": {
      "get": {
        "tags": ["UserCustomSettings"],
        "summary": "Get Custom Settings",
        "description": "Retrieves a list of custom user settings for a single user.\n\nCustom settings provide a flexible way to store and retrieve custom user information that can be used in your own system.\n\n###### Note: Custom user settings are not the same as user account settings.\n\n###Getting Grouped Custom User Settings###\n\nIf the custom user settings you want to retrieve are grouped, you must include the following information in the header, after Content-Type, in the request:\n\n`X-DocuSign-User-Settings-Key:group_name`\n\nWhere the `group_name` is your designated name for the group of customer user settings.\n\nIf the extra header information is not included, only the custom user settings that were added without a group are retrieved.",
        "operationId": "UserCustomSettings_GetCustomSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/customSettingsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["UserCustomSettings"],
        "summary": "Put Custom Settings",
        "description": "Adds or updates custom user settings for the specified user.\n\n###### Note: Custom user settings are not the same as user account settings.\n\nCustom settings provide a flexible way to store and retrieve custom user information that you can use in your own system.\n\n**Important**: There is a limit on the size for all the custom user settings for a single user. The limit is 4,000 characters, which includes the XML and JSON structure for the settings.\n\n### Grouping Custom User Settings ###\n\nYou can group custom user settings when adding them. Grouping allows you to retrieve settings that are in a specific group, instead of retrieving all the user custom settings.\n\nTo group custom user settings, add the following information in the header, after Content-Type:\n\n`X-DocuSign-User-Settings-Key:group_name`\n\nWhere the `group_name` is your designated name for the group of customer user settings. Grouping is shown in the Example Request Body below.\n\nWhen getting or deleting grouped custom user settings, you must include the extra header information.\n\nGrouping custom user settings is not required and if the extra header information is not included, the custom user settings are added normally and can be retrieved or deleted without including the additional header.",
        "operationId": "UserCustomSettings_PutCustomSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/customSettingsInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/customSettingsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["UserCustomSettings"],
        "summary": "Delete Custom Settings",
        "description": "Deletes the specified custom user settings for a single user.\n\n###Deleting Grouped Custom User Settings###\n\nIf the custom user settings you want to delete are grouped, you must include the following information in the header, after Content-Type, in the request:\n\n`X-DocuSign-User-Settings-Key:group_name`\n\nWhere the `group_name` is your designated name for the group of customer user settings.\n\nIf the extra header information is not included, only the custom user settings that were added without a group are deleted.",
        "operationId": "UserCustomSettings_DeleteCustomSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/customSettingsInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/customSettingsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/profile": {
      "get": {
        "tags": ["UserProfiles"],
        "summary": "Get Profile",
        "description": "Retrieves the user profile information, the privacy settings and personal information (address, phone number, etc.) for the specified user.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.",
        "operationId": "UserProfile_GetProfile",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userProfile"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["UserProfiles"],
        "summary": "Put Profile",
        "description": "Updates the user's detail information, profile information, privacy settings, and personal information in the user ID card.\n\nYou can also change a user's name by changing the information in the `userDetails` property. When changing a user's name, you can either change the information in the `userName` property OR change the information in `firstName`, `middleName`, `lastName, suffixName`, and `title` properties. Changes to `firstName`, `middleName`, `lastName`, `suffixName`, and `title` properties take precedence over changes to the `userName` property.",
        "operationId": "UserProfile_PutProfile",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/profile/image": {
      "get": {
        "tags": ["Users"],
        "summary": "Get User Profile Image",
        "description": "Retrieves the user profile picture for the specified user. The image is returned in the same format as uploaded.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.\n\nIf successful, the response returns a 200 - OK and the user profile image.",
        "operationId": "UserProfileImage_GetUserProfileImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "encoding",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "image/gif": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "image/gif": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Users"],
        "summary": "Put User Profile Image",
        "description": "Updates the user profile image by uploading an image to the user profile.\n\nThe supported image formats are: gif, png, jpeg, and bmp. The file must be less than 200K. For best viewing results, DocuSign recommends that the image is no more than 79 pixels wide and high.",
        "operationId": "UserProfileImage_PutUserProfileImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete User Profile Image",
        "description": "Deletes the user profile image from the  specified user's profile.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.",
        "operationId": "UserProfileImage_DeleteUserProfileImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/settings": {
      "get": {
        "tags": ["Users"],
        "summary": "Get User Settings",
        "description": "Retrieves a list of the account settings and email notification information for the specified user.\n\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].",
        "operationId": "UserSettings_GetUserSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userSettingsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Users"],
        "summary": "Put User Settings",
        "description": "Updates the account settings list and email notification types for the specified user.",
        "operationId": "UserSettings_PutUserSettings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userSettingsInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/signatures": {
      "get": {
        "tags": ["UserSignatures"],
        "summary": "Get User Signatures",
        "description": "Retrieves the signature definitions for the specified user.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
        "operationId": "UserSignatures_GetUserSignatures",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stamp_type",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userSignaturesInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["UserSignatures"],
        "summary": "Put User Signature",
        "operationId": "UserSignatures_PutUserSignature",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/userSignaturesInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userSignaturesInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "post": {
        "tags": ["UserSignatures"],
        "summary": "Post User Signatures",
        "description": "Adds a user signature image and/or user initials image to the specified user. \n\nThe userId property specified in the endpoint must match the authenticated user's userId and the user must be a member of the account.\n\nThe rules and processes associated with this are:\n\n* If Content-Type is set to application/json, then the default behavior for creating a default signature image, based on the name and a DocuSign font, is used.\n* If Content-Type is set to multipart/form-data, then the request must contain a first part with the user signature information, followed by parts that contain the images.\n\nFor each Image part, the Content-Disposition header has a \"filename\" value that is used to map to the `signatureName` and/or `signatureInitials` properties in the JSON to the image. \n\nFor example: \n`Content-Disposition: file; filename=\"Ron Test20121127083900\"`\n\nIf no matching image (by filename value) is found, then the image is not set. One, both, or neither of the signature and initials images can be set with this call.\n\nThe Content-Transfer-Encoding: base64 header, set in the header for the part containing the image, can be set to indicate that the images are formatted as base64 instead of as binary.\n\nIf successful, 200-OK is returned, and a JSON structure containing the signature information is provided, note that the signatureId can change with each API POST, PUT, or DELETE since the changes to the signature structure cause the current signature to be closed, and a new signature record to be created.",
        "operationId": "UserSignatures_PostUserSignatures",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/userSignaturesInformation"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userSignaturesInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/signatures/{signatureId}": {
      "get": {
        "tags": ["UserSignatures"],
        "summary": "Get User Signature",
        "description": "Retrieves the structure of a single signature with a known signature name.\n\nThe userId specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
        "operationId": "UserSignatures_GetUserSignature",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signatureId",
            "in": "path",
            "description": "The ID of the signature being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userSignature"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["UserSignatures"],
        "summary": "Put User Signature By Id",
        "description": "Creates, or updates, the signature font and initials for the specified user. When creating a signature, you use this resource to create the signature name and then add the signature and initials images into the signature.\n\n###### Note: This will also create a default signature for the user when one does not exist.\n\nThe userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
        "operationId": "UserSignatures_PutUserSignatureById",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signatureId",
            "in": "path",
            "description": "The ID of the signature being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "close_existing_signature",
            "in": "query",
            "description": "When set to **true**, closes the current signature.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userSignatureDefinition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userSignature"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["UserSignatures"],
        "summary": "Delete User Signature",
        "description": "Removes the signature information for the user.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
        "operationId": "UserSignatures_DeleteUserSignature",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signatureId",
            "in": "path",
            "description": "The ID of the signature being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/signatures/{signatureId}/{imageType}": {
      "get": {
        "tags": ["UserSignatures"],
        "summary": "Get User Signature Image",
        "description": "Retrieves the specified initials image or signature image for the specified user. The image is returned in the same format as uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.\n\nThe userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".\n\n###### Note: Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.",
        "operationId": "UserSignatures_GetUserSignatureImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imageType",
            "in": "path",
            "description": "One of **signature_image** or **initials_image**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signatureId",
            "in": "path",
            "description": "The ID of the signature being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_chrome",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "image/gif": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "image/gif": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["UserSignatures"],
        "summary": "Put User Signature Image",
        "description": "Updates the user signature image or user initials image for the specified user. The supported image formats for this file are: gif, png, jpeg, and bmp. The file must be less than 200K.\n\nThe userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".\n",
        "operationId": "UserSignatures_PutUserSignatureImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imageType",
            "in": "path",
            "description": "One of **signature_image** or **initials_image**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signatureId",
            "in": "path",
            "description": "The ID of the signature being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userSignature"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["UserSignatures"],
        "summary": "Delete User Signature Image",
        "description": "Deletes the specified initials image or signature image for the specified user.\n\nThe function deletes one or the other of the image types, to delete both the initials image and signature image you must call the endpoint twice.\n\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
        "operationId": "UserSignatures_DeleteUserSignatureImage",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imageType",
            "in": "path",
            "description": "One of **signature_image** or **initials_image**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signatureId",
            "in": "path",
            "description": "The ID of the signature being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userSignature"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/users/{userId}/social": {
      "get": {
        "tags": ["UserSocialAccountLogins"],
        "summary": "Get User Social Login",
        "description": "Retrieves a list of social accounts linked to a user's account.",
        "operationId": "UserSocialLogin_GetUserSocialLogin",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userSocialIdResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["UserSocialAccountLogins"],
        "summary": "Put User Social Login",
        "description": "Adds a new social account to a user's account.",
        "operationId": "UserSocialLogin_PutUserSocialLogin",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/socialAccountInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["UserSocialAccountLogins"],
        "summary": "Delete User Social Login",
        "description": "Deletes a social account from a use's account.",
        "operationId": "UserSocialLogin_DeleteUserSocialLogin",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/socialAccountInformation"
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/views/console": {
      "post": {
        "tags": ["EnvelopeViews"],
        "summary": "Post Account Console View",
        "description": "Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.",
        "operationId": "Views_PostAccountConsoleView",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/consoleViewRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EnvelopeViews"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/watermark": {
      "get": {
        "tags": ["AccountWatermarks"],
        "summary": "Get Watermark",
        "operationId": "Watermark_GetWatermark",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/watermark"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "put": {
        "tags": ["AccountWatermarks"],
        "summary": "Put Watermark",
        "operationId": "Watermark_PutWatermark",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/watermark"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/watermark"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/watermark/preview": {
      "put": {
        "tags": ["AccountWatermarks"],
        "summary": "Put Watermark Preview",
        "operationId": "WatermarkPreview_PutWatermarkPreview",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/watermark"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/watermark"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/workspaces": {
      "get": {
        "tags": ["Workspaces"],
        "summary": "Get Workspaces",
        "description": "Gets information about the Workspaces that have been created.",
        "operationId": "Workspace_GetWorkspaces",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/workspaceList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["Workspaces"],
        "summary": "Post Workspace",
        "description": "Creates a new workspace.",
        "operationId": "Workspace_PostWorkspace",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/workspace"
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/workspace"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/workspaces/{workspaceId}": {
      "get": {
        "tags": ["Workspaces"],
        "summary": "Get Workspace",
        "description": "Retrives properties about a workspace given a unique workspaceId. ",
        "operationId": "Workspace_GetWorkspace",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Specifies the workspace ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/workspace"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["Workspaces"],
        "summary": "Put Workspace",
        "description": "Updates information about a specific workspace.",
        "operationId": "Workspace_PutWorkspace",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Specifies the workspace ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/workspace"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/workspace"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["Workspaces"],
        "summary": "Delete Workspace",
        "description": "Deletes an existing workspace (logically).",
        "operationId": "Workspace_DeleteWorkspace",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Specifies the workspace ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/workspace"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}": {
      "get": {
        "tags": ["WorkspaceItems"],
        "summary": "Get Workspace Folder",
        "description": "Retrieves workspace folder contents, which can include sub folders and files.",
        "operationId": "WorkspaceFolder_GetWorkspaceFolder",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "The ID of the folder being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Specifies the workspace ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to be returned by this request.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_files",
            "in": "query",
            "description": "When set to **true**, file information is returned in the response along with folder information. The default is **false**.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_sub_folders",
            "in": "query",
            "description": "When set to **true**, information about the sub-folders of the current folder is returned. The default is **false**.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_thumbnails",
            "in": "query",
            "description": "When set to **true**, thumbnails are returned as part of the response.  The default is **false**.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_user_detail",
            "in": "query",
            "description": "Set to **true** to return extended details about the user. The default is **false**.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "The position within the total result set from which to start returning values.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace_user_id",
            "in": "query",
            "description": "If set, then the results are filtered to those associated with the specified userId.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/workspaceFolderContents"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["WorkspaceItems"],
        "summary": "Delete Workspace Items",
        "operationId": "WorkspaceFolder_DeleteWorkspaceItems",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "The ID of the folder being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Specifies the workspace ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workspaceItemList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files": {
      "post": {
        "tags": ["WorkspaceItems"],
        "summary": "Post Workspace Files",
        "operationId": "WorkspaceFile_PostWorkspaceFiles",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "The ID of the folder being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Specifies the workspace ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/workspaceItem"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}": {
      "get": {
        "tags": ["WorkspaceItems"],
        "summary": "Get Workspace File",
        "description": "Retrieves a workspace file (the binary).",
        "operationId": "WorkspaceFile_GetWorkspaceFile",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "Specifies the room file ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "The ID of the folder being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Specifies the workspace ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_download",
            "in": "query",
            "description": "When set to **true**, the Content-Disposition header is set in the response. The value of the header provides the filename of the file. Default is **false**.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pdf_version",
            "in": "query",
            "description": "When set to **true** the file returned as a PDF.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["WorkspaceItems"],
        "summary": "Put Workspace File",
        "description": "Updates workspace item metadata for one or more specific files/folders.",
        "operationId": "WorkspaceFile_PutWorkspaceFile",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "Specifies the room file ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "The ID of the folder being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Specifies the workspace ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/workspaceItem"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}/pages": {
      "get": {
        "tags": ["WorkspaceItems"],
        "summary": "Get Workspace File Pages",
        "description": "Retrieves a workspace file as rasterized pages.",
        "operationId": "WorkspaceFilePages_GetWorkspaceFilePages",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The external account number (int) or account id GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "Specifies the room file ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "The ID of the folder being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Specifies the workspace ID GUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to be returned by this request.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpi",
            "in": "query",
            "description": "Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_height",
            "in": "query",
            "description": "Sets the maximum height (in pixels) of the returned image.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_width",
            "in": "query",
            "description": "Sets the maximum width (in pixels) of the returned image.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "description": "The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/pageImages"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/accounts/provisioning": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get Provisioning",
        "description": "Retrieves the account provisioning information for the account.",
        "operationId": "Accounts_GetProvisioning",
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/provisioningInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/billing_plans": {
      "get": {
        "tags": ["BillingPlans"],
        "summary": "Get Billing Plans",
        "description": "Retrieves a list of the billing plans associated with a distributor.",
        "operationId": "BillingPlans_GetBillingPlans",
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/billingPlansResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/billing_plans/{billingPlanId}": {
      "get": {
        "tags": ["BillingPlans"],
        "summary": "Get Billing Plan",
        "description": "Retrieves the billing plan details for the specified billing plan ID.",
        "operationId": "BillingPlans_GetBillingPlan",
        "parameters": [
          {
            "name": "billingPlanId",
            "in": "path",
            "description": "The ID of the billing plan being accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/billingPlanResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/current_user/notary/journals": {
      "get": {
        "tags": ["NotaryJournals"],
        "summary": "Get Notary Journals",
        "operationId": "NotaryJournals_GetNotaryJournals",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "required": false,
            "description": "The maximum number of results to be returned by this request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_position",
            "in": "query",
            "required": false,
            "description": "The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/notaryJournalList"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/current_user/password_rules": {
      "get": {
        "tags": ["AccountPasswordRules"],
        "summary": "Get Password Rules",
        "operationId": "PasswordRules_GetPasswordRules",
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/userPasswordRules"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false,
        "description": ""
      },
      "parameters": []
    },
    "/v2/diagnostics/request_logs": {
      "get": {
        "tags": ["RequestLogs"],
        "summary": "Get Request Logs",
        "description": "Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\n\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below. ",
        "operationId": "APIRequestLog_GetRequestLogs",
        "parameters": [
          {
            "name": "encoding",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/apiRequestLogsResult"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["RequestLogs"],
        "summary": "Delete Request Logs",
        "description": "Deletes the request log files.",
        "operationId": "APIRequestLog_DeleteRequestLogs",
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/diagnostics/request_logs/{requestLogId}": {
      "get": {
        "tags": ["RequestLogs"],
        "summary": "Get Request Log",
        "description": "Retrieves information for a single log entry.\n\n**Request**\nThe `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\n\n**Response**\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.",
        "operationId": "APIRequestLog_GetRequestLog",
        "parameters": [
          {
            "name": "requestLogId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/diagnostics/settings": {
      "get": {
        "tags": ["RequestLogs"],
        "summary": "Get Request Log Settings",
        "description": "Retrieves the current API request logging setting for the user and remaining log entries.\n\n**Response**\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.",
        "operationId": "APIRequestLog_GetRequestLogSettings",
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/diagnosticsSettingsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["RequestLogs"],
        "summary": "Put Request Log Settings",
        "description": "Enables or disables API request logging for troubleshooting.\n\nWhen enabled (`apiRequestLogging` is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\n\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\n\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\n\n###### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn't logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.\n",
        "operationId": "APIRequestLog_PutRequestLogSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/diagnosticsSettingsInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/diagnosticsSettingsInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/login_information": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get Login Information",
        "description": "Retrieves account information for the authenticated user. Since the API is sessionless, this method does not actually log you in.\nInstead, the method returns information about the account or accounts that the authenticated user has access to.\n\n###### Important: This method must only be used for the [Legacy Header Authentication](https://developers.docusign.com/esign-rest-api/guides/authentication/legacy) flow. Use the [`AccountServer: userInfo` method](https://developers.docusign.com/esign-rest-api/guides/authentication/user-info-endpoints) for the OAuth2 Authentication Code and [Implicit Grant flows](https://developers.docusign.com/esign-rest-api/guides/authentication/oauth2-implicit).\n\nEach account has a `baseUrl` property, returned in the response.\nUse this `baseUrl` in all future API calls as the base of the request URL.\n\nFor each account, the `baseUrl` property includes the DocuSign server, the API version, and the `accountId` property.\n\nIt is not uncommon for an authenticated user to have access to more than one account (and more than one `baseUrl`). Depending on your integration's use case, your integration may choose to:\n\n* Use the account whose `isDefault` field is `true`.\n* List the available accounts and ask the user to choose one.\n* Enable the system administrator to set the account that should be used by your integration.\n\nIf this method returns successfully, then you also know that the user has successfully authenticated with the DocuSign Signature platform.\n\nFor more information on Authentication Login, please see our [REST API Authentication Guides](https://developers.docusign.com/esign-rest-api/guides/authentication).\n\n###### Note: Certain reference items maybe out of date and the latest information is available in the new Authentication Guides.\n",
        "operationId": "LoginInformation_GetLoginInformation",
        "parameters": [
          {
            "name": "api_password",
            "in": "query",
            "description": "Reserved for DocuSign.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "embed_account_id_guid",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_account_id_guid",
            "in": "query",
            "description": "When set to **true**, shows the account ID GUID in the response.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "login_settings",
            "in": "query",
            "description": "Determines whether login settings are returned in the response.\n\nValid Values:\n\n* all -  All the login settings are returned. \n* none - no login settings are returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/loginInformation"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/login_information/{loginPart}": {
      "put": {
        "tags": ["Authentication"],
        "summary": "Put Login Information",
        "description": "Updates the password for a specified user.",
        "operationId": "LoginInformation_PutLoginInformation",
        "parameters": [
          {
            "name": "loginPart",
            "in": "path",
            "description": "Currently, only the value **password** is supported.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userPasswordInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/oauth2/revoke": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Post Revoke",
        "description": "**Deprecated**\n\n**Note:**  This information is provided for legacy reference only. Please see our supported forms of authentication referenced below and use our [REST API Authentication Guides](https://developers.docusign.com/esign-rest-api/guides/authentication) for more information.<p>\nRevokes an OAuth2 authorization server token. After the revocation is complete, a caller must re-authenticate to restore access.\n",
        "operationId": "OAuth2_PostRevoke",
        "responses": {
          "201": {
            "description": "Successful response."
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v2/oauth2/token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Post Token",
        "description": "**Deprecated**\n\n**Note:**  This information is provided for legacy reference only. Please see our supported forms of authentication referenced below and use our [REST API Authentication Guides](https://developers.docusign.com/esign-rest-api/guides/authentication) for more information.<p>\nCreates an OAuth2 authorization server token endpoint. For more information about OAuth 2.0 please see [OAuth2.0](https://oauth.net/2/).\n",
        "operationId": "OAuth2_PostToken",
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/oauthAccess"
                }
              }
            }
          },
          "400": {
            "description": "Error encountered.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errorDetails"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    }
  },
  "tags": [
    {
      "x-displayName": "Account Brands",
      "name": "AccountBrands",
      "description": "The AcccountBrands resource provides methods that allow you to create and delete the account brand associated with an account.\n\nBranding allows you to add the look and feel of your organization's\nbrand to the sending, signing, and email process making it easier for users to identify envelopes coming from your organization.\n\nThe DocuSign Account Custom Branding feature lets you set the colors, logo, and text for your account. You can create any number of brand profiles with different settings to reflect each of your corporate brands or different internal divisions or departments.\n\nWhen you create or change a branding profile, it applies to everyone using that profile and affects all envelopes sent with that profile."
    },
    {
      "x-displayName": "Account Consumer Disclosures",
      "name": "AccountConsumerDisclosures",
      "description": "The AccountConsumerDisclosures resource provides methods that allow you to retrieve the consumer disclosures associated with the account."
    },
    {
      "x-displayName": "Account Custom Fields",
      "name": "AccountCustomFields",
      "description": "The CustomFields resource provides a method that enables you to retrieve the custom fields associated with an account.\n\nThese fields can be used with your account's envelopes to record information about the envelopes. The fields can be searched to find matching envelopes and track information. \n\nThe envelope custom fields are shown in the DocuSign member console's Envelope Settings section when a user creates an envelope. The envelope custom fields are not seen by envelope recipients.\n\nThere are two types of envelope custom fields, text and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a pre-determined list."
    },
    {
      "x-displayName": "Envelope Bulk Recipients",
      "name": "EnvelopeBulkRecipients",
      "description": "The EnvelopeBulkRecipients resource provide methods that allow you manage the bulk recipient file for an envelope.\n\nThe bulk recipient CSV (Comma Separated Value) file contains the list of recipient names and email addresses that you can add to an envelope to send the same document to a large number of recipients.\n \nThe required and optional information that can be included the file is described in the [ML: BulkEnvelope: updateRecipients] method"
    },
    {
      "x-displayName": "Envelope Custom Fields",
      "name": "EnvelopeCustomFields",
      "description": "The EnvelopeCustomFields resource provides methods that allow you manage custom fields in an envelope. \n\nCustom fields can be used in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\n\nThere are two types of envelope custom fields, text and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list."
    },
    {
      "x-displayName": "Envelope Document Fields",
      "name": "EnvelopeDocumentFields",
      "description": "The EnvelopeDocumentFields resource provides methods that allow you to manage custom fields on a document.\n\nYou can create custom versions of standard fields that combine of field properties, such as font type or size, or a validation setting. \n\nNote: Some advanced features and options are supported only in certain DocuSign plans. Your account plan might not support some options discussed in this help topic. For more information about which options are available for your account, check your account plan or contact your Account Manager."
    },
    {
      "x-displayName": "Envelope Locks",
      "name": "EnvelopeLocks",
      "description": "The EnvelopeLocks resource provides methods that allow you to manage locks on an envelope.\n\nYou can lock the envelope, and set the time until the lock expires, to prevent users or recipients from accessing and changing the envelope.\n\nUsers must have envelope locking capability enabled to use these functions."
    },
    {
      "x-displayName": "Envelope Recipients",
      "name": "EnvelopeRecipients",
      "description": ""
    },
    {
      "x-displayName": "Envelope Recipient Tabs",
      "name": "EnvelopeRecipientTabs",
      "description": ""
    },
    {
      "x-displayName": "Envelope Document Tabs",
      "name": "EnvelopeDocumentTabs",
      "description": "The EnvelopeDocumentTabs resource provides methods that allow you to manage various tabs in envelopes. For a complete list of options see the following Properties section."
    },
    {
      "x-displayName": "Template Document Tabs",
      "name": "TemplateDocumentTabs",
      "description": ""
    },
    {
      "x-displayName": "Envelope Views",
      "name": "EnvelopeViews",
      "description": "The EnvelopeViews provides methods that return URLs that you can embed into your application to provide access to the DocuSign UI.\n\nThe following views are available:\n\n* Console View - The authentication view of the DocuSign UI.\n* Correct View - The correction view of the DocuSign UI.\n* Edit View - The editing view of the DocuSign UI. \n###### Note: This provides the same functionality as the sender view.\n* Recipient View -  The view the recipient sees in the DocuSign UI.\n* Sender View - The sending view of the DocuSign UI."
    },
    {
      "x-displayName": "Account Seal Providers",
      "name": "AccountSealProviders",
      "description": ""
    },
    {
      "name": "Accounts",
      "description": "The Accounts resource provides methods that allow you to create, delete, and manage your accounts."
    },
    {
      "x-displayName": "Account Signature Providers",
      "name": "AccountSignatureProviders",
      "description": "This resource provides information on the Standards Based Signature providers that have been provisioned for this account."
    },
    {
      "name": "Authentication",
      "description": "**Note:**  This information is provided for legacy reference only. Please see our supported forms of authentication referenced below and use our [REST API Authentication Guides](https://developers.docusign.com/esign-rest-api/guides/authentication) for more information.\n\nThe Authentication resource provides access to methods that allow you to authenticate user credentials and change a user's password.\n\nThe methods in this resource are suitable\nonly for [service integrations](https://developers.docusign.com/esign-rest-api/guides/common-terms)\nthat use [Legacy Header Authentication](https://developers.docusign.com/esign-rest-api/guides/authentication/legacy).\nFor authentication methods for\n[user applications](https://developers.docusign.com/esign-rest-api/guides/common-terms)\nand to learn more about\nDocuSign authentication\nsee [Authentication Overview](https://developers.docusign.com/esign-rest-api/guides/authentication).\n\nWhen accessing the API resources\nand Legacy Header Authentication,\nthe GET [Authentication:login method](https://developers.docusign.com/esign-rest-api/reference/Authentication/Authentication/login) allows you to determine whether a user is authenticated and provides the information you will need to make subsequent API requests.\n"
    },
    {
      "x-displayName": "User Social Account Logins",
      "name": "UserSocialAccountLogins",
      "description": "The UserSocialAccountLogins resource provides methods that allow you to manage the social login accounts for a user.  "
    },
    {
      "x-displayName": "Billing Plans",
      "name": "BillingPlans",
      "description": "The Billing resource provides methods that allow you to manage the billing plans,associated with an account."
    },
    {
      "name": "Invoices",
      "description": "The Invoices resource provides methods that allow you to manage the invoices for an account."
    },
    {
      "name": "Payments",
      "description": "The Payments resource provides methods that allow you to manage payments for an account.\n\nThese calls can only be used by users with account administrator privileges."
    },
    {
      "x-displayName": "Bulk Envelopes",
      "name": "BulkEnvelopes",
      "description": "The BulkEnvelope resource provides methods that allow you to send the same document to a large number of recipients and get the status of the envelope."
    },
    {
      "x-displayName": "Cloud Storage",
      "name": "CloudStorage",
      "description": "The CloudStorage resource provides methods that allow you to list files stored on your cloud storage provider."
    },
    {
      "x-displayName": "Cloud Storage Providers",
      "name": "CloudStorageProviders",
      "description": "The CloudStorageProviders resource provides methods that allow you to manage the cloud storage providers associate with an account.\n\nThe following providers are supported:\n\n* Google Drive\n* Dropbox\n* Box\n* Evernote\n* OneDrive\n\nTo use cloud storage files, you must first give DocuSign access to your cloud storage provider. You can disconnect authorized a cloud storage provider at any time."
    },
    {
      "x-displayName": "Connect Configurations",
      "name": "ConnectConfigurations",
      "description": "The ConnectConfigurations resource methods enable you to configure the DocuSign Connect service associated with an account."
    },
    {
      "x-displayName": "Connect Events",
      "name": "ConnectEvents",
      "description": "The ConnectEvents resource provides methods that allow you to read, delete, and republish the connect logs associated with an envelope."
    },
    {
      "x-displayName": "Custom Tabs",
      "name": "CustomTabs",
      "description": "The CustomTabs resource provides methods that allow you create and manage custom tabs based on the existing DocuSign tabs.\n\nYou can create a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\n\nCustom tabs can be created based on the  approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs."
    },
    {
      "x-displayName": "Request Logs",
      "name": "RequestLogs",
      "description": "The RequestLogs resource provide methods that allow you to retrieve and delete the API request log files.\n\nThe log files contain the API requests associated with your integration. They can aid you in troubleshooting specific issues within an integration, or if DocuSign Support requests an API trace log. "
    },
    {
      "name": "Resources",
      "description": "The Resources resource provides a method which retrieves the base resources that are available."
    },
    {
      "name": "Services",
      "description": "The Services resource provides a method that allow you to retrieve the available service versions."
    },
    {
      "x-displayName": "Envelope Consumer Disclosures",
      "name": "EnvelopeConsumerDisclosures",
      "description": "The EnvelopeConsumerDisclosures resource provides a method that allows you to retrieve the consumer disclosure for an envelope."
    },
    {
      "x-displayName": "Envelope Documents",
      "name": "EnvelopeDocuments",
      "description": "<!-- resources aren't rendered the same way\n     as other pages. This is a little hack to\n     make the headings work better -->\n<style>\nh1, h2, h3 {\n  margin-top: 1em;\n}\n</style>\n\nThe EnvelopeDocuments resource provides methods\nthat manage documents in an envelope.\nYou can:\n* add one or more documents to the envelope\n* retrieve one or more documents from the envelope\n* delete documents from the envelope\n\nAll of the methods in this resource\noperate on on an existing envelope.\nBefore you can add documents\nto an envelope,\nyou must first create it\nwith the [Envelopes: create][envelopescreate] method. \n\n\n[envelopescreate]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/\n\n"
    },
    {
      "x-displayName": "Envelope Email Settings",
      "name": "EnvelopeEmailSettings",
      "description": "The EnvelopeEmailSettings provide methods that allow you to manage the email override settings for an envelope.\n\nEmail override settings change the reply to email address, name, or the BCC for email archive information, for the envelope. Note that changing email settings will only affect email communications that occur after the addition was made.\n\nThe BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type."
    },
    {
      "name": "Envelopes",
      "description": "The Envelope resource provides methods that allow you to manipulate and monitor envelopes. \n\nOnce you have authenticated the user you can use the Envelopes: createEnvelope method to create an envelope. You can call the EnvelopeDocuments: update or EnvelopeDocuments: updateList method to add additional documents.\n\nSetting the `status` property on the envelope to `sent` allows you to send it or `created` to save it as a draft.\n\nYou can receive envelope event notifications by setting the `eventNotification` properties. When the envelope or recipient status changes to one of the specified status codes, a notification is sent to a URL that you specify.\n\nIf you have an envelope that you have previously saved, you can modify the subject and message, send it, void it, or place it in the purge queue using the Envelope: update method.\n\nIn addition to receiving notifications you can monitor the status of the envelopes using the following methods:\n* Envelope: getEnvelope - To get the status of a envelope. \n* Envelope: listStatus - To get the envelope status for a set of envelopes.\n* Envelope: listStatusChanges - To get status changes information for one or more envelopes. \n\nIf you need to delete a page from a document in an envelope, use the Envelope: deleteDocumentPage method.\n\nThe resource also includes a number of methods that allow you to retrieve and set the initials and signature for certain types of recipients on the document."
    },
    {
      "x-displayName": "Envelope Templates",
      "name": "EnvelopeTemplates",
      "description": "The EnvelopeTemplates resource provides methods that allow you to add and delete templates on envelopes and documents."
    },
    {
      "name": "Folders",
      "description": "The Folders resource provides methods that allow you to view contents of folders on the account and move envelopes between folders."
    },
    {
      "x-displayName": "Group Brands",
      "name": "GroupBrands",
      "description": "The GroupBrands resource provides methods that allow you to manage "
    },
    {
      "name": "Groups",
      "description": "The Groups resource provides methods that allow you to manage groups for the account.\n\nGroups can be used to help manage users by associating users with a group. A group can be associated with a Permission Profile, which sets the user permissions for users in that group without having to set the `userSettings` property for each user. You are not required to set Permission Profiles for a group, but this makes it easier to manage user permissions for a large number of users. Groups can also be used with template sharing to limit user access to templates."
    },
    {
      "x-displayName": "Group Users",
      "name": "GroupUsers",
      "description": "The GroupUsers resource provides methods that allow you to manage the users in a group."
    },
    {
      "x-displayName": "Signing Groups",
      "name": "SigningGroups",
      "description": "The SigningGroups resource provides methods that allow you manage signing groups.\n\nSigning Groups allow you to create a group of people to which an envelope is sent. Any member of that group can open an envelope and sign the documents in the envelope with their own signature, even though a signature field was not directly assigned to them. When the Signing Group option is used, group members that open and sign the envelope are tracked in the envelope history and certificate."
    },
    {
      "x-displayName": "Signing Group Users",
      "name": "SigningGroupUsers",
      "description": "The SigningGroupUsers resource provides methods that allow you to manage users in Signing Groups."
    },
    {
      "x-displayName": "Template Recipients",
      "name": "TemplateRecipients",
      "description": "The TemplateRecipients resource allows you manage the recipients of an template.\n\nThe exact parameters associated with a recipient depend on the recipient type. There are seven recipient types: Agents, Carbon Copies, Certified Deliveries, Editors, In Person Signers, Intermediaries, and Signers."
    },
    {
      "x-displayName": "Template Bulk Recipients",
      "name": "TemplateBulkRecipients",
      "description": "The TemplateBulkRecipients resource provide methods that allow you manage the bulk recipient file for an template.\n\nThe bulk recipient CSV (Comma Separated Value) file contains the list of recipient names and email addresses that you can add to an template to send the same document to a large number of recipients.\n \nThe required and optional information that can be included the file is described in the BulkEnvelope: updateRecipients method"
    },
    {
      "x-displayName": "Template Custom Fields",
      "name": "TemplateCustomFields",
      "description": "The TemplateCustomFields resource provides methods that allow you manage custom fields in an template. \n\nCustom fields can be used in the templates for your account to record information about the template, help search for templates and track information. The template custom fields are shown in the Template Settings section when a user is creating an template in the DocuSign member console. The template custom fields are not seen by the template recipients.\n\nThere are two types of template custom fields, text and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list."
    },
    {
      "x-displayName": "Template Document Fields",
      "name": "TemplateDocumentFields",
      "description": "The TemplateDocumentFields resource provides methods that allow you to manage custom fields on a document.\n\nYou can create custom versions of standard fields that combine of field properties, such as font type or size, or a validation setting. \n\nNote: Some advanced features and options are supported only in certain DocuSign plans. Your account plan might not support some options discussed in this help topic. For more information about which options are available for your account, check your account plan or contact your Account Manager."
    },
    {
      "x-displayName": "Template Documents",
      "name": "TemplateDocuments",
      "description": "<!-- resources aren't rendered the same way\n     as other pages. This is a little hack to\n     make the headings work better -->\n<style>\nh1, h2, h3 {\n  margin-top: 1em;\n}\n</style>\n\nThe TemplateDocuments resource provides methods\nthat manage documents in a template.\nYou can:\n* add one or more documents to the template\n* retrieve one or more documents from the template\n* delete documents from the template\n\nAll of the methods in this resource\noperate on on an existing template.\nBefore you can add documents\nto a template,\nyou must first create it\nwith the [Templates: create][templatescreate] method. \n\n[templatescreate]: https://developers.docusign.com/esign-rest-api/reference/Templates/Templates/create/\n"
    },
    {
      "x-displayName": "Template Locks",
      "name": "TemplateLocks",
      "description": "The TemplateLocks resource provides methods that allow you to manage locks on an template.\n\nYou can lock the template, and set the time until the lock expires, to prevent users from accessing and changing the template.\n\nUsers must have envelope locking capability enabled to use these functions."
    },
    {
      "name": "Templates",
      "description": "The Template resource provides methods that allow you to manipulate and monitor templates. \n\nOnce you have authenticated the user you can use the Templates: createTemplate method to create an template. You can call the TemplateDocuments: update or TemplateDocuments: updateList method to add additional documents."
    },
    {
      "x-displayName": "Template Recipient Tabs",
      "name": "TemplateRecipientTabs",
      "description": ""
    },
    {
      "x-displayName": "Template Views",
      "name": "TemplateViews",
      "description": "The TemplateViews resource\nprovides a method returns a URL\nthat you can embed into your application\nto provide access to the DocuSign UI."
    },
    {
      "x-displayName": "User Custom Settings",
      "name": "UserCustomSettings",
      "description": "The UserCustomSettings resource provides methods that allow you to manage the custom settings for a user.\n\nCustom settings are a flexible way to store and retrieve custom user information that can be used in your own system.\n\nThere is a limit on the size for all the custom user settings for a single user. All the custom user settings for a single user is limited to 4,000 characters, which includes the xml and json structure for the settings."
    },
    {
      "x-displayName": "User Profiles",
      "name": "UserProfiles",
      "description": "The UserProfiles resource provides methods that allow you to manage a user's profile."
    },
    {
      "name": "Users",
      "description": "The Users resource provides methods that allow you to manage users for an account. The \"title\" field in the Users object – used in the Users:create, delete, deleteProfile Image, get, getProfileImage, getSettings, list, update, updateList, updateProfileImage, updateSettings calls is not used. Instead, the user's job title may be retrieved and set using the UserProfiles: get and update methods. See [UserProfiles](https://developers.docusign.com/esign-rest-api/reference/Users/UserProfiles) for more information."
    },
    {
      "x-displayName": "User Signatures",
      "name": "UserSignatures",
      "description": "The UserSignatures resource provides methods that allow you manage the  intials and signature images for a user."
    },
    {
      "name": "Contacts",
      "description": "The Contacts resource provides methods that allow you to manage contacts.\n"
    },
    {
      "x-displayName": "Envelope Attachments",
      "name": "EnvelopeAttachments",
      "description": "The EnvelopeAttachments resource provides methods that allow you to manage attachments.\n"
    },
    {
      "x-displayName": "Account Permission Profiles",
      "name": "AccountPermissionProfiles",
      "description": "The AccountPermissionProfiles resource provides methods that allow you to manage permission profiles.\n"
    },
    {
      "x-displayName": "Power Forms",
      "name": "PowerForms",
      "description": "The PowerForms resource provides methods that allow you to manage power forms.\n"
    },
    {
      "x-displayName": "Power Form Data",
      "name": "PowerFormData",
      "description": "The PowerFormData resource provides a method to access power form data.\n"
    },
    {
      "x-displayName": "Account Tab Settings",
      "name": "AccountTabSettings",
      "description": "The AccountTabSettings resource provides methods that allow you to manage\ntab settings for an account.\n"
    },
    {
      "x-displayName": "ENote Configurations",
      "name": "ENoteConfigurations",
      "description": "The ENoteConfigurations resource provides methods that allow you to manage\ninformation for the eNote eOriginal integration.\n"
    },
    {
      "x-displayName": "Workspace Items",
      "name": "WorkspaceItems",
      "description": "The WorkspaceItems resource provides methods that allow you to manage\nworkspace items.\n"
    },
    {
      "name": "Workspaces",
      "description": "The Workspaces resource provides methods that allow you to manage workspaces.\n"
    },
    {
      "x-displayName": "Chunked Uploads",
      "name": "ChunkedUploads",
      "description": "The ChunkedUploads resource provides methods to complete integrity checks, and to add, commit, retrieve, initiate and delete chunked uploads."
    },
    {
      "x-displayName": "Envelope Form Data",
      "name": "EnvelopeFormData",
      "description": "The EnvelopeFormData resource provides methods that manage forms in an envelope. "
    },
    {
      "x-displayName": "Envelope Document Visibility",
      "name": "EnvelopeDocumentVisibility",
      "description": "The Envelope Documents Visibility resource provides methods that manage document views and insights in an envelope. \n"
    },
    {
      "x-displayName": "Template Document Visibility",
      "name": "TemplateDocumentVisibility",
      "description": "The Template Document Visibility resource provides methods that allow views into envelope templates. "
    },
    {
      "x-displayName": "Account Password Rules",
      "name": "AccountPasswordRules",
      "description": "The AccountPasswordRules resource provides methods that allow you to obtain and update account password rules, as well as membership and account rules."
    },
    {
      "x-displayName": "Account Watermarks",
      "name": "AccountWatermarks",
      "description": "The AccountWatermarks resource provides methods that allow you to obtain, preview and update watermark information."
    },
    {
      "x-displayName": "Payment Gateway Accounts",
      "name": "PaymentGatewayAccounts",
      "description": ""
    },
    {
      "x-displayName": "Notary Journals",
      "name": "NotaryJournals",
      "description": ""
    },
    {
      "x-displayName": "Identity Verifications",
      "name": "IdentityVerifications",
      "description": ""
    },
    {
      "x-displayName": "Envelope Document Html Definitions",
      "name": "EnvelopeDocumentHtmlDefinitions",
      "description": ""
    },
    {
      "x-displayName": "Document Responsive Html Preview",
      "name": "DocumentResponsiveHtmlPreview",
      "description": ""
    },
    {
      "x-displayName": "Envelope Html Definitions",
      "name": "EnvelopeHtmlDefinitions",
      "description": ""
    },
    {
      "x-displayName": "Responsive Html Preview",
      "name": "ResponsiveHtmlPreview",
      "description": ""
    },
    {
      "x-displayName": "Template Document Responsive Html Preview",
      "name": "TemplateDocumentResponsiveHtmlPreview",
      "description": ""
    },
    {
      "x-displayName": "Template Responsive Html Preview",
      "name": "TemplateResponsiveHtmlPreview",
      "description": ""
    },
    {
      "x-displayName": "Template Document Html Definitions",
      "name": "TemplateDocumentHtmlDefinitions",
      "description": ""
    },
    {
      "x-displayName": "Template Html Definitions",
      "name": "TemplateHtmlDefinitions",
      "description": ""
    },
    {
      "name": "Comments",
      "description": ""
    }
  ],
  "servers": [
    {
      "url": "https://www.docusign.net/restapi"
    }
  ],
  "components": {
    "requestBodies": {
      "contactModRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/contactModRequest"
            }
          }
        }
      },
      "recipientViewRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/recipientViewRequest"
            }
          }
        }
      },
      "EnvelopeDocumentFields": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EnvelopeDocumentFields"
            }
          }
        }
      },
      "socialAccountInformation": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/socialAccountInformation"
            }
          }
        },
        "description": "Contains properties that map a DocuSign user to a social account (Facebook, Yahoo, etc.)"
      },
      "workspace": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/workspace"
            }
          }
        }
      },
      "brandsRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/brandsRequest"
            }
          }
        }
      },
      "templateCustomFields": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/templateCustomFields"
            }
          }
        }
      },
      "tabMetadata": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/tabMetadata"
            }
          }
        }
      },
      "powerForm": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/powerForm"
            }
          }
        }
      },
      "lockRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/lockRequest"
            }
          }
        }
      },
      "groupInformation": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/groupInformation"
            }
          }
        }
      },
      "chunkedUploadRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/chunkedUploadRequest"
            }
          }
        }
      },
      "templateDocumentVisibilityList": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/templateDocumentVisibilityList"
            }
          }
        }
      },
      "userSignaturesInformation": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/userSignaturesInformation"
            }
          }
        }
      },
      "documentFieldsInformation": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/documentFieldsInformation"
            }
          }
        }
      },
      "brand": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/brand"
            }
          }
        }
      },
      "userInfoList": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/userInfoList"
            }
          }
        }
      },
      "signingGroupUsers": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/signingGroupUsers"
            }
          }
        },
        "description": "A complex type that contains information about users in the signing group."
      },
      "templateTabs": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/templateTabs"
            }
          }
        }
      },
      "connectCustomConfiguration": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/connectCustomConfiguration"
            }
          }
        }
      },
      "customField": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/customField"
            }
          }
        }
      },
      "envelopeDefinition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/envelopeDefinition"
            }
          }
        }
      },
      "envelopeAttachmentsRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/envelopeAttachmentsRequest"
            }
          }
        }
      },
      "EnvelopeCustomFields": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EnvelopeCustomFields"
            }
          }
        }
      },
      "pageRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/pageRequest"
            }
          }
        }
      },
      "documentHtmlDefinition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/documentHtmlDefinition"
            }
          }
        }
      },
      "documentTemplateList": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/documentTemplateList"
            }
          }
        }
      },
      "emailSettings": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/emailSettings"
            }
          }
        }
      },
      "EnvelopeRecipients": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EnvelopeRecipients"
            }
          }
        }
      },
      "documentVisibilityList": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/documentVisibilityList"
            }
          }
        }
      },
      "EnvelopeRecipientTabs": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EnvelopeRecipientTabs"
            }
          }
        }
      },
      "returnUrlRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/returnUrlRequest"
            }
          }
        }
      },
      "permissionProfile": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/permissionProfile"
            }
          }
        }
      },
      "signingGroupInformation": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/signingGroupInformation"
            }
          }
        }
      },
      "envelopeTemplate": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/envelopeTemplate"
            }
          }
        }
      },
      "templateRecipients": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/templateRecipients"
            }
          }
        }
      },
      "cloudStorageProviders": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/cloudStorageProviders"
            }
          }
        }
      },
      "customSettingsInformation": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/customSettingsInformation"
            }
          }
        }
      },
      "watermark": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/watermark"
            }
          }
        },
        "description": "When set to **true**, the account has the watermark feature enabled, and the envelope is not complete, the watermark for the account is added to the PDF documents. This option can remove the watermark. "
      },
      "correctViewRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/correctViewRequest"
            }
          }
        }
      }
    },
    "schemas": {
      "accountAddress": {
        "description": "Contains information about an account address.",
        "type": "object",
        "properties": {
          "address1": {
            "description": "First Line of the address.\nMaximum length: 100 characters.",
            "type": "string"
          },
          "address2": {
            "description": "Second Line of the address.\nMaximum length: 100 characters.",
            "type": "string"
          },
          "city": {
            "description": "The city value of the address.",
            "type": "string"
          },
          "country": {
            "description": "Specifies the country associated with the address.",
            "type": "string"
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "fax": {
            "description": "",
            "type": "string"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "phone": {
            "description": "",
            "type": "string"
          },
          "postalCode": {
            "description": "",
            "type": "string"
          },
          "state": {
            "description": "The state or province associated with the address.",
            "type": "string"
          },
          "supportedCountries": {
            "description": "Contains an array of countries supported by the billing plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/country"
            }
          }
        }
      },
      "accountBillingPlan": {
        "description": "Contains information about an account billing plan.",
        "type": "object",
        "properties": {
          "addOns": {
            "description": "Reserved:",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/addOn"
            }
          },
          "canCancelRenewal": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "canUpgrade": {
            "description": "When set to **true**, specifies that you can upgrade the account through the API.",
            "type": "string"
          },
          "currencyCode": {
            "description": "Specifies the ISO currency code for the account.",
            "type": "string"
          },
          "enableSupport": {
            "description": "When set to **true**, then customer support is provided as part of the account plan.",
            "type": "string"
          },
          "includedSeats": {
            "description": "The number of seats (users) included.",
            "type": "string"
          },
          "incrementalSeats": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "isDowngrade": {
            "description": "",
            "type": "string"
          },
          "otherDiscountPercent": {
            "description": " Any other percentage discount for the plan. ",
            "type": "string"
          },
          "paymentCycle": {
            "description": "",
            "type": "string"
          },
          "paymentMethod": {
            "description": " The payment method used with the plan. The possible values are: CreditCard, PurchaseOrder, Premium, or Freemium. ",
            "type": "string"
          },
          "perSeatPrice": {
            "description": "",
            "type": "string"
          },
          "planClassification": {
            "description": "Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.",
            "type": "string"
          },
          "planFeatureSets": {
            "description": "A complex type that sets the feature sets for the account. It contains the following information (all string content):\n\n* currencyFeatureSetPrices - Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, seatFee that are configured for this plan feature set.\n* envelopeFee - An incremental envelope cost for plans with envelope overages (when isEnabled=true).\n* featureSetId - A unique ID for the feature set.\n* fixedFee - A one-time fee associated with the plan (when isEnabled=true).\n* isActive - Specifies whether the feature set is actively set as part of the plan.\n* isEnabled - Specifies whether the feature set is actively enabled as part of the plan.\n* name - The name of the feature set.\n* seatFee - An incremental seat cost for seat-based plans (when isEnabled=true).\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/featureSet"
            }
          },
          "planId": {
            "description": "The DocuSign Plan ID for the account.",
            "type": "string"
          },
          "planName": {
            "description": "The name of the Billing Plan.",
            "type": "string"
          },
          "renewalStatus": {
            "description": "The renewal status for the account. The acceptable values are:\n\n* auto: The account automatically renews.\n* queued_for_close: Account will be closed at the billingPeriodEndDate.\n* queued_for_downgrade: Account will be downgraded at the billingPeriodEndDate.",
            "type": "string"
          },
          "seatDiscounts": {
            "description": " A complex type that contains any seat discount information.\n\nValues are: BeginSeatCount, EndSeatCount, and SeatDiscountPercent.\n ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/seatDiscount"
            }
          },
          "supportIncidentFee": {
            "description": "The support incident fee charged for each support incident.",
            "type": "string"
          },
          "supportPlanFee": {
            "description": "The support plan fee charged for this plan.",
            "type": "string"
          }
        }
      },
      "accountBillingPlanResponse": {
        "description": "",
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/accountAddress"
          },
          "billingAddressIsCreditCardAddress": {
            "description": "When set to **true**, the credit card address information is the same as that returned as the billing address. If false, then the billing address is considered a billing contact address, and the credit card address can be different.",
            "type": "string"
          },
          "billingPlan": {
            "$ref": "#/components/schemas/accountBillingPlan"
          },
          "creditCardInformation": {
            "$ref": "#/components/schemas/creditCardInformation"
          },
          "paymentProcessorInformation": {
            "$ref": "#/components/schemas/paymentProcessorInformation"
          },
          "referralInformation": {
            "$ref": "#/components/schemas/referralInformation"
          },
          "successorPlans": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingPlan"
            }
          }
        }
      },
      "accountIdentityVerificationResponse": {
        "type": "object",
        "properties": {
          "identityVerification": {
            "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](https://developers.docusign.com/esign-rest-api/reference/Accounts/IdentityVerifications/list) method in the [IdentityVerifications](https://developers.docusign.com/esign-rest-api/reference/Accounts/IdentityVerifications) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/accountIdentityVerificationWorkflow"
            }
          }
        },
        "description": ""
      },
      "accountIdentityVerificationStep": {
        "type": "object",
        "properties": {
          "name": {
            "description": "",
            "type": "string"
          },
          "type": {
            "description": "Type of the user. Valid values: type_owner, type_participant.",
            "type": "string"
          }
        },
        "description": ""
      },
      "accountIdentityVerificationWorkflow": {
        "type": "object",
        "properties": {
          "defaultName": {
            "description": "",
            "type": "string"
          },
          "steps": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/accountIdentityVerificationStep"
            }
          },
          "workflowId": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "accountInformation": {
        "description": "",
        "type": "object",
        "properties": {
          "accountIdGuid": {
            "description": "The GUID associated with the account ID.",
            "type": "string"
          },
          "accountName": {
            "description": "The name of the account that the workspace user belongs to.",
            "type": "string"
          },
          "allowTransactionRooms": {
            "description": "When set to **true**, the transaction rooms feature exposed through the Workspaces API is enabled.",
            "type": "string"
          },
          "billingPeriodDaysRemaining": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "billingPeriodEndDate": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "billingPeriodEnvelopesAllowed": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "billingPeriodEnvelopesSent": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "billingPeriodStartDate": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "billingProfile": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "canCancelRenewal": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "canUpgrade": {
            "description": "When set to **true**, specifies that you can upgrade the account through the API.",
            "type": "string"
          },
          "connectPermission": {
            "description": "",
            "type": "string"
          },
          "createdDate": {
            "description": "",
            "type": "string"
          },
          "currencyCode": {
            "description": "Specifies the ISO currency code of the purchase. This is based on the ISO 4217 currency code information.",
            "type": "string"
          },
          "currentPlanId": {
            "description": "Identifies the plan that was used create this account.",
            "type": "string"
          },
          "distributorCode": {
            "description": "The code that identifies the billing plan groups and plans for the new account.",
            "type": "string"
          },
          "docuSignLandingUrl": {
            "description": "",
            "type": "string"
          },
          "envelopeSendingBlocked": {
            "description": "",
            "type": "string"
          },
          "envelopeUnitPrice": {
            "description": "",
            "type": "string"
          },
          "externalAccountId": {
            "description": "",
            "type": "string"
          },
          "forgottenPasswordQuestionsCount": {
            "description": " A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.",
            "type": "string"
          },
          "isDowngrade": {
            "description": "",
            "type": "string"
          },
          "paymentMethod": {
            "description": "",
            "type": "string"
          },
          "planClassification": {
            "description": "Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.",
            "type": "string"
          },
          "planEndDate": {
            "description": "The date that the current plan will end.",
            "type": "string"
          },
          "planName": {
            "description": "",
            "type": "string"
          },
          "planStartDate": {
            "description": "The date that the Account started using the current plan.",
            "type": "string"
          },
          "seatsAllowed": {
            "description": "",
            "type": "string"
          },
          "seatsInUse": {
            "description": "",
            "type": "string"
          },
          "status21CFRPart11": {
            "description": "",
            "type": "string"
          },
          "suspensionDate": {
            "description": "",
            "type": "string"
          },
          "suspensionStatus": {
            "description": "",
            "type": "string"
          }
        }
      },
      "accountMinimumPasswordLength": {
        "type": "object",
        "properties": {
          "maximumLength": {
            "description": "",
            "type": "string"
          },
          "minimumLength": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "accountPasswordExpirePasswordDays": {
        "type": "object",
        "properties": {
          "maximumDays": {
            "description": "",
            "type": "string"
          },
          "minimumDays": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "accountPasswordLockoutDurationMinutes": {
        "type": "object",
        "properties": {
          "maximumMinutes": {
            "description": "",
            "type": "string"
          },
          "minimumMinutes": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "accountPasswordLockoutDurationType": {
        "type": "object",
        "properties": {
          "options": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": ""
      },
      "accountPasswordMinimumPasswordAgeDays": {
        "type": "object",
        "properties": {
          "maximumAge": {
            "description": "",
            "type": "string"
          },
          "minimumAge": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "accountPasswordQuestionsRequired": {
        "type": "object",
        "properties": {
          "maximumQuestions": {
            "description": "The maximum number of password reset questions allowed for the account. This number must be between `0` and `4`, and equal to or greater than `minimumQuestions`.",
            "type": "string"
          },
          "minimumQuestions": {
            "description": "The minimum number of password reset questions allowed for the account. This number must be between `0` and `4`, and equal to or less than `maximumQuestions`.",
            "type": "string"
          }
        },
        "description": "Information about the number of password questions required (0 to 4) to confirm a user's identity when a user needs to reset their password."
      },
      "accountPasswordRules": {
        "type": "object",
        "properties": {
          "expirePassword": {
            "description": "",
            "type": "string"
          },
          "expirePasswordDays": {
            "description": "",
            "type": "string"
          },
          "expirePasswordDaysMetadata": {
            "$ref": "#/components/schemas/accountPasswordExpirePasswordDays"
          },
          "lockoutDurationMinutes": {
            "description": "",
            "type": "string"
          },
          "lockoutDurationMinutesMetadata": {
            "$ref": "#/components/schemas/accountPasswordLockoutDurationMinutes"
          },
          "lockoutDurationType": {
            "description": "",
            "type": "string"
          },
          "lockoutDurationTypeMetadata": {
            "$ref": "#/components/schemas/accountPasswordLockoutDurationType"
          },
          "minimumPasswordAgeDays": {
            "description": "",
            "type": "string"
          },
          "minimumPasswordAgeDaysMetadata": {
            "$ref": "#/components/schemas/accountPasswordMinimumPasswordAgeDays"
          },
          "minimumPasswordLength": {
            "description": "",
            "type": "string"
          },
          "minimumPasswordLengthMetadata": {
            "$ref": "#/components/schemas/accountMinimumPasswordLength"
          },
          "passwordIncludeDigit": {
            "description": "",
            "type": "string"
          },
          "passwordIncludeDigitOrSpecialCharacter": {
            "description": "",
            "type": "string"
          },
          "passwordIncludeLowerCase": {
            "description": "",
            "type": "string"
          },
          "passwordIncludeSpecialCharacter": {
            "description": "",
            "type": "string"
          },
          "passwordIncludeUpperCase": {
            "description": "",
            "type": "string"
          },
          "passwordStrengthType": {
            "description": "",
            "type": "string"
          },
          "passwordStrengthTypeMetadata": {
            "$ref": "#/components/schemas/accountPasswordStrengthType"
          },
          "questionsRequired": {
            "description": "",
            "type": "string"
          },
          "questionsRequiredMetadata": {
            "$ref": "#/components/schemas/accountPasswordQuestionsRequired"
          }
        },
        "description": ""
      },
      "accountPasswordStrengthType": {
        "type": "object",
        "properties": {
          "options": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/accountPasswordStrengthTypeOption"
            }
          }
        },
        "description": ""
      },
      "accountPasswordStrengthTypeOption": {
        "type": "object",
        "properties": {
          "minimumLength": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "passwordIncludeDigit": {
            "description": "",
            "type": "string"
          },
          "passwordIncludeDigitOrSpecialCharacter": {
            "description": "",
            "type": "string"
          },
          "passwordIncludeLowerCase": {
            "description": "",
            "type": "string"
          },
          "passwordIncludeSpecialCharacter": {
            "description": "",
            "type": "string"
          },
          "passwordIncludeUpperCase": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "accountRoleSettings": {
        "type": "object",
        "properties": {
          "allowAccountManagement": {
            "description": "",
            "type": "string"
          },
          "allowAccountManagementMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowApiAccess": {
            "description": "",
            "type": "string"
          },
          "allowApiAccessMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowApiAccessToAccount": {
            "description": "",
            "type": "string"
          },
          "allowApiAccessToAccountMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowApiSendingOnBehalfOfOthers": {
            "description": "",
            "type": "string"
          },
          "allowApiSendingOnBehalfOfOthersMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowApiSequentialSigning": {
            "description": "",
            "type": "string"
          },
          "allowApiSequentialSigningMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowAutoTagging": {
            "description": "",
            "type": "string"
          },
          "allowAutoTaggingMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowBulkSending": {
            "description": "",
            "type": "string"
          },
          "allowBulkSendingMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowDocuSignDesktopClient": {
            "description": "",
            "type": "string"
          },
          "allowDocuSignDesktopClientMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowedAddressBookAccess": {
            "description": "",
            "type": "string"
          },
          "allowedAddressBookAccessMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowedTemplateAccess": {
            "description": "",
            "type": "string"
          },
          "allowedTemplateAccessMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowedToBeEnvelopeTransferRecipient": {
            "description": "",
            "type": "string"
          },
          "allowedToBeEnvelopeTransferRecipientMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowEnvelopeSending": {
            "description": "",
            "type": "string"
          },
          "allowEnvelopeSendingMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowESealRecipients": {
            "description": "",
            "type": "string"
          },
          "allowESealRecipientsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowPowerFormsAdminToAccessAllPowerFormEnvelopes": {
            "description": "",
            "type": "string"
          },
          "allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowSendersToSetRecipientEmailLanguage": {
            "description": "",
            "type": "string"
          },
          "allowSendersToSetRecipientEmailLanguageMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowSignerAttachments": {
            "description": "",
            "type": "string"
          },
          "allowSignerAttachmentsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowSupplementalDocuments": {
            "description": "",
            "type": "string"
          },
          "allowSupplementalDocumentsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowTaggingInSendAndCorrect": {
            "description": "",
            "type": "string"
          },
          "allowTaggingInSendAndCorrectMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowVaulting": {
            "description": "",
            "type": "string"
          },
          "allowVaultingMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "allowWetSigningOverride": {
            "description": "",
            "type": "string"
          },
          "allowWetSigningOverrideMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "canCreateWorkspaces": {
            "description": "",
            "type": "string"
          },
          "canCreateWorkspacesMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "disableDocumentUpload": {
            "description": "",
            "type": "string"
          },
          "disableDocumentUploadMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "disableOtherActions": {
            "description": "",
            "type": "string"
          },
          "disableOtherActionsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "enableApiRequestLogging": {
            "description": "",
            "type": "string"
          },
          "enableApiRequestLoggingMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "enableRecipientViewingNotifications": {
            "description": "",
            "type": "string"
          },
          "enableRecipientViewingNotificationsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "enableSequentialSigningInterface": {
            "description": "",
            "type": "string"
          },
          "enableSequentialSigningInterfaceMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "enableTransactionPointIntegration": {
            "description": "",
            "type": "string"
          },
          "enableTransactionPointIntegrationMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "powerFormRole": {
            "description": "",
            "type": "string"
          },
          "powerFormRoleMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "receiveCompletedSelfSignedDocumentsAsEmailLinks": {
            "description": "",
            "type": "string"
          },
          "receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "supplementalDocumentsMustAccept": {
            "description": "",
            "type": "string"
          },
          "supplementalDocumentsMustAcceptMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "supplementalDocumentsMustRead": {
            "description": "",
            "type": "string"
          },
          "supplementalDocumentsMustReadMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "supplementalDocumentsMustView": {
            "description": "",
            "type": "string"
          },
          "supplementalDocumentsMustViewMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "useNewDocuSignExperienceInterface": {
            "description": "",
            "type": "string"
          },
          "useNewDocuSignExperienceInterfaceMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "useNewSendingInterface": {
            "description": "",
            "type": "string"
          },
          "useNewSendingInterfaceMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "vaultingMode": {
            "description": "",
            "type": "string"
          },
          "vaultingModeMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          }
        },
        "description": ""
      },
      "accountSettingsInformation": {
        "description": "Contains account settings information.",
        "type": "object",
        "properties": {
          "accountSettings": {
            "description": "The list of\n[account settings][accountsettings]\nthat determine\nthe features available for the account.\nNote that some features are determined\nby the plan used to create the account and cannot be overridden.\n\n[accountsettings]: https://developers.docusign.com/esign-rest-api/reference/Accounts/Accounts/create/#account-settings\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          }
        }
      },
      "accountSharedAccess": {
        "description": "Contains shared access information.",
        "type": "object",
        "properties": {
          "accountId": {
            "description": "The account ID associated with the envelope.",
            "type": "string"
          },
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "sharedAccess": {
            "description": "A list of shared access information of envelope and templates for the users specified in the request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/memberSharedItems"
            }
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        }
      },
      "accountSignatureProvider": {
        "type": "object",
        "properties": {
          "isRequired": {
            "description": "",
            "type": "string"
          },
          "priority": {
            "description": "",
            "type": "string"
          },
          "signatureProviderDisplayName": {
            "description": "",
            "type": "string"
          },
          "signatureProviderId": {
            "description": "",
            "type": "string"
          },
          "signatureProviderName": {
            "description": "The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. [The current provider list.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)",
            "type": "string"
          },
          "signatureProviderOptionsMetadata": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/accountSignatureProviderOption"
            }
          },
          "signatureProviderRequiredOptions": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signatureProviderRequiredOption"
            }
          }
        },
        "description": ""
      },
      "accountSignatureProviderOption": {
        "type": "object",
        "properties": {
          "signatureProviderOptionDisplayName": {
            "description": "",
            "type": "string"
          },
          "signatureProviderOptionId": {
            "description": "",
            "type": "string"
          },
          "signatureProviderOptionName": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "accountSignatureProviders": {
        "type": "object",
        "properties": {
          "signatureProviders": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/accountSignatureProvider"
            }
          }
        },
        "description": ""
      },
      "addOn": {
        "description": "Contains information about add ons.",
        "type": "object",
        "properties": {
          "active": {
            "description": "Reserved:",
            "type": "string"
          },
          "addOnId": {
            "description": "Reserved:",
            "type": "string"
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "Reserved:",
            "type": "string"
          }
        }
      },
      "addressInformation": {
        "description": "Contains address information.",
        "type": "object",
        "properties": {
          "city": {
            "description": "The city associated with the address.",
            "type": "string"
          },
          "country": {
            "description": "Specifies the country associated with the address.",
            "type": "string"
          },
          "fax": {
            "description": "A Fax number associated with the address if one is available.",
            "type": "string"
          },
          "phone": {
            "description": "A phone number associated with the address.",
            "type": "string"
          },
          "state": {
            "description": "The state or province associated with the address.",
            "type": "string"
          },
          "street1": {
            "description": "The first line of the address.",
            "type": "string"
          },
          "street2": {
            "description": "The second line of the address (optional).",
            "type": "string"
          },
          "zip": {
            "description": "The zip or postal code associated with the address.",
            "type": "string"
          },
          "zipPlus4": {
            "description": "",
            "type": "string"
          }
        }
      },
      "addressInformation_v2": {
        "type": "object",
        "properties": {
          "address1": {
            "description": "First Line of the address.\nMaximum length: 100 characters.",
            "type": "string"
          },
          "address2": {
            "description": "Second Line of the address.\nMaximum length: 100 characters.",
            "type": "string"
          },
          "city": {
            "description": "",
            "type": "string"
          },
          "country": {
            "description": "Specifies the country associated with the address.",
            "type": "string"
          },
          "fax": {
            "description": "",
            "type": "string"
          },
          "phone": {
            "description": "",
            "type": "string"
          },
          "postalCode": {
            "description": "",
            "type": "string"
          },
          "stateOrProvince": {
            "description": "The state or province associated with the address.",
            "type": "string"
          }
        },
        "description": ""
      },
      "addressInformationInput": {
        "description": "Contains address input information.",
        "type": "object",
        "properties": {
          "addressInformation": {
            "$ref": "#/components/schemas/addressInformation"
          },
          "displayLevelCode": {
            "description": "Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay",
            "type": "string"
          },
          "receiveInResponse": {
            "description": "When set to **true**, the information needs to be returned in the response.",
            "type": "string"
          }
        }
      },
      "agent": {
        "description": "Contains information about agent recipients.",
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "addAccessCodeToEmail": {
            "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. Read only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          },
          "email": {
            "description": "Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckInformationInput": {
            "$ref": "#/components/schemas/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/components/schemas/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/components/schemas/recipientPhoneAuthentication"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientAttachment"
            }
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/components/schemas/authenticationStatus"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. Read only.",
            "type": "string"
          },
          "requireIdLookup": {
            "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "samlAuthentication": {
            "$ref": "#/components/schemas/recipientSAMLAuthentication"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "type": "string"
          },
          "signingGroupName": {
            "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          },
          "smsAuthentication": {
            "$ref": "#/components/schemas/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": " Lists the social ID type that can be used for recipient authentication.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAuthentication"
            }
          },
          "status": {
            "description": "Recipient status.\n<!-- todo -->\n",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. Read only.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          }
        }
      },
      "apiRequestLog": {
        "description": "Contains API request log information.",
        "type": "object",
        "properties": {
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "description": {
            "description": "A sender-defined description of the line item.\n",
            "type": "string"
          },
          "requestLogId": {
            "description": "",
            "type": "string"
          },
          "status": {
            "description": "Item status. <!-- TODO -->",
            "type": "string"
          }
        }
      },
      "apiRequestLogsResult": {
        "description": "Contains information about mutiple API request logs.",
        "type": "object",
        "properties": {
          "apiRequestLogs": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiRequestLog"
            }
          }
        }
      },
      "approve": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "buttonText": {
            "description": " Specifies the approval text displayed in the tab. ",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "height": {
            "format": "int32",
            "description": "Height of the tab in pixels.",
            "type": "integer"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient to approve documents\nwithout placing a signature or initials on the\ndocument.\n"
      },
      "appStoreProduct": {
        "description": "Contains information about an APP store product.",
        "type": "object",
        "properties": {
          "marketPlace": {
            "description": "",
            "type": "string"
          },
          "productId": {
            "description": "The Product ID from the AppStore.",
            "type": "string"
          }
        }
      },
      "appStoreReceipt": {
        "description": "Contains information about an APP store receipt.",
        "type": "object",
        "properties": {
          "productId": {
            "description": "The Product ID from the AppStore.",
            "type": "string"
          },
          "receiptData": {
            "description": "Reserved: TBD",
            "type": "string"
          }
        }
      },
      "attachment": {
        "description": "Contains information about an attachment.",
        "type": "object",
        "properties": {
          "accessControl": {
            "description": "",
            "type": "string"
          },
          "attachmentId": {
            "description": "",
            "type": "string"
          },
          "attachmentType": {
            "description": "Specifies the type of the attachment for the recipient.",
            "type": "string"
          },
          "data": {
            "description": "",
            "type": "string"
          },
          "label": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "remoteUrl": {
            "description": "",
            "type": "string"
          }
        }
      },
      "authenticationMethod": {
        "description": "Contains information about the method used for authentication.",
        "type": "object",
        "properties": {
          "authenticationType": {
            "description": "Indicates the type of authentication. Valid values are: PhoneAuth, STAN, ISCheck, OFAC, AccessCode, AgeVerify, or SSOAuth. ",
            "type": "string"
          },
          "lastProvider": {
            "description": "The last provider that authenticated the user. ",
            "type": "string"
          },
          "lastTimestamp": {
            "description": " The data and time the user last used the authentication method. ",
            "type": "string"
          },
          "totalCount": {
            "format": "int32",
            "description": "The number of times the authentication method was used. ",
            "type": "integer"
          }
        }
      },
      "authenticationStatus": {
        "description": "Contains information about the authentication status.",
        "type": "object",
        "properties": {
          "accessCodeResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "ageVerifyResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "anySocialIDResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "facebookResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "googleResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "identityVerificationResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "idLookupResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "idQuestionsResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "linkedinResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "liveIDResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "ofacResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "openIDResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "phoneAuthResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "salesforceResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "signatureProviderResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "smsAuthResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "sTANPinResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "twitterResult": {
            "$ref": "#/components/schemas/eventResult"
          },
          "yahooResult": {
            "$ref": "#/components/schemas/eventResult"
          }
        }
      },
      "bccEmailAddress": {
        "description": "Contains information about the BCC email address.",
        "type": "object",
        "properties": {
          "bccEmailAddressId": {
            "description": "Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email. \n \nExample: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.",
            "type": "string"
          },
          "email": {
            "description": "Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.\n\nMaximum of length: 100 characters. ",
            "type": "string"
          }
        }
      },
      "billingCharge": {
        "description": "Contains information about a billing charge.",
        "type": "object",
        "properties": {
          "allowedQuantity": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "blocked": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "chargeName": {
            "description": "Provides information on what services the charge item is for.\n\nThe following table provides a description of the different chargeName values available at this time.\n\n| chargeName | Description |\n| --- | --- |\n| id_check | ID Check Charge |\n| in_person_signing | In Person Signing charge |\n| envelopes Included | Sent Envelopes for the account |\n| age_verify | Age verification check |\n| ofac | OFAC Check |\n| id_confirm | ID confirmation check |\n| student_authentication | STAN PIN authentication check |\n| wet_sign_fax | Pages for returning signed documents by fax |\n| attachment_fax | Pages for returning attachments by fax |\n| phone_authentication | Phone authentication charge |\n| powerforms | PowerForm envelopes sent |\n| signer_payments | Payment processing charge |\n| outbound_fax | Send by fax charge |\n| bulk_recipient_envelopes | Bulk Recipient Envelopes sent |\n| sms_authentications | SMS authentication charge |\n| saml_authentications | SAML authentication charge |\n| express_signer_certificate | DocuSign Express Certificate charge |\n| personal_signer_certificate | Personal Signer Certificate charge |\n| safe_certificate | SAFE BioPharma Signer Certificate charge |\n| seats | Included active seats charge |\n| open_trust_certificate | OpenTrust Signer Certificate charge |",
            "type": "string"
          },
          "chargeType": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "chargeUnitOfMeasure": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "discounts": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingDiscount"
            }
          },
          "firstEffectiveDate": {
            "description": "",
            "type": "string"
          },
          "includedQuantity": {
            "description": "",
            "type": "string"
          },
          "incrementalQuantity": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "lastEffectiveDate": {
            "description": "",
            "type": "string"
          },
          "prices": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingPrice"
            }
          },
          "unitPrice": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "usedQuantity": {
            "description": "",
            "type": "string"
          }
        }
      },
      "billingChargeResponse": {
        "description": "Defines a billing charge response object.",
        "type": "object",
        "properties": {
          "billingChargeItems": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingCharge"
            }
          }
        }
      },
      "billingDiscount": {
        "type": "object",
        "properties": {
          "beginQuantity": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "discount": {
            "description": "",
            "type": "string"
          },
          "endQuantity": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "billingInvoice": {
        "description": "",
        "type": "object",
        "properties": {
          "amount": {
            "description": "The total amount of the purchase.",
            "type": "string"
          },
          "balance": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "dueDate": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "invoiceId": {
            "description": "",
            "type": "string"
          },
          "invoiceItems": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingInvoiceItem"
            }
          },
          "invoiceNumber": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "invoiceUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve invoice information.",
            "type": "string"
          },
          "nonTaxableAmount": {
            "description": "",
            "type": "string"
          },
          "pdfAvailable": {
            "description": "",
            "type": "string"
          },
          "taxableAmount": {
            "description": "",
            "type": "string"
          }
        }
      },
      "billingInvoiceItem": {
        "description": "Contains information about an item on a billing invoice.",
        "type": "object",
        "properties": {
          "chargeAmount": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "chargeName": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "invoiceItemId": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of envelopes to add to the account.",
            "type": "string"
          },
          "unitPrice": {
            "description": "Reserved: TBD",
            "type": "string"
          }
        }
      },
      "billingInvoicesResponse": {
        "description": "Defines a billing invoice response object.",
        "type": "object",
        "properties": {
          "billingInvoices": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingInvoice"
            }
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          }
        }
      },
      "billingInvoicesSummary": {
        "type": "object",
        "properties": {
          "billingInvoices": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingInvoice"
            }
          },
          "pastDueBalance": {
            "description": "",
            "type": "string"
          },
          "paymentAllowed": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "billingPayment": {
        "description": "Contains information on a billing plan.",
        "type": "object",
        "properties": {
          "amount": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "invoiceId": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "paymentId": {
            "description": "",
            "type": "string"
          }
        }
      },
      "billingPaymentItem": {
        "description": "",
        "type": "object",
        "properties": {
          "amount": {
            "description": "The total amount of the purchase.",
            "type": "string"
          },
          "description": {
            "description": "A sender-defined description of the line item.\n",
            "type": "string"
          },
          "paymentDate": {
            "description": "",
            "type": "string"
          },
          "paymentId": {
            "description": "",
            "type": "string"
          },
          "paymentNumber": {
            "description": "When set to **true**, a PDF version of the invoice is available. \n\nTo get the PDF, make the call again and change \"Accept:\" in the header to \"Accept: application/pdf\".",
            "type": "string"
          }
        }
      },
      "billingPaymentRequest": {
        "type": "object",
        "properties": {
          "paymentAmount": {
            "description": "The payment amount for the past due invoices. This value must match the pastDueBalance value retrieved using Get Past Due Invoices.",
            "type": "string"
          }
        },
        "description": ""
      },
      "billingPaymentResponse": {
        "description": "Defines an billing payment response object.",
        "type": "object",
        "properties": {
          "billingPayments": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingPayment"
            }
          }
        }
      },
      "billingPaymentsResponse": {
        "description": "Defines a billing payments response object.",
        "type": "object",
        "properties": {
          "billingPayments": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingPaymentItem"
            }
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          }
        }
      },
      "billingPlan": {
        "description": "Contains information about a billing plan.",
        "type": "object",
        "properties": {
          "appStoreProducts": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/appStoreProduct"
            }
          },
          "currencyPlanPrices": {
            "description": "Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, and seatFee that are configured for this plan feature set.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/currencyPlanPrice"
            }
          },
          "enableSupport": {
            "description": "When set to **true**, then customer support is provided as part of the account plan.",
            "type": "string"
          },
          "includedSeats": {
            "description": "The number of seats (users) included.",
            "type": "string"
          },
          "otherDiscountPercent": {
            "description": "",
            "type": "string"
          },
          "paymentCycle": {
            "description": " The payment cycle associated with the plan. The possible values are: Monthly or Annually. ",
            "type": "string"
          },
          "paymentMethod": {
            "description": "",
            "type": "string"
          },
          "perSeatPrice": {
            "description": "The per seat price for the plan.",
            "type": "string"
          },
          "planClassification": {
            "description": "Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.",
            "type": "string"
          },
          "planFeatureSets": {
            "description": "A complex type that sets the feature sets for the account.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/featureSet"
            }
          },
          "planId": {
            "description": "The DocuSign Plan ID for the account.",
            "type": "string"
          },
          "planName": {
            "description": "The name of the Billing Plan.",
            "type": "string"
          },
          "seatDiscounts": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/seatDiscount"
            }
          },
          "supportIncidentFee": {
            "description": "The support incident fee charged for each support incident.",
            "type": "string"
          },
          "supportPlanFee": {
            "description": "The support plan fee charged for this plan.",
            "type": "string"
          }
        }
      },
      "billingPlanInformation": {
        "type": "object",
        "properties": {
          "appStoreReceipt": {
            "$ref": "#/components/schemas/appStoreReceipt"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/accountAddress"
          },
          "creditCardInformation": {
            "$ref": "#/components/schemas/creditCardInformation"
          },
          "downgradeReason": {
            "description": "",
            "type": "string"
          },
          "enableSupport": {
            "description": "When set to **true**, then customer support is provided as part of the account plan.",
            "type": "string"
          },
          "includedSeats": {
            "description": "The number of seats (users) included.",
            "type": "string"
          },
          "incrementalSeats": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "paymentProcessorInformation": {
            "$ref": "#/components/schemas/paymentProcessorInformation"
          },
          "planInformation": {
            "$ref": "#/components/schemas/planInformation"
          },
          "referralInformation": {
            "$ref": "#/components/schemas/referralInformation"
          },
          "renewalStatus": {
            "description": "",
            "type": "string"
          },
          "saleDiscountAmount": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          },
          "saleDiscountFixedAmount": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          },
          "saleDiscountPercent": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          },
          "saleDiscountPeriods": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          },
          "saleDiscountSeatPriceOverride": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          }
        },
        "description": ""
      },
      "billingPlanPreview": {
        "description": "Contains information about a preview billing plan.",
        "type": "object",
        "properties": {
          "currencyCode": {
            "description": "Specifies the ISO currency code for the account.",
            "type": "string"
          },
          "invoice": {
            "$ref": "#/components/schemas/billingInvoice"
          },
          "isProrated": {
            "description": "",
            "type": "string"
          },
          "subtotalAmount": {
            "description": "",
            "type": "string"
          },
          "taxAmount": {
            "description": "",
            "type": "string"
          },
          "totalAmount": {
            "description": "",
            "type": "string"
          }
        }
      },
      "billingPlanResponse": {
        "description": "Defines a billing plan response object.",
        "type": "object",
        "properties": {
          "billingPlan": {
            "$ref": "#/components/schemas/billingPlan"
          },
          "successorPlans": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingPlan"
            }
          }
        }
      },
      "billingPlansResponse": {
        "description": "Defines a billing plans response object.",
        "type": "object",
        "properties": {
          "billingPlans": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingPlan"
            }
          }
        }
      },
      "billingPlanUpdateResponse": {
        "description": "Defines a billing plan update response object.",
        "type": "object",
        "properties": {
          "accountPaymentMethod": {
            "description": "",
            "type": "string"
          },
          "billingPlanPreview": {
            "$ref": "#/components/schemas/billingPlanPreview"
          },
          "currencyCode": {
            "description": "Specifies the ISO currency code for the account.",
            "type": "string"
          },
          "includedSeats": {
            "description": "The number of seats (users) included.",
            "type": "string"
          },
          "paymentCycle": {
            "description": "",
            "type": "string"
          },
          "paymentMethod": {
            "description": "",
            "type": "string"
          },
          "planId": {
            "description": "The DocuSign Plan ID for the account.",
            "type": "string"
          },
          "planName": {
            "description": "",
            "type": "string"
          }
        }
      },
      "billingPrice": {
        "type": "object",
        "properties": {
          "beginQuantity": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "endQuantity": {
            "description": "",
            "type": "string"
          },
          "unitPrice": {
            "description": "Reserved: TBD",
            "type": "string"
          }
        },
        "description": ""
      },
      "brand": {
        "type": "object",
        "properties": {
          "brandCompany": {
            "description": "The name of the company associated with this brand.",
            "type": "string"
          },
          "brandId": {
            "description": "The ID used to identify a specific brand in API calls.",
            "type": "string"
          },
          "brandName": {
            "description": "The name of the brand.",
            "type": "string"
          },
          "colors": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "emailContent": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/brandEmailContent"
            }
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "isOverridingCompanyName": {
            "description": "",
            "type": "string"
          },
          "isSendingDefault": {
            "description": "",
            "type": "string"
          },
          "isSigningDefault": {
            "description": "",
            "type": "string"
          },
          "landingPages": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "links": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/brandLink"
            }
          },
          "logos": {
            "$ref": "#/components/schemas/brandLogos"
          },
          "resources": {
            "$ref": "#/components/schemas/brandResourceUrls"
          }
        },
        "description": ""
      },
      "brandEmailContent": {
        "type": "object",
        "properties": {
          "content": {
            "description": "",
            "type": "string"
          },
          "emailContentType": {
            "description": "",
            "type": "string"
          },
          "emailToLink": {
            "description": "",
            "type": "string"
          },
          "linkText": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "brandLink": {
        "type": "object",
        "properties": {
          "linkText": {
            "description": "",
            "type": "string"
          },
          "linkType": {
            "description": "",
            "type": "string"
          },
          "showLink": {
            "description": "",
            "type": "string"
          },
          "urlOrMailTo": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "brandLogos": {
        "type": "object",
        "properties": {
          "email": {
            "description": "",
            "type": "string"
          },
          "primary": {
            "description": "",
            "type": "string"
          },
          "secondary": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "brandRequest": {
        "type": "object",
        "properties": {
          "brandId": {
            "description": "The ID of the brand used in API calls",
            "type": "string"
          }
        },
        "description": ""
      },
      "brandResources": {
        "type": "object",
        "properties": {
          "createdByUserInfo": {
            "$ref": "#/components/schemas/userInfo"
          },
          "createdDate": {
            "description": "",
            "type": "string"
          },
          "modifiedByUserInfo": {
            "$ref": "#/components/schemas/userInfo"
          },
          "modifiedDate": {
            "description": "",
            "type": "string"
          },
          "modifiedTemplates": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resourcesContentType": {
            "description": "",
            "type": "string"
          },
          "resourcesContentUri": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "brandResourcesList": {
        "type": "object",
        "properties": {
          "resourcesContentTypes": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/brandResources"
            }
          }
        },
        "description": ""
      },
      "brandResourceUrls": {
        "type": "object",
        "properties": {
          "email": {
            "description": "",
            "type": "string"
          },
          "sending": {
            "description": "",
            "type": "string"
          },
          "signing": {
            "description": "",
            "type": "string"
          },
          "signingCaptive": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "brandsRequest": {
        "type": "object",
        "properties": {
          "brands": {
            "description": "The list of brands.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/brandRequest"
            }
          }
        },
        "description": ""
      },
      "brandsResponse": {
        "type": "object",
        "properties": {
          "brands": {
            "description": "The list of brands.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/brand"
            }
          },
          "recipientBrandIdDefault": {
            "description": "The brand seen by envelope recipients when a brand is not explicitly set.",
            "type": "string"
          },
          "senderBrandIdDefault": {
            "description": "The brand seen by envelope senders when a brand is not explicitly set.",
            "type": "string"
          }
        },
        "description": ""
      },
      "bulkEnvelope": {
        "type": "object",
        "properties": {
          "bulkRecipientRow": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "bulkStatus": {
            "description": "Indicates the status of the bulk send operation. Returned values can be:\n* queued\n* processing\n* sent\n* failed",
            "type": "string"
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "envelopeUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "submittedDateTime": {
            "description": "",
            "type": "string"
          },
          "transactionId": {
            "description": " Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
            "type": "string"
          }
        },
        "description": ""
      },
      "bulkEnvelopesResponse": {
        "type": "object",
        "properties": {
          "bulkEnvelopeStatuses": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkEnvelopeStatus"
            }
          },
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "bulkEnvelopeStatus": {
        "type": "object",
        "properties": {
          "batchId": {
            "description": "Specifies an identifier which can be used to retrieve a more detailed status of individual bulk recipient batches.",
            "type": "string"
          },
          "batchSize": {
            "description": "The number of items returned in this response.",
            "type": "string"
          },
          "bulkEnvelopes": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkEnvelope"
            }
          },
          "bulkEnvelopesBatchUri": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "failed": {
            "description": "The number of entries with a status of failed. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "queued": {
            "description": "The number of entries with a status of queued. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "sent": {
            "description": "The number of entries with a status of sent.",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "submittedDate": {
            "description": "",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "bulkRecipient": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "email": {
            "description": "Specifies the recipient's email address. \n\nMaximum length: 100 characters.",
            "type": "string"
          },
          "errorDetails": {
            "description": "Array or errors.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorDetails"
            }
          },
          "identification": {
            "description": "Specifies the authentication check used for the signer. If blank then no authentication check is required for the signer. Only one value can be used in this field.\n\nThe acceptable values are:\n\n* KBA: Enables the normal ID check authentication set up for your account.\n* Phone: Enables phone authentication.\n* SMS: Enables SMS authentication.",
            "type": "string"
          },
          "name": {
            "description": "Specifies the recipient's name. \n\nMaximum length: 50 characters.",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "phoneNumber": {
            "description": "This is only used if the Identification field value is Phone or SMS. The value for this field can be a valid telephone number or, if Phone, usersupplied (SMS authentication cannot use a user supplied number). Parenthesis and dashes can be used in the telephone number.\n\nIf `usersupplied` is used, the signer supplies his or her own telephone number.",
            "type": "string"
          },
          "recipientSignatureProviderInfo": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkRecipientSignatureProvider"
            }
          },
          "rowNumber": {
            "description": "",
            "type": "string"
          },
          "tabLabels": {
            "description": "Specifies values used to populate recipient tabs with information. This allows each bulk recipient signer to have different values for their associated tabs. Any number of `tabLabel` columns can be added to the bulk recipient file.\n\nThe information used in the bulk recipient file header must be the same as the `tabLabel` for the tab.\n\nThe values entered in this column are automatically inserted into the corresponding tab for the recipient in the same row.\n\nNote that this option cannot be used for tabs that do not have data or that are automatically populated data such as Signature, Full Name, Email Address, Company, Title, and Date Signed tabs.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkRecipientTabLabel"
            }
          }
        },
        "description": ""
      },
      "bulkRecipientSignatureProvider": {
        "type": "object",
        "properties": {
          "name": {
            "description": "",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          }
        },
        "description": ""
      },
      "bulkRecipientsRequest": {
        "type": "object",
        "properties": {
          "bulkRecipients": {
            "description": "A complex type containing information about the bulk recipients in the request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkRecipient"
            }
          }
        },
        "description": ""
      },
      "bulkRecipientsResponse": {
        "type": "object",
        "properties": {
          "bulkRecipients": {
            "description": "A complex type containing information about the bulk recipients in the response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkRecipient"
            }
          },
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "bulkRecipientsSummaryResponse": {
        "type": "object",
        "properties": {
          "bulkRecipients": {
            "description": "A complex type containing information about the bulk recipients in the response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkRecipient"
            }
          },
          "bulkRecipientsCount": {
            "description": "The number of items returned in this response.",
            "type": "string"
          },
          "bulkRecipientsUri": {
            "description": "The URL for the bulk recipient file with the bulk recipient information for this envelope, if applicable. This information is read only and is only shown after the bulk recipient file is uploaded to the envelope by using the PUT method. ",
            "type": "string"
          },
          "errorDetails": {
            "description": "Array or errors.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorDetails"
            }
          }
        },
        "description": ""
      },
      "bulkRecipientsUpdateResponse": {
        "type": "object",
        "properties": {
          "signer": {
            "$ref": "#/components/schemas/signer"
          }
        },
        "description": ""
      },
      "bulkRecipientTabLabel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          }
        },
        "description": ""
      },
      "captiveRecipient": {
        "type": "object",
        "properties": {
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "email": {
            "description": "Specifies the email address associated with the captive recipient.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "userName": {
            "description": "Specifies the user name associated with the captive recipient.",
            "type": "string"
          }
        },
        "description": ""
      },
      "captiveRecipientInformation": {
        "type": "object",
        "properties": {
          "captiveRecipients": {
            "description": "A complex type containing information about one or more captive recipients.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/captiveRecipient"
            }
          }
        },
        "description": ""
      },
      "carbonCopy": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "addAccessCodeToEmail": {
            "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
            "type": "string"
          },
          "agentCanEditEmail": {
            "description": "",
            "type": "string"
          },
          "agentCanEditName": {
            "description": "",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. Read only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          },
          "email": {
            "description": "Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckInformationInput": {
            "$ref": "#/components/schemas/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/components/schemas/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "name": {
            "description": "legal name of the recipient.\n\nMaximum Length: 100 characters.",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/components/schemas/recipientPhoneAuthentication"
          },
          "proofFile": {
            "$ref": "#/components/schemas/recipientProofFile"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientAttachment"
            }
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/components/schemas/authenticationStatus"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. Read only.",
            "type": "string"
          },
          "requireIdLookup": {
            "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "samlAuthentication": {
            "$ref": "#/components/schemas/recipientSAMLAuthentication"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "type": "string"
          },
          "signingGroupName": {
            "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          },
          "smsAuthentication": {
            "$ref": "#/components/schemas/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": " Lists the social ID type that can be used for recipient authentication.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAuthentication"
            }
          },
          "status": {
            "description": "Recipient status.\n<!-- todo -->\n",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. Read only.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          }
        },
        "description": ""
      },
      "certifiedDelivery": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "addAccessCodeToEmail": {
            "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
            "type": "string"
          },
          "agentCanEditEmail": {
            "description": "",
            "type": "string"
          },
          "agentCanEditName": {
            "description": "",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. Read only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckInformationInput": {
            "$ref": "#/components/schemas/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/components/schemas/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/components/schemas/recipientPhoneAuthentication"
          },
          "proofFile": {
            "$ref": "#/components/schemas/recipientProofFile"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientAttachment"
            }
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/components/schemas/authenticationStatus"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. Read only.",
            "type": "string"
          },
          "requireIdLookup": {
            "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "samlAuthentication": {
            "$ref": "#/components/schemas/recipientSAMLAuthentication"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "type": "string"
          },
          "signingGroupName": {
            "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          },
          "smsAuthentication": {
            "$ref": "#/components/schemas/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": " Lists the social ID type that can be used for recipient authentication.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAuthentication"
            }
          },
          "status": {
            "description": "Recipient status.\n<!-- todo -->\n",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. Read only.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          }
        },
        "description": ""
      },
      "checkbox": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "Specifies the tool tip text for the tab.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "required": {
            "description": "This property does not apply to `checkbox` tabs. Check boxes are always optional.",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "selected": {
            "description": "When set to **true**, the checkbox is selected.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-7, -6)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-7, -6)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient to select a yes/no (on/off) option.\n"
      },
      "chunkedUploadPart": {
        "type": "object",
        "properties": {
          "sequence": {
            "description": "",
            "type": "string"
          },
          "size": {
            "description": "Reserved: TBD",
            "type": "string"
          }
        },
        "description": ""
      },
      "chunkedUploadRequest": {
        "type": "object",
        "properties": {
          "chunkedUploadId": {
            "description": "",
            "type": "string"
          },
          "data": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "chunkedUploadResponse": {
        "type": "object",
        "properties": {
          "checksum": {
            "description": "",
            "type": "string"
          },
          "chunkedUploadId": {
            "description": "",
            "type": "string"
          },
          "chunkedUploadParts": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/chunkedUploadPart"
            }
          },
          "chunkedUploadUri": {
            "description": "",
            "type": "string"
          },
          "committed": {
            "description": "",
            "type": "string"
          },
          "expirationDateTime": {
            "description": "",
            "type": "string"
          },
          "maxChunkedUploadParts": {
            "description": "",
            "type": "string"
          },
          "maxTotalSize": {
            "description": "",
            "type": "string"
          },
          "totalSize": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "cloudStorageProvider": {
        "type": "object",
        "properties": {
          "authenticationUrl": {
            "description": "The authentication URL used for the cloud storage provider. This information is only included in the response if the user has not passed authentication for the cloud storage provider. If the redirectUrl query string is provided, the returnUrl is appended to the authenticationUrl. ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "redirectUrl": {
            "description": "The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\n\nThe redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.",
            "type": "string"
          },
          "service": {
            "description": "The service name for the cloud storage provider.",
            "type": "string"
          },
          "serviceId": {
            "description": "The DocuSign generated ID for the cloud storage provider",
            "type": "string"
          }
        },
        "description": ""
      },
      "cloudStorageProviders": {
        "type": "object",
        "properties": {
          "storageProviders": {
            "description": "An Array containing the storage providers associated with the user.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cloudStorageProvider"
            }
          }
        },
        "description": ""
      },
      "company": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "concealValueOnDocument": {
            "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "disableAutoSize": {
            "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "maxLength": {
            "format": "int32",
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "integer"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "Specifies the tool tip text for the tab.",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that displays the recipient's company name.\n"
      },
      "compositeTemplate": {
        "type": "object",
        "properties": {
          "compositeTemplateId": {
            "description": "The identify of this composite template. It is used as a reference when adding document object information. If used, the document's `content-disposition` must include the composite template ID to which the document should be added. If a composite template ID is not specified in the content-disposition, the document is applied based on the value of the `documentId` property only. If no document object is specified, the composite template inherits the first document.",
            "type": "string"
          },
          "document": {
            "$ref": "#/components/schemas/document"
          },
          "inlineTemplates": {
            "description": " Zero or more inline templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inlineTemplate"
            }
          },
          "pdfMetaDataTemplateSequence": {
            "description": "",
            "type": "string"
          },
          "serverTemplates": {
            "description": "0 or more server-side templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/serverTemplate"
            }
          }
        },
        "description": ""
      },
      "connectConfigResults": {
        "type": "object",
        "properties": {
          "configurations": {
            "description": "Array of Connect Configurations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/connectCustomConfiguration"
            }
          },
          "totalRecords": {
            "description": "Record count.",
            "type": "string"
          }
        },
        "description": ""
      },
      "connectCustomConfiguration": {
        "type": "object",
        "properties": {
          "allowEnvelopePublish": {
            "description": "When set to **true**, data is sent to the urlToPublishTo web address. This option can be set to false to stop sending data while maintaining the Connect configuration information.",
            "type": "string"
          },
          "allUsers": {
            "description": "When set to **true**, the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect.",
            "type": "string"
          },
          "configurationType": {
            "description": "If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.",
            "type": "string"
          },
          "connectId": {
            "description": "The ID of the custom Connect configuration being accessed.",
            "type": "string"
          },
          "enableLog": {
            "description": "This turns Connect logging on or off. When set to **true**, logging is turned on.",
            "type": "string"
          },
          "envelopeEvents": {
            "description": "A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `url` property. \n\nTo receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.",
            "type": "string"
          },
          "includeCertificateOfCompletion": {
            "description": "When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes. ",
            "type": "string"
          },
          "includeCertSoapHeader": {
            "description": "",
            "type": "string"
          },
          "includeDocumentFields": {
            "description": "When set to **true**, the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API. ",
            "type": "string"
          },
          "includeDocuments": {
            "description": "reserved",
            "type": "string"
          },
          "includeEnvelopeVoidReason": {
            "description": "When set to **true**, if the envelope is voided, the Connect Service notification will include the void reason, as entered by the person that voided the envelope. ",
            "type": "string"
          },
          "includeHMAC": {
            "description": "",
            "type": "string"
          },
          "includeSenderAccountasCustomField": {
            "description": "When set to **true**, Connect will include the sender account as Custom Field in the data.",
            "type": "string"
          },
          "includeTimeZoneInformation": {
            "description": "When set to **true**, Connect will include the envelope time zone information.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "recipientEvents": {
            "description": "An array of recipient event statuses that will trigger Connect to send notifications to your webhook listener at the url endpoint specified in the `url` property. \n\nTo receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.",
            "type": "string"
          },
          "requiresAcknowledgement": {
            "description": "#### When set to **true**, and SIM mode is activated:\n\nIf the HTTP Status response to a notification message is not in the range of 200-299 then the message delivery failed, and the configuration is marked as *down.*\n\nThe message will be queued and retried once per day. While a Connect configuration is marked down, subsequent notifications will not be tried, they'll be immediately queued with reason \"Pending.\" Once a message succeeds, all queued messages for the configuration will be tried immediately, in order.\n\nThere is a maximum of ten retries Alternately, you can use Republish Connect Information to manually republish the notification.\n\n#### When set to **true**, and SIM mode is not activated: \n\nIf the HTTP Status response to a notification message is not in the range of 200-299 then the message delivery failed, and the message is queued.\n\nThe message will be retried after at least a day the next time a subsequent message is successfully sent to this configuration (subscription).  Subsequent notifications will be tried when they occur.\nThere is a maximum of ten retries Alternately, you can use Republish Connect Information to manually republish the notification.",
            "type": "string"
          },
          "signMessageWithX509Certificate": {
            "description": "When set to **true**, Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer's web server) during the TLS handshake protocol. ",
            "type": "string"
          },
          "soapNamespace": {
            "description": "The namespace of the SOAP interface.\n\nThe namespace value must be set if useSoapInterface is set to true.",
            "type": "string"
          },
          "urlToPublishTo": {
            "description": "This is the web address and name of your listener or Retrieving Service endpoint. You need to include HTTPS:// in the web address.",
            "type": "string"
          },
          "userIds": {
            "description": "A comma separated list of userIds. This sets the users associated with the tracked envelope and recipient events. When a tracked event occurs for a set user, the a notification message is sent to your Connect listener. \n\n###### Note: If allUsers is set to `false` then you must provide a list of user ids.",
            "type": "string"
          },
          "useSoapInterface": {
            "description": "When set to **true**, the notifications are sent to your endpoint as SOAP requests. ",
            "type": "string"
          }
        },
        "description": ""
      },
      "connectDebugLog": {
        "type": "object",
        "properties": {
          "connectConfig": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "eventDateTime": {
            "description": "",
            "type": "string"
          },
          "eventDescription": {
            "description": "",
            "type": "string"
          },
          "payload": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "connectFailureFilter": {
        "type": "object",
        "properties": {
          "envelopeIds": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "synchronous": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "connectFailureResult": {
        "type": "object",
        "properties": {
          "configId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "configUrl": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "status": {
            "description": "Connection status.",
            "type": "string"
          },
          "statusMessage": {
            "description": "Connection status message.",
            "type": "string"
          }
        },
        "description": ""
      },
      "connectFailureResults": {
        "type": "object",
        "properties": {
          "retryQueue": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/connectFailureResult"
            }
          }
        },
        "description": ""
      },
      "connectLog": {
        "type": "object",
        "properties": {
          "accountId": {
            "description": "The account ID associated with the envelope.",
            "type": "string"
          },
          "configUrl": {
            "description": "The web address of the listener or Retrieving Service end point for Connect.",
            "type": "string"
          },
          "connectDebugLog": {
            "description": "A complex element containing information about the Connect configuration, error details, date/time, description and payload.\n\nThis is only included in the response if the query additional_info=true is used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/connectDebugLog"
            }
          },
          "connectId": {
            "description": "The identifier for the Connect configuration that failed. If an account has multiple Connect configurations, this value is used to look up the Connect configuration for the failed post.",
            "type": "string"
          },
          "created": {
            "description": "The date and time the entry was created.",
            "type": "string"
          },
          "email": {
            "description": "The email that sent the envelope.",
            "type": "string"
          },
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "error": {
            "description": "The error that caused the Connect post to fail.",
            "type": "string"
          },
          "failureId": {
            "description": "The failure log ID for the failure.",
            "type": "string"
          },
          "failureUri": {
            "description": "The URI for the failure.",
            "type": "string"
          },
          "lastTry": {
            "description": "The date and time the last attempt to post.",
            "type": "string"
          },
          "logId": {
            "description": "The Connect log ID for the entry.",
            "type": "string"
          },
          "logUri": {
            "description": "The URI for the log item.",
            "type": "string"
          },
          "retryCount": {
            "description": "The number of times the Connect post has been retried.",
            "type": "string"
          },
          "retryUri": {
            "description": "The UEI to retry to publish the Connect failure.",
            "type": "string"
          },
          "status": {
            "description": "The new envelope status for the failed Connect post. The possible values are: Any, Voided, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut, Template, or Processing.",
            "type": "string"
          },
          "subject": {
            "description": "The envelope subject.",
            "type": "string"
          },
          "userName": {
            "description": "The name of the envelope sender.",
            "type": "string"
          }
        },
        "description": ""
      },
      "connectLogs": {
        "type": "object",
        "properties": {
          "failures": {
            "description": "An array of containing failure information from the Connect failure log.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/connectLog"
            }
          },
          "logs": {
            "description": "A complex type containing Connect log information. It is divided into two sections, one for regular logs and one for Connect failures. ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/connectLog"
            }
          },
          "totalRecords": {
            "description": "Record count.",
            "type": "string"
          },
          "type": {
            "description": "Type of the user. Valid values: type_owner, type_participant.",
            "type": "string"
          }
        },
        "description": ""
      },
      "consoleViewRequest": {
        "type": "object",
        "properties": {
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "returnUrl": {
            "description": "The URL to be redirected to after the console view session has ended.",
            "type": "string"
          }
        },
        "description": ""
      },
      "consumerDisclosure": {
        "type": "object",
        "properties": {
          "accountEsignId": {
            "description": "A GUID identifying the account associated with the consumer disclosure",
            "type": "string"
          },
          "allowCDWithdraw": {
            "description": "Indicates whether the customer can withdraw their acceptance of the consumer disclosure.",
            "type": "string"
          },
          "allowCDWithdrawMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "changeEmail": {
            "description": "",
            "type": "string"
          },
          "changeEmailOther": {
            "description": "",
            "type": "string"
          },
          "companyName": {
            "description": "The name of the user's Company.",
            "type": "string"
          },
          "companyPhone": {
            "description": "The phone number of the company associated with the consumer disclosure.",
            "type": "string"
          },
          "copyCostPerPage": {
            "description": "",
            "type": "string"
          },
          "copyFeeCollectionMethod": {
            "description": "Specifies the fee collection method for cases in which the customer requires paper copies of the document.\n\nMaximum Length: 255 characters",
            "type": "string"
          },
          "copyRequestEmail": {
            "description": "",
            "type": "string"
          },
          "custom": {
            "description": "",
            "type": "string"
          },
          "enableEsign": {
            "description": "",
            "type": "string"
          },
          "esignAgreement": {
            "description": "The Electronic Record and Signature Disclosure text. The disclosure text includes the html formatting.",
            "type": "string"
          },
          "esignText": {
            "description": "",
            "type": "string"
          },
          "languageCode": {
            "description": "",
            "type": "string"
          },
          "mustAgreeToEsign": {
            "description": "",
            "type": "string"
          },
          "pdfId": {
            "description": "**Deprecated**\n\nThe `pdfId` property in the consumer_disclosure PUT request is deprecated. For security reasons going forward, any value provided in the request packet must be ignored. ",
            "type": "string"
          },
          "useBrand": {
            "description": "",
            "type": "string"
          },
          "useConsumerDisclosureWithinAccount": {
            "description": "",
            "type": "string"
          },
          "useConsumerDisclosureWithinAccountMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "withdrawAddressLine1": {
            "description": "Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "withdrawAddressLine2": {
            "description": "Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "withdrawByEmail": {
            "description": "Indicates whether the customer can withdraw consent by email.",
            "type": "string"
          },
          "withdrawByMail": {
            "description": "Indicates whether the customer can withdraw consent by postal mail.",
            "type": "string"
          },
          "withdrawByPhone": {
            "description": "Indicates whether the customer can withdraw consent by phone.",
            "type": "string"
          },
          "withdrawCity": {
            "description": "Contains the city of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 50 characters. ",
            "type": "string"
          },
          "withdrawConsequences": {
            "description": "Indicates the consequences of withdrawing consent.",
            "type": "string"
          },
          "withdrawEmail": {
            "description": "Contains the email address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "withdrawOther": {
            "description": "Indicates other information need to withdraw consent.\n\nMaximum length: 255 characters.",
            "type": "string"
          },
          "withdrawPhone": {
            "description": "Contains the phone number which a customer can call to register consent withdrawal notification.\n\nMaximum length: 20 characters. ",
            "type": "string"
          },
          "withdrawPostalCode": {
            "description": "Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 20 characters. ",
            "type": "string"
          },
          "withdrawState": {
            "description": "Contains the state of the postal address to which a customer can send a consent withdrawal notification.",
            "type": "string"
          }
        },
        "description": ""
      },
      "contact": {
        "type": "object",
        "properties": {
          "contactId": {
            "description": "The unique identifier of a person in the contacts address book.",
            "type": "string"
          },
          "contactPhoneNumbers": {
            "description": "A list of the contact's phone numbers.\n\n**Note**: The phone numbers associated with shared contacts do not display to users other than the user who added the contact. Additionally, in the following scenarios, the phone number of a shared contact does not populate automatically for anyone other than the user who added the contact:\n\n- Sending an envelope by using SMS\n- Using phone authentication\n\nYou must ask the user who added the contact for the phone number and then manually enter it into the authentication box.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contactPhoneNumber"
            }
          },
          "contactUri": {
            "description": "The URI for retrieving information about the contact.",
            "type": "string"
          },
          "emails": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "organization": {
            "description": "",
            "type": "string"
          },
          "shared": {
            "description": "",
            "type": "string"
          },
          "signingGroup": {
            "description": "",
            "type": "string"
          },
          "signingGroupName": {
            "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          }
        },
        "description": ""
      },
      "contactGetResponse": {
        "type": "object",
        "properties": {
          "contacts": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contact"
            }
          },
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "contactModRequest": {
        "type": "object",
        "properties": {
          "contacts": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contact"
            }
          }
        },
        "description": ""
      },
      "contactPhoneNumber": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "description": "",
            "type": "string"
          },
          "phoneType": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "contactUpdateResponse": {
        "type": "object",
        "properties": {
          "contacts": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contact"
            }
          }
        },
        "description": ""
      },
      "correctViewRequest": {
        "type": "object",
        "properties": {
          "returnUrl": {
            "description": "The url used after correct/send view session has ended. DocuSign redirects to the url and includes an event parameter that can be used by your app. The event parameters returned are: \n\n* send (user corrected and sent the envelope)\n* save (user saved the envelope)\n* cancel (user canceled the transaction.)\n* error (there was an error when performing the correct or send)\n* sessionEnd (the session ended before the user completed a different action)\n\n###### Note: Include https:// in the URL or the redirect might not succeed on some browsers. ",
            "type": "string"
          },
          "suppressNavigation": {
            "description": "Specifies whether the window is displayed with or without dressing.",
            "type": "string"
          },
          "viewUrl": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "country": {
        "type": "object",
        "properties": {
          "isoCode": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "provinces": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/province"
            }
          },
          "provinceValidated": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "creditCardInformation": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/addressInformation"
          },
          "cardNumber": {
            "description": "The number on the credit card.",
            "type": "string"
          },
          "cardType": {
            "description": "The credit card type. Valid values are: visa, mastercard, or amex.",
            "type": "string"
          },
          "expirationMonth": {
            "description": "The month that the credit card expires (1-12).",
            "type": "string"
          },
          "expirationYear": {
            "description": "The year 4 digit year in which the credit card expires.",
            "type": "string"
          },
          "nameOnCard": {
            "description": "The exact name printed on the credit card.",
            "type": "string"
          }
        },
        "description": ""
      },
      "creditCardTypes": {
        "type": "object",
        "properties": {
          "cardTypes": {
            "description": "An array containing supported credit card types.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": ""
      },
      "currencyFeatureSetPrice": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "description": "Specifies the alternate ISO currency code for the account. ",
            "type": "string"
          },
          "currencySymbol": {
            "description": "Specifies the alternate currency symbol for the account.",
            "type": "string"
          },
          "envelopeFee": {
            "description": "An incremental envelope cost for plans with envelope overages (when `isEnabled` is set to **true**.)",
            "type": "string"
          },
          "fixedFee": {
            "description": "Specifies a one-time fee associated with the plan (when `isEnabled` is set to **true**.)",
            "type": "string"
          },
          "seatFee": {
            "description": "Specifies an incremental seat cost for seat-based plans (when `isEnabled` is set to **true**.)",
            "type": "string"
          }
        },
        "description": ""
      },
      "currencyPlanPrice": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "description": "Specifies the ISO currency code for the account.",
            "type": "string"
          },
          "currencySymbol": {
            "description": "Specifies the currency symbol for the account.",
            "type": "string"
          },
          "perSeatPrice": {
            "description": "",
            "type": "string"
          },
          "supportedCardTypes": {
            "$ref": "#/components/schemas/creditCardTypes"
          },
          "supportIncidentFee": {
            "description": "The support incident fee charged for each support incident.",
            "type": "string"
          },
          "supportPlanFee": {
            "description": "The support plan fee charged for this plan.",
            "type": "string"
          }
        },
        "description": ""
      },
      "customField": {
        "type": "object",
        "properties": {
          "customFieldType": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "fieldId": {
            "description": "An ID used to specify a custom field.",
            "type": "string"
          },
          "listItems": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "show": {
            "description": "A boolean indicating if the value should be displayed.  If this value is set to **true**, the custom field is displayed at the top of the certificate of completion. If this value is left blank/ or set to **false**, then it does not appear in the certificate of completion. ",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          }
        },
        "description": ""
      },
      "customField_v2": {
        "type": "object",
        "properties": {
          "configurationType": {
            "description": "If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "fieldId": {
            "description": "An ID used to specify a custom field.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "show": {
            "description": "A boolean indicating if the value should be displayed.  If this value is set to **true**, the custom field is displayed at the top of the certificate of completion. If this value is left blank/ or set to **false**, then it does not appear in the certificate of completion. ",
            "type": "string"
          },
          "value": {
            "description": "The value of the custom field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "customFields": {
        "description": "",
        "type": "object",
        "properties": {
          "listCustomFields": {
            "description": "An array of list custom fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/listCustomField"
            }
          },
          "textCustomFields": {
            "description": "An array of text custom fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/textCustomField"
            }
          }
        }
      },
      "customFieldsEnvelope": {
        "type": "object",
        "properties": {
          "listCustomFields": {
            "description": "An array of list custom fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/listCustomField"
            }
          },
          "textCustomFields": {
            "description": "An array of text custom fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/textCustomField"
            }
          }
        },
        "description": ""
      },
      "customSettingsInformation": {
        "type": "object",
        "properties": {
          "customSettings": {
            "description": "The name/value pair information for the user custom setting.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          }
        },
        "description": ""
      },
      "date": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "concealValueOnDocument": {
            "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "disableAutoSize": {
            "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "maxLength": {
            "format": "int32",
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "integer"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "requireAll": {
            "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "senderRequired": {
            "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationPattern": {
            "description": "A regular expressionn used to validate input for the tab.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n"
      },
      "dateSigned": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that displays the date that the recipient signed the\ndocument.\n"
      },
      "dateStampProperties": {
        "type": "object",
        "properties": {
          "dateAreaHeight": {
            "description": "",
            "type": "string"
          },
          "dateAreaWidth": {
            "description": "",
            "type": "string"
          },
          "dateAreaX": {
            "description": "",
            "type": "string"
          },
          "dateAreaY": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "decline": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "buttonText": {
            "description": " Specifies the decline text displayed in the tab.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "declineReason": {
            "description": "The reason the recipient declined the document.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "height": {
            "format": "int32",
            "description": "Height of the tab in pixels.",
            "type": "integer"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n"
      },
      "diagnosticsSettingsInformation": {
        "type": "object",
        "properties": {
          "apiRequestLogging": {
            "description": " When set to **true**, enables API request logging for the user. ",
            "type": "string"
          },
          "apiRequestLogMaxEntries": {
            "description": "Specifies the maximum number of API requests to log.",
            "type": "string"
          },
          "apiRequestLogRemainingEntries": {
            "description": "Indicates the remaining number of API requests that can be logged.",
            "type": "string"
          }
        },
        "description": ""
      },
      "dobInformationInput": {
        "description": "Complex type containing:\n\n* dateOfBirth\n* displayLevelCode\n* receiveInResponse",
        "type": "object",
        "properties": {
          "dateOfBirth": {
            "description": "Specifies the recipient's date, month, and year of birth.",
            "type": "string"
          },
          "displayLevelCode": {
            "description": "Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay",
            "type": "string"
          },
          "receiveInResponse": {
            "description": "When set to **true**, the information needs to be returned in the response.",
            "type": "string"
          }
        }
      },
      "document": {
        "type": "object",
        "properties": {
          "applyAnchorTabs": {
            "description": "Reserved for DocuSign",
            "type": "string"
          },
          "authoritativeCopy": {
            "description": "If **true**, this document is considered an authoritative copy.\n\nIf this property is not set, it gets its value from the envelope's `authoritativeCopyDefault` property if it's set, or the envelope's `authoritativeCopy` property.\n\nIf **false**, this document is not an authoritative copy regardless of the envelope's `authoritativeCopyDefault` or `authoritativeCopy` property.",
            "type": "boolean"
          },
          "display": {
            "description": "This string sets the display and behavior properties of\nthe document during signing. The possible values are:\n\n* `modal`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a modal window.\n  This is the recommended value for supplemental documents. \n\n* `download`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a new browser window. \n\n* `inline`<br>\n  The document is shown in the normal signing window.\n  This value is not used with supplemental documents,\n  but is the default value for all other documents.\n",
            "type": "string"
          },
          "documentBase64": {
            "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
            "type": "string"
          },
          "documentFields": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "documentId": {
            "description": "Specifies the document ID of this document. This value is used by tabs to determine which document they appear in.",
            "type": "string"
          },
          "encryptedWithKeyManager": {
            "description": "When set to **true**, the document is been already encrypted by the sender for use with the DocuSign Key Manager Security Appliance.\n ",
            "type": "string"
          },
          "fileExtension": {
            "description": "The file extension type of the document. Non-PDF documents are converted to PDF.\n\nIf the document is not a PDF, `fileExtension` is required.\n\nIf you try to upload a non-PDF document without a `fileExtension`, you will receive an \"unable to load document\" error message.  \n ",
            "type": "string"
          },
          "fileFormatHint": {
            "description": "",
            "type": "string"
          },
          "htmlDefinition": {
            "$ref": "#/components/schemas/documentHtmlDefinition"
          },
          "includeInDownload": {
            "description": "When set to **true**,\nthe document is included in the combined document download. \nThe default value is **true**.\n",
            "type": "string"
          },
          "matchBoxes": {
            "description": "Matchboxes define areas in a document for document matching when you are creating envelopes. They are only used when you upload and edit a template. \n\nA matchbox consists of 5 elements:\n\n* pageNumber - The document page number  on which the matchbox will appear. \n* xPosition - The x position of the matchbox on a page. \n* yPosition - The y position of the matchbox on a page.\n* width - The width of the matchbox. \n* height - The height of the matchbox. \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/matchBox"
            }
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "order": {
            "description": "An optional value that sets the direction order used to sort the item list. \n\nValid values are: \n\n* asc = ascending sort order\n* desc = descending sort order ",
            "type": "string"
          },
          "pages": {
            "description": "",
            "type": "string"
          },
          "password": {
            "description": "",
            "type": "string"
          },
          "remoteUrl": {
            "description": "The file id from the cloud storage service where the document is located. This information is returned using [ML:GET /folders] or [ML:/folders/{folderid}]. ",
            "type": "string"
          },
          "signerMustAcknowledge": {
            "description": "Sets how the signer interacts with the supplemental document.\nThe possible values are: \n\n*\t`no_interaction`<br>\n  No recipient action is required. \n\n*\t`view`<br>\n  The recipient is required to view the document. \n\n*\t`accept`<br>\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document. \n\n*\t`view_accept`<br>\n  The recipient is required to view and accept the document.  \n\n",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "transformPdfFields": {
            "description": "When set to **true**, PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF. See the [ML:Transform PDF Fields] section for more information about how fields are transformed into DocuSign tabs. ",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          }
        },
        "description": "A document object."
      },
      "documentFieldsInformation": {
        "type": "object",
        "properties": {
          "documentFields": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          }
        },
        "description": ""
      },
      "documentHtmlCollapsibleDisplaySettings": {
        "type": "object",
        "properties": {
          "arrowClosed": {
            "description": "",
            "type": "string"
          },
          "arrowColor": {
            "description": "",
            "type": "string"
          },
          "arrowLocation": {
            "description": "",
            "type": "string"
          },
          "arrowOpen": {
            "description": "",
            "type": "string"
          },
          "arrowSize": {
            "description": "",
            "type": "string"
          },
          "arrowStyle": {
            "description": "",
            "type": "string"
          },
          "containerStyle": {
            "description": "",
            "type": "string"
          },
          "labelStyle": {
            "description": "",
            "type": "string"
          },
          "onlyArrowIsClickable": {
            "description": "",
            "type": "boolean"
          },
          "outerLabelAndArrowStyle": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "documentHtmlDefinition": {
        "type": "object",
        "properties": {
          "displayAnchorPrefix": {
            "description": "",
            "type": "string"
          },
          "displayAnchors": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentHtmlDisplayAnchor"
            }
          },
          "displayOrder": {
            "description": "",
            "type": "string"
          },
          "displayPageNumber": {
            "description": "",
            "type": "string"
          },
          "documentGuid": {
            "description": "",
            "type": "string"
          },
          "documentId": {
            "description": "The ID of the document being accessed.",
            "type": "string"
          },
          "headerLabel": {
            "description": "",
            "type": "string"
          },
          "maxScreenWidth": {
            "description": "",
            "type": "string"
          },
          "removeEmptyTags": {
            "description": "",
            "type": "string"
          },
          "showMobileOptimizedToggle": {
            "description": "",
            "type": "string"
          },
          "source": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "documentHtmlDefinitionOriginal": {
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The ID of the document being accessed.",
            "type": "string"
          },
          "documentIdGuid": {
            "description": "",
            "type": "string"
          },
          "htmlDefinition": {
            "$ref": "#/components/schemas/documentHtmlDefinition"
          }
        },
        "description": ""
      },
      "documentHtmlDefinitionOriginals": {
        "type": "object",
        "properties": {
          "htmlDefinitions": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentHtmlDefinitionOriginal"
            }
          }
        },
        "description": ""
      },
      "documentHtmlDefinitions": {
        "type": "object",
        "properties": {
          "htmlDefinitions": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": ""
      },
      "documentHtmlDisplayAnchor": {
        "type": "object",
        "properties": {
          "caseSensitive": {
            "description": "",
            "type": "boolean"
          },
          "displaySettings": {
            "$ref": "#/components/schemas/documentHtmlDisplaySettings"
          },
          "endAnchor": {
            "description": "",
            "type": "string"
          },
          "removeEndAnchor": {
            "description": "",
            "type": "boolean"
          },
          "removeStartAnchor": {
            "description": "",
            "type": "boolean"
          },
          "startAnchor": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "documentHtmlDisplaySettings": {
        "type": "object",
        "properties": {
          "cellStyle": {
            "description": "",
            "type": "string"
          },
          "collapsibleSettings": {
            "$ref": "#/components/schemas/documentHtmlCollapsibleDisplaySettings"
          },
          "display": {
            "description": "This string sets the display and behavior properties of\nthe document during signing. The possible values are:\n\n* `modal`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a modal window.\n  This is the recommended value for supplemental documents. \n\n* `download`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a new browser window. \n\n* `inline`<br>\n  The document is shown in the normal signing window.\n  This value is not used with supplemental documents,\n  but is the default value for all other documents.\n",
            "type": "string"
          },
          "displayLabel": {
            "description": "",
            "type": "string"
          },
          "displayOrder": {
            "format": "int32",
            "description": "",
            "type": "integer"
          },
          "displayPageNumber": {
            "format": "int32",
            "description": "",
            "type": "integer"
          },
          "hideLabelWhenOpened": {
            "description": "",
            "type": "boolean"
          },
          "inlineOuterStyle": {
            "description": "",
            "type": "string"
          },
          "labelWhenOpened": {
            "description": "",
            "type": "string"
          },
          "preLabel": {
            "description": "",
            "type": "string"
          },
          "scrollToTopWhenOpened": {
            "description": "",
            "type": "boolean"
          },
          "tableStyle": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "documentTemplate": {
        "type": "object",
        "properties": {
          "documentEndPage": {
            "description": "",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentStartPage": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "templateId": {
            "description": "The unique identifier of the template. If this is not provided, DocuSign generates an error and the call fails.",
            "type": "string"
          }
        },
        "description": ""
      },
      "documentTemplateList": {
        "type": "object",
        "properties": {
          "documentTemplates": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentTemplate"
            }
          }
        },
        "description": ""
      },
      "documentVisibility": {
        "type": "object",
        "properties": {
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "rights": {
            "description": "",
            "type": "string"
          },
          "visible": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "documentVisibilityList": {
        "type": "object",
        "properties": {
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          }
        },
        "description": ""
      },
      "editor": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "addAccessCodeToEmail": {
            "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. Read only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          },
          "email": {
            "description": "Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckInformationInput": {
            "$ref": "#/components/schemas/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/components/schemas/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "name": {
            "description": "legal name of the recipient.\n\nMaximum Length: 100 characters.",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/components/schemas/recipientPhoneAuthentication"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientAttachment"
            }
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/components/schemas/authenticationStatus"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. Read only.",
            "type": "string"
          },
          "requireIdLookup": {
            "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "samlAuthentication": {
            "$ref": "#/components/schemas/recipientSAMLAuthentication"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "type": "string"
          },
          "signingGroupName": {
            "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          },
          "smsAuthentication": {
            "$ref": "#/components/schemas/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": " Lists the social ID type that can be used for recipient authentication.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAuthentication"
            }
          },
          "status": {
            "description": "Recipient status.\n<!-- todo -->\n",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. Read only.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          }
        },
        "description": ""
      },
      "email": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "concealValueOnDocument": {
            "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "disableAutoSize": {
            "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "maxLength": {
            "format": "int32",
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "integer"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "requireAll": {
            "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "senderRequired": {
            "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationPattern": {
            "description": "A regular expressionn used to validate input for the tab.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n"
      },
      "emailAddress": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that displays the recipient's email as entered in the\nrecipient information.\n"
      },
      "emailSettings": {
        "description": "",
        "type": "object",
        "properties": {
          "bccEmailAddresses": {
            "description": "An array containing the email address that should receive a copy of all email communications related to an envelope for archiving purposes. Maximum Length: 100 characters.\n\n**Note**: While this property is an array, it takes only a single email address.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bccEmailAddress"
            }
          },
          "replyEmailAddressOverride": {
            "description": "",
            "type": "string"
          },
          "replyEmailNameOverride": {
            "description": "",
            "type": "string"
          }
        }
      },
      "eNoteConfiguration": {
        "type": "object",
        "properties": {
          "connectConfigured": {
            "description": "",
            "type": "string"
          },
          "eNoteConfigured": {
            "description": "",
            "type": "string"
          },
          "organization": {
            "description": "",
            "type": "string"
          },
          "password": {
            "description": "",
            "type": "string"
          },
          "userName": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelope": {
        "type": "object",
        "properties": {
          "allowMarkup": {
            "description": "When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this",
            "type": "string"
          },
          "allowReassign": {
            "description": "When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.",
            "type": "string"
          },
          "allowViewHistory": {
            "description": "",
            "type": "string"
          },
          "asynchronous": {
            "description": "When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed. \n\n\n**Note**: A `transactionId` is required for this call to work correctly. When the envelope is created, the status is 'Processing' and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query using the [transactionId](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#envelopeDefinition) or by checking the Connect notification.",
            "type": "string"
          },
          "attachmentsUri": {
            "description": "",
            "type": "string"
          },
          "authoritativeCopy": {
            "description": "Specifies whether all documents in this envelope are authoritative copies.\nA document can set its own `authoritativeCopy` property to override this value. For example you can set the `authoritativeCopy` on an envelope level to true but can turn it off for a specific document. ",
            "type": "string"
          },
          "authoritativeCopyDefault": {
            "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When set to **true**, autonavigation is set for the recipient.",
            "type": "string"
          },
          "brandId": {
            "description": "The unique identifier of a brand.",
            "type": "string"
          },
          "brandLock": {
            "description": "",
            "type": "string"
          },
          "certificateUri": {
            "description": "Retrieves a URI for an endpoint allowing you to easily retrieve certificate information.",
            "type": "string"
          },
          "completedDateTime": {
            "description": "Specifies the date and time this item was completed.",
            "type": "string"
          },
          "copyRecipientData": {
            "description": "",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "customFields": {
            "$ref": "#/components/schemas/AccountCustomFields"
          },
          "customFieldsUri": {
            "description": "Contains a URI for an endpoint to retrieve the custom fields.",
            "type": "string"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "deletedDateTime": {
            "description": "Specifies the data and time the item was deleted.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "disableResponsiveDocument": {
            "description": "",
            "type": "string"
          },
          "documentsCombinedUri": {
            "description": "",
            "type": "string"
          },
          "documentsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the documents.",
            "type": "string"
          },
          "emailBlurb": {
            "description": "",
            "type": "string"
          },
          "emailSettings": {
            "$ref": "#/components/schemas/emailSettings"
          },
          "emailSubject": {
            "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
            "type": "string"
          },
          "enableWetSign": {
            "description": "When set to **true**, the signer is allowed to print the document and sign it on paper.",
            "type": "string"
          },
          "enforceSignerVisibility": {
            "description": "When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\n###### Note: Your account must have Document Visibility enabled to use this.",
            "type": "string"
          },
          "envelopeId": {
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "type": "string"
          },
          "envelopeIdStamping": {
            "description": "When set to **true**, Envelope ID Stamping is enabled.",
            "type": "string"
          },
          "envelopeUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
            "type": "string"
          },
          "initialSentDateTime": {
            "description": "",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "When set to **true**, indicates that this module is enabled on the account.",
            "type": "string"
          },
          "isSignatureProviderEnvelope": {
            "description": "",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time the item was last modified.",
            "type": "string"
          },
          "lockInformation": {
            "$ref": "#/components/schemas/EnvelopeLocks"
          },
          "messageLock": {
            "description": "When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
            "type": "string"
          },
          "notification": {
            "$ref": "#/components/schemas/notification"
          },
          "notificationUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the notifications.",
            "type": "string"
          },
          "purgeState": {
            "description": "Shows the current purge state for the envelope. The possible values are:\n\n* `unpurged`: There has been no successful request to purge documents.\n* `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.\n* `documents_dequeued`: The envelope documents have been taken out of the purge queue.\n* `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.\n* `documents_purged`: The envelope documents have been successfully purged.\n* `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.\n\n",
            "type": "string"
          },
          "recipients": {
            "$ref": "#/components/schemas/EnvelopeRecipients"
          },
          "recipientsLock": {
            "description": "When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
            "type": "string"
          },
          "recipientsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
            "type": "string"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signerCanSignOnMobile": {
            "description": "",
            "type": "string"
          },
          "signingLocation": {
            "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.",
            "type": "string"
          },
          "status": {
            "description": "Item status. <!-- TODO -->",
            "type": "string"
          },
          "statusChangedDateTime": {
            "description": "The data and time the status changed.",
            "type": "string"
          },
          "templatesUri": {
            "description": "Contains a URI for an endpoint which you can use to retrieve the templates.",
            "type": "string"
          },
          "transactionId": {
            "description": "Specifies the Transaction ID from the AppStore.",
            "type": "string"
          },
          "useDisclosure": {
            "description": "When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
            "type": "string"
          },
          "voidedDateTime": {
            "description": "The date and time the envelope or template was voided.",
            "type": "string"
          },
          "voidedReason": {
            "description": "The reason the envelope or template was voided.",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeAttachment": {
        "type": "object",
        "properties": {
          "accessControl": {
            "description": "",
            "type": "string"
          },
          "attachmentId": {
            "description": "",
            "type": "string"
          },
          "attachmentType": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "label": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeAttachmentsRequest": {
        "type": "object",
        "properties": {
          "attachments": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/attachment"
            }
          }
        },
        "description": ""
      },
      "envelopeAttachmentsResult": {
        "type": "object",
        "properties": {
          "attachments": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeAttachment"
            }
          }
        },
        "description": ""
      },
      "envelopeAuditEvent": {
        "type": "object",
        "properties": {
          "eventFields": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          }
        },
        "description": ""
      },
      "envelopeAuditEventResponse": {
        "type": "object",
        "properties": {
          "auditEvents": {
            "description": "Reserved: TBD",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeAuditEvent"
            }
          }
        },
        "description": ""
      },
      "envelopeDefinition": {
        "type": "object",
        "properties": {
          "accessibility": {
            "description": "Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account. \n\n###### Note: This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.",
            "type": "string"
          },
          "allowMarkup": {
            "description": "When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this",
            "type": "string"
          },
          "allowReassign": {
            "description": "When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.",
            "type": "string"
          },
          "allowRecipientRecursion": {
            "description": "When set to **true**, this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.",
            "type": "string"
          },
          "allowViewHistory": {
            "description": "",
            "type": "string"
          },
          "asynchronous": {
            "description": "When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed. \n\n\n**Note**: A `transactionId` is required for this call to work correctly. When the envelope is created, the status is 'Processing' and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query using the [transactionId](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#envelopeDefinition) or by checking the Connect notification.",
            "type": "string"
          },
          "attachments": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/attachment"
            }
          },
          "attachmentsUri": {
            "description": "",
            "type": "string"
          },
          "authoritativeCopy": {
            "description": "Specifies whether all documents in this envelope are authoritative copies.\nA document can set its own `authoritativeCopy` property to override this value. For example you can set the `authoritativeCopy` on an envelope level to true but can turn it off for a specific document. ",
            "type": "string"
          },
          "authoritativeCopyDefault": {
            "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When set to **true**, autonavigation is set for the recipient.",
            "type": "string"
          },
          "brandId": {
            "description": "This sets the brand profile format used for the envelope. The value in the string is the brandId associated with the profile. Account branding must be enabled for the account to use this option.",
            "type": "string"
          },
          "brandLock": {
            "description": "",
            "type": "string"
          },
          "certificateUri": {
            "description": "Retrieves a URI for an endpoint allowing you to easily retrieve certificate information.",
            "type": "string"
          },
          "completedDateTime": {
            "description": "Specifies the date and time this item was completed.",
            "type": "string"
          },
          "compositeTemplates": {
            "description": "A complex type that can be added to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/compositeTemplate"
            }
          },
          "copyRecipientData": {
            "description": "",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "customFields": {
            "$ref": "#/components/schemas/AccountCustomFields"
          },
          "customFieldsUri": {
            "description": "Contains a URI for an endpoint to retrieve the custom fields.",
            "type": "string"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "deletedDateTime": {
            "description": "Specifies the data and time the item was deleted.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "disableResponsiveDocument": {
            "description": "",
            "type": "string"
          },
          "documents": {
            "description": "Complex element contains the details on the documents in the envelope.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/document"
            }
          },
          "documentsCombinedUri": {
            "description": "",
            "type": "string"
          },
          "documentsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the documents.",
            "type": "string"
          },
          "emailBlurb": {
            "description": "Optional element. This is the same as the email body. If specified it is included in email body for all envelope recipients. This can be a maximum of 10000 characters",
            "type": "string"
          },
          "emailSettings": {
            "$ref": "#/components/schemas/emailSettings"
          },
          "emailSubject": {
            "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
            "type": "string"
          },
          "enableWetSign": {
            "description": "When set to **true**, the signer is allowed to print the document and sign it on paper.",
            "type": "string"
          },
          "enforceSignerVisibility": {
            "description": "When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\n###### Note: Your account must have Document Visibility enabled to use this.",
            "type": "string"
          },
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "envelopeIdStamping": {
            "description": "When set to **true**, Envelope ID Stamping is enabled.",
            "type": "string"
          },
          "envelopeUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
            "type": "string"
          },
          "eventNotification": {
            "$ref": "#/components/schemas/eventNotification"
          },
          "initialSentDateTime": {
            "description": "",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "When set to **true**, indicates that this module is enabled on the account.",
            "type": "string"
          },
          "isSignatureProviderEnvelope": {
            "description": "",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time the item was last modified.",
            "type": "string"
          },
          "lockInformation": {
            "$ref": "#/components/schemas/EnvelopeLocks"
          },
          "messageLock": {
            "description": "When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
            "type": "string"
          },
          "notification": {
            "$ref": "#/components/schemas/notification"
          },
          "notificationUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the notifications.",
            "type": "string"
          },
          "password": {
            "description": "",
            "type": "string"
          },
          "purgeState": {
            "description": "Initiates a purge request. Valid values are:\n* documents_queued - Places envelope documents in the purge queue.\n* documents_and_metadata_queued - Places envelope documents and metadata in the purge queue.\n",
            "type": "string"
          },
          "recipients": {
            "$ref": "#/components/schemas/EnvelopeRecipients"
          },
          "recipientsLock": {
            "description": "When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
            "type": "string"
          },
          "recipientsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
            "type": "string"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signerCanSignOnMobile": {
            "description": "",
            "type": "string"
          },
          "signingLocation": {
            "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusChangedDateTime": {
            "description": "The data and time the status changed.",
            "type": "string"
          },
          "templateId": {
            "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
            "type": "string"
          },
          "templateRoles": {
            "description": "Specifies the template recipients. Each roleName in the template must have a recipient assigned to it. This is made up by the following elements:\n\n* email - The recipient's email address.\n* name - The recipient's name.\n* roleName - The template roleName associated with the recipient.\n* clientUserId - Optional, this sets if the signer is This specifies if the recipient is embedded or remote. If the clientUserId is not null then the recipient is embedded. Note that if a ClientUserId is used and the account settings SignerMustHaveAccount or SignerMustLoginToSign are true, an error is generated on sending.\n* defaultRecipient - Optional, When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.\n* routingOrder - This specifies the routing order of the recipient in the envelope.\n* accessCode - This optional element specifies the access code a recipient has to enter to validate the identity. This can be a maximum of 50 characters.\n* inPersonSignerName - Optional, if the template role is an in person signer, this is the full legal name of the signer. This can be a maximum of 100 characters.\n* emailNotification - This is an optional complex element that has a role-specific emailSubject, emailBody, and language. It follows the same format as the emailNotification node for Recipients.\n* tabs - This allows the tab values to be specified for matching to tabs in the template.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/templateRole"
            }
          },
          "templatesUri": {
            "description": "Contains a URI for an endpoint which you can use to retrieve the templates.",
            "type": "string"
          },
          "transactionId": {
            "description": " Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
            "type": "string"
          },
          "useDisclosure": {
            "description": "When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
            "type": "string"
          },
          "voidedDateTime": {
            "description": "The date and time the envelope or template was voided.",
            "type": "string"
          },
          "voidedReason": {
            "description": "The reason the envelope or template was voided.",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeDocument": {
        "type": "object",
        "properties": {
          "attachmentTabId": {
            "description": "",
            "type": "string"
          },
          "authoritativeCopy": {
            "description": "Specifies whether all documents in this envelope are authoritative copies.\nA document can set its own `authoritativeCopy` property to override this value. For example you can set the `authoritativeCopy` on an envelope level to true but can turn it off for a specific document. ",
            "type": "string"
          },
          "availableDocumentTypes": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signatureType"
            }
          },
          "containsPdfFormFields": {
            "description": "",
            "type": "string"
          },
          "display": {
            "description": "This string sets the display and behavior properties of\nthe document during signing. The possible values are:\n\n* `modal`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a modal window.\n  This is the recommended value for supplemental documents. \n\n* `download`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a new browser window. \n\n* `inline`<br>\n  The document is shown in the normal signing window.\n  This value is not used with supplemental documents,\n  but is the default value for all other documents.\n",
            "type": "string"
          },
          "documentFields": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "includeInDownload": {
            "description": "When set to **true**,\nthe document is included in the combined document download. \nThe default value is **true**.\n",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "order": {
            "description": "An optional value that sets the direction order used to sort the item list. \n\nValid values are: \n\n* asc = ascending sort order\n* desc = descending sort order ",
            "type": "string"
          },
          "pages": {
            "description": "",
            "type": "string"
          },
          "signerMustAcknowledge": {
            "description": "Sets how the signer interacts with the supplemental document.\nThe possible values are: \n\n*\t`no_interaction`<br>\n  No recipient action is required. \n\n*\t`view`<br>\n  The recipient is required to view the document. \n\n*\t`accept`<br>\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document. \n\n*\t`view_accept`<br>\n  The recipient is required to view and accept the document.  \n\n",
            "type": "string"
          },
          "sizeBytes": {
            "description": "",
            "type": "string"
          },
          "type": {
            "description": "Type of the user. Valid values: type_owner, type_participant.",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeDocumentsResult": {
        "type": "object",
        "properties": {
          "envelopeDocuments": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeDocument"
            }
          },
          "envelopeId": {
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeEvent": {
        "type": "object",
        "properties": {
          "envelopeEventStatusCode": {
            "description": "An envelope status for which your webhook should be called. Values: Draft, Sent, Delivered, Completed, Declined, or Voided.",
            "type": "string"
          },
          "includeDocuments": {
            "description": "reserved",
            "type": "string"
          }
        },
        "description": "For which envelope events should your webhook be called?"
      },
      "envelopeFormData": {
        "type": "object",
        "properties": {
          "emailSubject": {
            "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
            "type": "string"
          },
          "envelopeId": {
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "type": "string"
          },
          "formData": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "recipientFormData": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientFormData"
            }
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "status": {
            "description": "Item status. <!-- TODO -->",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeId": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          }
        },
        "description": "A tab that displays the envelope ID. Recipients cannot enter\nor change the information in this tab.\n"
      },
      "envelopeIdsRequest": {
        "type": "object",
        "properties": {
          "envelopeIds": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "transactionIds": {
            "description": " A list of transaction Id's used to determining the status of envelopes sent asynchronously. See **transactionId** property on envelopes.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": ""
      },
      "envelopeNotificationRequest": {
        "type": "object",
        "properties": {
          "expirations": {
            "$ref": "#/components/schemas/expirations"
          },
          "reminders": {
            "$ref": "#/components/schemas/reminders"
          },
          "useAccountDefaults": {
            "description": "When set to **true**, the account default notification settings are used for the envelope.",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopesInformation": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "description": "",
            "type": "string"
          },
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "envelopes": {
            "description": "Set of envelope information",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelope"
            }
          },
          "envelopeTransactionStatuses": {
            "description": "Array of envelope statuses and transaction Ids in the result set.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeTransactionStatus"
            }
          },
          "lastQueriedDateTime": {
            "description": "",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": "Result set for the Envelopes: listStatusChanges method"
      },
      "envelopeSummary": {
        "type": "object",
        "properties": {
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are: \n\n* completed - The envelope has been completed and all tags have been signed.\n* created - The envelope is created as a draft. It can be modified and sent later.\n* declined - The envelope has been declined by the recipients.\n* delivered - The envelope has been delivered to the recipients.\n* sent - The envelope is sent to the recipients.\n* signed - The envelope has been signed by the recipients.\n* voided - The envelope is no longer valid and recipients cannot access or sign the envelope.\n",
            "type": "string"
          },
          "statusDateTime": {
            "description": "The DateTime that the envelope changed status (i.e. was created or sent.)",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeTemplate": {
        "type": "object",
        "properties": {
          "allowMarkup": {
            "description": "When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this",
            "type": "string"
          },
          "allowReassign": {
            "description": "When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.",
            "type": "string"
          },
          "allowViewHistory": {
            "description": "",
            "type": "string"
          },
          "asynchronous": {
            "description": "When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed. \n\n\n**Note**: A `transactionId` is required for this call to work correctly. When the envelope is created, the status is 'Processing' and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query using the [transactionId](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#envelopeDefinition) or by checking the Connect notification.",
            "type": "string"
          },
          "attachmentsUri": {
            "description": "",
            "type": "string"
          },
          "authoritativeCopy": {
            "description": "Specifies whether all documents in this envelope are authoritative copies.\nA document can set its own `authoritativeCopy` property to override this value. For example you can set the `authoritativeCopy` on an envelope level to true but can turn it off for a specific document. ",
            "type": "string"
          },
          "authoritativeCopyDefault": {
            "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When set to **true**, autonavigation is set for the recipient.",
            "type": "string"
          },
          "brandId": {
            "description": "The unique identifier of a brand.",
            "type": "string"
          },
          "brandLock": {
            "description": "",
            "type": "string"
          },
          "certificateUri": {
            "description": "Retrieves a URI for an endpoint allowing you to easily retrieve certificate information.",
            "type": "string"
          },
          "completedDateTime": {
            "description": "Specifies the date and time this item was completed.",
            "type": "string"
          },
          "copyRecipientData": {
            "description": "",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "customFields": {
            "$ref": "#/components/schemas/AccountCustomFields"
          },
          "customFieldsUri": {
            "description": "Contains a URI for an endpoint to retrieve the custom fields.",
            "type": "string"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "deletedDateTime": {
            "description": "Specifies the data and time the item was deleted.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "disableResponsiveDocument": {
            "description": "",
            "type": "string"
          },
          "documents": {
            "description": "Complex element contains the details on the documents in the envelope.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/document"
            }
          },
          "documentsCombinedUri": {
            "description": "",
            "type": "string"
          },
          "documentsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the documents.",
            "type": "string"
          },
          "emailBlurb": {
            "description": "",
            "type": "string"
          },
          "emailSettings": {
            "$ref": "#/components/schemas/emailSettings"
          },
          "emailSubject": {
            "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
            "type": "string"
          },
          "enableWetSign": {
            "description": "When set to **true**, the signer is allowed to print the document and sign it on paper.",
            "type": "string"
          },
          "enforceSignerVisibility": {
            "description": "When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\n###### Note: Your account must have Document Visibility enabled to use this.",
            "type": "string"
          },
          "envelopeId": {
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "type": "string"
          },
          "envelopeIdStamping": {
            "description": "When set to **true**, Envelope ID Stamping is enabled.",
            "type": "string"
          },
          "envelopeTemplateDefinition": {
            "$ref": "#/components/schemas/envelopeTemplateDefinition"
          },
          "envelopeUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
            "type": "string"
          },
          "initialSentDateTime": {
            "description": "",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "When set to **true**, indicates that this module is enabled on the account.",
            "type": "string"
          },
          "isSignatureProviderEnvelope": {
            "description": "",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time the item was last modified.",
            "type": "string"
          },
          "lockInformation": {
            "$ref": "#/components/schemas/EnvelopeLocks"
          },
          "messageLock": {
            "description": "When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
            "type": "string"
          },
          "notification": {
            "$ref": "#/components/schemas/notification"
          },
          "notificationUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the notifications.",
            "type": "string"
          },
          "purgeState": {
            "description": "Shows the current purge state for the envelope. The possible values are:\n\n* `unpurged`: There has been no successful request to purge documents.\n* `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.\n* `documents_dequeued`: The envelope documents have been taken out of the purge queue.\n* `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.\n* `documents_purged`: The envelope documents have been successfully purged.\n* `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.\n\n",
            "type": "string"
          },
          "recipients": {
            "$ref": "#/components/schemas/EnvelopeRecipients"
          },
          "recipientsLock": {
            "description": "When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
            "type": "string"
          },
          "recipientsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
            "type": "string"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signerCanSignOnMobile": {
            "description": "",
            "type": "string"
          },
          "signingLocation": {
            "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.",
            "type": "string"
          },
          "status": {
            "description": "Item status. <!-- TODO -->",
            "type": "string"
          },
          "statusChangedDateTime": {
            "description": "The data and time the status changed.",
            "type": "string"
          },
          "templatesUri": {
            "description": "Contains a URI for an endpoint which you can use to retrieve the templates.",
            "type": "string"
          },
          "transactionId": {
            "description": "Specifies the Transaction ID from the AppStore.",
            "type": "string"
          },
          "useDisclosure": {
            "description": "When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
            "type": "string"
          },
          "voidedDateTime": {
            "description": "The date and time the envelope or template was voided.",
            "type": "string"
          },
          "voidedReason": {
            "description": "The reason the envelope or template was voided.",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeTemplateDefinition": {
        "description": "A complex element containing the following information:\n\ntemplateId: Unique identifier of the template. If this is not provided, DocuSign will generate a value. \n\nname: Name of the template. Maximum length: 100 characters.\n\nshared: When set to **true**, the template is shared with the Everyone group in the account. If false, the template is only shared with the Administrator group.\n\npassword: Password, if the template is locked.\n\ndescription: Description of the template. Maximum Length: 500 characters.\n\npageCount: Number of document pages in the template.\n\nfolderName: The name of the folder the template is located in.\n\nfolderId: The ID for the folder.\n\nowner: The userName, email, userId, userType, and userStatus for the template owner.",
        "type": "object",
        "properties": {
          "created": {
            "description": "The UTC DateTime when the workspace user authorization was created.",
            "type": "string"
          },
          "description": {
            "description": "A sender-defined description of the line item.\n",
            "type": "string"
          },
          "folderId": {
            "description": "The ID for the folder.",
            "type": "string"
          },
          "folderName": {
            "description": " The name of the folder in which the template is located.",
            "type": "string"
          },
          "folderUri": {
            "description": "The URI of the folder.",
            "type": "string"
          },
          "lastModified": {
            "description": "Utc date and time the comment was last updated (can only be done by creator.)",
            "type": "string"
          },
          "lastModifiedBy": {
            "$ref": "#/components/schemas/userInfo"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "newPassword": {
            "description": "The user's new password.",
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/userInfo"
          },
          "pageCount": {
            "format": "int32",
            "description": "An integer value specifying the number of document pages in the template. Omit this property if not submitting a page count.",
            "type": "integer"
          },
          "parentFolderUri": {
            "description": "",
            "type": "string"
          },
          "password": {
            "description": "",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "templateId": {
            "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          }
        }
      },
      "envelopeTemplateResult": {
        "type": "object",
        "properties": {
          "allowMarkup": {
            "description": "When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this",
            "type": "string"
          },
          "allowReassign": {
            "description": "When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.",
            "type": "string"
          },
          "allowViewHistory": {
            "description": "",
            "type": "string"
          },
          "asynchronous": {
            "description": "When set to **true**, the envelope is queued for processing and the value of the `status` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed. \n\n\n**Note**: A `transactionId` is required for this call to work correctly. When the envelope is created, the status is 'Processing' and an `envelopeId` is not returned in the response. To get the `envelopeId`, use a GET envelope query using the [transactionId](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/create/#envelopeDefinition) or by checking the Connect notification.",
            "type": "string"
          },
          "attachmentsUri": {
            "description": "",
            "type": "string"
          },
          "authoritativeCopy": {
            "description": "Specifies whether all documents in this envelope are authoritative copies.\nA document can set its own `authoritativeCopy` property to override this value. For example you can set the `authoritativeCopy` on an envelope level to true but can turn it off for a specific document. ",
            "type": "string"
          },
          "authoritativeCopyDefault": {
            "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When set to **true**, autonavigation is set for the recipient.",
            "type": "string"
          },
          "brandId": {
            "description": "The unique identifier of a brand.",
            "type": "string"
          },
          "brandLock": {
            "description": "",
            "type": "string"
          },
          "certificateUri": {
            "description": "Retrieves a URI for an endpoint allowing you to easily retrieve certificate information.",
            "type": "string"
          },
          "completedDateTime": {
            "description": "Specifies the date and time this item was completed.",
            "type": "string"
          },
          "copyRecipientData": {
            "description": "",
            "type": "string"
          },
          "created": {
            "description": "The UTC DateTime when the workspace user authorization was created.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "customFields": {
            "$ref": "#/components/schemas/AccountCustomFields"
          },
          "customFieldsUri": {
            "description": "Contains a URI for an endpoint to retrieve the custom fields.",
            "type": "string"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "deletedDateTime": {
            "description": "Specifies the data and time the item was deleted.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "description": {
            "description": "A sender-defined description of the line item.\n",
            "type": "string"
          },
          "disableResponsiveDocument": {
            "description": "",
            "type": "string"
          },
          "documents": {
            "description": "Complex element contains the details on the documents in the envelope.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/document"
            }
          },
          "documentsCombinedUri": {
            "description": "",
            "type": "string"
          },
          "documentsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the documents.",
            "type": "string"
          },
          "emailBlurb": {
            "description": "",
            "type": "string"
          },
          "emailSettings": {
            "$ref": "#/components/schemas/emailSettings"
          },
          "emailSubject": {
            "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
            "type": "string"
          },
          "enableWetSign": {
            "description": "When set to **true**, the signer is allowed to print the document and sign it on paper.",
            "type": "string"
          },
          "enforceSignerVisibility": {
            "description": "When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\n\n###### Note: Your account must have Document Visibility enabled to use this.",
            "type": "string"
          },
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "envelopeIdStamping": {
            "description": "When set to **true**, Envelope ID Stamping is enabled.",
            "type": "string"
          },
          "envelopeUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
            "type": "string"
          },
          "folderId": {
            "description": "The ID of the folder being accessed.",
            "type": "string"
          },
          "folderName": {
            "description": "",
            "type": "string"
          },
          "folderUri": {
            "description": "",
            "type": "string"
          },
          "initialSentDateTime": {
            "description": "",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "When set to **true**, indicates that this module is enabled on the account.",
            "type": "string"
          },
          "isSignatureProviderEnvelope": {
            "description": "",
            "type": "string"
          },
          "lastModified": {
            "description": "Utc date and time the comment was last updated (can only be done by creator.)",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time the item was last modified.",
            "type": "string"
          },
          "lockInformation": {
            "$ref": "#/components/schemas/EnvelopeLocks"
          },
          "messageLock": {
            "description": "When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "notification": {
            "$ref": "#/components/schemas/notification"
          },
          "notificationUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the notifications.",
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/userInfo"
          },
          "pageCount": {
            "format": "int32",
            "description": "",
            "type": "integer"
          },
          "parentFolderUri": {
            "description": "",
            "type": "string"
          },
          "password": {
            "description": "",
            "type": "string"
          },
          "purgeState": {
            "description": "Shows the current purge state for the envelope. The possible values are:\n\n* `unpurged`: There has been no successful request to purge documents.\n* `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.\n* `documents_dequeued`: The envelope documents have been taken out of the purge queue.\n* `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.\n* `documents_purged`: The envelope documents have been successfully purged.\n* `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.\n\n",
            "type": "string"
          },
          "recipients": {
            "$ref": "#/components/schemas/EnvelopeRecipients"
          },
          "recipientsLock": {
            "description": "When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
            "type": "string"
          },
          "recipientsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
            "type": "string"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "signerCanSignOnMobile": {
            "description": "",
            "type": "string"
          },
          "signingLocation": {
            "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusChangedDateTime": {
            "description": "The data and time the status changed.",
            "type": "string"
          },
          "templateId": {
            "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
            "type": "string"
          },
          "templatesUri": {
            "description": "Contains a URI for an endpoint which you can use to retrieve the templates.",
            "type": "string"
          },
          "transactionId": {
            "description": " Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          },
          "useDisclosure": {
            "description": "When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
            "type": "string"
          },
          "voidedDateTime": {
            "description": "The date and time the envelope or template was voided.",
            "type": "string"
          },
          "voidedReason": {
            "description": "The reason the envelope or template was voided.",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeTemplateResults": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "envelopeTemplates": {
            "description": "The list of requested templates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeTemplateResult"
            }
          },
          "folders": {
            "description": "A collection of folder objects returned in a response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/folder"
            }
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeTransactionStatus": {
        "type": "object",
        "properties": {
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "transactionId": {
            "description": " Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
            "type": "string"
          }
        },
        "description": ""
      },
      "envelopeUpdateSummary": {
        "type": "object",
        "properties": {
          "bulkEnvelopeStatus": {
            "$ref": "#/components/schemas/bulkEnvelopeStatus"
          },
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "listCustomFieldUpdateResults": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/listCustomField"
            }
          },
          "lockInformation": {
            "$ref": "#/components/schemas/EnvelopeLocks"
          },
          "recipientUpdateResults": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientUpdateResponse"
            }
          },
          "tabUpdateResults": {
            "$ref": "#/components/schemas/EnvelopeRecipientTabs"
          },
          "textCustomFieldUpdateResults": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/textCustomField"
            }
          }
        },
        "description": ""
      },
      "errorDetails": {
        "description": "This object describes errors that occur. It is only valid for responses, and ignored in requests.",
        "type": "object",
        "properties": {
          "errorCode": {
            "description": "An error code associated with the error.",
            "type": "string"
          },
          "message": {
            "description": "A short error message.",
            "type": "string"
          }
        }
      },
      "eventNotification": {
        "description": "Register a Connect webhook for a specific envelope",
        "type": "object",
        "properties": {
          "envelopeEvents": {
            "description": "A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `url` property. \n\nTo receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeEvent"
            }
          },
          "includeCertificateOfCompletion": {
            "description": "When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes. ",
            "type": "string"
          },
          "includeCertificateWithSoap": {
            "description": "When set to **true**, the Connect service will digitally sign the XML data. The signature will be included in the XML message.",
            "type": "string"
          },
          "includeDocumentFields": {
            "description": "When set to **true**, the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API. ",
            "type": "string"
          },
          "includeDocuments": {
            "description": "When set to **true**, the XML webhook messages will include the envelope's PDF documents. Including the PDF documents will greatly increase the size of the notification messages. Ensure that your listener can handle incoming messages that are 25MB or larger. ",
            "type": "string"
          },
          "includeEnvelopeVoidReason": {
            "description": "When set to **true**, if the envelope is voided, the Connect Service notification will include the void reason, as entered by the person that voided the envelope. ",
            "type": "string"
          },
          "includeHMAC": {
            "description": "",
            "type": "string"
          },
          "includeSenderAccountAsCustomField": {
            "description": "When set to **true**, Connect will include the sender account as Custom Field in the data.",
            "type": "string"
          },
          "includeTimeZone": {
            "description": "When set to **true**, the envelope's time zone information is included in the webhook messages. ",
            "type": "string"
          },
          "loggingEnabled": {
            "description": "When set to **true**, the webhook messages are logged. They can be viewed on the DocuSign Administration Web Tool in the Connect section. Logged messages can also be downloaded via the [ConnectEvents resource](https://developers.docusign.com/esign-rest-api/reference/Connect/ConnectEvents).",
            "type": "string"
          },
          "recipientEvents": {
            "description": "An array of recipient event statuses that will trigger Connect to send notifications to your webhook listener at the url endpoint specified in the `url` property. \n\nTo receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientEvent"
            }
          },
          "requireAcknowledgment": {
            "description": "When set to **true**, the DocuSign Connect service checks that the message was received and retries on failures. ",
            "type": "string"
          },
          "signMessageWithX509Cert": {
            "description": "When set to **true**, Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer's web server) during the TLS handshake protocol. ",
            "type": "string"
          },
          "soapNameSpace": {
            "description": "The namespace of the SOAP interface.\n\nThe namespace value must be set if useSoapInterface is set to true.",
            "type": "string"
          },
          "url": {
            "description": "The endpoint to which webhook notification messages are sent via an HTTPS POST request. The url must start with https. The customer's web server must use an SSL/TLS certificate whose CA is in the Microsoft list of trusted CAs. Self-signed certificates are not ok. Free certificates from Let's Encrypt can be used.",
            "type": "string"
          },
          "useSoapInterface": {
            "description": "When set to **true**, the notifications are sent to your endpoint as SOAP requests. ",
            "type": "string"
          }
        }
      },
      "eventResult": {
        "type": "object",
        "properties": {
          "eventTimestamp": {
            "description": "",
            "type": "string"
          },
          "failureDescription": {
            "description": "",
            "type": "string"
          },
          "status": {
            "description": "Event status.",
            "type": "string"
          },
          "vendorFailureStatusCode": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "expirations": {
        "description": "A complex element that specifies the expiration settings for the envelope.",
        "type": "object",
        "properties": {
          "expireAfter": {
            "description": "An integer that sets the number of days the envelope is active.",
            "type": "string"
          },
          "expireEnabled": {
            "description": "When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.",
            "type": "string"
          },
          "expireWarn": {
            "description": "An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.",
            "type": "string"
          }
        }
      },
      "externalDocServiceErrorDetails": {
        "type": "object",
        "properties": {
          "authenticationUrl": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "errorCode": {
            "description": "",
            "type": "string"
          },
          "message": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "externalFile": {
        "type": "object",
        "properties": {
          "date": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "img": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "size": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "supported": {
            "description": "",
            "type": "string"
          },
          "type": {
            "description": "Type of the user. Valid values: type_owner, type_participant.",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "externalFolder": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/externalDocServiceErrorDetails"
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "items": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/externalFile"
            }
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "featureSet": {
        "type": "object",
        "properties": {
          "currencyFeatureSetPrices": {
            "description": "A complex type that contains alternate currency values that are configured for this plan feature set.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/currencyFeatureSetPrice"
            }
          },
          "envelopeFee": {
            "description": "",
            "type": "string"
          },
          "featureSetId": {
            "description": "A unique ID for the feature set.",
            "type": "string"
          },
          "fixedFee": {
            "description": "",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "When set to **true**, indicates that this module is enabled on the account.",
            "type": "string"
          },
          "isActive": {
            "description": "",
            "type": "string"
          },
          "isEnabled": {
            "description": "Specifies whether the feature set is actively enabled as part of the plan.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "seatFee": {
            "description": "An incremental seat cost for seat-based plans. Only valid when isEnabled for the feature set is set to true.",
            "type": "string"
          }
        },
        "description": ""
      },
      "fileType": {
        "type": "object",
        "properties": {
          "fileExtension": {
            "description": "",
            "type": "string"
          },
          "mimeType": {
            "description": "The mime-type of a file type listed in a fileTypes collection.",
            "type": "string"
          }
        },
        "description": ""
      },
      "fileTypeList": {
        "type": "object",
        "properties": {
          "fileTypes": {
            "description": "A collection of file types.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fileType"
            }
          }
        },
        "description": ""
      },
      "filter": {
        "type": "object",
        "properties": {
          "actionRequired": {
            "description": "Action required.",
            "type": "string"
          },
          "expires": {
            "description": "",
            "type": "string"
          },
          "folderIds": {
            "description": "",
            "type": "string"
          },
          "fromDateTime": {
            "description": "",
            "type": "string"
          },
          "isTemplate": {
            "description": "",
            "type": "string"
          },
          "order": {
            "description": "An optional value that sets the direction order used to sort the item list. \n\nValid values are: \n\n* asc = ascending sort order\n* desc = descending sort order ",
            "type": "string"
          },
          "orderBy": {
            "description": "",
            "type": "string"
          },
          "searchTarget": {
            "description": "",
            "type": "string"
          },
          "searchText": {
            "description": "",
            "type": "string"
          },
          "status": {
            "description": "Filter status.",
            "type": "string"
          },
          "toDateTime": {
            "description": "Latest date to filter.",
            "type": "string"
          }
        },
        "description": ""
      },
      "firstName": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that displays the recipient's first name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n"
      },
      "folder": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "filter": {
            "$ref": "#/components/schemas/filter"
          },
          "folderId": {
            "description": "The ID of the folder being accessed.",
            "type": "string"
          },
          "folders": {
            "description": "A collection of folder objects returned in a response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/folder"
            }
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "ownerEmail": {
            "description": "",
            "type": "string"
          },
          "ownerUserId": {
            "description": "",
            "type": "string"
          },
          "ownerUserName": {
            "description": "",
            "type": "string"
          },
          "parentFolderId": {
            "description": "",
            "type": "string"
          },
          "parentFolderUri": {
            "description": "",
            "type": "string"
          },
          "type": {
            "description": "Type of the user. Valid values: type_owner, type_participant.",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "folderItem": {
        "type": "object",
        "properties": {
          "completedDateTime": {
            "description": "Specifies the date and time this item was completed.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/customField_v2"
            }
          },
          "description": {
            "description": "A sender-defined description of the line item.\n",
            "type": "string"
          },
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "envelopeUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "When set to **true**, indicates that this module is enabled on the account.",
            "type": "string"
          },
          "isSignatureProviderEnvelope": {
            "description": "",
            "type": "string"
          },
          "lastModified": {
            "description": "Utc date and time the comment was last updated (can only be done by creator.)",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "ownerName": {
            "description": "Name of the envelope owner.",
            "type": "string"
          },
          "pageCount": {
            "format": "int32",
            "description": "",
            "type": "integer"
          },
          "password": {
            "description": "",
            "type": "string"
          },
          "senderEmail": {
            "description": "",
            "type": "string"
          },
          "senderName": {
            "description": "Name of the envelope sender.",
            "type": "string"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Item status. <!-- TODO -->",
            "type": "string"
          },
          "subject": {
            "description": "",
            "type": "string"
          },
          "templateId": {
            "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "folderItem_v2": {
        "type": "object",
        "properties": {
          "completedDateTime": {
            "description": "Specifies the date and time this item was completed.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "envelopeUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.",
            "type": "string"
          },
          "expireDateTime": {
            "description": "The date and time the envelope is set to expire.",
            "type": "string"
          },
          "folderId": {
            "description": "The ID of the folder being accessed.",
            "type": "string"
          },
          "folderUri": {
            "description": "",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "When set to **true**, indicates that this module is enabled on the account.",
            "type": "string"
          },
          "isSignatureProviderEnvelope": {
            "description": "",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time the item was last modified.",
            "type": "string"
          },
          "ownerName": {
            "description": "",
            "type": "string"
          },
          "recipients": {
            "$ref": "#/components/schemas/EnvelopeRecipients"
          },
          "recipientsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
            "type": "string"
          },
          "senderCompany": {
            "description": "",
            "type": "string"
          },
          "senderEmail": {
            "description": "",
            "type": "string"
          },
          "senderName": {
            "description": "",
            "type": "string"
          },
          "senderUserId": {
            "description": "",
            "type": "string"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "status": {
            "description": "Item status. <!-- TODO -->",
            "type": "string"
          },
          "subject": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "folderItemResponse": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "folderItems": {
            "description": "A list of the envelopes in the specified folder or folders. ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/folderItem_v2"
            }
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalRows": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "folderItemsResponse": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "folderItems": {
            "description": "A list of the envelopes in the specified folder or folders. ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/folderItem"
            }
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "foldersRequest": {
        "type": "object",
        "properties": {
          "envelopeIds": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fromFolderId": {
            "description": " The folder ID the envelope is being moved from.",
            "type": "string"
          }
        },
        "description": ""
      },
      "foldersResponse": {
        "type": "object",
        "properties": {
          "folders": {
            "description": "A collection of folder objects returned in a response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/folder"
            }
          }
        },
        "description": ""
      },
      "forgottenPasswordInformation": {
        "description": "A complex element that has up to four Question/Answer pairs for forgotten password information.",
        "type": "object",
        "properties": {
          "forgottenPasswordAnswer1": {
            "description": "The answer to the first forgotten password challenge question.",
            "type": "string"
          },
          "forgottenPasswordAnswer2": {
            "description": "The answer to the second forgotten password challenge question.",
            "type": "string"
          },
          "forgottenPasswordAnswer3": {
            "description": "The answer to the third forgotten password challenge question.",
            "type": "string"
          },
          "forgottenPasswordAnswer4": {
            "description": "The answer to the fourth forgotten password challenge question.",
            "type": "string"
          },
          "forgottenPasswordQuestion1": {
            "description": "The first challenge question presented to a user who has forgotten their password.",
            "type": "string"
          },
          "forgottenPasswordQuestion2": {
            "description": "The second challenge question presented to a user who has forgotten their password.",
            "type": "string"
          },
          "forgottenPasswordQuestion3": {
            "description": "The third challenge question presented to a user who has forgotten their password.",
            "type": "string"
          },
          "forgottenPasswordQuestion4": {
            "description": "The fourth challenge question presented to a user who has forgotten their password.",
            "type": "string"
          }
        }
      },
      "formulaTab": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "concealValueOnDocument": {
            "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "disableAutoSize": {
            "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "formula": {
            "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n",
            "type": "string"
          },
          "hidden": {
            "description": "If this is a regular formula (no `paymentDetails` property is present):\n\n* **true**: The tab is hidden.\n* **false**: The tab is shown.\n\nIf the formula is payment item (a `paymentDetails` property is present):\n\n* **true**: The tab is displayed as a payment.\n* **false**: The tab is displayed as a regular formula.\n",
            "type": "string"
          },
          "isPaymentAmount": {
            "description": "When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number. ",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "maxLength": {
            "format": "int32",
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "integer"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "paymentDetails": {
            "$ref": "#/components/schemas/paymentDetails"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "requireAll": {
            "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "roundDecimalPlaces": {
            "description": "",
            "type": "string"
          },
          "senderRequired": {
            "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationPattern": {
            "description": "A regular expressionn used to validate input for the tab.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+35, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+35, -2)\n",
            "type": "string"
          }
        },
        "description": "The value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n"
      },
      "fullName": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that displays the recipient's full name.\n"
      },
      "group": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "groupId": {
            "description": "The DocuSign group ID for the group.",
            "type": "string"
          },
          "groupName": {
            "description": "The name of the group.",
            "type": "string"
          },
          "groupType": {
            "description": "The group type.",
            "type": "string"
          },
          "permissionProfileId": {
            "description": "The ID of the permission profile associated with the group.",
            "type": "string"
          },
          "users": {
            "description": "List of users in the group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          }
        },
        "description": "Information about groups."
      },
      "groupInformation": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "groups": {
            "description": "A collection group objects containing information about the groups returned.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/group"
            }
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "idCheckInformationInput": {
        "description": "A complex element that contains input information related to a recipient ID check. It can include the following information.\n\naddressInformationInput: Used to set recipient address information and consists of:\n\n* addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\n\ndobInformationInput: Used to set recipient date of birth information and consists of:\n\n* dateOfBirth: Specifies the recipient's date, month and year of birth.\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\n\nssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:\n\n* ssn4: Specifies the last four digits of the recipient's SSN.\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\n\nssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: \n* ssn9: Specifies the recipient's SSN.\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.",
        "type": "object",
        "properties": {
          "addressInformationInput": {
            "$ref": "#/components/schemas/addressInformationInput"
          },
          "dobInformationInput": {
            "$ref": "#/components/schemas/dobInformationInput"
          },
          "ssn4InformationInput": {
            "$ref": "#/components/schemas/ssn4InformationInput"
          },
          "ssn9InformationInput": {
            "$ref": "#/components/schemas/ssn9InformationInput"
          }
        }
      },
      "initialHere": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "Specifies the tool tip text for the tab.",
            "type": "string"
          },
          "optional": {
            "description": "",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "scaleValue": {
            "format": "float",
            "description": " Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.",
            "type": "number"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+2, -23)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+2, -23)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient to initial the document. May\nbe optional.\n"
      },
      "inlineTemplate": {
        "type": "object",
        "properties": {
          "customFields": {
            "$ref": "#/components/schemas/AccountCustomFields"
          },
          "documents": {
            "description": "Complex element contains the details on the documents in the envelope.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/document"
            }
          },
          "envelope": {
            "$ref": "#/components/schemas/envelope"
          },
          "recipients": {
            "$ref": "#/components/schemas/EnvelopeRecipients"
          },
          "sequence": {
            "description": "Specifies the order in which templates are overlaid.",
            "type": "string"
          }
        },
        "description": ""
      },
      "inPersonSigner": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "addAccessCodeToEmail": {
            "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When set to **true**, autonavigation is set for the recipient.",
            "type": "string"
          },
          "canSignOffline": {
            "description": "When set to **true**, specifies that the signer can perform the signing ceremony offline.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "creationReason": {
            "description": "The reason why the recipient was created (for example, `sender`). Read only.",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. Read only.",
            "type": "string"
          },
          "defaultRecipient": {
            "description": "When set to **true**,\nthis is the default recipient for the envelope.\nThis option is used when creating an envelope from a template.\n",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          },
          "email": {
            "description": "The signer's email address in an eNotary flow.\n\nUse only when `inPersonSigningType` is `notary`.\nFor regular in-person-signer flow, use `signerEmail` instead.\n",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "hostEmail": {
            "description": "The email address of the signing host.\nThis is the DocuSign user that is hosting the in-person signing session.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `email` instead.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "hostName": {
            "description": "The name of the signing host.\nThis is the DocuSign user that is hosting the in-person signing session.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `name` instead.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckInformationInput": {
            "$ref": "#/components/schemas/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/components/schemas/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "inPersonSigningType": {
            "description": "Specifies whether the envelope uses the eNotary feature.\nValid values:\n\n* `inPersonSigner` The envelope uses the normal in-person signing flow.\n* `notary`: The envelope uses the eNotary in-person signing flow.\n",
            "type": "string"
          },
          "name": {
            "description": "The signer's full legal name in an eNotary flow.\n\nRequired when `inPersonSigningType` is `notary`.\nFor regular in-person-signer flow, use `signerName` instead.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "notaryHost": {
            "$ref": "#/components/schemas/notaryHost"
          },
          "note": {
            "description": "A note sent to the in-person signer in the signing email.\nThis note is visible only to this recipient.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/components/schemas/recipientPhoneAuthentication"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientAttachment"
            }
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/components/schemas/authenticationStatus"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. Read only.",
            "type": "string"
          },
          "recipientSignatureProviders": {
            "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientSignatureProvider"
            }
          },
          "recipientSuppliesTabs": {
            "description": "When set to **true**, specifies that the recipient creates the tabs.",
            "type": "string"
          },
          "requireIdLookup": {
            "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireSignerCertificate": {
            "description": "By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\n\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.",
            "type": "string"
          },
          "requireSignOnPaper": {
            "description": "When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "samlAuthentication": {
            "$ref": "#/components/schemas/recipientSAMLAuthentication"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signatureInfo": {
            "$ref": "#/components/schemas/recipientSignatureInformation"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signerEmail": {
            "description": "The in-person signer's email address.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `email` instead.\n\nMaximum Length: 100 characters.\n\n",
            "type": "string"
          },
          "signerName": {
            "description": "The in-person signer's full legal name.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `name` instead.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "signInEachLocation": {
            "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
            "type": "string"
          },
          "signingGroupId": {
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "type": "string"
          },
          "signingGroupName": {
            "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          },
          "smsAuthentication": {
            "$ref": "#/components/schemas/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": " Lists the social ID type that can be used for recipient authentication.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAuthentication"
            }
          },
          "status": {
            "description": "Recipient status.\n<!-- todo -->\n",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/components/schemas/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. Read only.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          }
        },
        "description": "An in-person recipient is a DocuSign user,\nacting as a Signing Host,\nwho is in the same physical location as the signer.\nTo learn about fields used\nfor eNotary feature,\nsee the [EnvelopeRecipients resource][enveloperecipientsInPerson].\n\n[enveloperecipientsInPerson]: /https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipients/#in-person-signers-recipient\n"
      },
      "integratedUserInfoList": {
        "type": "object",
        "properties": {
          "allUsersSelected": {
            "description": "",
            "type": "string"
          },
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          },
          "users": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          }
        },
        "description": ""
      },
      "intermediary": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "addAccessCodeToEmail": {
            "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. Read only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          },
          "email": {
            "description": "Email id of the recipient. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckInformationInput": {
            "$ref": "#/components/schemas/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/components/schemas/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/components/schemas/recipientPhoneAuthentication"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientAttachment"
            }
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/components/schemas/authenticationStatus"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. Read only.",
            "type": "string"
          },
          "requireIdLookup": {
            "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "samlAuthentication": {
            "$ref": "#/components/schemas/recipientSAMLAuthentication"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).",
            "type": "string"
          },
          "signingGroupName": {
            "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          },
          "smsAuthentication": {
            "$ref": "#/components/schemas/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": " Lists the social ID type that can be used for recipient authentication.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAuthentication"
            }
          },
          "status": {
            "description": "Recipient status.\n<!-- todo -->\n",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. Read only.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          }
        },
        "description": ""
      },
      "jurisdiction": {
        "type": "object",
        "properties": {
          "allowSystemCreatedSeal": {
            "description": "",
            "type": "string"
          },
          "allowUserUploadedSeal": {
            "description": "",
            "type": "string"
          },
          "commissionIdInSeal": {
            "description": "",
            "type": "string"
          },
          "county": {
            "description": "",
            "type": "string"
          },
          "countyInSeal": {
            "description": "",
            "type": "string"
          },
          "enabled": {
            "description": "",
            "type": "string"
          },
          "jurisdictionId": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "notaryPublicInSeal": {
            "description": "",
            "type": "string"
          },
          "stateNameInSeal": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "lastName": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that displays the recipient's last name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n"
      },
      "list": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "listItems": {
            "description": "The list of values that can be selected by senders. The list values are separated by semi-colons. Example: [one;two;three;four]\n\nMaximum Length of listItems:  2048 characters.\nMaximum Length of items in the list: 100 characters. \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/listItem"
            }
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "requireAll": {
            "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "senderRequired": {
            "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "value": {
            "description": "The value to use when the item is selected.",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "This tab offers a list of options to choose from.\nThe `listItems`\nproperty contains a list of\n[`listItem`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/listItem)\nobjects to specify the selectable options.\n"
      },
      "listCustomField": {
        "type": "object",
        "properties": {
          "configurationType": {
            "description": "If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "fieldId": {
            "description": "An ID used to specify a custom field.",
            "type": "string"
          },
          "listItems": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "description": "The name of the custom field.",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "show": {
            "description": "A boolean indicating if the value should be displayed.  If this value is set to **true**, the custom field is displayed at the top of the certificate of completion. If this value is left blank/ or set to **false**, then it does not appear in the certificate of completion. ",
            "type": "string"
          },
          "value": {
            "description": "The value of the custom field.\n\nMaximum Length: 100 characters.",
            "type": "string"
          }
        },
        "description": ""
      },
      "listItem": {
        "type": "object",
        "properties": {
          "selected": {
            "description": "When set to **true**, indicates that this item is the default selection shown to a signer. \n\nOnly one selection can be set as the default.",
            "type": "string"
          },
          "text": {
            "description": "Specifies the text that is shown in the dropdown list. ",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value that is used when the list item is selected.",
            "type": "string"
          }
        },
        "description": "One of the selectable items\nin the `listItems` property\nof a [`list`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/list) tab."
      },
      "lockInformation": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "lockDurationInSeconds": {
            "description": "The number of seconds to lock the envelope for editing.  Must be greater than 0 seconds.",
            "type": "string"
          },
          "lockedByApp": {
            "description": "A friendly name of the application used to lock the envelope.  Will be used in error messages to the user when lock conflicts occur.",
            "type": "string"
          },
          "lockedByUser": {
            "$ref": "#/components/schemas/userInfo"
          },
          "lockedUntilDateTime": {
            "description": "The datetime until the envelope lock expires.",
            "type": "string"
          },
          "lockToken": {
            "description": "A unique identifier provided to the owner of the envelope lock.   Used to prove ownership of the lock.",
            "type": "string"
          },
          "lockType": {
            "description": "The type of envelope lock.  Currently \"edit\" is the only supported type.",
            "type": "string"
          },
          "useScratchPad": {
            "description": "Reserved for future use.\n\nIndicates whether a scratchpad is used for editing information.\n ",
            "type": "string"
          }
        },
        "description": ""
      },
      "lockRequest": {
        "type": "object",
        "properties": {
          "lockDurationInSeconds": {
            "description": "The number of seconds to lock the envelope for editing.  Must be greater than 0 seconds.",
            "type": "string"
          },
          "lockedByApp": {
            "description": "A friendly name of the application used to lock the envelope.  Will be used in error messages to the user when lock conflicts occur.",
            "type": "string"
          },
          "lockType": {
            "description": "The type of envelope lock.  Currently \"edit\" is the only supported type.",
            "type": "string"
          },
          "templatePassword": {
            "description": "",
            "type": "string"
          },
          "useScratchPad": {
            "description": "Reserved for future use.\n\nIndicates whether a scratchpad is used for editing information.\n ",
            "type": "string"
          }
        },
        "description": ""
      },
      "loginAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "description": "The account ID associated with the envelope.",
            "type": "string"
          },
          "accountIdGuid": {
            "description": "The GUID associated with the account ID.",
            "type": "string"
          },
          "baseUrl": {
            "description": "The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.",
            "type": "string"
          },
          "email": {
            "description": "The email address for the user.",
            "type": "string"
          },
          "isDefault": {
            "description": "This value is true if this is the default account for the user, otherwise false is returned.",
            "type": "string"
          },
          "loginAccountSettings": {
            "description": "A list of settings on the acccount that indicate what features are available.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "loginUserSettings": {
            "description": "A list of user-level settings that indicate what user-specific features are available.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "name": {
            "description": "The name associated with the account.",
            "type": "string"
          },
          "siteDescription": {
            "description": "An optional descirption of the site that hosts the account.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          },
          "userName": {
            "description": "The name of this user as defined by the account.",
            "type": "string"
          }
        },
        "description": ""
      },
      "loginInformation": {
        "type": "object",
        "properties": {
          "apiPassword": {
            "description": "Contains a token that can be used for authentication in API calls instead of using the user name and password.",
            "type": "string"
          },
          "loginAccounts": {
            "description": "The list of accounts that authenticating user is a member of.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/loginAccount"
            }
          }
        },
        "description": ""
      },
      "matchBox": {
        "type": "object",
        "properties": {
          "height": {
            "format": "int32",
            "description": "Height of the tab in pixels.",
            "type": "integer"
          },
          "pageNumber": {
            "format": "int32",
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "integer"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "format": "int32",
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "integer"
          },
          "yPosition": {
            "format": "int32",
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "integer"
          }
        },
        "description": ""
      },
      "memberGroupSharedItem": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "group": {
            "$ref": "#/components/schemas/group"
          },
          "shared": {
            "description": "How the item is shared. One of:\n\n\n- `not_shared`: The item is not shared.\n\n- `shared_to`: The item is shared.",
            "type": "string"
          }
        },
        "description": "Information about items shared among groups."
      },
      "memberSharedItems": {
        "type": "object",
        "properties": {
          "envelopes": {
            "description": "List of information about shared envelopes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sharedItem"
            }
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "templates": {
            "description": "List of information about shared templates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/templateSharedItem"
            }
          },
          "user": {
            "$ref": "#/components/schemas/userInfo"
          }
        },
        "description": "Information about shared items."
      },
      "mergeField": {
        "description": "Contains information for transfering values between Salesforce data fields and DocuSign Tabs.",
        "type": "object",
        "properties": {
          "allowSenderToEdit": {
            "description": "When set to **true**, the sender can modify the value of the custom tab during the sending process.",
            "type": "string"
          },
          "configurationType": {
            "description": "If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.",
            "type": "string"
          },
          "path": {
            "description": "Sets the object associated with the custom tab. Currently this is the Salesforce Object.",
            "type": "string"
          },
          "row": {
            "description": "Specifies the row number in a Salesforce table that the merge field value corresponds to.",
            "type": "string"
          },
          "writeBack": {
            "description": "When wet to true, the information entered in the tab automatically updates the related Salesforce data when an envelope is completed.",
            "type": "string"
          }
        }
      },
      "money": {
        "type": "object",
        "properties": {
          "amountInBaseUnit": {
            "description": "The total payment amount\nin the currency's base unit.\nFor example, for USD\nthe base currency is one cent.\n",
            "type": "string"
          },
          "currency": {
            "description": "The three-letter\n[ISO 4217][ISO4217] currency code for the payment.\n\nFor example:\n\n* AUD Australian dollar\n* CAD Canadian dollar\n* EUR Euro\n* GBP Great Britain pound\n* USD United States dollar\n\nThis is a read-only property.\n\n[ISO4217]:          https://en.wikipedia.org/wiki/ISO_4217\n",
            "type": "string"
          },
          "displayAmount": {
            "description": "The payment amount as displayed\nin the `currency`.\n\nFor example, if the payment amount\nis USD 12.59,\nthe `amountInBaseUnit` is 1259 (cents),\nand the displayed amount is `$12.59 USD`.\n\nThis is a read-only property.\n",
            "type": "string"
          }
        },
        "description": "Describes information\nabout the `total` of a payment.\n"
      },
      "nameValue": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "name": {
            "description": "The name or key of a name/value pair.",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "value": {
            "description": "The value field of a name/value pair.",
            "type": "string"
          }
        },
        "description": ""
      },
      "newAccountDefinition": {
        "type": "object",
        "properties": {
          "accountName": {
            "description": "The account name for the new account.",
            "type": "string"
          },
          "accountSettings": {
            "description": "The list of\n[account settings][accountsettings]\nthat determine\nthe features available for the account.\nNote that some features are determined\nby the plan used to create the account and cannot be overridden.\n\n[accountsettings]: https://developers.docusign.com/esign-rest-api/reference/Accounts/Accounts/create/#account-settings\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "addressInformation": {
            "$ref": "#/components/schemas/accountAddress"
          },
          "creditCardInformation": {
            "$ref": "#/components/schemas/creditCardInformation"
          },
          "distributorCode": {
            "description": "The code that identifies the billing plan groups and plans for the new account.",
            "type": "string"
          },
          "distributorPassword": {
            "description": "The password for the distributorCode.",
            "type": "string"
          },
          "envelopePartitionId": {
            "description": "",
            "type": "string"
          },
          "initialUser": {
            "$ref": "#/components/schemas/userInformation"
          },
          "PaymentProcessorInformation": {
            "$ref": "#/components/schemas/paymentProcessorInformation"
          },
          "planInformation": {
            "$ref": "#/components/schemas/planInformation"
          },
          "referralInformation": {
            "$ref": "#/components/schemas/referralInformation"
          },
          "socialAccountInformation": {
            "$ref": "#/components/schemas/socialAccountInformation"
          }
        },
        "description": ""
      },
      "newAccountSummary": {
        "type": "object",
        "properties": {
          "accountId": {
            "description": "The account ID associated with the envelope.",
            "type": "string"
          },
          "accountIdGuid": {
            "description": "The GUID associated with the account ID.",
            "type": "string"
          },
          "accountName": {
            "description": "The account name for the new account.",
            "type": "string"
          },
          "apiPassword": {
            "description": "Contains a token that can be used for authentication in API calls instead of using the user name and password.",
            "type": "string"
          },
          "baseUrl": {
            "description": "The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.",
            "type": "string"
          },
          "billingPlanPreview": {
            "$ref": "#/components/schemas/billingPlanPreview"
          },
          "userId": {
            "description": "Specifies the user ID of the new user.",
            "type": "string"
          }
        },
        "description": ""
      },
      "newUser": {
        "type": "object",
        "properties": {
          "apiPassword": {
            "description": "Contains a token that can be used for authentication in API calls instead of using the user name and password.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "permissionProfileId": {
            "description": "",
            "type": "string"
          },
          "permissionProfileName": {
            "description": "",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          },
          "userId": {
            "description": "Specifies the user ID for the new user.",
            "type": "string"
          },
          "userName": {
            "description": "",
            "type": "string"
          },
          "userStatus": {
            "description": "Status of the user's account. One of:\n\n* ActivationRequired\n* ActivationSent\n* Active\n* Closed\n* Disabled\n",
            "type": "string"
          },
          "membershipId": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "newUsersDefinition": {
        "type": "object",
        "properties": {
          "newUsers": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInformation"
            }
          }
        },
        "description": ""
      },
      "newUsersSummary": {
        "type": "object",
        "properties": {
          "newUsers": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/newUser"
            }
          }
        },
        "description": ""
      },
      "notarize": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "",
            "type": "string"
          },
          "documentId": {
            "description": "The ID of the document being accessed.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "pageNumber": {
            "description": "The page number being accessed.",
            "type": "string"
          },
          "recipientId": {
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          }
        },
        "description": "A tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page."
      },
      "notaryHost": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "addAccessCodeToEmail": {
            "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. Read only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          },
          "email": {
            "description": "The notary's email address.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "hostRecipientId": {
            "description": "",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckInformationInput": {
            "$ref": "#/components/schemas/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/components/schemas/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "name": {
            "description": "The notary's full legal name.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the notary in the signing email.\nThis note is visible only to this notary.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/components/schemas/recipientPhoneAuthentication"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientAttachment"
            }
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/components/schemas/authenticationStatus"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. Read only.",
            "type": "string"
          },
          "requireIdLookup": {
            "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "samlAuthentication": {
            "$ref": "#/components/schemas/recipientSAMLAuthentication"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "smsAuthentication": {
            "$ref": "#/components/schemas/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": " Lists the social ID type that can be used for recipient authentication.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAuthentication"
            }
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/components/schemas/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. Read only.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          }
        },
        "description": "This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.\n\nIt describes information about the notary host.\nThe following information is required\nwhen using the eNotary in-person signing flow:\n\n* `name`: Specifies the notary's full legal name.\n* `email`: Specifies the notary's email address.\n* `recipientId`: A unique ID number for the notary signing host.\n"
      },
      "notaryJournal": {
        "type": "object",
        "properties": {
          "createdDate": {
            "description": "",
            "type": "string"
          },
          "documentName": {
            "description": "",
            "type": "string"
          },
          "jurisdiction": {
            "$ref": "#/components/schemas/jurisdiction"
          },
          "notaryJournalId": {
            "description": "",
            "type": "string"
          },
          "notaryJournalMetaData": {
            "$ref": "#/components/schemas/notaryJournalMetaData"
          },
          "signerName": {
            "description": "The in-person signer's full legal name.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `name` instead.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          }
        },
        "description": ""
      },
      "notaryJournalCredibleWitness": {
        "type": "object",
        "properties": {
          "address": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "signatureImage": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "notaryJournalList": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "notaryJournals": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notaryJournal"
            }
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "notaryJournalMetaData": {
        "type": "object",
        "properties": {
          "comment": {
            "description": "",
            "type": "string"
          },
          "credibleWitnesses": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notaryJournalCredibleWitness"
            }
          },
          "signatureImage": {
            "description": "",
            "type": "string"
          },
          "signerIdType": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "note": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "height": {
            "format": "int32",
            "description": "Height of the tab in pixels.",
            "type": "integer"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "Specifies the tool tip text for the tab.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that displays additional information, in the form of a\nnote, for the recipient.\n"
      },
      "notification": {
        "description": "A complex element that specifies the notification options for the envelope. It consists of:\n\n* useAccountDefaults - When set to **true**, the account default notification settings are used for the envelope. \n* reminders - A complex element that specifies reminder settings for the envelope. It consists of: \n\n   * reminderEnabled - When set to **true**, a reminder message is sent to the recipient.\n   * reminderDelay - An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. \n   * reminderFrequency - An interger that sets the interval, in days, between reminder emails. \n\n* expirations - A complex element that specifies the expiration settings for the envelope. It consists of:\n\n   * expireEnabled - When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used. \n   * expireAfter - An integer that sets the number of days the envelope is active.\n   * expireWarn - An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.",
        "type": "object",
        "properties": {
          "expirations": {
            "$ref": "#/components/schemas/expirations"
          },
          "reminders": {
            "$ref": "#/components/schemas/reminders"
          },
          "useAccountDefaults": {
            "description": "When set to **true**, the account default notification settings are used for the envelope.",
            "type": "string"
          }
        }
      },
      "number": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "concealValueOnDocument": {
            "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "disableAutoSize": {
            "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "formula": {
            "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n",
            "type": "string"
          },
          "isPaymentAmount": {
            "description": "When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number. ",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "maxLength": {
            "format": "int32",
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "integer"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "Specifies the tool tip text for the tab.",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "requireAll": {
            "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "senderRequired": {
            "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationPattern": {
            "description": "A regular expressionn used to validate input for the tab.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient to enter numbers and decimal\n(.) points.\n"
      },
      "oauthAccess": {
        "type": "object",
        "properties": {
          "access_token": {
            "description": "Access token information.",
            "type": "string"
          },
          "data": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "expires_in": {
            "description": "",
            "type": "string"
          },
          "refresh_token": {
            "description": "",
            "type": "string"
          },
          "scope": {
            "description": "Must be set to \"api\".",
            "type": "string"
          },
          "token_type": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "page": {
        "description": "Description of a page of a document.",
        "type": "object",
        "properties": {
          "dpi": {
            "description": "The number of dots per inch used for the page image.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "height": {
            "description": "Height of the tab in pixels.",
            "type": "string"
          },
          "imageBytes": {
            "description": "",
            "type": "string"
          },
          "mimeType": {
            "description": "",
            "type": "string"
          },
          "pageId": {
            "description": "",
            "type": "string"
          },
          "sequence": {
            "description": "",
            "type": "string"
          },
          "width": {
            "description": "Width of the tab in pixels.",
            "type": "string"
          }
        }
      },
      "pageImages": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "pages": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/page"
            }
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "pageRequest": {
        "type": "object",
        "properties": {
          "password": {
            "description": "",
            "type": "string"
          },
          "rotate": {
            "description": "Sets the direction the page image is rotated. The possible settings are: left or right",
            "type": "string"
          }
        },
        "description": ""
      },
      "paymentDetails": {
        "type": "object",
        "properties": {
          "allowedPaymentMethods": {
            "description": "An array of accepted payment methods:\n\n* `CreditCard`\n* `ApplePay`\n* `AndroidPay`\n* `BankAccount`\n\nFor example, if you only accept credit cards and ACH transfers, you would set this property to:\n\n`'[\"BankAccount\", \"CreditCard\"]'`\n\nDo not specify `BankAccount` (ACH) if you are also using in-person signing.\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "chargeId": {
            "description": "The GUID set by the payment gateway (such as Stripe) that identifies a transaction. The `chargeId` is created when authorizing a payment and must be referenced when completing a payment.",
            "type": "string"
          },
          "currencyCode": {
            "description": "Specifies the three-letter\n[ISO 4217][ISO4217] currency code for the payment.\n\nSupported currencies are:\n\n* AUD Australian dollar\n* CAD Canadian dollar\n* EUR Euro\n* GBP Great Britain pound\n* USD United States dollar\n\nSpecifying any other ISO 4217 code for payments is an error.\n\n[ISO4217]:          https://en.wikipedia.org/wiki/ISO_4217\n",
            "type": "string"
          },
          "customerId": {
            "description": "",
            "type": "string"
          },
          "customMetadata": {
            "description": "",
            "type": "string"
          },
          "customMetadataRequired": {
            "description": "",
            "type": "boolean"
          },
          "gatewayAccountId": {
            "description": "A GUID that identifies the payment gateway\nconnected to the sender's DocuSign account.\n\nThere is no public API\nfor connecting payment gateway accounts\nYou must connect and manage payment gateway accounts\nthrough the DocuSign Admin console\nand through your chosen payment gateway.\n\nYou can get the gateway account ID\nin the Payments section\nof the DocuSign Admin console.\n\n\n[paymentgateways]:  https://support.docusign.com/en/guides/managing-payment-gateways\n",
            "type": "string"
          },
          "gatewayDisplayName": {
            "description": "Display name of the gateway connected to sender's Docusign account.\n\nPossible values are: Stripe, Braintree, Authorize.Net.",
            "type": "string"
          },
          "gatewayName": {
            "description": "Name of the gateway connected to sender's DocuSign account.\n\nPossible values are:\n\n* `Stripe`\n* `Braintree`\n* `AuthorizeDotNet`",
            "type": "string"
          },
          "lineItems": {
            "description": "A payment formula can have\none or more line items\nthat provide detail about\nindividual items in a payment request.\n\nThe list of line items\nare returned as metadata\nto the payment gateway.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentLineItem"
            }
          },
          "paymentOption": {
            "description": "",
            "type": "string"
          },
          "paymentSourceId": {
            "description": "",
            "type": "string"
          },
          "status": {
            "description": "This read-only property describes the status of a payment.\n\n* `new`<br>\n  This is a new payment request.\n  The envelope has been created,\n  but no payment authorizations have been made.\n\n* `auth_complete`<br>\n  A recipient has entered their credit card information,\n  but the envelope has not been completed.\n  The card has not been charged.\n\n* `payment_complete`<br>\n  The recipient's card has been charged.\n\n* `payment_capture_failed`<br>\n  Final charge failed.\n  This can happen when too much time\n  passes between authorizing the payment\n  and completing the document.\n",
            "type": "string"
          },
          "total": {
            "$ref": "#/components/schemas/money"
          }
        },
        "description": "When a formula tab\nhas a `paymentDetails` property,\nthe formula tab\nis a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n"
      },
      "paymentGatewayAccount": {
        "type": "object",
        "properties": {
          "displayName": {
            "description": "",
            "type": "string"
          },
          "paymentGateway": {
            "description": "Payment gateway used by the connected gateway account.\nThis is the name used by the API.\nFor a human-readable version use `paymentGatewayDisplayName`.\n\nPossible values are:\n\n* `Stripe`\n* `Braintree`\n* `AuthorizeDotNet`",
            "type": "string"
          },
          "paymentGatewayAccountId": {
            "description": "A GUID that identifies the payment gateway account. For a human-readable version use `displayName`.",
            "type": "string"
          },
          "paymentGatewayDisplayName": {
            "description": "Display name of the payment gateway used by the connected gateway account.\nThis is the human-readable version of `paymentGateway`.\n\nPossible values are:\n\n* Stripe\n* Braintree\n* Authorize.Net",
            "type": "string"
          }
        },
        "description": ""
      },
      "paymentGatewayAccountsInfo": {
        "type": "object",
        "properties": {
          "paymentGatewayAccounts": {
            "description": "A list of payment gateway accounts.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentGatewayAccount"
            }
          }
        },
        "description": "Holds information about connected payment accounts."
      },
      "paymentLineItem": {
        "type": "object",
        "properties": {
          "amountReference": {
            "description": "This is a the `tabLabel`\nthat specifies the amount paid\nfor the line items.\n\n",
            "type": "string"
          },
          "description": {
            "description": "A sender-defined description of the line item.\n",
            "type": "string"
          },
          "itemCode": {
            "description": "This is the sender-defined\nSKU, inventory number, or other item code\nfor the line item.\n",
            "type": "string"
          },
          "name": {
            "description": "This is a sender-defined\nproduct name, service name,\nor other designation for the line item.\n",
            "type": "string"
          }
        },
        "description": "A line item describes details\nabout an individual line item\nin a payment request.\n\n"
      },
      "paymentProcessorInformation": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/addressInformation"
          },
          "billingAgreementId": {
            "description": "",
            "type": "string"
          },
          "email": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "permissionProfile": {
        "type": "object",
        "properties": {
          "modifiedByUsername": {
            "description": "",
            "type": "string"
          },
          "modifiedDateTime": {
            "description": "",
            "type": "string"
          },
          "permissionProfileId": {
            "description": "",
            "type": "string"
          },
          "permissionProfileName": {
            "description": "",
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/accountRoleSettings"
          },
          "userCount": {
            "description": "",
            "type": "string"
          },
          "users": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInformation"
            }
          }
        },
        "description": ""
      },
      "permissionProfileInformation": {
        "type": "object",
        "properties": {
          "permissionProfiles": {
            "description": "A complex type containing a collection of permission profiles.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/permissionProfile"
            }
          }
        },
        "description": ""
      },
      "planInformation": {
        "description": "An object used to identify the features and attributes of the account being created.",
        "type": "object",
        "properties": {
          "addOns": {
            "description": "Reserved:",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/addOn"
            }
          },
          "currencyCode": {
            "description": "Specifies the ISO currency code for the account.",
            "type": "string"
          },
          "freeTrialDaysOverride": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          },
          "planFeatureSets": {
            "description": "A complex type that sets the feature sets for the account.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/featureSet"
            }
          },
          "planId": {
            "description": "The DocuSign Plan ID for the account.",
            "type": "string"
          },
          "recipientDomains": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientDomain"
            }
          }
        }
      },
      "powerForm": {
        "type": "object",
        "properties": {
          "createdBy": {
            "description": "",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "emailBody": {
            "description": "Specifies the email body of the message sent to the recipient. \n\nMaximum length: 10000 characters. ",
            "type": "string"
          },
          "emailSubject": {
            "description": "Specifies the subject of the email that is sent to all recipients.\n\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.",
            "type": "string"
          },
          "envelopes": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelope"
            }
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "instructions": {
            "description": "",
            "type": "string"
          },
          "isActive": {
            "description": "",
            "type": "string"
          },
          "lastUsed": {
            "description": "",
            "type": "string"
          },
          "limitUseInterval": {
            "description": "",
            "type": "string"
          },
          "limitUseIntervalEnabled": {
            "description": "",
            "type": "string"
          },
          "limitUseIntervalUnits": {
            "description": "",
            "type": "string"
          },
          "maxUseEnabled": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "powerFormId": {
            "description": "",
            "type": "string"
          },
          "powerFormUrl": {
            "description": "",
            "type": "string"
          },
          "recipients": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/powerFormRecipient"
            }
          },
          "senderName": {
            "description": "",
            "type": "string"
          },
          "senderUserId": {
            "description": "",
            "type": "string"
          },
          "signingMode": {
            "description": "",
            "type": "string"
          },
          "templateId": {
            "description": "The ID of the template being accessed.",
            "type": "string"
          },
          "templateName": {
            "description": "",
            "type": "string"
          },
          "timesUsed": {
            "description": "",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          },
          "usesRemaining": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "powerFormFormDataEnvelope": {
        "type": "object",
        "properties": {
          "envelopeId": {
            "description": "The envelope's GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec ",
            "type": "string"
          },
          "recipients": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/powerFormFormDataRecipient"
            }
          }
        },
        "description": ""
      },
      "powerFormFormDataRecipient": {
        "type": "object",
        "properties": {
          "email": {
            "description": "",
            "type": "string"
          },
          "formData": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          }
        },
        "description": ""
      },
      "powerFormRecipient": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeLocked": {
            "description": "",
            "type": "string"
          },
          "accessCodeRequired": {
            "description": "",
            "type": "string"
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "emailLocked": {
            "description": "",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckRequired": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "recipientType": {
            "description": "",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "templateRequiresIdLookup": {
            "description": "",
            "type": "string"
          },
          "userNameLocked": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "powerFormSendersResponse": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "powerFormSenders": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "powerFormsFormDataResponse": {
        "type": "object",
        "properties": {
          "envelopes": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/powerFormFormDataEnvelope"
            }
          }
        },
        "description": ""
      },
      "powerFormsRequest": {
        "type": "object",
        "properties": {
          "powerForms": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/powerForm"
            }
          }
        },
        "description": ""
      },
      "powerFormsResponse": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "powerForms": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/powerForm"
            }
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "propertyMetadata": {
        "type": "object",
        "properties": {
          "options": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rights": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "province": {
        "type": "object",
        "properties": {
          "isoCode": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "provisioningInformation": {
        "type": "object",
        "properties": {
          "defaultConnectionId": {
            "description": "",
            "type": "string"
          },
          "defaultPlanId": {
            "description": "",
            "type": "string"
          },
          "distributorCode": {
            "description": "The code that identifies the billing plan groups and plans for the new account.",
            "type": "string"
          },
          "distributorPassword": {
            "description": "The password for the distributorCode.",
            "type": "string"
          },
          "passwordRuleText": {
            "description": "",
            "type": "string"
          },
          "planPromotionText": {
            "description": "",
            "type": "string"
          },
          "purchaseOrderOrPromAllowed": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "purchasedEnvelopesInformation": {
        "type": "object",
        "properties": {
          "amount": {
            "description": "The total amount of the purchase.",
            "type": "string"
          },
          "appName": {
            "description": "The AppName of the client application.",
            "type": "string"
          },
          "currencyCode": {
            "description": "Specifies the ISO currency code of the purchase. This is based on the ISO 4217 currency code information.",
            "type": "string"
          },
          "platform": {
            "description": "The Platform of the client application",
            "type": "string"
          },
          "productId": {
            "description": "The Product ID from the AppStore.",
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of envelopes to add to the account.",
            "type": "string"
          },
          "receiptData": {
            "description": "The encrypted Base64 encoded receipt data.",
            "type": "string"
          },
          "storeName": {
            "description": "The name of the AppStore.",
            "type": "string"
          },
          "transactionId": {
            "description": "Specifies the Transaction ID from the AppStore.",
            "type": "string"
          }
        },
        "description": ""
      },
      "radio": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "selected": {
            "description": "When set to **true**, the radio button is selected.",
            "type": "string"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          }
        },
        "description": "One of the selectable radio buttons\nin the `radios` property\nof a [`radioGroup`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup) tab.\n"
      },
      "radioGroup": {
        "type": "object",
        "properties": {
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "groupName": {
            "description": "The name of the group. The search_text provided in the call automatically performs a wild card search on group_name.",
            "type": "string"
          },
          "radios": {
            "description": "Specifies the locations and status for radio buttons that are grouped together.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/radio"
            }
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "requireAll": {
            "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          }
        },
        "description": "This group tab is used to place radio buttons on a document.\nThe `radios` property\ncontains a list of\n[`radio`](https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radio)\nobjects  associated with the group. Only one radio button can\nbe selected in a group.\n"
      },
      "recipientAttachment": {
        "type": "object",
        "properties": {
          "attachmentId": {
            "description": "",
            "type": "string"
          },
          "attachmentType": {
            "description": "",
            "type": "string"
          },
          "data": {
            "description": "",
            "type": "string"
          },
          "label": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "remoteUrl": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "recipientDomain": {
        "type": "object",
        "properties": {
          "active": {
            "description": "",
            "type": "string"
          },
          "domainCode": {
            "description": "",
            "type": "string"
          },
          "domainName": {
            "description": "",
            "type": "string"
          },
          "recipientDomainId": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "recipientEmailNotification": {
        "type": "object",
        "properties": {
          "emailBody": {
            "description": "Not applicable",
            "type": "string"
          },
          "emailSubject": {
            "description": "Not applicable",
            "type": "string"
          },
          "supportedLanguage": {
            "description": "Specifies the language used to localize Electronic Seals UI texts such as \"Sealed by\", etc.  \n  \nThe supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).  \n  \nThis parameter is optional. If not set, it defaults to the sender’s language settings at time of sealing. ",
            "type": "string"
          }
        },
        "description": ""
      },
      "recipientEvent": {
        "type": "object",
        "properties": {
          "includeDocuments": {
            "description": "reserved",
            "type": "string"
          },
          "recipientEventStatusCode": {
            "description": "Send a webhook notification for the following recipient statuses: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.",
            "type": "string"
          }
        },
        "description": ""
      },
      "recipientFormData": {
        "type": "object",
        "properties": {
          "declinedTime": {
            "description": "",
            "type": "string"
          },
          "deliveredTime": {
            "description": "",
            "type": "string"
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "formData": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "sentTime": {
            "description": "",
            "type": "string"
          },
          "signedTime": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "recipientIdentityInputOption": {
        "type": "object",
        "properties": {
          "name": {
            "description": "",
            "type": "string"
          },
          "phoneNumberList": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientIdentityPhoneNumber"
            }
          },
          "valueType": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "recipientIdentityPhoneNumber": {
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "",
            "type": "string"
          },
          "extension": {
            "description": "",
            "type": "string"
          },
          "number": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "recipientIdentityVerification": {
        "type": "object",
        "properties": {
          "inputOptions": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientIdentityInputOption"
            }
          },
          "workflowId": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "recipientNamesResponse": {
        "type": "object",
        "properties": {
          "multipleUsers": {
            "description": "Indicates whether email address is used by more than one user.",
            "type": "string"
          },
          "recipientNames": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reservedRecipientEmail": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "recipientPhoneAuthentication": {
        "description": "A complex type that Contains the elements:\n\n* recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.\n* senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.\n* recordVoicePrint - Reserved.\n* validateRecipProvidedNumber - Reserved.",
        "type": "object",
        "properties": {
          "recipMayProvideNumber": {
            "description": "Boolean. When set to **true**, the recipient can supply a phone number their choice.",
            "type": "string"
          },
          "recordVoicePrint": {
            "description": "Reserved.",
            "type": "string"
          },
          "senderProvidedNumbers": {
            "description": "An Array containing a list of phone numbers the recipient may use for SMS text authentication. ",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "validateRecipProvidedNumber": {
            "description": " Reserved.",
            "type": "string"
          }
        }
      },
      "recipientProofFile": {
        "type": "object",
        "properties": {
          "isInProofFile": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "recipients": {
        "description": "",
        "type": "object",
        "properties": {
          "agents": {
            "description": "A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/agent"
            }
          },
          "carbonCopies": {
            "description": "A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/carbonCopy"
            }
          },
          "certifiedDeliveries": {
            "description": "A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/certifiedDelivery"
            }
          },
          "currentRoutingOrder": {
            "description": "",
            "type": "string"
          },
          "editors": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/editor"
            }
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "inPersonSigners": {
            "description": "Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inPersonSigner"
            }
          },
          "intermediaries": {
            "description": "Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/intermediary"
            }
          },
          "recipientCount": {
            "description": "The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:\n\n* recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\n* includeDocuments - When set to **true**, the envelope time zone information is included in the message.",
            "type": "string"
          },
          "seals": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sealSign"
            }
          },
          "signers": {
            "description": "A complex type containing information about the Signer recipient.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signer"
            }
          },
          "witnesses": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/witness"
            }
          }
        }
      },
      "recipientSAMLAuthentication": {
        "description": "Contains the name/value pair information for the SAML assertion attributes:\n\n* name - The name of the SAML assertion attribute.\n* value - The value associated with the named SAML assertion attribute. \n\nYour account must be set up to use SSO to use this.",
        "type": "object",
        "properties": {
          "samlAssertionAttributes": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/samlAssertionAttribute"
            }
          }
        }
      },
      "recipientSignatureInformation": {
        "description": "Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\n\nUsed only with recipient types In Person Signers and Signers.",
        "type": "object",
        "properties": {
          "fontStyle": {
            "description": "",
            "type": "string"
          },
          "signatureInitials": {
            "description": "",
            "type": "string"
          },
          "signatureName": {
            "description": "Specifies the user signature name.",
            "type": "string"
          }
        }
      },
      "recipientSignatureProvider": {
        "type": "object",
        "properties": {
          "sealDocumentsWithTabsOnly": {
            "description": "By default, electronic seals apply on all documents in an envelope. If any of the documents has a `signHere` tab, then a visual representation of the electronic seal will show up in the final document. If not, the electronic seal will be visible in the metadata but not in the content of the document.\n\nTo apply electronic seals on specific documents only, you must enable the  `sealDocumentsWithTabsOnly` parameter. In this case, Electronic Seal applies only on documents that have `signHere` tabs set for the Electronic Seal recipient. Other documents won't be sealed. ",
            "type": "string"
          },
          "sealName": {
            "description": "Indicates the name of the electronic seal to apply on documents.\n",
            "type": "string"
          },
          "signatureProviderName": {
            "description": "The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. [The current provider list.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)",
            "type": "string"
          },
          "signatureProviderOptions": {
            "$ref": "#/components/schemas/recipientSignatureProviderOptions"
          }
        },
        "description": "An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures).\n"
      },
      "recipientSignatureProviderOptions": {
        "type": "object",
        "properties": {
          "cpfNumber": {
            "description": "Reserved for DocuSign",
            "type": "string"
          },
          "oneTimePassword": {
            "description": "A pre-shared secret that the signer must enter to complete the signing process. Eg last six digits of the signer's government ID or Social Security number. Or a newly created pre-shared secret for the transaction. Note: some signature providers may require an exact (case-sensitive) match if alphabetic characters are included in the field.",
            "type": "string"
          },
          "signerRole": {
            "description": "The role or capacity of the signing recipient. Examples: Manager, Approver, etc.",
            "type": "string"
          },
          "sms": {
            "description": "The mobile phone number used to send the recipient an access code for the signing ceremony. Format: a string starting with +, then the country code followed by the full mobile phone number without any spaces or special characters. Omit leading zeroes before a city code. Examples: +14155551234, +97235551234, +33505551234.",
            "type": "string"
          }
        },
        "description": "Option settings for the signature provider. Different providers require or use different options. [The current provider list and the options they require.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)"
      },
      "recipientSMSAuthentication": {
        "description": "Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.",
        "type": "object",
        "properties": {
          "senderProvidedNumbers": {
            "description": "An Array containing a list of phone numbers the recipient may use for SMS text authentication. ",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "recipientsUpdateSummary": {
        "type": "object",
        "properties": {
          "recipientUpdateResults": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientUpdateResponse"
            }
          }
        },
        "description": ""
      },
      "recipientUpdateResponse": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/components/schemas/EnvelopeRecipientTabs"
          }
        },
        "description": ""
      },
      "recipientViewRequest": {
        "type": "object",
        "properties": {
          "assertionId": {
            "description": "A unique identifier of the authentication event executed by the client application.",
            "type": "string"
          },
          "authenticationInstant": {
            "description": "A sender generated value that indicates the date/time that the signer was authenticated.",
            "type": "string"
          },
          "authenticationMethod": {
            "description": "Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer. \n\nChoose a value from this list: \n* Biometric \n* Email\n* HTTPBasicAuth\n* Kerberos\n* KnowledgeBasedAuth\n* None\n* PaperDocuments\n* Password\n* RSASecureID\n* SingleSignOn_CASiteminder\n* SingleSignOn_InfoCard\n* SingleSignOn_MicrosoftActiveDirectory\n* SingleSignOn_Other\n* SingleSignOn_Passport\n* SingleSignOn_SAML\n* Smartcard\n* SSLMutualAuth\n* X509Certificate\n\nThis information is included in the Certificate of Completion.",
            "type": "string"
          },
          "clientUserId": {
            "description": "A sender created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.\n\nUse your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.\n\nMaximum length: 100 characters.",
            "type": "string"
          },
          "email": {
            "description": "Specifies the email of the recipient. You can use either email and userName or userId to identify the recipient.",
            "type": "string"
          },
          "frameAncestors": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "messageOrigins": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pingFrequency": {
            "description": "Only used if pingUrl is specified. This is the interval, in seconds, between pings on the pingUrl.  The default is 300 seconds. Valid values are 60-1200 seconds.",
            "type": "string"
          },
          "pingUrl": {
            "description": "A client Url to be pinged by the DocuSign Signing experience to indicate to the client that Signing is active. An HTTP Get is executed against the client. The response from the client is ignored. The intent is for the client to reset it's session timer when the request is received.",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "returnUrl": {
            "description": "The URL that the recipient is redirected to\nafter the signing session has ended.\nDocuSign redirects to the URL\nand includes an `event` query parameter\nthat can be used by your application.\n\nPossible `event` parameter values include: \n\n* `access_code_failed`<br>\n  Recipient used incorrect access code.\n* `cancel`<br>\n  Recipient canceled the signing operation,\n  possibly by using the **Finish Later** option.\n* `decline`<br>\n  Recipient declined to sign.\n* `exception`<br>\n  A system error occurred during the signing process.\n* `fax_pending`<br>\n  Recipient has a fax pending.\n* `id_check_failed`<br>\n  Recipient failed an ID check.\n* `session_timeout`<br>\n  The session timed out.\n  An account can control this timeout using the **Signer Session Timeout** option.\n* `signing_complete`<br>\n  Recipient completed the signing ceremony.\n* `ttl_expired`<br>\n  The Time To Live token for the envelope has expired.\n  After being successfully invoked, these tokens expire\n  after 5 minutes or if the envelope is voided.\n* `viewing_complete`<br>\n  The recipient completed viewing an envelope\n  that is in a read-only/terminal state\n  such as completed, declined, or voided.\n\nBe sure to include `https://` in the URL or the redirect may fail on certain browsers.\n",
            "type": "string"
          },
          "securityDomain": {
            "description": "The domain in which the user authenticated.",
            "type": "string"
          },
          "userId": {
            "description": "Specifies the user ID of the recipient. You can use with user ID or email and user name to identify the recipient. \n\nIf userId is used and a clientUserId is provided, the value in the `userId` property must match a recipientId (which can be retrieved with a GET recipients call) for the envelope. \n\nIf a userId is used and a clientUserId is not provided, the userId must match the user ID of the authenticating user.",
            "type": "string"
          },
          "userName": {
            "description": "Specifies the username of the recipient. You can use either email and userName or userId to identify the recipient.",
            "type": "string"
          },
          "xFrameOptions": {
            "description": "Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.\n\nValid values are:\n\n- `deny`: The page cannot be displayed in a frame.\n- `same_origin`: The page can only be displayed in a frame on the same origin as the page itself.\n- `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.",
            "type": "string"
          },
          "xFrameOptionsAllowFromUrl": {
            "description": "When the value of `xFrameOptions` is `allow_from`, this property specifies the origin on which the page is allowed to display in a frame. If the value of `xFrameOptions` is `allow_from`, you must include a value for this property.",
            "type": "string"
          }
        },
        "description": ""
      },
      "referralInformation": {
        "description": "A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry \n\n###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DoucSign use only.",
        "type": "object",
        "properties": {
          "advertisementId": {
            "description": "A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry.\n\n###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DoucSign use only. \n",
            "type": "string"
          },
          "enableSupport": {
            "description": "When set to **true**, then customer support is provided as part of the account plan.",
            "type": "string"
          },
          "externalOrgId": {
            "description": "",
            "type": "string"
          },
          "groupMemberId": {
            "description": "",
            "type": "string"
          },
          "idType": {
            "description": "",
            "type": "string"
          },
          "includedSeats": {
            "description": "The number of seats (users) included.",
            "type": "string"
          },
          "industry": {
            "description": "",
            "type": "string"
          },
          "planStartMonth": {
            "description": "",
            "type": "string"
          },
          "promoCode": {
            "description": "",
            "type": "string"
          },
          "publisherId": {
            "description": "",
            "type": "string"
          },
          "referralCode": {
            "description": "",
            "type": "string"
          },
          "referrerName": {
            "description": "",
            "type": "string"
          },
          "saleDiscountAmount": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          },
          "saleDiscountFixedAmount": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          },
          "saleDiscountPercent": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          },
          "saleDiscountPeriods": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          },
          "saleDiscountSeatPriceOverride": {
            "description": "Reserved for DocuSign use only.",
            "type": "string"
          },
          "shopperId": {
            "description": "",
            "type": "string"
          }
        }
      },
      "reminders": {
        "description": "A complex element that specifies reminder settings for the envelope",
        "type": "object",
        "properties": {
          "reminderDelay": {
            "description": "An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient.",
            "type": "string"
          },
          "reminderEnabled": {
            "description": "When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.",
            "type": "string"
          },
          "reminderFrequency": {
            "description": "An interger that sets the interval, in days, between reminder emails.",
            "type": "string"
          }
        }
      },
      "resourceInformation": {
        "type": "object",
        "properties": {
          "resources": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          }
        },
        "description": ""
      },
      "returnUrlRequest": {
        "type": "object",
        "properties": {
          "returnUrl": {
            "description": "Your app's return url that the user will be redirected to after sending the envelope or completing the sending/tagging view. Query parameters `envelopeId` and `event` will be added to the URL. The event parameter values: \n\n* `Send` (the user sent the envelope)\n* `Save` (the user saved the envelope, it is still a draft)\n* `Cancel` (the user canceled the sending transaction)\n* `Error` (there was an error during the send operation)\n* `SessionEnd` (the sending session ended before the user completed a different action)",
            "type": "string"
          }
        },
        "description": "The request body for the EnvelopeViews: createSender method."
      },
      "samlAssertionAttribute": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "value": {
            "description": "The value associated with the named SAML assertion attribute",
            "type": "string"
          }
        },
        "description": ""
      },
      "sealIdentifier": {
        "type": "object",
        "properties": {
          "sealDisplayName": {
            "description": "",
            "type": "string"
          },
          "sealName": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "sealSign": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "Not applicable",
            "type": "string"
          },
          "addAccessCodeToEmail": {
            "description": "Not applicable",
            "type": "string"
          },
          "clientUserId": {
            "description": "Not applicable",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "declinedDateTime": {
            "description": "Not applicable",
            "type": "string"
          },
          "declinedReason": {
            "description": "Not applicable",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Not applicable",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "Not applicable",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckInformationInput": {
            "$ref": "#/components/schemas/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/components/schemas/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "note": {
            "description": "Not applicable",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/components/schemas/recipientPhoneAuthentication"
          },
          "recipientAttachments": {
            "description": "Not applicable",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientAttachment"
            }
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/components/schemas/authenticationStatus"
          },
          "recipientId": {
            "description": "(Required) The `recipientId` used when the envelope or template was created.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. Read only.",
            "type": "string"
          },
          "recipientSignatureProviders": {
            "description": "(Required) Indicates which electronic seal to apply on documents when creating an envelope.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientSignatureProvider"
            }
          },
          "requireIdLookup": {
            "description": "Not applicable",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "(Optional, default: 1) \nSpecifies the routing order of the electronic seal in the envelope.\nThe routing order assigned to your electronic seal cannot be shared with another recipient.\nIt is recommended that you set a routing order for your electronic seals.\n",
            "type": "string"
          },
          "samlAuthentication": {
            "$ref": "#/components/schemas/recipientSAMLAuthentication"
          },
          "sentDateTime": {
            "description": "Not applicable",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Not applicable",
            "type": "string"
          },
          "smsAuthentication": {
            "$ref": "#/components/schemas/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": " Lists the social ID type that can be used for recipient authentication.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAuthentication"
            }
          },
          "status": {
            "description": "Item status. <!-- TODO -->",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/components/schemas/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "Not applicable",
            "type": "string"
          },
          "userId": {
            "description": "Not applicable",
            "type": "string"
          }
        },
        "description": "Specifies one or more electronic seals to apply on  documents. \n\n```json\n\"recipients\": {\n      \"seals\": [\n        {\n          \"recipientId\": \"1\",\n          \"routingOrder\" : 1,\n          \"recipientSignatureProviders\": [\n            {\n              \"sealName\": \"52e9d968-13be-42ca-a6fe-4682bc45c106\"\n            }\n      \t]\n    \t}\n  \t]\n\t},\n```\nFor more information on Electronic Seals , see https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals"
      },
      "seatDiscount": {
        "type": "object",
        "properties": {
          "beginSeatCount": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "discountPercent": {
            "description": "",
            "type": "string"
          },
          "endSeatCount": {
            "description": "Reserved: TBD",
            "type": "string"
          }
        },
        "description": ""
      },
      "senderEmailNotifications": {
        "type": "object",
        "properties": {
          "changedSigner": {
            "description": "When set to **true**, the sender receives notification if the signer changes.",
            "type": "string"
          },
          "commentsOnlyPrivateAndMention": {
            "description": "",
            "type": "string"
          },
          "commentsReceiveAll": {
            "description": "",
            "type": "string"
          },
          "deliveryFailed": {
            "description": "When set to **true**, the sender receives notification if the delivery of the envelope fails.",
            "type": "string"
          },
          "envelopeComplete": {
            "description": "When set to **true**, the user receives notification that the envelope has been completed.",
            "type": "string"
          },
          "offlineSigningFailed": {
            "description": "When set to **true**, the user receives notification if the offline signing failed.",
            "type": "string"
          },
          "recipientViewed": {
            "description": "When set to **true**, the sender receives notification that the recipient viewed the enveloper.",
            "type": "string"
          },
          "senderEnvelopeDeclined": {
            "description": "",
            "type": "string"
          },
          "withdrawnConsent": {
            "description": "When set to **true**, the user receives notification if consent is withdrawn.",
            "type": "string"
          },
          "powerformResponsesLimitNotificationEmail": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "serverTemplate": {
        "type": "object",
        "properties": {
          "sequence": {
            "description": "",
            "type": "string"
          },
          "templateId": {
            "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
            "type": "string"
          }
        },
        "description": ""
      },
      "serviceInformation": {
        "type": "object",
        "properties": {
          "buildBranch": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "buildBranchDeployedDateTime": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "buildSHA": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "buildVersion": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "linkedSites": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serviceVersions": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/serviceVersion"
            }
          }
        },
        "description": ""
      },
      "serviceVersion": {
        "type": "object",
        "properties": {
          "version": {
            "description": "The version of the rest API.",
            "type": "string"
          },
          "versionUrl": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "settingsMetadata": {
        "type": "object",
        "properties": {
          "is21CFRPart11": {
            "description": "When set to **true**, indicates that this module is enabled on the account.",
            "type": "string"
          },
          "options": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rights": {
            "description": "",
            "type": "string"
          },
          "uiHint": {
            "description": "",
            "type": "string"
          },
          "uiOrder": {
            "description": "",
            "type": "string"
          },
          "uiType": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "sharedItem": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "shared": {
            "description": "How the item is shared. One of:\n\n- `not_shared`\n- `shared_to`\n- `shared_from`\n- `shared_to_and_from`",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/userInfo"
          }
        },
        "description": "Information about the shared item."
      },
      "signatureProviderRequiredOption": {
        "type": "object",
        "properties": {
          "requiredSignatureProviderOptionIds": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "signerType": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "signatureType": {
        "type": "object",
        "properties": {
          "isDefault": {
            "description": "",
            "type": "string"
          },
          "type": {
            "description": "Type of the user. Valid values: type_owner, type_participant.",
            "type": "string"
          }
        },
        "description": ""
      },
      "signer": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "addAccessCodeToEmail": {
            "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
            "type": "string"
          },
          "agentCanEditEmail": {
            "description": "Optional element. When set to **true**, the agent recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
            "type": "string"
          },
          "agentCanEditName": {
            "description": "Optional. When set to **true**, the agent recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When set to **true**, autonavigation is set for the recipient.",
            "type": "string"
          },
          "bulkRecipientsUri": {
            "description": "The URL for the bulk recipient file with the bulk recipient information for this envelope, if applicable. This information is read only and is only shown after the bulk recipient file is uploaded to the envelope by using the PUT method. ",
            "type": "string"
          },
          "canSignOffline": {
            "description": "When set to **true**, specifies that the signer can perform the signing ceremony offline.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "creationReason": {
            "description": "The reason why the recipient was created (for example, `sender`). Read only.",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. Read only.",
            "type": "string"
          },
          "defaultRecipient": {
            "description": "When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          },
          "email": {
            "description": "The recipient's email address. The system sends notification of the documents to sign to this email address. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckInformationInput": {
            "$ref": "#/components/schemas/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/components/schemas/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "isBulkRecipient": {
            "description": "When set to **true**, this signer is a bulk recipient and the recipient information is contained in a bulk recipient file. \n\nNote that when this is true the email and name for the recipient becomes bulk@recipient.com and \"Bulk Recipient\". These fields can not be changed for the bulk recipient. \n",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "name": {
            "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note**: You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/components/schemas/recipientPhoneAuthentication"
          },
          "proofFile": {
            "$ref": "#/components/schemas/recipientProofFile"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientAttachment"
            }
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/components/schemas/authenticationStatus"
          },
          "recipientId": {
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. Read only.",
            "type": "string"
          },
          "recipientSignatureProviders": {
            "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientSignatureProvider"
            }
          },
          "recipientSuppliesTabs": {
            "description": "When set to **true**, specifies that the recipient creates the tabs.",
            "type": "string"
          },
          "requireIdLookup": {
            "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireSignerCertificate": {
            "description": "By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\n\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.",
            "type": "string"
          },
          "requireSignOnPaper": {
            "description": "When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "samlAuthentication": {
            "$ref": "#/components/schemas/recipientSAMLAuthentication"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signatureInfo": {
            "$ref": "#/components/schemas/recipientSignatureInformation"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signInEachLocation": {
            "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
            "type": "string"
          },
          "signingGroupId": {
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "type": "string"
          },
          "signingGroupName": {
            "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          },
          "smsAuthentication": {
            "$ref": "#/components/schemas/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": " Lists the social ID type that can be used for recipient authentication.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAuthentication"
            }
          },
          "status": {
            "description": "Specifies the status of the recipient at the time of the request. Read only. Possible values are:\n\n- `created`: The recipient is in a draft state. This is only associated with draft envelopes (envelopes with a created status).\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing web site. This is not an email delivery of the documents in an envelope.\n- `signed`; The recipient has completed (performed all required interactions, such as signing or entering data) all required tags in an envelope. This is a temporary state during processing, after which the recipient is automatically moved to completed.\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `faxpending`: The recipient has finished signing and the system is waiting a fax attachment by the recipient before completing their signing step.\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used by the DocuSign webapp (also known as the DocuSign console) to inform senders about the auto-responded email.",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/components/schemas/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. Read only.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          }
        },
        "description": "A complex type containing information about a signer recipient. A signer is a recipient who must take action on a document, such as sign, initial, date, or add data to form fields on a document."
      },
      "signerAttachment": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "optional": {
            "description": "",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "scaleValue": {
            "format": "float",
            "description": "",
            "type": "number"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+0, -24)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+0, -24)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient to attach supporting\ndocuments to an envelope.\n"
      },
      "signerEmailNotifications": {
        "description": "An array of email notifications that specifies the email the user receives when they are a sender. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account sender email notification settings when the user is created.",
        "type": "object",
        "properties": {
          "agentNotification": {
            "description": "When set to **true**, the user receives agent notification emails.",
            "type": "string"
          },
          "carbonCopyNotification": {
            "description": "When set to **true**, the user receives notifications of carbon copy deliveries.",
            "type": "string"
          },
          "certifiedDeliveryNotification": {
            "description": "When set to **true**, the user receives notifications of certified deliveries.",
            "type": "string"
          },
          "commentsOnlyPrivateAndMention": {
            "description": "",
            "type": "string"
          },
          "commentsReceiveAll": {
            "description": "",
            "type": "string"
          },
          "documentMarkupActivation": {
            "description": "When set to **true**, the user receives notification that document markup has been activated.",
            "type": "string"
          },
          "envelopeActivation": {
            "description": "When set to **true**, the user receives notification that the envelope has been activated.",
            "type": "string"
          },
          "envelopeComplete": {
            "description": "When set to **true**, the user receives notification that the envelope has been completed.",
            "type": "string"
          },
          "envelopeCorrected": {
            "description": "When set to **true**, the user receives notification that the envelope has been corrected.",
            "type": "string"
          },
          "envelopeDeclined": {
            "description": "When set to **true**, the user receives notification that the envelope has been declined.",
            "type": "string"
          },
          "envelopeVoided": {
            "description": "When set to **true**, the user receives notification that the envelope has been voided.",
            "type": "string"
          },
          "faxReceived": {
            "description": "Reserved:",
            "type": "string"
          },
          "offlineSigningFailed": {
            "description": "When set to **true**, the user receives notification if the offline signing failed.",
            "type": "string"
          },
          "purgeDocuments": {
            "description": "When set to **true**, the user receives notification of document purges.",
            "type": "string"
          },
          "reassignedSigner": {
            "description": "When set to **true**, the user receives notification that the envelope has been reassigned.",
            "type": "string"
          },
          "whenSigningGroupMember": {
            "description": "",
            "type": "string"
          }
        }
      },
      "signHere": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "Specifies the tool tip text for the tab.",
            "type": "string"
          },
          "optional": {
            "description": "",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "scaleValue": {
            "format": "float",
            "description": "",
            "type": "number"
          },
          "stampType": {
            "description": "",
            "type": "string"
          },
          "stampTypeMetadata": {
            "$ref": "#/components/schemas/propertyMetadata"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+2, -27)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+2, -27)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient to sign a document. May be\noptional.\n"
      },
      "signingGroup": {
        "type": "object",
        "properties": {
          "created": {
            "description": "The UTC DateTime when the workspace user authorization was created.",
            "type": "string"
          },
          "createdBy": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "groupEmail": {
            "description": "",
            "type": "string"
          },
          "groupName": {
            "description": "The name of the group. The search_text provided in the call automatically performs a wild card search on group_name.",
            "type": "string"
          },
          "groupType": {
            "description": "The group type.",
            "type": "string"
          },
          "modified": {
            "description": "",
            "type": "string"
          },
          "modifiedBy": {
            "description": "",
            "type": "string"
          },
          "signingGroupId": {
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "type": "string"
          },
          "users": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signingGroupUser"
            }
          }
        },
        "description": ""
      },
      "signingGroupInformation": {
        "type": "object",
        "properties": {
          "groups": {
            "description": "A collection group objects containing information about the groups returned.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signingGroup"
            }
          }
        },
        "description": ""
      },
      "signingGroupUser": {
        "type": "object",
        "properties": {
          "email": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "userName": {
            "description": "The name of the group member. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          }
        },
        "description": ""
      },
      "signingGroupUsers": {
        "type": "object",
        "properties": {
          "users": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signingGroupUser"
            }
          }
        },
        "description": ""
      },
      "smartSection": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "caseSensitive": {
            "description": "",
            "type": "boolean"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "",
            "type": "string"
          },
          "displaySettings": {
            "$ref": "#/components/schemas/smartSectionDisplaySettings"
          },
          "documentId": {
            "description": "The ID of the document being accessed.",
            "type": "string"
          },
          "endAnchor": {
            "description": "",
            "type": "string"
          },
          "endPosition": {
            "$ref": "#/components/schemas/smartSectionAnchorPosition"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "pageNumber": {
            "description": "The page number being accessed.",
            "type": "string"
          },
          "recipientId": {
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "type": "string"
          },
          "removeEndAnchor": {
            "description": "",
            "type": "boolean"
          },
          "removeStartAnchor": {
            "description": "",
            "type": "boolean"
          },
          "startAnchor": {
            "description": "",
            "type": "string"
          },
          "startPosition": {
            "$ref": "#/components/schemas/smartSectionAnchorPosition"
          },
          "status": {
            "description": "Item status. <!-- TODO -->",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          }
        },
        "description": ""
      },
      "smartSectionAnchorPosition": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "format": "int32",
            "description": "The page number being accessed.",
            "type": "integer"
          },
          "xPosition": {
            "format": "double",
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "number"
          },
          "yPosition": {
            "format": "double",
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "number"
          }
        },
        "description": ""
      },
      "smartSectionCollapsibleDisplaySettings": {
        "type": "object",
        "properties": {
          "arrowClosed": {
            "description": "",
            "type": "string"
          },
          "arrowColor": {
            "description": "",
            "type": "string"
          },
          "arrowLocation": {
            "description": "",
            "type": "string"
          },
          "arrowOpen": {
            "description": "",
            "type": "string"
          },
          "arrowSize": {
            "description": "",
            "type": "string"
          },
          "arrowStyle": {
            "description": "",
            "type": "string"
          },
          "containerStyle": {
            "description": "",
            "type": "string"
          },
          "labelStyle": {
            "description": "",
            "type": "string"
          },
          "onlyArrowIsClickable": {
            "description": "",
            "type": "boolean"
          },
          "outerLabelAndArrowStyle": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "smartSectionDisplaySettings": {
        "type": "object",
        "properties": {
          "cellStyle": {
            "description": "",
            "type": "string"
          },
          "collapsibleSettings": {
            "$ref": "#/components/schemas/smartSectionCollapsibleDisplaySettings"
          },
          "display": {
            "description": "This string sets the display and behavior properties of\nthe document during signing. The possible values are:\n\n* `modal`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a modal window.\n  This is the recommended value for supplemental documents. \n\n* `download`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a new browser window. \n\n* `inline`<br>\n  The document is shown in the normal signing window.\n  This value is not used with supplemental documents,\n  but is the default value for all other documents.\n",
            "type": "string"
          },
          "displayLabel": {
            "description": "",
            "type": "string"
          },
          "displayOrder": {
            "format": "int32",
            "description": "",
            "type": "integer"
          },
          "displayPageNumber": {
            "format": "int32",
            "description": "",
            "type": "integer"
          },
          "hideLabelWhenOpened": {
            "description": "",
            "type": "boolean"
          },
          "inlineOuterStyle": {
            "description": "",
            "type": "string"
          },
          "labelWhenOpened": {
            "description": "",
            "type": "string"
          },
          "preLabel": {
            "description": "",
            "type": "string"
          },
          "scrollToTopWhenOpened": {
            "description": "",
            "type": "boolean"
          },
          "tableStyle": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "socialAccountInformation": {
        "type": "object",
        "properties": {
          "email": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "provider": {
            "description": "The social account provider (Facebook, Yahoo, etc.)",
            "type": "string"
          },
          "socialId": {
            "description": "The ID provided by the Socal Account.",
            "type": "string"
          },
          "userName": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "socialAuthentication": {
        "type": "object",
        "properties": {
          "authentication": {
            "description": "Reserved: TBD",
            "type": "string"
          }
        },
        "description": ""
      },
      "ssn": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "concealValueOnDocument": {
            "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "disableAutoSize": {
            "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "maxLength": {
            "format": "int32",
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "integer"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "Specifies the tool tip text for the tab.",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "requireAll": {
            "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "senderRequired": {
            "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationPattern": {
            "description": "A regular expressionn used to validate input for the tab.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n"
      },
      "ssn4InformationInput": {
        "type": "object",
        "properties": {
          "displayLevelCode": {
            "description": "Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay",
            "type": "string"
          },
          "receiveInResponse": {
            "description": "When set to **true**, the information needs to be returned in the response.",
            "type": "string"
          },
          "ssn4": {
            "description": "The last four digits of the recipient's Social Security Number (SSN).",
            "type": "string"
          }
        },
        "description": ""
      },
      "ssn9InformationInput": {
        "type": "object",
        "properties": {
          "displayLevelCode": {
            "description": "Specifies the display level for the recipient. \nValid values are: \n\n* ReadOnly\n* Editable\n* DoNotDisplay",
            "type": "string"
          },
          "ssn9": {
            "description": " The recipient's Social Security Number(SSN).",
            "type": "string"
          }
        },
        "description": ""
      },
      "supportedLanguages": {
        "type": "object",
        "properties": {
          "languages": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          }
        },
        "description": ""
      },
      "tabAccountSettings": {
        "type": "object",
        "properties": {
          "allowTabOrder": {
            "description": "",
            "type": "string"
          },
          "allowTabOrderMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "approveDeclineTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "approveDeclineTabsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "calculatedFieldsEnabled": {
            "description": "",
            "type": "string"
          },
          "calculatedFieldsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "checkboxTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "checkboxTabsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "dataFieldRegexEnabled": {
            "description": "",
            "type": "string"
          },
          "dataFieldRegexMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "dataFieldSizeEnabled": {
            "description": "",
            "type": "string"
          },
          "dataFieldSizeMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "firstLastEmailTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "firstLastEmailTabsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "listTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "listTabsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "noteTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "noteTabsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "radioTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "radioTabsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "savingCustomTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "savingCustomTabsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "senderToChangeTabAssignmentsEnabled": {
            "description": "",
            "type": "string"
          },
          "senderToChangeTabAssignmentsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "sharedCustomTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "sharedCustomTabsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "tabDataLabelEnabled": {
            "description": "",
            "type": "string"
          },
          "tabDataLabelMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "tabLocationEnabled": {
            "description": "",
            "type": "string"
          },
          "tabLocationMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "tabLockingEnabled": {
            "description": "",
            "type": "string"
          },
          "tabLockingMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "tabScaleEnabled": {
            "description": "",
            "type": "string"
          },
          "tabScaleMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "tabTextFormattingEnabled": {
            "description": "",
            "type": "string"
          },
          "tabTextFormattingMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "textTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "textTabsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          }
        },
        "description": ""
      },
      "tabMetadata": {
        "type": "object",
        "properties": {
          "anchor": {
            "description": "An optional string that is used to auto-match tabs to strings located in the documents of an envelope.",
            "type": "string"
          },
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "collaborative": {
            "description": "",
            "type": "string"
          },
          "concealValueOnDocument": {
            "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "createdByDisplayName": {
            "description": "The user name of the DocuSign user who created this object.",
            "type": "string"
          },
          "createdByUserId": {
            "description": "The userId of the DocuSign user who created this object.",
            "type": "string"
          },
          "customTabId": {
            "description": "",
            "type": "string"
          },
          "disableAutoSize": {
            "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "editable": {
            "description": "When set to **true**, the custom tab is editable. Otherwise the custom tab cannot be modified.",
            "type": "string"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "height": {
            "description": "Height of the tab in pixels.",
            "type": "string"
          },
          "includedInEmail": {
            "description": "When set to **true**, the tab is included in e-mails related to the envelope on which it exists. This applies to only specific tabs.",
            "type": "string"
          },
          "initialValue": {
            "description": "The original value of the tab.",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "items": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lastModified": {
            "description": "Utc date and time the comment was last updated (can only be done by creator.)",
            "type": "string"
          },
          "lastModifiedByDisplayName": {
            "description": "The User Name of the DocuSign user who last modified this object.",
            "type": "string"
          },
          "lastModifiedByUserId": {
            "description": "The userId of the DocuSign user who last modified this object.",
            "type": "string"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "maximumLength": {
            "description": "",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "paymentItemCode": {
            "description": "",
            "type": "string"
          },
          "paymentItemDescription": {
            "description": "",
            "type": "string"
          },
          "paymentItemName": {
            "description": "",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "scaleValue": {
            "description": "",
            "type": "string"
          },
          "selected": {
            "description": "When set to **true**, the radio button is selected.",
            "type": "string"
          },
          "shared": {
            "description": "",
            "type": "string"
          },
          "stampType": {
            "description": "",
            "type": "string"
          },
          "stampTypeMetadata": {
            "$ref": "#/components/schemas/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "type": {
            "description": "Type of the user. Valid values: type_owner, type_participant.",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationPattern": {
            "description": "A regular expressionn used to validate input for the tab.",
            "type": "string"
          },
          "width": {
            "description": "Width of the tab in pixels.",
            "type": "string"
          },
          "requireAll": {
            "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "tabMetadataList": {
        "type": "object",
        "properties": {
          "tabs": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tabMetadata"
            }
          }
        },
        "description": ""
      },
      "tabs": {
        "type": "object",
        "properties": {
          "approveTabs": {
            "description": "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/approve"
            }
          },
          "checkboxTabs": {
            "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nThis tab allows the recipient to select a yes/no (on/off) option.\n\n\n[checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/checkbox"
            }
          },
          "companyTabs": {
            "description": "A list of \n[Company tabs][company].\n\n\nThis tab displays the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/company"
            }
          },
          "dateSignedTabs": {
            "description": "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dateSigned"
            }
          },
          "dateTabs": {
            "description": "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/date"
            }
          },
          "declineTabs": {
            "description": "A list of \n[Decline tabs][decline].\n\nThis tab allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/decline"
            }
          },
          "emailAddressTabs": {
            "description": "A list of \n[Email Address tabs][emailAddress].\n\nThis tab \ndisplays the recipient's email as entered in the\nrecipient information.\n\n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emailAddress"
            }
          },
          "emailTabs": {
            "description": "A list of \n[Email tabs][email].\n\nThis tab \nallows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/email"
            }
          },
          "envelopeIdTabs": {
            "description": "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \ndisplays the envelope ID. Recipients cannot enter\nor change the information in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeId"
            }
          },
          "firstNameTabs": {
            "description": "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays the recipient's first name. It\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/firstName"
            }
          },
          "formulaTabs": {
            "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n[formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/formulaTab"
            }
          },
          "fullNameTabs": {
            "description": "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fullName"
            }
          },
          "initialHereTabs": {
            "description": "A list of \n[Initial Here tabs][initialHere].\n\nThis tab allows the recipient to initial the document. May\nbe optional.\n\n[initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/initialHere"
            }
          },
          "lastNameTabs": {
            "description": "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays the recipient's last name. It\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lastName"
            }
          },
          "listTabs": {
            "description": "A list of \n[list tabs][list].\n\nThis tab offers a list of options to choose from. The\n`listItems` property is used to specify the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/list"
            }
          },
          "notarizeTabs": {
            "description": "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is a tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notarize"
            }
          },
          "noteTabs": {
            "description": "A list of \n[Note tabs][note].\n\nThis tab  displays additional information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/note"
            }
          },
          "numberTabs": {
            "description": "A list of \n[Number tabs][number].\n\nThis tab allows the recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/number"
            }
          },
          "radioGroupTabs": {
            "description": "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \nThis group tab is used to place radio buttons on a document.\nThe `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can\nbe selected in a group.\n\n\n[radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/radioGroup"
            }
          },
          "signerAttachmentTabs": {
            "description": "A list of \n[Signer Attachment tabs][signerAttachment].\n\nThis tab \nallows the recipient to attach supporting\ndocuments to an envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signerAttachment"
            }
          },
          "signHereTabs": {
            "description": "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signHere"
            }
          },
          "smartSectionTabs": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/smartSection"
            }
          },
          "ssnTabs": {
            "description": "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n\n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ssn"
            }
          },
          "textTabs": {
            "description": "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/text"
            }
          },
          "titleTabs": {
            "description": "A list of \n[Title tabs][title].\n\nThis tab  displays the recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/title"
            }
          },
          "viewTabs": {
            "description": "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/view"
            }
          },
          "zipTabs": {
            "description": "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zip"
            }
          }
        },
        "description": ""
      },
      "templateCustomFields": {
        "type": "object",
        "properties": {
          "listCustomFields": {
            "description": "An array of list custom fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/listCustomField"
            }
          },
          "textCustomFields": {
            "description": "An array of text custom fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/textCustomField"
            }
          }
        },
        "description": ""
      },
      "templateDocumentsResult": {
        "type": "object",
        "properties": {
          "templateDocuments": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeDocument"
            }
          },
          "templateId": {
            "description": "The ID of the template being accessed.",
            "type": "string"
          }
        },
        "description": ""
      },
      "templateDocumentVisibilityList": {
        "type": "object",
        "properties": {
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          }
        },
        "description": ""
      },
      "templateInformation": {
        "type": "object",
        "properties": {
          "templates": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/templateSummary"
            }
          }
        },
        "description": ""
      },
      "templateMatch": {
        "type": "object",
        "properties": {
          "documentEndPage": {
            "description": "",
            "type": "string"
          },
          "documentStartPage": {
            "description": "",
            "type": "string"
          },
          "matchPercentage": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "templateNotificationRequest": {
        "type": "object",
        "properties": {
          "expirations": {
            "$ref": "#/components/schemas/expirations"
          },
          "password": {
            "description": "",
            "type": "string"
          },
          "reminders": {
            "$ref": "#/components/schemas/reminders"
          },
          "useAccountDefaults": {
            "description": "When set to **true**, the account default notification settings are used for the envelope.",
            "type": "string"
          }
        },
        "description": ""
      },
      "templateRecipients": {
        "type": "object",
        "properties": {
          "agents": {
            "description": "A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/agent"
            }
          },
          "carbonCopies": {
            "description": "A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/carbonCopy"
            }
          },
          "certifiedDeliveries": {
            "description": "A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/certifiedDelivery"
            }
          },
          "currentRoutingOrder": {
            "description": "",
            "type": "string"
          },
          "editors": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/editor"
            }
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "inPersonSigners": {
            "description": "Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inPersonSigner"
            }
          },
          "intermediaries": {
            "description": "Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/intermediary"
            }
          },
          "recipientCount": {
            "description": "The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:\n\n* recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\n* includeDocuments - When set to **true**, the envelope time zone information is included in the message.",
            "type": "string"
          },
          "seals": {
            "description": "Specifies one or more electronic seals to apply on documents. For more information on Electronic Seals , see https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sealSign"
            }
          },
          "signers": {
            "description": "A complex type containing information about the Signer recipient.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signer"
            }
          },
          "witnesses": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/witness"
            }
          }
        },
        "description": ""
      },
      "templateRole": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "defaultRecipient": {
            "description": "When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.",
            "type": "string"
          },
          "email": {
            "description": "Specifies the email associated with a role name.",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "inPersonSignerName": {
            "description": "Specifies the full legal name of the signer in person signer template roles.\n\nMaximum Length: 100 characters.",
            "type": "string"
          },
          "name": {
            "description": "Specifies the recipient's name.",
            "type": "string"
          },
          "recipientSignatureProviders": {
            "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientSignatureProvider"
            }
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "signingGroupId": {
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/components/schemas/EnvelopeRecipientTabs"
          }
        },
        "description": ""
      },
      "templateSharedItem": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "owner": {
            "$ref": "#/components/schemas/userInfo"
          },
          "shared": {
            "description": "How the template is shared. One of:\n\n- `not_shared`\n- `shared_to`\n- `shared_from`\n- `shared_to_and_from`\n",
            "type": "string"
          },
          "sharedGroups": {
            "description": "List of groups that share the template.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/memberGroupSharedItem"
            }
          },
          "sharedUsers": {
            "description": "List of users that share the template.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userSharedItem"
            }
          },
          "templateId": {
            "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
            "type": "string"
          },
          "templateName": {
            "description": "The name of the shared template.",
            "type": "string"
          }
        },
        "description": "Information about shared templates."
      },
      "templateSummary": {
        "type": "object",
        "properties": {
          "applied": {
            "description": "Reserved: TBD",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentName": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "templateId": {
            "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
            "type": "string"
          },
          "templateMatch": {
            "$ref": "#/components/schemas/templateMatch"
          },
          "uri": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "templateTabs": {
        "type": "object",
        "properties": {
          "approveTabs": {
            "description": "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/approve"
            }
          },
          "checkboxTabs": {
            "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nThis tab allows the recipient to select a yes/no (on/off) option.\n\n\n[checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/checkbox"
            }
          },
          "companyTabs": {
            "description": "A list of \n[Company tabs][company].\n\n\nThis tab displays the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/company"
            }
          },
          "dateSignedTabs": {
            "description": "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dateSigned"
            }
          },
          "dateTabs": {
            "description": "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/date"
            }
          },
          "declineTabs": {
            "description": "A list of \n[Decline tabs][decline].\n\nThis tab allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/decline"
            }
          },
          "emailAddressTabs": {
            "description": "A list of \n[Email Address tabs][emailAddress].\n\nThis tab \ndisplays the recipient's email as entered in the\nrecipient information.\n\n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emailAddress"
            }
          },
          "emailTabs": {
            "description": "A list of \n[Email tabs][email].\n\nThis tab \nallows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/email"
            }
          },
          "envelopeIdTabs": {
            "description": "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \ndisplays the envelope ID. Recipients cannot enter\nor change the information in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeId"
            }
          },
          "firstNameTabs": {
            "description": "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays the recipient's first name. It\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/firstName"
            }
          },
          "formulaTabs": {
            "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n[formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/formulaTab"
            }
          },
          "fullNameTabs": {
            "description": "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fullName"
            }
          },
          "initialHereTabs": {
            "description": "A list of \n[Initial Here tabs][initialHere].\n\nThis tab allows the recipient to initial the document. May\nbe optional.\n\n[initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/initialHere"
            }
          },
          "lastNameTabs": {
            "description": "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays the recipient's last name. It\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lastName"
            }
          },
          "listTabs": {
            "description": "A list of \n[list tabs][list].\n\nThis tab offers a list of options to choose from. The\n`listItems` property is used to specify the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/list"
            }
          },
          "notarizeTabs": {
            "description": "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is a tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notarize"
            }
          },
          "noteTabs": {
            "description": "A list of \n[Note tabs][note].\n\nThis tab  displays additional information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/note"
            }
          },
          "numberTabs": {
            "description": "A list of \n[Number tabs][number].\n\nThis tab allows the recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/number"
            }
          },
          "radioGroupTabs": {
            "description": "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \nThis group tab is used to place radio buttons on a document.\nThe `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can\nbe selected in a group.\n\n\n[radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/radioGroup"
            }
          },
          "signerAttachmentTabs": {
            "description": "A list of \n[Signer Attachment tabs][signerAttachment].\n\nThis tab \nallows the recipient to attach supporting\ndocuments to an envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signerAttachment"
            }
          },
          "signHereTabs": {
            "description": "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signHere"
            }
          },
          "smartSectionTabs": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/smartSection"
            }
          },
          "ssnTabs": {
            "description": "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n\n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ssn"
            }
          },
          "textTabs": {
            "description": "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/text"
            }
          },
          "titleTabs": {
            "description": "A list of \n[Title tabs][title].\n\nThis tab  displays the recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/title"
            }
          },
          "viewTabs": {
            "description": "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/view"
            }
          },
          "zipTabs": {
            "description": "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zip"
            }
          }
        },
        "description": ""
      },
      "templateUpdateSummary": {
        "type": "object",
        "properties": {
          "bulkEnvelopeStatus": {
            "$ref": "#/components/schemas/bulkEnvelopeStatus"
          },
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "listCustomFieldUpdateResults": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/listCustomField"
            }
          },
          "lockInformation": {
            "$ref": "#/components/schemas/EnvelopeLocks"
          },
          "recipientUpdateResults": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientUpdateResponse"
            }
          },
          "tabUpdateResults": {
            "$ref": "#/components/schemas/EnvelopeRecipientTabs"
          },
          "textCustomFieldUpdateResults": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/textCustomField"
            }
          }
        },
        "description": ""
      },
      "text": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "concealValueOnDocument": {
            "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "disableAutoSize": {
            "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "formula": {
            "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n",
            "type": "string"
          },
          "height": {
            "format": "int32",
            "description": "Height of the tab in pixels.",
            "type": "integer"
          },
          "isPaymentAmount": {
            "description": "When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number. ",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "maxLength": {
            "format": "int32",
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "integer"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "Specifies the tool tip text for the tab.",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "requireAll": {
            "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "senderRequired": {
            "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationPattern": {
            "description": "A regular expressionn used to validate input for the tab.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient to enter any type of text.\n"
      },
      "textCustomField": {
        "type": "object",
        "properties": {
          "configurationType": {
            "description": "If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "fieldId": {
            "description": "An ID used to specify a custom field.",
            "type": "string"
          },
          "name": {
            "description": "The name of the custom field.",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "show": {
            "description": "A boolean indicating if the value should be displayed.  If this value is set to **true**, the custom field is displayed at the top of the certificate of completion. If this value is left blank/ or set to **false**, then it does not appear in the certificate of completion. ",
            "type": "string"
          },
          "value": {
            "description": "The value of the custom field.",
            "type": "string"
          }
        },
        "description": ""
      },
      "title": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "concealValueOnDocument": {
            "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "disableAutoSize": {
            "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "maxLength": {
            "format": "int32",
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "integer"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that displays the recipient's title.\n"
      },
      "usageHistory": {
        "description": "A complex element consisting of: \n\n* lastSentDateTime - the date and time the user last sent an envelope. \n* lastSignedDateTime - the date and time the user last signed an envelope.\n* sentCount - the number of envelopes the user has sent.\n* signedCount - the number of envelopes the user has signed.",
        "type": "object",
        "properties": {
          "lastSentDateTime": {
            "description": "The date and time the user last sent an envelope. ",
            "type": "string"
          },
          "lastSignedDateTime": {
            "description": "The date and time the user last signed an envelope.",
            "type": "string"
          },
          "sentCount": {
            "format": "int32",
            "description": "The number of envelopes the user has sent. ",
            "type": "integer"
          },
          "signedCount": {
            "format": "int32",
            "description": "The number of envelopes the user has signed. ",
            "type": "integer"
          }
        }
      },
      "userAccountManagementGranularInformation": {
        "type": "object",
        "properties": {
          "canManageAccountSecuritySettings": {
            "description": "",
            "type": "string"
          },
          "canManageAccountSecuritySettingsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "canManageAccountSettings": {
            "description": "",
            "type": "string"
          },
          "canManageAccountSettingsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "canManageAdmins": {
            "description": "**True**\nif the user can manage\nadmins.",
            "type": "string"
          },
          "canManageAdminsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "canManageGroups": {
            "description": "**True**\nif the user can manage\ngroups.",
            "type": "string"
          },
          "canManageGroupsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "canManageReporting": {
            "description": "",
            "type": "string"
          },
          "canManageReportingMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "canManageSharing": {
            "description": "",
            "type": "string"
          },
          "canManageSharingMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "canManageSigningGroups": {
            "description": "",
            "type": "string"
          },
          "canManageSigningGroupsMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "canManageUsers": {
            "description": "**True**\nif the user can manage\nusers.",
            "type": "string"
          },
          "canManageUsersMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "canViewUsers": {
            "description": "",
            "type": "string"
          },
          "canViewUsersMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "canManageEnvelopeTransfer": {
            "description": "",
            "type": "string"
          },
          "canManageEnvelopeTransferMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          }
        },
        "description": "Describes which account management capabilities a user has."
      },
      "userInfo": {
        "type": "object",
        "properties": {
          "activationAccessCode": {
            "description": "",
            "type": "string"
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "loginStatus": {
            "description": "",
            "type": "string"
          },
          "sendActivationEmail": {
            "description": "",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          },
          "userName": {
            "description": "",
            "type": "string"
          },
          "userStatus": {
            "description": "Status of the user's account. One of:\n\n* ActivationRequired\n* ActivationSent\n* Active\n* Closed\n* Disabled\n",
            "type": "string"
          },
          "userType": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "userInfoList": {
        "type": "object",
        "properties": {
          "users": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          }
        },
        "description": ""
      },
      "userInformation": {
        "type": "object",
        "properties": {
          "accountManagementGranular": {
            "$ref": "#/components/schemas/userAccountManagementGranularInformation"
          },
          "activationAccessCode": {
            "description": "",
            "type": "string"
          },
          "countryCode": {
            "description": "",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "customSettings": {
            "description": "The name/value pair information for the user custom setting.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "enableConnectForUser": {
            "description": "Specifies whether the user is enabled for updates from DocuSign Connect. Valid values: true or false.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "forgottenPasswordInfo": {
            "$ref": "#/components/schemas/forgottenPasswordInformation"
          },
          "groupList": {
            "description": "A list of the group information for groups to add the user to. Group information can be found by calling [ML:GET group information]. The only required parameter is groupId. \n\nThe parameters are:\n\n* groupId - The DocuSign group ID for the group.\n* groupName - The name of the group\n* permissionProfileId - The ID of the permission profile associated with the group.\n* groupType - The group type.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/group"
            }
          },
          "homeAddress": {
            "$ref": "#/components/schemas/addressInformation_v2"
          },
          "initialsImageUri": {
            "description": "Contains the URI for an endpoint that you can use to retrieve the initials image.",
            "type": "string"
          },
          "isAdmin": {
            "description": "Determines if the feature set is actively set as part of the plan.",
            "type": "string"
          },
          "jobTitle": {
            "description": "",
            "type": "string"
          },
          "lastLogin": {
            "description": "The date-time when the user last logged on to the system.",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "loginStatus": {
            "description": "",
            "type": "string"
          },
          "middleName": {
            "description": "The user's middle name. \nLimit: 50 characters.",
            "type": "string"
          },
          "password": {
            "description": "",
            "type": "string"
          },
          "passwordExpiration": {
            "description": "If password expiration is enabled, the date-time when the user's password expires.",
            "type": "string"
          },
          "permissionProfileId": {
            "description": "",
            "type": "string"
          },
          "permissionProfileName": {
            "description": "",
            "type": "string"
          },
          "profileImageUri": {
            "description": "",
            "type": "string"
          },
          "sendActivationEmail": {
            "description": "",
            "type": "string"
          },
          "sendActivationOnInvalidLogin": {
            "description": "When set to **true**, specifies that an additional activation email is sent to the user if they fail a log on before activating their account. ",
            "type": "string"
          },
          "signatureImageUri": {
            "description": "Contains the URI for an endpoint that you can use to retrieve the signature image.",
            "type": "string"
          },
          "subscribe": {
            "description": "",
            "type": "string"
          },
          "suffixName": {
            "description": "The suffix for the user's name, such as Jr, IV, PhD, etc.\n\nLimit: 50 characters. ",
            "type": "string"
          },
          "title": {
            "description": "The title of the user.",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          },
          "userName": {
            "description": "",
            "type": "string"
          },
          "userProfileLastModifiedDate": {
            "description": "The date-time when the user's profile was last modified.",
            "type": "string"
          },
          "userSettings": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          },
          "userStatus": {
            "description": "Status of the user's account. One of:\n\n* ActivationRequired\n* ActivationSent\n* Active\n* Closed\n* Disabled\n",
            "type": "string"
          },
          "userType": {
            "description": "",
            "type": "string"
          },
          "workAddress": {
            "$ref": "#/components/schemas/addressInformation_v2"
          }
        },
        "description": ""
      },
      "userInformationList": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          },
          "users": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInformation"
            }
          }
        },
        "description": ""
      },
      "userPasswordInformation": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "description": "The user's current password to be changed.",
            "type": "string"
          },
          "email": {
            "description": "The user's email address for the associated account.",
            "type": "string"
          },
          "forgottenPasswordInfo": {
            "$ref": "#/components/schemas/forgottenPasswordInformation"
          },
          "newPassword": {
            "description": "The user's new password.",
            "type": "string"
          }
        },
        "description": ""
      },
      "userPasswordRules": {
        "type": "object",
        "properties": {
          "passwordRules": {
            "$ref": "#/components/schemas/accountPasswordRules"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          }
        },
        "description": ""
      },
      "userProfile": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/addressInformation_v2"
          },
          "authenticationMethods": {
            "description": "These properties cannot be modified in the PUT. \n\nIndicates the authentication methods used by the user.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/authenticationMethod"
            }
          },
          "companyName": {
            "description": "The name of the user's Company.",
            "type": "string"
          },
          "displayOrganizationInfo": {
            "description": " When set to **true**, the user's company and title information are shown on the ID card. ",
            "type": "string"
          },
          "displayPersonalInfo": {
            "description": "When set to **true**, the user's Address and Phone number are shown on the ID card.",
            "type": "string"
          },
          "displayProfile": {
            "description": "When set to **true**, the user's ID card can be viewed from signed documents and envelope history.",
            "type": "string"
          },
          "displayUsageHistory": {
            "description": "When set to **true**, the user's usage information is shown on the ID card.",
            "type": "string"
          },
          "profileImageUri": {
            "description": "",
            "type": "string"
          },
          "title": {
            "description": "The title of the user.",
            "type": "string"
          },
          "usageHistory": {
            "$ref": "#/components/schemas/usageHistory"
          },
          "userDetails": {
            "$ref": "#/components/schemas/userInformation"
          },
          "userProfileLastModifiedDate": {
            "description": "The date-time when the user's profile was last modified.",
            "type": "string"
          }
        },
        "description": ""
      },
      "userSettingsInformation": {
        "type": "object",
        "properties": {
          "accountManagementGranular": {
            "$ref": "#/components/schemas/userAccountManagementGranularInformation"
          },
          "senderEmailNotifications": {
            "$ref": "#/components/schemas/senderEmailNotifications"
          },
          "signerEmailNotifications": {
            "$ref": "#/components/schemas/signerEmailNotifications"
          },
          "userSettings": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          }
        },
        "description": ""
      },
      "userSharedItem": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "shared": {
            "description": "How the item is shared. One of:\n\n- `not_shared`\n- `shared_to`\n- `shared_from`\n- `shared_to_and_from`\n",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/userInfo"
          }
        },
        "description": "Information about a shared item."
      },
      "userSignature": {
        "type": "object",
        "properties": {
          "adoptedDateTime": {
            "description": "The date and time the user adopted their signature.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "Indicates the date and time the item was created.",
            "type": "string"
          },
          "dateStampProperties": {
            "$ref": "#/components/schemas/dateStampProperties"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "externalID": {
            "description": "",
            "type": "string"
          },
          "imageType": {
            "description": "One of **signature_image** or **initials_image**.",
            "type": "string"
          },
          "initials150ImageId": {
            "description": "",
            "type": "string"
          },
          "initialsImageUri": {
            "description": "Contains the URI for an endpoint that you can use to retrieve the initials image.",
            "type": "string"
          },
          "isDefault": {
            "description": "",
            "type": "string"
          },
          "phoneticName": {
            "description": "",
            "type": "string"
          },
          "signature150ImageId": {
            "description": "",
            "type": "string"
          },
          "signatureFont": {
            "description": "",
            "type": "string"
          },
          "signatureId": {
            "description": "The ID of the signature being accessed.",
            "type": "string"
          },
          "signatureImageUri": {
            "description": "Contains the URI for an endpoint that you can use to retrieve the signature image.",
            "type": "string"
          },
          "signatureInitials": {
            "description": "",
            "type": "string"
          },
          "signatureName": {
            "description": "Specifies the user signature name.",
            "type": "string"
          },
          "signatureType": {
            "description": "",
            "type": "string"
          },
          "stampFormat": {
            "description": "",
            "type": "string"
          },
          "stampImageUri": {
            "description": "",
            "type": "string"
          },
          "stampSizeMM": {
            "description": "",
            "type": "string"
          },
          "stampType": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "userSignatureDefinition": {
        "type": "object",
        "properties": {
          "signatureFont": {
            "description": "",
            "type": "string"
          },
          "signatureId": {
            "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
            "type": "string"
          },
          "signatureInitials": {
            "description": "",
            "type": "string"
          },
          "signatureName": {
            "description": "Specifies the user signature name.",
            "type": "string"
          }
        },
        "description": ""
      },
      "userSignaturesInformation": {
        "type": "object",
        "properties": {
          "userSignatures": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userSignature"
            }
          }
        },
        "description": ""
      },
      "userSocialIdResult": {
        "type": "object",
        "properties": {
          "socialAccountInformation": {
            "description": "Contains properties that map a DocuSign user to a social account (Facebook, Yahoo, etc.)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAccountInformation"
            }
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          }
        },
        "description": ""
      },
      "usersResponse": {
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          },
          "users": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          }
        },
        "description": ""
      },
      "view": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "buttonText": {
            "description": "",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "height": {
            "format": "int32",
            "description": "Height of the tab in pixels.",
            "type": "integer"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "requiredRead": {
            "description": "",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          }
        },
        "description": "This tab is used with the Approve tab to handle\nsupplemental documents."
      },
      "viewUrl": {
        "type": "object",
        "properties": {
          "url": {
            "description": "The endpoint to which webhook notification messages are sent via an HTTP/S POST request. For the DocuSign production platform, the url must start with https. For the demo platform, either http or https is ok.",
            "type": "string"
          }
        },
        "description": ""
      },
      "watermark": {
        "type": "object",
        "properties": {
          "displayAngle": {
            "description": "",
            "type": "string"
          },
          "enabled": {
            "description": "",
            "type": "string"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "imageBase64": {
            "description": "",
            "type": "string"
          },
          "transparency": {
            "description": "",
            "type": "string"
          },
          "watermarkText": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "witness": {
        "type": "object",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "addAccessCodeToEmail": {
            "description": "This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.",
            "type": "string"
          },
          "agentCanEditEmail": {
            "description": "",
            "type": "string"
          },
          "agentCanEditName": {
            "description": "",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When set to **true**, autonavigation is set for the recipient.",
            "type": "string"
          },
          "bulkRecipientsUri": {
            "description": "The URL for the bulk recipient file with the bulk recipient information for this envelope, if applicable. This information is read only and is only shown after the bulk recipient file is uploaded to the envelope by using the PUT method. ",
            "type": "string"
          },
          "canSignOffline": {
            "description": "When set to **true**, specifies that the signer can perform the signing ceremony offline.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nNote: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "creationReason": {
            "description": "The reason why the recipient was created (for example, `sender`). Read only.",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. Read only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. Read only.",
            "type": "string"
          },
          "defaultRecipient": {
            "description": "When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved: For DocuSign use only.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true**.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentVisibility"
            }
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/components/schemas/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nIf set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\n\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example**: Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckInformationInput": {
            "$ref": "#/components/schemas/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/components/schemas/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "isBulkRecipient": {
            "description": "When set to **true**, this signer is a bulk recipient and the recipient information is contained in a bulk recipient file. \n\nNote that when this is true the email and name for the recipient becomes bulk@recipient.com and \"Bulk Recipient\". These fields can not be changed for the bulk recipient. \n",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/components/schemas/recipientPhoneAuthentication"
          },
          "proofFile": {
            "$ref": "#/components/schemas/recipientProofFile"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientAttachment"
            }
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/components/schemas/authenticationStatus"
          },
          "recipientId": {
            "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. Read only.",
            "type": "string"
          },
          "recipientSignatureProviders": {
            "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](https://developers.docusign.com/esign-rest-api/guides/standards-based-signatures)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipientSignatureProvider"
            }
          },
          "recipientSuppliesTabs": {
            "description": "When set to **true**, specifies that the recipient creates the tabs.",
            "type": "string"
          },
          "requireIdLookup": {
            "description": "When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireSignerCertificate": {
            "description": "By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\n\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.",
            "type": "string"
          },
          "requireSignOnPaper": {
            "description": "When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "samlAuthentication": {
            "$ref": "#/components/schemas/recipientSAMLAuthentication"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. Read only.",
            "type": "string"
          },
          "signatureInfo": {
            "$ref": "#/components/schemas/recipientSignatureInformation"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signInEachLocation": {
            "description": "When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
            "type": "string"
          },
          "signingGroupId": {
            "description": "Optional. The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n\n**Note**: When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, we recommend that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change the default action of Needs to Sign to a different value, such as Receives a Copy. ",
            "type": "string"
          },
          "signingGroupName": {
            "description": "The display name for the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userInfo"
            }
          },
          "smsAuthentication": {
            "$ref": "#/components/schemas/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": " Lists the social ID type that can be used for recipient authentication.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/socialAuthentication"
            }
          },
          "status": {
            "description": "Item status. <!-- TODO -->",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/components/schemas/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. Read only.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          },
          "witnessFor": {
            "description": "",
            "type": "string"
          },
          "witnessForGuid": {
            "description": "",
            "type": "string"
          }
        },
        "description": ""
      },
      "workspace": {
        "description": "",
        "type": "object",
        "properties": {
          "billableAccountId": {
            "description": "",
            "type": "string"
          },
          "created": {
            "description": "The UTC DateTime when the workspace user authorization was created.",
            "type": "string"
          },
          "createdByInformation": {
            "$ref": "#/components/schemas/workspaceUser"
          },
          "lastModified": {
            "description": "Utc date and time the comment was last updated (can only be done by creator.)",
            "type": "string"
          },
          "lastModifiedByInformation": {
            "$ref": "#/components/schemas/workspaceUser"
          },
          "status": {
            "description": "Item status. <!-- TODO -->",
            "type": "string"
          },
          "workspaceBaseUrl": {
            "description": "The relative URL that may be used to access the workspace.",
            "type": "string"
          },
          "workspaceDescription": {
            "description": "Text describing the purpose of the workspace.",
            "type": "string"
          },
          "workspaceId": {
            "description": "Specifies the workspace ID GUID.",
            "type": "string"
          },
          "workspaceName": {
            "description": "The name of the workspace.",
            "type": "string"
          },
          "workspaceUri": {
            "description": "The relative URI that may be used to access the workspace.",
            "type": "string"
          }
        }
      },
      "workspaceFolderContents": {
        "description": "Provides properties that describe the contents of a workspace folder.",
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "folder": {
            "$ref": "#/components/schemas/workspaceItem"
          },
          "items": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workspaceItem"
            }
          },
          "parentFolders": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workspaceItem"
            }
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          },
          "workspaceId": {
            "description": "The id of the workspace, always populated.",
            "type": "string"
          }
        }
      },
      "workspaceItem": {
        "description": "",
        "type": "object",
        "properties": {
          "callerAuthorization": {
            "$ref": "#/components/schemas/workspaceUserAuthorization"
          },
          "contentType": {
            "description": "",
            "type": "string"
          },
          "created": {
            "description": "The UTC DateTime when the workspace user authorization was created.",
            "type": "string"
          },
          "createdById": {
            "description": "",
            "type": "string"
          },
          "createdByInformation": {
            "$ref": "#/components/schemas/workspaceUser"
          },
          "extension": {
            "description": "",
            "type": "string"
          },
          "fileSize": {
            "description": "",
            "type": "string"
          },
          "fileUri": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "isPublic": {
            "description": " If true, this supersedes need for bit mask permission with workspaceUserAuthorization",
            "type": "string"
          },
          "lastModified": {
            "description": "Utc date and time the comment was last updated (can only be done by creator.)",
            "type": "string"
          },
          "lastModifiedById": {
            "description": "",
            "type": "string"
          },
          "lastModifiedByInformation": {
            "$ref": "#/components/schemas/workspaceUser"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "pageCount": {
            "description": "",
            "type": "string"
          },
          "parentFolderId": {
            "description": "",
            "type": "string"
          },
          "parentFolderUri": {
            "description": "",
            "type": "string"
          },
          "type": {
            "description": "Type of the user. Valid values: type_owner, type_participant.",
            "type": "string"
          },
          "uri": {
            "description": "",
            "type": "string"
          }
        }
      },
      "workspaceItemList": {
        "description": "Provides properties that describe the items contained in a workspace.",
        "type": "object",
        "properties": {
          "items": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workspaceItem"
            }
          }
        }
      },
      "workspaceList": {
        "description": "Provides properties that describe the workspaces avaialble.",
        "type": "object",
        "properties": {
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          },
          "workspaces": {
            "description": "A list of workspaces.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workspace"
            }
          }
        }
      },
      "workspaceUser": {
        "description": "A workspaceUser representing the user. This property is only returned in response to user specific GET call. ",
        "type": "object",
        "properties": {
          "accountId": {
            "description": "The account ID associated with the envelope.",
            "type": "string"
          },
          "accountName": {
            "description": "The name of the account that the workspace user belongs to.",
            "type": "string"
          },
          "activeSince": {
            "description": "",
            "type": "string"
          },
          "created": {
            "description": "The UTC DateTime when the workspace user was created.",
            "type": "string"
          },
          "createdById": {
            "description": "",
            "type": "string"
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "lastModified": {
            "description": "Utc date and time the comment was last updated (can only be done by creator.)",
            "type": "string"
          },
          "lastModifiedById": {
            "description": "",
            "type": "string"
          },
          "status": {
            "description": "Filters the results by user status.\nYou can specify a comma-separated\nlist of the following statuses:\n\n* ActivationRequired \n* ActivationSent \n* Active\n* Closed \n* Disabled",
            "type": "string"
          },
          "type": {
            "description": "Type of the user. Valid values: type_owner, type_participant.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing. **Note**: For the [GET /v2/accounts/{accountId}/envelopes](https://developers.docusign.com/esign-rest-api/reference/Envelopes/Envelopes/listStatusChanges/#envelopesInformation) method, the `user_id` query parameter is not implemented and should not be used.",
            "type": "string"
          },
          "userName": {
            "description": "",
            "type": "string"
          },
          "workspaceId": {
            "description": "Specifies the workspace ID GUID.",
            "type": "string"
          },
          "workspaceUserBaseUrl": {
            "description": "The relative URI that may be used to access a workspace user.",
            "type": "string"
          },
          "workspaceUserId": {
            "description": "",
            "type": "string"
          }
        }
      },
      "workspaceUserAuthorization": {
        "description": "Provides properties that describe user authorization to a workspace.",
        "type": "object",
        "properties": {
          "canDelete": {
            "description": "",
            "type": "string"
          },
          "canMove": {
            "description": "",
            "type": "string"
          },
          "canTransact": {
            "description": "",
            "type": "string"
          },
          "canView": {
            "description": "",
            "type": "string"
          },
          "created": {
            "description": "The UTC DateTime when the workspace user authorization was created.",
            "type": "string"
          },
          "createdById": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "modified": {
            "description": "",
            "type": "string"
          },
          "modifiedById": {
            "description": "",
            "type": "string"
          },
          "workspaceUserId": {
            "description": "",
            "type": "string"
          },
          "workspaceUserInformation": {
            "$ref": "#/components/schemas/workspaceUser"
          }
        }
      },
      "zip": {
        "type": "object",
        "properties": {
          "anchorCaseSensitive": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\n-->",
            "type": "string"
          },
          "anchorHorizontalAlignment": {
            "description": "Reserved for DocuSign.\n<!--\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\n-->\n",
            "type": "string"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When set to **true**, this tab is ignored if anchorString is not found in the document.",
            "type": "string"
          },
          "anchorMatchWholeWord": {
            "description": "Reserved for DocuSign.\n<!--\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\n-->\n",
            "type": "string"
          },
          "anchorString": {
            "description": "Specifies the anchor string.",
            "type": "string"
          },
          "anchorUnits": {
            "description": "Specifies units of the\n`anchorXOffset` and\n`anchorYOffset`.\nValid units are:\n\n- `pixels`\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "bold": {
            "description": "When set to **true**, the information in the tab is bold.",
            "type": "string"
          },
          "concealValueOnDocument": {
            "description": "When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "disableAutoSize": {
            "description": "When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported Fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color used for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "italic": {
            "description": "When set to **true**, the information in the tab is italic.",
            "type": "string"
          },
          "locked": {
            "description": "When set to **true**, the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "maxLength": {
            "format": "int32",
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "integer"
          },
          "mergeField": {
            "$ref": "#/components/schemas/mergeField"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "requireAll": {
            "description": "When set to **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "required": {
            "description": "When set to **true**, the signer is required to fill out this tab",
            "type": "string"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "senderRequired": {
            "description": "When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "shared": {
            "description": "When set to **true**, this custom tab is shared.",
            "type": "string"
          },
          "status": {
            "description": "Tab status\n<!-- todo -->\n",
            "type": "string"
          },
          "tabGroupLabels": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label string associated with the tab.\nThe string may be the empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum of 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "tooltip": {
            "description": "",
            "type": "string"
          },
          "underline": {
            "description": "When set to **true**, the information in the tab is underlined.",
            "type": "string"
          },
          "useDash4": {
            "description": "",
            "type": "string"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationPattern": {
            "description": "A regular expressionn used to validate input for the tab.",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "width": {
            "format": "int32",
            "description": "Width of the tab in pixels.",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          }
        },
        "description": "A tab that allows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n"
      },
      "AccountBrands": {
        "type": "object",
        "properties": {
          "brands": {
            "description": "The list of brands.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/brand"
            }
          },
          "recipientBrandIdDefault": {
            "description": "The brand seen by envelope recipients when a brand is not explicitly set.",
            "type": "string"
          },
          "senderBrandIdDefault": {
            "description": "The brand seen by envelope senders when a brand is not explicitly set.",
            "type": "string"
          }
        },
        "description": "Brand management for accounts"
      },
      "AccountConsumerDisclosures": {
        "type": "object",
        "properties": {
          "accountEsignId": {
            "description": "A GUID identifying the account associated with the consumer disclosure",
            "type": "string"
          },
          "allowCDWithdraw": {
            "description": "Indicates whether the customer can withdraw their acceptance of the consumer disclosure.",
            "type": "string"
          },
          "allowCDWithdrawMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "changeEmail": {
            "description": "",
            "type": "string"
          },
          "changeEmailOther": {
            "description": "",
            "type": "string"
          },
          "companyName": {
            "description": "The name of the company associated with the consumer disclosure.",
            "type": "string"
          },
          "companyPhone": {
            "description": "The phone number of the company associated with the consumer disclosure.",
            "type": "string"
          },
          "copyCostPerPage": {
            "description": "",
            "type": "string"
          },
          "copyFeeCollectionMethod": {
            "description": "Specifies the fee collection method for cases in which the customer requires paper copies of the document.\n\nMaximum Length: 255 characters",
            "type": "string"
          },
          "copyRequestEmail": {
            "description": "",
            "type": "string"
          },
          "custom": {
            "description": "",
            "type": "string"
          },
          "enableEsign": {
            "description": "",
            "type": "string"
          },
          "esignAgreement": {
            "description": "The Electronic Record and Signature Disclosure text. The disclosure text includes the html formatting.",
            "type": "string"
          },
          "esignText": {
            "description": "",
            "type": "string"
          },
          "languageCode": {
            "description": "",
            "type": "string"
          },
          "mustAgreeToEsign": {
            "description": "",
            "type": "string"
          },
          "pdfId": {
            "description": "**Deprecated**\n\nThe `pdfId` property in the consumer_disclosure PUT request is deprecated. For security reasons going forward, any value provided in the request packet must be ignored. ",
            "type": "string"
          },
          "useBrand": {
            "description": "",
            "type": "string"
          },
          "useConsumerDisclosureWithinAccount": {
            "description": "",
            "type": "string"
          },
          "useConsumerDisclosureWithinAccountMetadata": {
            "$ref": "#/components/schemas/settingsMetadata"
          },
          "withdrawAddressLine1": {
            "description": "Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "withdrawAddressLine2": {
            "description": "Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "withdrawByEmail": {
            "description": "Indicates whether the customer can withdraw consent by email.",
            "type": "string"
          },
          "withdrawByMail": {
            "description": "Indicates whether the customer can withdraw consent by postal mail.",
            "type": "string"
          },
          "withdrawByPhone": {
            "description": "Indicates whether the customer can withdraw consent by phone.",
            "type": "string"
          },
          "withdrawCity": {
            "description": "Contains the city of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 50 characters. ",
            "type": "string"
          },
          "withdrawConsequences": {
            "description": "Indicates the consequences of withdrawing consent.",
            "type": "string"
          },
          "withdrawEmail": {
            "description": "Contains the email address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "withdrawOther": {
            "description": "Indicates other information need to withdraw consent.\n\nMaximum length: 255 characters.",
            "type": "string"
          },
          "withdrawPhone": {
            "description": "Contains the phone number which a customer can call to register consent withdrawal notification.\n\nMaximum length: 20 characters. ",
            "type": "string"
          },
          "withdrawPostalCode": {
            "description": "Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 20 characters. ",
            "type": "string"
          },
          "withdrawState": {
            "description": "Contains the state of the postal address to which a customer can send a consent withdrawal notification.",
            "type": "string"
          }
        },
        "description": "Account consumer disclosures"
      },
      "AccountCustomFields": {
        "description": "Custom Fields",
        "type": "object",
        "properties": {
          "listCustomFields": {
            "description": "An array of list custom fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/listCustomField"
            }
          },
          "textCustomFields": {
            "description": "An array of text custom fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/textCustomField"
            }
          }
        }
      },
      "EnvelopeBulkRecipients": {
        "type": "object",
        "properties": {
          "bulkRecipients": {
            "description": "A complex type containing information about the bulk recipients in the response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkRecipient"
            }
          },
          "endPosition": {
            "description": "The last position in the result set. ",
            "type": "string"
          },
          "nextUri": {
            "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "type": "string"
          },
          "previousUri": {
            "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "type": "string"
          },
          "resultSetSize": {
            "description": "The number of results returned in this response. ",
            "type": "string"
          },
          "startPosition": {
            "description": "Starting position of the current result set.",
            "type": "string"
          },
          "totalSetSize": {
            "description": "The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.",
            "type": "string"
          }
        },
        "description": "Envelope bulk recipients"
      },
      "EnvelopeCustomFields": {
        "description": "Envelope custom fields",
        "type": "object",
        "properties": {
          "listCustomFields": {
            "description": "An array of list custom fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/listCustomField"
            }
          },
          "textCustomFields": {
            "description": "An array of text custom fields.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/textCustomField"
            }
          }
        }
      },
      "EnvelopeDocumentFields": {
        "type": "object",
        "properties": {
          "documentFields": {
            "description": "The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: \n\n* name - A string that can be a maximum of 50 characters. \n* value - A string that can be a maximum of 200 characters.\n\n*IMPORTANT*: If you are using xml, the name/value pair is contained in a nameValue element. \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nameValue"
            }
          }
        },
        "description": "Envelope document fields"
      },
      "EnvelopeLocks": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "lockDurationInSeconds": {
            "description": "Sets the time, in seconds, until the lock expires when there is no activity on the envelope.\n\nIf no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.\n\nThe lock duration can be extended.\n",
            "type": "string"
          },
          "lockedByApp": {
            "description": "Specifies the friendly name of  the application that is locking the envelope.",
            "type": "string"
          },
          "lockedByUser": {
            "$ref": "#/components/schemas/userInfo"
          },
          "lockedUntilDateTime": {
            "description": "The datetime until the envelope lock expires.",
            "type": "string"
          },
          "lockToken": {
            "description": "A unique identifier provided to the owner of the envelope lock.   Used to prove ownership of the lock.",
            "type": "string"
          },
          "lockType": {
            "description": "The type of envelope lock.  Currently \"edit\" is the only supported type.",
            "type": "string"
          },
          "useScratchPad": {
            "description": "Reserved for future use.\n\nIndicates whether a scratchpad is used for editing information.\n ",
            "type": "string"
          }
        },
        "description": "Envelope locks"
      },
      "EnvelopeRecipients": {
        "description": "Envelope recipients",
        "type": "object",
        "properties": {
          "agents": {
            "description": "A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/agent"
            }
          },
          "carbonCopies": {
            "description": "A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/carbonCopy"
            }
          },
          "certifiedDeliveries": {
            "description": "A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/certifiedDelivery"
            }
          },
          "currentRoutingOrder": {
            "description": "",
            "type": "string"
          },
          "editors": {
            "description": "A complex type defining the management and access rights of a recipient assigned assigned as an editor on the document.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/editor"
            }
          },
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "inPersonSigners": {
            "description": "Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inPersonSigner"
            }
          },
          "intermediaries": {
            "description": "Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/intermediary"
            }
          },
          "recipientCount": {
            "description": "The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:\n\n* recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\n* includeDocuments - When set to **true**, the envelope time zone information is included in the message.",
            "type": "string"
          },
          "seals": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sealSign"
            }
          },
          "signers": {
            "description": "A complex type containing information about the Signer recipient.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signer"
            }
          },
          "witnesses": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/witness"
            }
          }
        }
      },
      "EnvelopeRecipientTabs": {
        "type": "object",
        "properties": {
          "approveTabs": {
            "description": "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/approve"
            }
          },
          "checkboxTabs": {
            "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nThis tab allows the recipient to select a yes/no (on/off) option.\n\n\n[checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/checkbox"
            }
          },
          "companyTabs": {
            "description": "A list of \n[Company tabs][company].\n\n\nThis tab displays the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/company"
            }
          },
          "dateSignedTabs": {
            "description": "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dateSigned"
            }
          },
          "dateTabs": {
            "description": "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/date"
            }
          },
          "declineTabs": {
            "description": "A list of \n[Decline tabs][decline].\n\nThis tab allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/decline"
            }
          },
          "emailAddressTabs": {
            "description": "A list of \n[Email Address tabs][emailAddress].\n\nThis tab \ndisplays the recipient's email as entered in the\nrecipient information.\n\n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emailAddress"
            }
          },
          "emailTabs": {
            "description": "A list of \n[Email tabs][email].\n\nThis tab \nallows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/email"
            }
          },
          "envelopeIdTabs": {
            "description": "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \ndisplays the envelope ID. Recipients cannot enter\nor change the information in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeId"
            }
          },
          "firstNameTabs": {
            "description": "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays the recipient's first name. It\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/firstName"
            }
          },
          "formulaTabs": {
            "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n[formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/formulaTab"
            }
          },
          "fullNameTabs": {
            "description": "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fullName"
            }
          },
          "initialHereTabs": {
            "description": "A list of \n[Initial Here tabs][initialHere].\n\nThis tab allows the recipient to initial the document. May\nbe optional.\n\n[initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/initialHere"
            }
          },
          "lastNameTabs": {
            "description": "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays the recipient's last name. It\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lastName"
            }
          },
          "listTabs": {
            "description": "A list of \n[list tabs][list].\n\nThis tab offers a list of options to choose from. The\n`listItems` property is used to specify the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/list"
            }
          },
          "notarizeTabs": {
            "description": "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is a tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notarize"
            }
          },
          "noteTabs": {
            "description": "A list of \n[Note tabs][note].\n\nThis tab  displays additional information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/note"
            }
          },
          "numberTabs": {
            "description": "A list of \n[Number tabs][number].\n\nThis tab allows the recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/number"
            }
          },
          "radioGroupTabs": {
            "description": "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \nThis group tab is used to place radio buttons on a document.\nThe `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can\nbe selected in a group.\n\n\n[radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/radioGroup"
            }
          },
          "signerAttachmentTabs": {
            "description": "A list of \n[Signer Attachment tabs][signerAttachment].\n\nThis tab \nallows the recipient to attach supporting\ndocuments to an envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signerAttachment"
            }
          },
          "signHereTabs": {
            "description": "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signHere"
            }
          },
          "smartSectionTabs": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/smartSection"
            }
          },
          "ssnTabs": {
            "description": "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n\n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ssn"
            }
          },
          "textTabs": {
            "description": "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/text"
            }
          },
          "titleTabs": {
            "description": "A list of \n[Title tabs][title].\n\nThis tab  displays the recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/title"
            }
          },
          "viewTabs": {
            "description": "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/view"
            }
          },
          "zipTabs": {
            "description": "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zip"
            }
          }
        },
        "description": "All of the tabs associated with a recipient. Each property is a list of a type of tab.\n"
      },
      "EnvelopeDocumentTabs": {
        "type": "object",
        "properties": {
          "approveTabs": {
            "description": "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/approve"
            }
          },
          "checkboxTabs": {
            "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nThis tab allows the recipient to select a yes/no (on/off) option.\n\n\n[checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/checkbox"
            }
          },
          "companyTabs": {
            "description": "A list of \n[Company tabs][company].\n\n\nThis tab displays the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/company"
            }
          },
          "dateSignedTabs": {
            "description": "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dateSigned"
            }
          },
          "dateTabs": {
            "description": "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/date"
            }
          },
          "declineTabs": {
            "description": "A list of \n[Decline tabs][decline].\n\nThis tab allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/decline"
            }
          },
          "emailAddressTabs": {
            "description": "A list of \n[Email Address tabs][emailAddress].\n\nThis tab \ndisplays the recipient's email as entered in the\nrecipient information.\n\n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emailAddress"
            }
          },
          "emailTabs": {
            "description": "A list of \n[Email tabs][email].\n\nThis tab \nallows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/email"
            }
          },
          "envelopeIdTabs": {
            "description": "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \ndisplays the envelope ID. Recipients cannot enter\nor change the information in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeId"
            }
          },
          "firstNameTabs": {
            "description": "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays the recipient's first name. It\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/firstName"
            }
          },
          "formulaTabs": {
            "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n[formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/formulaTab"
            }
          },
          "fullNameTabs": {
            "description": "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fullName"
            }
          },
          "initialHereTabs": {
            "description": "A list of \n[Initial Here tabs][initialHere].\n\nThis tab allows the recipient to initial the document. May\nbe optional.\n\n[initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/initialHere"
            }
          },
          "lastNameTabs": {
            "description": "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays the recipient's last name. It\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lastName"
            }
          },
          "listTabs": {
            "description": "A list of \n[list tabs][list].\n\nThis tab offers a list of options to choose from. The\n`listItems` property is used to specify the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/list"
            }
          },
          "notarizeTabs": {
            "description": "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is a tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notarize"
            }
          },
          "noteTabs": {
            "description": "A list of \n[Note tabs][note].\n\nThis tab  displays additional information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/note"
            }
          },
          "numberTabs": {
            "description": "A list of \n[Number tabs][number].\n\nThis tab allows the recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/number"
            }
          },
          "radioGroupTabs": {
            "description": "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \nThis group tab is used to place radio buttons on a document.\nThe `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can\nbe selected in a group.\n\n\n[radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/radioGroup"
            }
          },
          "signerAttachmentTabs": {
            "description": "A list of \n[Signer Attachment tabs][signerAttachment].\n\nThis tab \nallows the recipient to attach supporting\ndocuments to an envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signerAttachment"
            }
          },
          "signHereTabs": {
            "description": "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signHere"
            }
          },
          "smartSectionTabs": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/smartSection"
            }
          },
          "ssnTabs": {
            "description": "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n\n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ssn"
            }
          },
          "textTabs": {
            "description": "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/text"
            }
          },
          "titleTabs": {
            "description": "A list of \n[Title tabs][title].\n\nThis tab  displays the recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/title"
            }
          },
          "viewTabs": {
            "description": "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/view"
            }
          },
          "zipTabs": {
            "description": "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zip"
            }
          }
        },
        "description": "Envelope Document Tabs resource "
      },
      "TemplateDocumentTabs": {
        "type": "object",
        "properties": {
          "approveTabs": {
            "description": "A list of\n[Approve tabs][approve].\n\n\nThis tab allows\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\n\n[approve]:\t\t      https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/approve"
            }
          },
          "checkboxTabs": {
            "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nThis tab allows the recipient to select a yes/no (on/off) option.\n\n\n[checkbox]:  https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/checkbox"
            }
          },
          "companyTabs": {
            "description": "A list of \n[Company tabs][company].\n\n\nThis tab displays the recipient's company name.\n\n\n\n[company]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/company \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/company"
            }
          },
          "dateSignedTabs": {
            "description": "A list of \n[Date Signed tabs][dateSigned]\n\n\nThis tab displays the date that the recipient signed the\ndocument.\n\n[dateSigned]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dateSigned"
            }
          },
          "dateTabs": {
            "description": "A list of \n[Date tabs][date].\n\n\nThis tab allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n\n\n[date]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/date"
            }
          },
          "declineTabs": {
            "description": "A list of \n[Decline tabs][decline].\n\nThis tab allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n\n\n[decline]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/decline"
            }
          },
          "emailAddressTabs": {
            "description": "A list of \n[Email Address tabs][emailAddress].\n\nThis tab \ndisplays the recipient's email as entered in the\nrecipient information.\n\n\n[emailAddress]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/emailAddress"
            }
          },
          "emailTabs": {
            "description": "A list of \n[Email tabs][email].\n\nThis tab \nallows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/email"
            }
          },
          "envelopeIdTabs": {
            "description": "A list of \n[Envelope ID tabs][envelopeId].\n\nThis tab \ndisplays the envelope ID. Recipients cannot enter\nor change the information in this tab.\n\n\n[envelopeId]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/envelopeId \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/envelopeId"
            }
          },
          "firstNameTabs": {
            "description": "A list of \n[First Name tabs][firstName].\n\nThis tab \ndisplays the recipient's first name. It\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n\n\n[firstName]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/firstName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/firstName"
            }
          },
          "formulaTabs": {
            "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n[formulaTab]:\t    \thttps://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/formulaTab"
            }
          },
          "fullNameTabs": {
            "description": "A list of \n[Full Name tabs][fullName].\n\nThis tab \ndisplays the recipient's full name.\n\n\n[fullName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fullName"
            }
          },
          "initialHereTabs": {
            "description": "A list of \n[Initial Here tabs][initialHere].\n\nThis tab allows the recipient to initial the document. May\nbe optional.\n\n[initialHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/initialHere"
            }
          },
          "lastNameTabs": {
            "description": "A list of \n[Last Name tabs][lastName].\n\nThis tab \ndisplays the recipient's last name. It\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n\n\n[lastName]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lastName"
            }
          },
          "listTabs": {
            "description": "A list of \n[list tabs][list].\n\nThis tab offers a list of options to choose from. The\n`listItems` property is used to specify the selectable\noptions.\n\n\n\n[list]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/list \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/list"
            }
          },
          "notarizeTabs": {
            "description": "A list of \n[Notarize tabs][notarize].\n\nA notarize tab is a tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page.\n\n[notarize]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notarize"
            }
          },
          "noteTabs": {
            "description": "A list of \n[Note tabs][note].\n\nThis tab  displays additional information, in the form of a\nnote, for the recipient.\n\n[note]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/note"
            }
          },
          "numberTabs": {
            "description": "A list of \n[Number tabs][number].\n\nThis tab allows the recipient to enter numbers and decimal\n(.) points.\n\n\n\n[number]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/number"
            }
          },
          "radioGroupTabs": {
            "description": "A list of \n[Radio Group tabs][radioGroup].\n\nThis tab \nThis group tab is used to place radio buttons on a document.\nThe `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can\nbe selected in a group.\n\n\n[radioGroup]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/radioGroup"
            }
          },
          "signerAttachmentTabs": {
            "description": "A list of \n[Signer Attachment tabs][signerAttachment].\n\nThis tab \nallows the recipient to attach supporting\ndocuments to an envelope.\n\n\n[signerAttachment]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signerAttachment"
            }
          },
          "signHereTabs": {
            "description": "A list of \n[Sign Here tabs][signHere].\n\nThis tab  allows the recipient to sign a document. May be\noptional.\n\n[signHere]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/signHere"
            }
          },
          "smartSectionTabs": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/smartSection"
            }
          },
          "ssnTabs": {
            "description": "A list of \n[SSN tabs][ssn].\n\nThis tab \nis a one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n\n\n[ssn]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ssn"
            }
          },
          "textTabs": {
            "description": "A list of \n[Text tabs][text].\n\nThis tab \nA tab that allows the recipient to enter any type of text.\n\n[text]: https://developers.docusign.com/esign-rest-api/reference/EnvelopeRecipientTabs/create/#/definitions/text \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/text"
            }
          },
          "titleTabs": {
            "description": "A list of \n[Title tabs][title].\n\nThis tab  displays the recipient's title.\n\n\n[title]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/title"
            }
          },
          "viewTabs": {
            "description": "A list of \n[View tabs][view].\n\nThis tab \nThis tab is used with the Approve tab to handle\nsupplemental documents.\n\n[view]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view \n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/view"
            }
          },
          "zipTabs": {
            "description": "A list of \n[Zip tabs][zip].\n\nThis tab \nallows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n\n\n[zip]: https://developers.docusign.com/esign-rest-api/reference/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zip"
            }
          }
        },
        "description": ""
      },
      "EnvelopeViews": {
        "type": "object",
        "properties": {
          "url": {
            "description": "The view URL to be navigated to.",
            "type": "string"
          }
        },
        "description": "Embedding Envelope views"
      },
      "AccountSealProviders": {
        "type": "object",
        "properties": {
          "seals": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sealIdentifier"
            }
          }
        },
        "description": ""
      }
    }
  }
}
