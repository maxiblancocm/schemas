{
  "openapi": "3.0.1",
  "info": {
    "version": "4.76.1",
    "title": "Linode",
    "description": "",
    "x-categories": ["cloud-computing"],
    "x-logo": {
      "url": "https://raw.githubusercontent.com/chainjet/assets/master/integrations/linode.png"
    },
    "contact": {
      "name": "Linode",
      "url": "/"
    }
  },
  "servers": [
    {
      "url": "https://api.linode.com/v4"
    },
    {
      "url": "https://api.linode.com/v4beta"
    }
  ],
  "paths": {
    "/account": {
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Account"],
        "summary": "View Account",
        "description": "Returns the contact and billing information related to your Account.\n",
        "operationId": "getAccount",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single Account object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account view\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Account"],
        "summary": "Update Account",
        "description": "Updates contact and billing information related to your Account.\n",
        "operationId": "updateAccount",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Update contact and billing information.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Account.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"address_1\": \"123 Main St.\",\n      \"address_2\": \"Suite 101\",\n      \"city\": \"Philadelphia\",\n      \"company\": \"My Company, LLC\",\n      \"country\": \"US\",\n      \"email\": \"jsmith@mycompany.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Smith\",\n      \"phone\": \"555-555-1212\",\n      \"state\": \"PA\",\n      \"zip\": 19102,\n      }\n    }' \\\n    https://api.linode.com/v4/account\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account update \\\n  --first_name John \\\n  --last_name Smith\n"
          }
        ]
      }
    },
    "/account/cancel": {
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Account"],
        "summary": "Cancel Account",
        "description": "Cancels an active Linode account. This action will cause Linode to attempt to charge the credit card on file for the remaining balance. An error will occur if Linode fails to charge the credit card on file. Restricted users will not be able to cancel an account.\n",
        "operationId": "cancelAccount",
        "x-linode-cli-action": "cancel",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Supply a comment stating the reason that you are cancelling your account.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comments": {
                    "type": "string",
                    "description": "Any reason for cancelling the account, and any other comments you might have about your Linode service.\n",
                    "example": "I'm consolidating multiple accounts into one."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "survey_link": {
                      "type": "string",
                      "description": "A link to Linode's exit survey."
                    }
                  },
                  "example": {
                    "survey_link": "https://alinktothesurvey.com"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Could not charge the credit card on file",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "reason": {
                            "type": "string",
                            "description": "A string explaining that the account could not be cancelled because there is an outstanding balance on the account that must be paid first.\n",
                            "example": "We were unable to charge your credit card for services rendered. We cannot cancel this account until the balance has been paid.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"comments\": \"I'm consolidating my accounts.\"\n      }\n    }' \\\n    https://api.linode.com/v4/account/cancel\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account cancel \\\n  --comments \"I'm consolidating my accounts\"\n"
          }
        ]
      }
    },
    "/account/credit-card": {
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Account"],
        "summary": "Add/Edit Credit Card",
        "description": "Adds/edit credit card information to your Account.\nOnly one credit card can be associated with your Account, so using this endpoint will overwrite your currently active card information with the new credit card.\n",
        "operationId": "createCreditCard",
        "x-linode-cli-action": "update-card",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Update the credit card information associated with your Account.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCard"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cvv": {
                        "type": "string",
                        "description": "The Card Verification Value on the back of the card.\n",
                        "example": "123"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credit Card updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"card_number\": \"4111111111111111\",\n      \"expiry_month\": 11,\n      \"expiry_year\": 2020\n    }' \\\n    https://api.linode.com/v4/account/credit-card\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account update-card \\\n  --card_number 4111111111111111 \\\n  --expiry_month 11 \\\n  --expiry_year 2025\n"
          }
        ]
      }
    },
    "/account/events": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Account"],
        "summary": "List Events",
        "description": "Returns a collection of Event objects representing actions taken on your Account from the last 90 days. The Events returned depend on your grants.\n",
        "operationId": "getEvents",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["events:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated lists of Event objects from the last 90 days.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Event"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/events\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli events list\n"
          }
        ]
      }
    },
    "/account/events/{eventId}": {
      "parameters": [
        {
          "name": "eventId",
          "in": "path",
          "description": "The ID of the Event.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Account"],
        "summary": "View Event",
        "description": "Returns a single Event object.\n",
        "operationId": "getEvent",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["events:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "An Event object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/events/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli events view 123\n"
          }
        ]
      }
    },
    "/account/events/{eventId}/read": {
      "parameters": [
        {
          "name": "eventId",
          "in": "path",
          "description": "The ID of the Event to designate as read.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Account"],
        "summary": "Mark Event as Read",
        "description": "Marks a single Event as read.",
        "operationId": "eventRead",
        "x-linode-cli-action": "mark-read",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["events:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Event read.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/account/events/123/read\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli events mark-read 123\n"
          }
        ]
      }
    },
    "/account/events/{eventId}/seen": {
      "parameters": [
        {
          "name": "eventId",
          "in": "path",
          "description": "The ID of the Event to designate as seen.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Account"],
        "summary": "Mark Event as Seen",
        "description": "Marks all Events up to and including this Event by ID as seen.\n",
        "operationId": "eventSeen",
        "x-linode-cli-action": "mark-seen",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["events:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Events seen.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/account/events/123/seen\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli events mark-seen 123\n"
          }
        ]
      }
    },
    "/account/invoices": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Account"],
        "summary": "List Invoices",
        "description": "Returns a paginated list of Invoices against your Account.\n",
        "operationId": "getInvoices",
        "x-linode-cli-action": "invoices-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Invoice objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/invoices\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account invoices-list\n"
          }
        ]
      }
    },
    "/account/invoices/{invoiceId}": {
      "parameters": [
        {
          "name": "invoiceId",
          "in": "path",
          "description": "The ID of the Invoice.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Account"],
        "summary": "View Invoice",
        "description": "Returns a single Invoice object.",
        "operationId": "getInvoice",
        "x-linode-cli-action": "invoice-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "An Invoice object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/invoices/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account invoice-view 123\n"
          }
        ]
      }
    },
    "/account/invoices/{invoiceId}/items": {
      "parameters": [
        {
          "name": "invoiceId",
          "in": "path",
          "description": "The ID of the Invoice.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Account"],
        "summary": "List Invoice Items",
        "description": "Returns a paginated list of Invoice items.",
        "operationId": "getInvoiceItems",
        "x-linode-cli-action": "invoice-items",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of InvoiceItem objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvoiceItem"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/invoices/123/items\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account invoice-items 123\n"
          }
        ]
      }
    },
    "/account/logins": {
      "get": {
        "tags": ["Account"],
        "summary": "List All User Logins",
        "description": "Returns a collection of successful logins for all users on the account during the last 90 days. This command can only be accessed by the unrestricted users of an account.\n",
        "operationId": "getAccountLogins",
        "x-linode-cli-action": "logins-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of successful logins for all users on the account during the last 90 days.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Login"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/logins\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account logins-list\n"
          }
        ]
      }
    },
    "/account/logins/{loginId}": {
      "parameters": [
        {
          "name": "loginId",
          "in": "path",
          "description": "The ID of the login object to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["Account"],
        "summary": "View Login",
        "description": "Returns a Login object that displays information about a successful login. The logins that can be viewed can be for any user on the account, and are not limited to only the logins of the user that is accessing this API endpoint. This command can only be accessed by the unrestricted users of the account.\n",
        "operationId": "getAccountLogin",
        "x-linode-cli-action": "login-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested login object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/logins/1234\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account login-view 1234\n"
          }
        ]
      }
    },
    "/account/maintenance": {
      "get": {
        "x-linode-grant": "read_only",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Account"],
        "summary": "List Maintenance",
        "description": "Returns a collection of Maintenance objects for any entity a user has permissions to view.\n\nCurrently, Linodes are the only entities available for viewing.\n\n**Beta**: This endpoint is in beta. Please make sure to prepend all requests with `/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking updates in the future. This notice will be removed when this endpoint is out of beta.\n",
        "operationId": "getMaintenance",
        "x-linode-cli-action": "maintenance-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["maintenance:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Maintenance objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Maintenance"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4beta/account/maintenance\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account maintenance-list\n"
          }
        ]
      }
    },
    "/account/notifications": {
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Account"],
        "summary": "List Notifications",
        "description": "Returns a collection of Notification objects representing important, often time-sensitive items related to your Account.\nYou cannot interact directly with Notifications, and a Notification will disappear when the circumstances causing it have been resolved. For example, if you have an important Ticket open, you must respond to the Ticket to dismiss the Notification.\n",
        "operationId": "getNotifications",
        "x-linode-cli-action": "notifications-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Notification objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Notification"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/notifications\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account notifications-list\n"
          }
        ]
      }
    },
    "/account/oauth-clients": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Account"],
        "summary": "List OAuth Clients",
        "description": "Returns a paginated list of OAuth Clients registered to your Account.  OAuth Clients allow users to log into applications you write or host using their Linode Account, and may allow them to grant some level of access to their Linodes or other entities to your application.\n",
        "operationId": "getClients",
        "x-linode-cli-action": "clients-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of OAuth Clients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OAuthClient"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/oauth-clients\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account clients-list\n"
          }
        ]
      },
      "post": {
        "tags": ["Account"],
        "summary": "Create OAuth Client",
        "description": "Creates an OAuth Client, which can be used to allow users (using their Linode account) to log in to your own application, and optionally grant your application some amount of access to their Linodes or other entities.\n",
        "operationId": "createClient",
        "x-linode-cli-action": "client-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the OAuth Client to create.",
          "content": {
            "application/json": {
              "schema": {
                "required": ["label", "redirect_uri"],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OAuthClient"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "public": {
                        "type": "boolean",
                        "description": "Whether to create a public or private client.",
                        "example": false,
                        "readOnly": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthClient"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n        \"redirect_uri\": \"https://example.org/oauth/callback\",\n        \"label\": \"Test_Client_1\",\n        \"public\": false\n    }' \\\n    https://api.linode.com/v4/account/oauth-clients\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account client-create \\\n  --label Test_Client_1 \\\n  --redirect_uri https://example.org/callback\n"
          }
        ]
      }
    },
    "/account/oauth-clients/{clientId}": {
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "The OAuth Client ID to look up.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Account"],
        "summary": "View OAuth Client",
        "description": "Returns information about a single OAuth client.\n",
        "operationId": "getClient",
        "x-linode-cli-action": "client-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Information about the requested client.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthClient"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account client-view \\\n  edc6790ea9db4d224c5c\n"
          }
        ]
      },
      "put": {
        "tags": ["Account"],
        "summary": "Update OAuth Client",
        "description": "Update information about an OAuth Client on your Account. This can be especially useful to update the `redirect_uri` of your client in the event that the callback url changed in your application.\n",
        "operationId": "updateClient",
        "x-linode-cli-action": "client-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthClient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthClient"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"redirect_uri\": \"https://example.org/oauth/callback\",\n      \"label\": \"Test_Client_1\"\n      }\n    }' \\\n    https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account client-update \\\n  edc6790ea9db4d224c5c \\\n  --label Test_Client_1\n"
          }
        ]
      },
      "delete": {
        "tags": ["Account"],
        "summary": "Delete OAuth Client",
        "description": "Deletes an OAuth Client registered with Linode. The Client ID and Client secret will no longer be accepted by <a target=\"_top\" href=\"https://login.linode.com\">https://login.linode.com</a>, and all tokens issued to this client will be invalidated (meaning that if your application was using a token, it will no longer work).\n",
        "operationId": "deleteClient",
        "x-linode-cli-action": "client-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Client deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account client-delete \\\n  edc6790ea9db4d224c5c\n"
          }
        ]
      }
    },
    "/account/oauth-clients/{clientId}/reset-secret": {
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "The OAuth Client ID to look up.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "tags": ["Account"],
        "summary": "Reset OAuth Client Secret",
        "description": "Resets the OAuth Client secret for a client you own, and returns the OAuth Client with the plaintext secret. This secret is not supposed to be publicly known or disclosed anywhere. This can be used to generate a new secret in case the one you have has been leaked, or to get a new secret if you lost the original. The old secret is expired immediately, and logins to your client with the old secret will fail.\n",
        "operationId": "resetClientSecret",
        "x-linode-cli-action": "client-reset-secret",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Client secret reset successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthClient"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c/reset-secret\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account client-reset-secret \\\n  edc6790ea9db4d224c5c\n"
          }
        ]
      }
    },
    "/account/oauth-clients/{clientId}/thumbnail": {
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "The OAuth Client ID to look up.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Account"],
        "summary": "View OAuth Client Thumbnail",
        "description": "Returns the thumbnail for this OAuth Client.  This is a publicly-viewable endpoint, and can be accessed without authentication.\n",
        "operationId": "getClientThumbnail",
        "x-linode-cli-skip": true,
        "x-linode-cli-action": "client-thumbnail",
        "responses": {
          "200": {
            "description": "The client's thumbnail.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c/thumbnail > thumbnail.png\n"
          }
        ]
      },
      "put": {
        "tags": ["Account"],
        "summary": "Update OAuth Client Thumbnail",
        "description": "Upload a thumbnail for a client you own.  You must upload an image file that will be returned when the thumbnail is retrieved.  This image will be publicly-viewable.\n",
        "operationId": "setClientThumbnail",
        "x-linode-cli-skip": true,
        "x-linode-cli-action": "update-client-thumbnail",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The image to set as the thumbnail.",
          "required": true,
          "content": {
            "image/png": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Thumbnail updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: image/png\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT \\\n    --data-binary \"/path/to/image\"\n    https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c/thumbnail\n"
          }
        ]
      }
    },
    "/account/payments": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "x-linode-grant": "read_only",
        "tags": ["Account"],
        "summary": "List Payments",
        "description": "Returns a paginated list of Payments made on this Account.\n",
        "operationId": "getPayments",
        "x-linode-cli-action": "payments-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Payment objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Payment"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/payments\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account payments-list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Account"],
        "summary": "Make Payment",
        "description": "Makes a Payment to your Account via credit card. This will charge your credit card the requested amount.\n",
        "operationId": "createPayment",
        "x-linode-cli-action": "payment-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the Payment you are making.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment made.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n        \"cvv\": \"123\",\n        \"usd\": \"120.50\"\n    }' \\\n    https://api.linode.com/v4/account/payments\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account payment-create \\\n  --cvv 123 \\\n  --usd 120.50\n"
          }
        ]
      }
    },
    "/account/payments/{paymentId}": {
      "parameters": [
        {
          "name": "paymentId",
          "in": "path",
          "description": "The ID of the Payment to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Account"],
        "summary": "View Payment",
        "description": "Returns information about a specific Payment.\n",
        "operationId": "getPayment",
        "x-linode-cli-action": "payment-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A Payment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/payments/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account payment-view 123\n"
          }
        ]
      }
    },
    "/account/payments/paypal": {
      "post": {
        "x-linode-grant": "read_only",
        "tags": ["Account"],
        "summary": "Stage PayPal Payment",
        "description": "This begins the process of submitting a Payment via PayPal. After calling this endpoint, you must take the resulting `payment_id` along with the `payer_id` from your PayPal account and [POST /account/payments/paypal-execute](/api/v4/account-payments-paypal-execute/#post) to complete the Payment.\n",
        "operationId": "createPayPalPayment",
        "x-linode-cli-action": "paypal-start",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The amount of the Payment to submit via PayPal.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayPal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PayPal Payment staged.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payment_id": {
                      "type": "string",
                      "description": "The paypal-generated ID for this Payment. Used when authorizing the Payment in PayPal's interface.\n",
                      "example": "PAY-1234567890ABCDEFGHIJKLMN"
                    },
                    "checkout_token": {
                      "type": "string",
                      "description": "The checkout token generated for this Payment.\n",
                      "example": "EC-1A2B3C4D5E6F7G8H9",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n        \"usd\": \"120.50\",\n        \"redirect_url\": \"https://example.org\",\n        \"cancel_url\": \"https://example.org\"\n    }' \\\n    https://api.linode.com/v4/account/payments/paypal\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account paypal-start \\\n  --cancel_url https://example.org \\\n  --redirect_url https://example.org \\\n  --usd 120.50\n"
          }
        ]
      }
    },
    "/account/payments/paypal/execute": {
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Account"],
        "summary": "Execute Staged/Approved PayPal Payment",
        "description": "Given a PaymentID and PayerID - as generated by PayPal during the transaction authorization process - this endpoint executes the Payment to capture the funds and credit your Linode Account.\n",
        "operationId": "executePayPalPayment",
        "x-linode-cli-action": "paypal-execute",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The details of the Payment to execute.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayPalExecute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PayPal Payment executed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n        \"payment_id\": \"PAY-1234567890ABCDEFGHIJKLMN\",\n        \"payer_id\": \"ABCDEFGHIJKLM\"\n    }' \\\n    https://api.linode.com/v4/account/payments/paypal\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account paypal-execute\n"
          }
        ]
      }
    },
    "/account/settings": {
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Account"],
        "summary": "View Account Settings",
        "description": "Returns information related to your Account settings: Managed service subscription, Longview subscription, and network helper.\n",
        "operationId": "getAccountSettings",
        "x-linode-cli-action": "settings",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single Account settings object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSettings"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/settings\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account settings\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Account"],
        "summary": "Update Account Settings",
        "description": "Updates your Account settings.\n\nTo update your Longview subscription plan, send a request to [Update Longview Plan](/api/v4/longview-plan/#put).\n",
        "operationId": "updateAccountSettings",
        "x-linode-cli-action": "settings-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Update Account settings information.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Account settings.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSettings"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n        \"network_helper\": true,\n    }' \\\n    https://api.linode.com/v4/account/settings\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account settings-update \\\n  --network_helper false\n"
          }
        ]
      }
    },
    "/account/settings/managed-enable": {
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Account"],
        "summary": "Enable Linode Managed",
        "description": "Enables Linode Managed for the entire account and sends a welcome email to the account's associated email address. Linode Managed can monitor any service or software stack reachable over TCP or HTTP. See our [Linode Managed guide](https://linode.com/docs/platform/linode-managed/) to learn more.\n",
        "operationId": "enableAccountManged",
        "x-linode-cli-action": "enable-managed",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Managed services enabled for account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/account/settings/managed-enable\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account enable-managed\n"
          }
        ]
      }
    },
    "/account/transfer": {
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Account"],
        "summary": "View Network Utilization",
        "description": "Returns a Transfer object showing your network utilization, in GB, for the current month.\n",
        "operationId": "getTransfer",
        "x-linode-cli-action": "transfer",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single Transfer object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transfer"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/transfer\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli account transfer\n"
          }
        ]
      }
    },
    "/account/users": {
      "get": {
        "x-linode-grant": "unrestricted only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Account"],
        "summary": "List Users",
        "description": "Returns a paginated list of Users on your Account. Users may access all or part of your Account based on their restricted status and grants.  An unrestricted User may access everything on the account, whereas restricted User may only access entities or perform actions they've been given specific grants to.\n",
        "operationId": "getUsers",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/users\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli users list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Account"],
        "summary": "Create User",
        "description": "Creates a User on your Account. Once created, the User will be able to log in and access portions of your Account. Access is determined by whether or not they are restricted, and what grants they have been given.\n",
        "operationId": "createUser",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the User to create.",
          "content": {
            "application/json": {
              "schema": {
                "required": ["username", "email"],
                "properties": {
                  "username": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9]((?![_-]{2,})[a-zA-Z0-9-_])+[a-zA-Z0-9]$",
                    "minLength": 3,
                    "maxLength": 32,
                    "description": "The new User's username. This is used for logging in, and may also be displayed alongside actions the User performs (for example, in Events or public StackScripts).\n",
                    "example": "example_user"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The new User's email address.\n",
                    "example": "example_user@linode.com"
                  },
                  "restricted": {
                    "type": "boolean",
                    "description": "If true, the new User must be granted access to perform actions or access entities on this Account. See [/account/users/{username}/grants](/api/v4/account-users-username-grants) for details on how to configure grants for a restricted User.\n",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New User created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n        \"username\": \"example_user\",\n        \"email\": \"person@place.com\",\n        \"restricted\": true\n    }' \\\n    https://api.linode.com/v4/account/users\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli users create \\\n  --username example_user \\\n  --email example_user@linode.com\n"
          }
        ]
      }
    },
    "/account/users/{username}": {
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "description": "The username to look up.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Account"],
        "summary": "View User",
        "description": "Returns information about a single User on your Account.\n",
        "operationId": "getUser",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested User object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/users/example_user\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli users view example_user\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Account"],
        "summary": "Update User",
        "description": "Update information about a User on your Account. This can be used to change the restricted status of a User. When making a User restricted, no grants will be configured by default and you must then set up grants in order for the User to access anything on the Account.\n",
        "operationId": "updateUser",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The information to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n        \"username\": example_user\n        \"restricted\": true\n    }' \\\n    https://api.linode.com/v4/account/users/example_user\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli users update example_user \\\n  --username example_user \\\n  --restricted true\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Account"],
        "summary": "Delete User",
        "description": "Deletes a User. The deleted User will be immediately logged out and may no longer log in or perform any actions. All of the User's Grants will be removed.\n",
        "operationId": "deleteUser",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/account/users/example_user\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli users delete example_user\n"
          }
        ]
      }
    },
    "/account/users/{username}/grants": {
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "description": "The username to look up.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Account"],
        "summary": "View User's grants",
        "description": "Returns the full grants structure for the specified account User (other than the account owner, see below for details). This includes all entities on the Account alongside the level of access this User has to each of them.\n\nThe current authenticated User, including the account owner, may view their own grants at the [/profile/grants](/api/v4/profile-grants) endpoint, but will not see entities that they do not have access to.\n",
        "operationId": "getUserGrants",
        "x-linode-cli-action": "grants",
        "x-linode-cli-skip": true,
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The User's grants.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantsResponse"
                }
              }
            }
          },
          "204": {
            "description": "This is an unrestricted User, and therefore has no grants to return. This User may access everything on the Account and perform all actions.\n"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/account/users/example_user/grants\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Account"],
        "summary": "Update User's grants",
        "description": "Update the grants a User has. This can be used to give a User access to new entities or actions, or take access away.  You do not need to include the grant for every entity on the Account in this request; any that are not included will remain unchanged.\n",
        "operationId": "updateUserGrants",
        "x-linode-cli-action": "update-grants",
        "x-linode-cli-skip": true,
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The grants to update. Omitted grants will be left unchanged.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantsResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Grants updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantsResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n        \"global\": {\n          \"add_linodes\": true,\n          \"add_nodebalancers\": false,\n          \"add_domains\": true,\n          \"add_longview\": false,\n          \"add_stackscripts\": true,\n          \"longview_subscription\": true,\n          \"add_images\": true,\n          \"add_volumes\": true,\n          \"account_access\": \"read_only\",\n          \"cancel_account\": false\n        },\n        \"domain\": [\n          {\n            \"id\": 123,\n            \"permissions\": \"read_only\"\n          }\n        ],\n        \"image\": [\n          {\n            \"id\": 123,\n            \"permissions\": \"read_only\"\n          }\n        ],\n        \"linode\": [\n          {\n            \"id\": 123,\n            \"permissions\": \"read_only\"\n          },\n          {\n            \"id\": 234,\n            \"permissions\": \"read_write\"\n          },\n          {\n            \"id\": 345,\n            \"permissions\": \"read_only\"\n          },\n        ],\n        \"longview\": [\n          {\n            \"id\": 123,\n            \"permissions\": \"read_only\"\n          },\n          {\n            \"id\": 234,\n            \"permissions\": \"read_write\"\n          }\n        ],\n        \"nodebalancer\": [\n          {\n            \"id\": 123,\n            \"permissions\": \"read_write\"\n          }\n        ],\n        \"stackscript\": [\n          {\n            \"id\": 123,\n            \"permissions\": \"read_only\"\n          },\n          {\n            \"id\": 124,\n            \"permissions\": \"read_write\"\n          }\n        ],\n        \"volume\": [\n          {\n            \"id\": 123,\n            \"permissions\": \"read_only\"\n          }\n        ]\n    }' \\\n    https://api.linode.com/v4/account/users/example_user/grants\n"
          }
        ]
      }
    },
    "/domains": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Domains"],
        "summary": "List Domains",
        "description": "This is a collection of Domains that you have registered in Linode's DNS Manager.  Linode is not a registrar, and in order for these to work you must own the domains and point your registrar at Linode's nameservers.\n",
        "operationId": "getDomains",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Domains you have registered.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Domain"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/domains\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "add_domains",
        "tags": ["Domains"],
        "summary": "Create Domain",
        "description": "Adds a new Domain to Linode's DNS Manager. Linode is not a registrar, and you must own the domain before adding it here. Be sure to point your registrar to Linode's nameservers so that the records hosted here are used.\n",
        "operationId": "createDomain",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the domain you are registering.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain added successfully.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n        \"domain\": \"example.com\",\n        \"type\": \"master\",\n        \"soa_email\": \"admin@example.com\",\n        \"description\": \"Example Description\",\n        \"refresh_sec\": 14400,\n        \"retry_sec\": 3600,\n        \"expire_sec\": 604800,\n        \"ttl_sec\": 3600,\n        \"status\": \"active\",\n        \"master_ips\": [\"127.0.0.1\",\"255.255.255.1\",\"123.123.123.7\"],\n        \"axfr_ips\": [\"44.55.66.77\"],\n        \"display_group\": \"Example Display Group\"\n    }' \\\n    https://api.linode.com/v4/domains\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains create \\\n  --type master \\\n  --domain example.org \\\n  --soa_email admin@example.org\n"
          }
        ]
      }
    },
    "/domains/{domainId}": {
      "parameters": [
        {
          "name": "domainId",
          "in": "path",
          "description": "The ID of the Domain to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Domains"],
        "summary": "View Domain",
        "description": "This is a single Domain that you have registered in Linode's DNS Manager. Linode is not a registrar, and in order for this Domain record to work you must own the domain and point your registrar at Linode's nameservers.\n",
        "operationId": "getDomain",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A single Domain in Linode's DNS Manager.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/domains/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains view 123\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Domains"],
        "summary": "Update Domain",
        "description": "Update information about a Domain in Linode's DNS Manager.\n",
        "operationId": "updateDomain",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_write"]
          }
        ],
        "requestBody": {
          "description": "The Domain information to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain update successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n        \"domain\": \"example.com\",\n        \"type\": \"master\",\n        \"soa_email\": \"admin@example.com\",\n        \"description\": \"Example Description\",\n        \"refresh_sec\": 14400,\n        \"retry_sec\": 3600,\n        \"expire_sec\": 604800,\n        \"ttl_sec\": 3600,\n        \"status\": \"active\",\n        \"master_ips\": [\"127.0.0.1\",\"255.255.255.1\",\"123.123.123.7\"],\n        \"axfr_ips\": [\"44.55.66.77\"],\n        \"display_group\": \"Example Display Group\"\n    }' \\\n    https://api.linode.com/v4/domains/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains update 1234 \\\n  --retry_sec 7200 \\\n  --ttl_sec 300\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["Domains"],
        "summary": "Delete Domain",
        "description": "Deletes a Domain from Linode's DNS Manager. The Domain will be removed from Linode's nameservers shortly after this operation completes. This also deletes all associated Domain Records.\n",
        "operationId": "deleteDomain",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Domain deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/domains/1234\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains delete 1234\n"
          }
        ]
      }
    },
    "/domains/import": {
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Domains"],
        "summary": "Import Domain",
        "description": "Imports a domain zone from a remote nameserver.\nYour nameserver must allow zone transfers (AXFR) from the following IPs:\n\n  - 96.126.114.97\n  - 96.126.114.98\n  - 2600:3c00::5e\n  - 2600:3c00::5f\n",
        "operationId": "importDomain",
        "x-linode-cli-action": "import",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the Domain to import.",
          "content": {
            "application/json": {
              "schema": {
                "required": ["domain", "remote_nameserver"],
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "The domain to import.\n",
                    "example": "example.com"
                  },
                  "remote_nameserver": {
                    "type": "string",
                    "description": "The remote nameserver that allows zone transfers (AXFR).\n",
                    "example": "examplenameserver.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A single Domain in Linode's DNS Manager.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"domain\": \"example.com\",\n      \"remote_nameserver\": \"examplenameserver.com\"\n    }' \\\n    https://api.linode.com/v4/domains/import\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains import --domain example.com --remote_nameserver examplenameserver.com\n"
          }
        ]
      }
    },
    "/domains/{domainId}/clone": {
      "parameters": [
        {
          "name": "domainId",
          "in": "path",
          "description": "ID of the Domain to clone.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Domains"],
        "summary": "Clone Domain",
        "description": "Clones a Domain and all associated DNS records from a Domain that is registered in Linode's DNS manager.\n",
        "operationId": "cloneDomain",
        "x-linode-cli-action": "clone",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the Domain to clone.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["domain"],
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "The new domain being created.",
                    "example": "example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A new Domain in Linode's DNS Manager, based on a cloned Domain.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -X POST -d '{\n  \"domain\": \"example.com\"\n}' \\ https://api.linode.com/v4/domains/123/clone\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains clone 123 --domain example.com\n"
          }
        ]
      }
    },
    "/domains/{domainId}/records": {
      "parameters": [
        {
          "name": "domainId",
          "in": "path",
          "description": "The ID of the Domain we are accessing Records for.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Domains"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_only"]
          }
        ],
        "summary": "List Domain Records",
        "description": "Returns a paginated list of Records configured on a Domain in Linode's\nDNS Manager.\n",
        "operationId": "getDomainRecords",
        "x-linode-cli-action": "records-list",
        "responses": {
          "200": {
            "description": "A list of Domain Records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DomainRecord"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/domains/1234/records\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains records-list 1234\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Domains"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_write"]
          }
        ],
        "summary": "Create Domain Record",
        "description": "Adds a new Domain Record to the zonefile this Domain represents.\n",
        "operationId": "createDomainRecord",
        "x-linode-cli-action": "records-create",
        "requestBody": {
          "description": "Information about the new Record to add.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["type"],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DomainRecord"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain Record created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"type\": \"A\",\n      \"name\": \"test\",\n      \"target\": \"12.34.56.78\",\n      \"priority\": 50,\n      \"weight\": 50,\n      \"port\": 80,\n      \"service\": null,\n      \"protocol\": null,\n      \"ttl_sec\": 604800\n    }' \\\n    https://api.linode.com/v4/domains/123/records\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains records-create 123 \\\n  --type A \\\n  --name test \\\n  --target 12.34.56.78 \\\n  --priority 50 \\\n  --weight 50 \\\n  --port 80 \\\n  --ttl_sec 604800\n"
          }
        ]
      }
    },
    "/domains/{domainId}/records/{recordId}": {
      "parameters": [
        {
          "name": "domainId",
          "in": "path",
          "description": "The ID of the Domain whose Record you are accessing.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "recordId",
          "in": "path",
          "description": "The ID of the Record you are accessing.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Domains"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_only"]
          }
        ],
        "summary": "View Domain Record",
        "description": "View a single Record on this Domain.\n",
        "operationId": "getDomainRecord",
        "x-linode-cli-action": "records-view",
        "responses": {
          "200": {
            "description": "A Domain Record object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/domains/123/records/234\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains records-view 123 234\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Domains"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_write"]
          }
        ],
        "summary": "Update Domain Record",
        "description": "Updates a single Record on this Domain.\n",
        "operationId": "updateDomainRecord",
        "x-linode-cli-action": "records-update",
        "requestBody": {
          "description": "The values to change.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain Record updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"type\": \"A\",\n      \"name\": \"test\",\n      \"target\": \"12.34.56.78\",\n      \"priority\": 50,\n      \"weight\": 50,\n      \"port\": 80,\n      \"service\": null,\n      \"protocol\": null,\n      \"ttl_sec\": 604800,\n      \"tag\": null\n    }' \\\n    https://api.linode.com/v4/domains/123/records/234\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains records-update 123 234 \\\n  --type A \\\n  --name test \\\n  --target 12.34.56.78 \\\n  --priority 50 \\\n  --weight 50 \\\n  --port 80 \\\n  --ttl_sec 604800\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["Domains"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["domains:read_write"]
          }
        ],
        "summary": "Delete Domain Record",
        "description": "Deletes a Record on this Domain.\n",
        "operationId": "deleteDomainRecord",
        "x-linode-cli-action": "records-delete",
        "responses": {
          "200": {
            "description": "Record deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/domains/123/records/234\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli domains records-delete 123 234\n"
          }
        ]
      }
    },
    "/images": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Images"],
        "summary": "List Images",
        "description": "Returns a paginated list of Images.\n\n* Calling this endpoint without authentication returns all public Images.\n* Authentication is required to return a combined paginated list of all public and\n  your private Images.\n",
        "x-linode-redoc-load-ids": true,
        "operationId": "getImages",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["images:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Images.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImagePublic"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://api.linode.com/v4/images\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli images list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Images"],
        "summary": "Create Image",
        "description": "Creates a private gold-master Image from a Linode Disk. There is no additional charge to store Images for Linode users.\nImages are limited to three per Account.\n",
        "operationId": "createImage",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["images:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the Image to create.",
          "content": {
            "application/json": {
              "schema": {
                "required": ["disk_id"],
                "properties": {
                  "disk_id": {
                    "type": "integer",
                    "description": "The ID of the Linode Disk that this Image will be created from.\n",
                    "example": 42
                  },
                  "label": {
                    "type": "string",
                    "description": "A short title of this Image. Defaults to the label of the Disk it is being created from if not provided.\n"
                  },
                  "description": {
                    "type": "string",
                    "description": "A detailed description of this Image.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New private Image created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagePrivate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"disk_id\": 123,\n      \"label\": \"this_is_a_label\",\n      \"description\": \"A longer description of the image\"\n    }' \\\n    https://api.linode.com/v4/images\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli images create \\\n  --label this_is_a_label \\\n  --description \"A longer description \\\n    of the image\" \\\n  --disk_id 123\n"
          }
        ]
      }
    },
    "/images/{imageId}": {
      "parameters": [
        {
          "name": "imageId",
          "in": "path",
          "description": "ID of the Image to look up.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Images"],
        "summary": "View Image",
        "description": "Get information about a single Image.\n",
        "operationId": "getImage",
        "x-linode-cli-action": "view",
        "responses": {
          "200": {
            "description": "A single Image object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagePrivate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://api.linode.com/v4/images/linode/debian9\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli images view linode/debian9\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Images"],
        "summary": "Update Image",
        "description": "Updates a private Image that you have permission to `read_write`.\n",
        "operationId": "updateImage",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["images:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagePrivate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated image.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagePrivate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"label\": \"My gold-master image\",\n      \"description\": \"The detailed description of my Image.\"\n    }' \\\n    https://api.linode.com/v4/images/private/67848373\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli images update private/67848373 \\\n  --label \"My gold-master image\" \\\n  --description \"The detailed description \\\n    of my Image.\"\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["Images"],
        "summary": "Delete Image",
        "description": "Deletes a private Image you have permission to `read_write`.\n\n\n**Deleting an Image is a destructive action and cannot be undone.**\n",
        "operationId": "deleteImage",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["images:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/images/private/67848373\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli images delete 67848373\n"
          }
        ]
      }
    },
    "/linode/instances": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "summary": "List Linodes",
        "description": "Returns a paginated list of Linodes you have permission to view.\n",
        "tags": ["Linode Instances"],
        "operationId": "getLinodeInstances",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of all Linodes on your Account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Linode"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes list\n"
          }
        ]
      },
      "post": {
        "x-linode-charge": true,
        "x-linode-grant": "add_linodes",
        "summary": "Create Linode",
        "description": "Creates a Linode Instance on your Account. In order for this\nrequest to complete successfully, your User must have the `add_linodes` grant. Creating a\nnew Linode will incur a charge on your Account.\n\nLinodes can be created using one of the available Types. See\n[GET /linode/types](/api/v4/linode-types) to get more\ninformation about each Type's specs and cost.\n\nLinodes can be created in any one of our available\n[Regions](/api/v4/regions) for a list\nof available Regions you can deploy your Linode in.\n\nIn an effort to fight spam, Linode restricts outbound connections on ports 25, 465, and 587\non all Linodes for new accounts created after November 5th, 2019. For more information,\nsee [Sending Email on Linode](https://www.linode.com/docs/email/running-a-mail-server/#sending-email-on-linode).\n\nLinodes can be created in a number of ways:\n\n* Using a Linode Linux Distribution image or an Image you created based on another Linode.\n  * The Linode will be `running` after it completes `provisioning`.\n  * A default config with two Disks, one being a 512 swap disk, is created.\n    * `swap_size` can be used to customize the swap disk size.\n  * Requires a `root_pass` be supplied to use for the root User's Account.\n  * It is recommended to supply SSH keys for the root User using the `authorized_keys` field.\n  * You may also supply a list of usernames via the `authorized_users` field.\n    * These users must have an SSH Key associated with your Profile first. See [/profile/sshkeys](/api/v4/profile-sshkeys/#post) for more information.\n\n* Using a StackScript.\n  * See [/linode/stackscripts](/api/v4/linode-stackscripts) for\n    a list of available StackScripts.\n  * The Linode will be `running` after it completes `provisioning`.\n  * Requires a compatible Image to be supplied.\n    * See [/linode/stackscript/{stackscriptId}](/api/v4/linode-stackscripts-stackscript-id) for compatible Images.\n  * Requires a `root_pass` be supplied to use for the root User's Account.\n  * It is recommended to supply SSH keys for the root User using the `authorized_keys` field.\n  * You may also supply a list of usernames via the `authorized_users` field.\n    * These users must have an SSH Key associated with your Profile first. See [/profile/sshkeys](/api/v4/profile-sshkeys/#post) for more information.\n\n* Using one of your other Linode's backups.\n  * You must create a Linode large enough to accommodate the Backup's size.\n  * The Disks and Config will match that of the Linode that was backed up.\n  * The `root_pass` will match that of the Linode that was backed up.\n\n* Create an empty Linode.\n  * The Linode will remain `offline` and must be manually started.\n    * See [POST /linode/instances/{linodeId}/boot](/api/v4/linode-instances-linode-id-boot/#post).\n  * Disks and Configs must be created manually.\n  * This is only recommended for advanced use cases.\n\n\n**Important**: You must be an unrestricted User in order to add or modify\ntags on Linodes.\n",
        "tags": ["Linode Instances"],
        "operationId": "createLinodeInstance",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The requested initial state of a new Linode.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["type", "region"],
                "type": "object",
                "properties": {
                  "backup_id": {
                    "type": "integer",
                    "example": 1234,
                    "description": "A Backup ID from another Linode's available backups. Your User must have\n`read_write` access to that Linode, the Backup must have a `status` of\n`successful`, and the Linode must be deployed to the same `region` as the Backup.\nSee [/linode/instances/{linodeId}/backups](/api/v4/linode-instances-linode-id-backups)\nfor a Linode's available backups.\n\nThis field and the `image` field are mutually exclusive.\n"
                  },
                  "backups_enabled": {
                    "type": "boolean",
                    "description": "If this field is set to `true`, the created Linode will automatically be\nenrolled in the Linode Backup service. This will incur an additional charge.\nThe cost for the Backup service is dependent on the Type of Linode deployed.\n\nThis option is always treated as `true` if the account-wide `backups_enabled`\nsetting is `true`.  See [account settings](#operaton/getAccountSettings)\nfor more information.\n\nBackup pricing is included in the response from [/linodes/types](/api/v4/linode-types)\n"
                  },
                  "swap_size": {
                    "type": "integer",
                    "example": 512,
                    "description": "When deploying from an Image, this field is optional, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.\n",
                    "default": 512
                  },
                  "type": {
                    "type": "string",
                    "description": "The [Linode Type](/api/v4/linode-types) of the Linode you are creating.\n",
                    "example": "g6-standard-2"
                  },
                  "region": {
                    "type": "string",
                    "description": "The [Region](/api/v4/regions) where the Linode will be located.\n",
                    "example": "us-east"
                  },
                  "image": {
                    "type": "string",
                    "description": "An Image ID to deploy the Disk from. Official Linode Images start with `linode/ `, while your Images start with `private/`.\nSee [/images](/api/v4/images) for more information on the Images available for you to use.\n",
                    "example": "linode/debian9"
                  },
                  "root_pass": {
                    "$ref": "#/components/schemas/DiskRequest/properties/root_pass"
                  },
                  "authorized_keys": {
                    "type": "array",
                    "description": "A list of SSH public keys to deploy for the root user on the newly-created Linode.  Only accepted if `image` is provided.\n",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stackscript_id": {
                    "type": "integer",
                    "description": "The StackScript to deploy to the newly-created Linode.  If provided, \"image\" must also be provided, and must be an Image that is compatible with this StackScript.\n",
                    "example": 10079
                  },
                  "stackscript_data": {
                    "type": "object",
                    "description": "An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if `stackscript_id` is given.  The required values depend on the StackScript being deployed.\n"
                  },
                  "booted": {
                    "type": "boolean",
                    "description": "Whether to boot this Linode after the deploy is complete. Defaults to true if `image` is provided. Not accepted if not deploying from an Image.\n"
                  },
                  "label": {
                    "$ref": "#/components/schemas/Linode/properties/label"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/Linode/properties/tags"
                  },
                  "group": {
                    "$ref": "#/components/schemas/Linode/properties/group"
                  },
                  "private_ip": {
                    "type": "boolean",
                    "description": "If true, the created Linode will have private networking enabled.\n",
                    "example": true
                  },
                  "authorized_users": {
                    "type": "array",
                    "description": "A list of usernames. If the usernames have associated SSH keys, the keys will be appended to the root users `~/.ssh/authorized_keys` file automatically.\n",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A new Linode is being created.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Linode"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"backup_id\": 1234,\n      \"backups_enabled\": true,\n      \"swap_size\": 512,\n      \"image\": \"linode/debian9\",\n      \"root_pass\": \"aComplexP@ssword\",\n      \"stackscript_id\": 10079,\n      \"stackscript_data\": {\n        \"gh_username\": \"linode\"\n      },\n      \"authorized_keys\": [\n        \"ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer\"\n      ],\n      \"authorized_users\": [\n        \"myUser\",\n        \"secondaryUser\"\n      ],\n      \"booted\": true,\n      \"label\": \"linode123\",\n      \"type\": \"g6-standard-2\",\n      \"region\": \"us-east\",\n      \"group\": \"Linode-Group\"\n    }' \\\n    https://api.linode.com/v4/linode/instances\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes create \\\n  --label linode123 \\\n  --root_pass aComplex@Password \\\n  --booted true \\\n  --stackscript_id 10079 \\\n  --stackscript_data '{\"gh_username\": \"linode\"}' \\\n  --region us-east \\\n  --type g6-standard-2 \\\n  --authorized_keys \"ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer\"\n  --authorized_users \"myUser\"\n  --authorized_users \"secondaryUser\"\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Linode Instances"],
        "summary": "View Linode",
        "description": "Get a specific Linode by ID.",
        "operationId": "getLinodeInstance",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single Linode object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Linode"
                }
              }
            },
            "links": {
              "boot": {
                "$ref": "#/components/links/bootLinode"
              },
              "reboot": {
                "$ref": "#/components/links/rebootLinode"
              },
              "shutdown": {
                "$ref": "#/components/links/shutdownLinode"
              },
              "update": {
                "$ref": "#/components/links/updateLinode"
              },
              "delete": {
                "$ref": "#/components/links/deleteLinode"
              },
              "rebuild": {
                "$ref": "#/components/links/rebuildLinode"
              },
              "mutate": {
                "$ref": "#/components/links/mutateLinode"
              },
              "resize": {
                "$ref": "#/components/links/resizeLinode"
              },
              "rescue": {
                "$ref": "#/components/links/rescueLinode"
              },
              "clone": {
                "$ref": "#/components/links/cloneLinode"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes view 123\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "summary": "Update Linode",
        "description": "Updates a Linode that you have permission to `read_write`.\n\n**Important**: You must be an unrestricted User in order to add or modify tags on Linodes.\n",
        "operationId": "updateLinodeInstance",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Any field that is not marked as `readOnly` may be updated. Fields that are marked `readOnly` will be ignored. If any updated field fails to pass validation, the Linode will not be updated.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Linode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Linode.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Linode"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"label\": \"linode123\",\n      \"group\": \"Linode-Group\",\n      \"alerts\": {\n        \"cpu\": 180,\n        \"network_in\": 10,\n        \"network_out\": 10,\n        \"transfer_quota\": 80,\n        \"io\": 10000\n      },\n      \"backups\": {\n        \"schedule\": {\n          \"day\": \"Saturday\",\n          \"window\": \"W22\"\n        }\n      }\n    }' \\\n    https://api.linode.com/v4/linode/instances/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes update 7833080 \\\n  --label linode123 \\\n  --backups.schedule.day \"Saturday\" \\\n  --backups.schedule.window \"W22\" \\\n  --alerts.cpu 180 \\\n  --alerts.network_in 10 \\\n  --alerts.network_out 10 \\\n  --alerts.transfer_quota 80 \\\n  --alerts.io 10000\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "summary": "Delete Linode",
        "description": "Deletes a Linode you have permission to `read_write`.\n\n**Deleting a Linode is a destructive action and cannot be undone.**\n\nAdditionally, deleting a Linode:\n\n  * Gives up any IP addresses the Linode was assigned.\n  * Deletes all Disks, Backups, Configs, etc.\n  * Stops billing for the Linode and its associated services. You will be billed for time used\n    within the billing period the Linode was active.\n",
        "operationId": "deleteLinodeInstance",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/linode/instances/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes delete 123\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/backups": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "The ID of the Linode the backups belong to.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "summary": "List Backups",
        "description": "Returns information about this Linode's available backups.\n",
        "tags": ["Linode Instances"],
        "operationId": "getBackups",
        "x-linode-cli-action": "backups-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of the specified Linode's available backups.",
            "content": {
              "application/json": {
                "x-linode-cli-rows": [
                  "automatic",
                  "snapshot.current",
                  "snapshot.in_progress"
                ],
                "x-linode-cli-use-schema": {
                  "$ref": "#/components/schemas/Backup"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "automatic": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Backup"
                          },
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "automatic"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "snapshot": {
                      "type": "object",
                      "properties": {
                        "in_progress": {
                          "$ref": "#/components/schemas/Backup"
                        },
                        "current": {
                          "$ref": "#/components/schemas/Backup"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/backups\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes backups-list 123\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Create Snapshot",
        "description": "Creates a snapshot Backup of a Linode.\n** If you already have a snapshot of this Linode, this is a destructive action. The previous snapshot will be deleted.**\n",
        "tags": ["Linode Instances"],
        "operationId": "createSnapshot",
        "x-linode-cli-action": "snapshot",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The label for the new snapshot.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["label"],
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "SnapshotLabel"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Snapshot was successfully taken.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Backup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"label\": \"MyNewSnapshot\"\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/backups\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes snapshot 123\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/backups/cancel": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "The ID of the Linode to cancel backup service for.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Cancel Backups",
        "description": "Cancels the Backup service on the given Linode. Deletes all of this Linode's existing backups forever.\n",
        "tags": ["Linode Instances"],
        "operationId": "cancelBackups",
        "x-linode-cli-action": "backups-cancel",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Backup service was cancelled for the specified Linode.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/linode/instances/123/backups/cancel\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes backups-cancel 123\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/backups/enable": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "The ID of the Linode to enable backup service for.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Enable Backups",
        "description": "Enables backups for the specified Linode.\n",
        "tags": ["Linode Instances"],
        "operationId": "enableBackups",
        "x-linode-cli-action": "backups-enable",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Backup service was enabled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/linode/instances/123/backups/enable\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes backups-enable 123\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/backups/{backupId}": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "The ID of the Linode the Backup belongs to.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "backupId",
          "in": "path",
          "description": "The ID of the Backup to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "summary": "View Backup",
        "description": "Returns information about a Backup.\n",
        "tags": ["Linode Instances"],
        "operationId": "getBackup",
        "x-linode-cli-action": "backup-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A single Backup.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Backup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/backups/123456\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes backup-view 123 123456\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/backups/{backupId}/restore": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "The ID of the Linode that the Backup belongs to.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "backupId",
          "in": "path",
          "description": "The ID of the Backup to restore.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Restore Backup",
        "description": "Restores a Linode's Backup to the specified Linode.\n",
        "tags": ["Linode Instances"],
        "operationId": "restoreBackup",
        "x-linode-cli-action": "backup-restore",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Parameters to provide when restoring the Backup.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["linode_id"],
                "properties": {
                  "linode_id": {
                    "type": "integer",
                    "description": "The ID of the Linode to restore a Backup to.\n",
                    "example": 234
                  },
                  "overwrite": {
                    "type": "boolean",
                    "description": "If True, deletes all Disks and Configs on the target Linode\nbefore restoring.\n\nIf False, and the Disk image size is larger than the available\nspace on the Linode, an error message indicating insufficient\nspace is returned.\n",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Restore from Backup was initiated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"linode_id\": 234,\n      \"overwrite\": true\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/backups/123456/restore\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes backup-restore 123 123456 \\\n  --linode_id 234 \\\n  --overwrite true\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/boot": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "The ID of the Linode to boot.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Boot Linode",
        "description": "Boots a Linode you have permission to modify. If no parameters are given, a Config profile\nwill be chosen for this boot based on the following criteria:\n\n* If there is only one Config profile for this Linode, it will be used.\n* If there is more than one Config profile, the last booted config will be used.\n* If there is more than one Config profile and none were the last to be booted (because the\n  Linode was never booted or the last booted config was deleted) an error will be returned.\n",
        "tags": ["Linode Instances"],
        "operationId": "bootLinodeInstance",
        "x-linode-cli-action": "boot",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Optional configuration to boot into (see above).",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config_id": {
                    "type": "integer",
                    "description": "The Linode Config ID to boot into. If omitted, we will attempt to select a config to use. (This will do the right thing in most cases.)\n",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boot started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/linode/instances/123/boot\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes boot 123\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/clone": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to clone.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-charge": true,
        "x-linode-grant": "add_linodes",
        "summary": "Clone Linode",
        "description": "You can clone your Linode's existing Disks or Configuration profiles to\nanother Linode on your Account. In order for this request to complete\nsuccessfully, your User must have the `add_linodes` grant. Cloning to a\nnew Linode will incur a charge on your Account.\n\nIf cloning to an existing Linode, any actions currently running or\nqueued must be completed first before you can clone to it.\n\nUp to five clone operations from any given source Linode can be run concurrently.\nIf more concurrent clones are attempted, an HTTP 400 error will be\nreturned by this endpoint.\n\nAny [tags](/api/v4/tags) existing on the source Linode will be cloned to the target Linode.\n",
        "tags": ["Linode Instances"],
        "operationId": "cloneLinodeInstance",
        "x-linode-cli-action": "clone",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The requested state your Linode will be cloned into.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["region", "type"],
                "properties": {
                  "region": {
                    "type": "string",
                    "description": "This is the Region where the Linode will be deployed.\nTo view all available Regions you can deploy to see [/regions](/api/v4/regions).\n* Region can only be provided when cloning to a new Linode.\n",
                    "example": "us-east"
                  },
                  "type": {
                    "type": "string",
                    "description": "A Linode's Type determines what resources are available to\nit, including disk space, memory, and virtual cpus. The\namounts available to a specific Linode are returned as\n`specs` on the Linode object.\n\nTo view all available Linode Types you can deploy with\nsee [/linode/types](/api/v4/linode-types).\n\n* Type can only be provided when cloning to a new Linode.\n",
                    "example": "g6-standard-2"
                  },
                  "linode_id": {
                    "type": "integer",
                    "description": "If an existing Linode is to be the target for the clone, the ID of that Linode. The existing Linode must have enough resources to accept the clone.\n",
                    "example": 124
                  },
                  "label": {
                    "type": "string",
                    "description": "The label to assign this Linode when cloning to a new Linode.\n* Can only be provided when cloning to a new Linode. * Defaults to \"linode\".\n",
                    "example": "cloned-linode"
                  },
                  "group": {
                    "deprecated": true,
                    "type": "string",
                    "description": "A label used to group Linodes for display. Linodes are not required to have a group.\n",
                    "example": "Linode-Group"
                  },
                  "backups_enabled": {
                    "type": "boolean",
                    "description": "If this field is set to `true`, the created Linode will\nautomatically be enrolled in the Linode Backup service. This\nwill incur an additional charge. Pricing is included in the\nresponse from\n[/linodes/types](/api/v4/linode-types).\n\n* Can only be included when cloning to a new Linode.\n",
                    "example": true
                  },
                  "disks": {
                    "type": "array",
                    "description": "An array of disk IDs.\n* If the `disks` parameter **is not provided**, then **no extra disks will be cloned** from the source Linode. All disks associated with the configuration profiles specified by the `configs` parameter will still be cloned.\n* **If an empty array is provided** for the `disks` parameter, then **no extra disks will be cloned** from the source Linode. All disks associated with the configuration profiles specified by the `configs` parameter will still be cloned.\n* **If a non-empty array is provided** for the `disks` parameter, then **the disks specified in the array will be cloned** from the source Linode, in addition to any disks associated with the configuration profiles specified by the `configs` parameter.\n",
                    "items": {
                      "type": "integer",
                      "example": 25674
                    }
                  },
                  "configs": {
                    "type": "array",
                    "description": "An array of configuration profile IDs.\n* If the `configs` parameter **is not provided**, then **all configuration profiles and their associated disks will be cloned** from the source Linode. Any disks specified by the `disks` parameter will also be cloned.\n* **If an empty array is provided** for the `configs` parameter, then **no configuration profiles (nor their associated disks) will be cloned** from the source Linode. Any disks specified by the `disks` parameter will still be cloned.\n* **If a non-empty array is provided** for the `configs` parameter, then **the configuration profiles specified in the array (and their associated disks) will be cloned** from the source Linode. Any disks specified by the `disks` parameter will also be cloned.\n",
                    "items": {
                      "type": "integer",
                      "example": 23456
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Clone started.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Linode"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"region\": \"us-east\",\n      \"type\": \"g6-standard-2\",\n      \"linode_id\": 124,\n      \"label\": \"cloned-linode\",\n      \"group\": \"Linode-Group\",\n      \"backups_enabled\": true,\n      \"disks\": [25674],\n      \"configs\": [23456]\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/clone\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes clone 123 \\\n  --linode_id 124 \\\n  --region us-east \\\n  --type g6-standard-2 \\\n  --label cloned-linode \\\n  --backups_enabled true \\\n  --disks 25674 \\\n  --configs 23456\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/configs": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up Configuration profiles for.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Linode Instances"],
        "summary": "List Configuration Profiles",
        "description": "Lists Configuration profiles associated with a Linode.\n",
        "operationId": "getLinodeConfigs",
        "x-linode-cli-action": "configs-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Configuration profiles associated with this Linode.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinodeConfig"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/configs\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes configs-list 123\n"
          }
        ]
      },
      "post": {
        "tags": ["Linode Instances"],
        "summary": "Create Configuration Profile",
        "description": "Adds a new Configuration profile to a Linode.\n",
        "operationId": "addLinodeConfig",
        "x-linode-cli-action": "config-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The parameters to set when creating the Configuration profile.\nThis determines which kernel, devices, how much memory, etc. a Linode boots with.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinodeConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A Configuration profile was created.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinodeConfig"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"kernel\": \"linode/latest-64bit\",\n      \"comments\": \"This is my main Config\",\n      \"memory_limit\": 2048,\n      \"run_level\": \"default\",\n      \"virt_mode\": \"paravirt\",\n      \"helpers\": {\n        \"updatedb_disabled\": true,\n        \"distro\": true,\n        \"modules_dep\": true,\n        \"network\": true,\n        \"devtmpfs_automount\": false\n      },\n      \"label\": \"My Config\",\n      \"devices\": {\n        \"sda\": {\n          \"disk_id\": 123456,\n          \"volume_id\": null\n        },\n        \"sdb\": {\n          \"disk_id\": 123457,\n          \"volume_id\": null\n        }\n      }\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/configs\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes config-create 7590910 \\\n  --label \"My Config\" \\\n  --devices.sda.disk_id 123456 \\\n  --devices.sdb.disk_id 123457\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/configs/{configId}": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "The ID of the Linode whose Configuration profile to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "configId",
          "in": "path",
          "description": "The ID of the Configuration profile to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["Linode Instances"],
        "x-linode-grant": "read_only",
        "summary": "View Configuration Profile",
        "description": "Returns information about a specific Configuration profile.\n",
        "operationId": "getLinodeConfig",
        "x-linode-cli-action": "config-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A Configuration profile object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinodeConfig"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/configs/23456\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes config-view 123 23456\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "summary": "Update Configuration Profile",
        "description": "Updates a Configuration profile.\n",
        "tags": ["Linode Instances"],
        "operationId": "updateLinodeConfig",
        "x-linode-cli-action": "config-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The Configuration profile parameters to modify.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["label", "devices"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/LinodeConfig/properties/id"
                  },
                  "kernel": {
                    "$ref": "#/components/schemas/LinodeConfig/properties/kernel"
                  },
                  "comments": {
                    "$ref": "#/components/schemas/LinodeConfig/properties/comments"
                  },
                  "memory_limit": {
                    "$ref": "#/components/schemas/LinodeConfig/properties/memory_limit"
                  },
                  "run_level": {
                    "$ref": "#/components/schemas/LinodeConfig/properties/run_level"
                  },
                  "virt_mode": {
                    "$ref": "#/components/schemas/LinodeConfig/properties/virt_mode"
                  },
                  "helpers": {
                    "$ref": "#/components/schemas/LinodeConfig/properties/helpers"
                  },
                  "label": {
                    "$ref": "#/components/schemas/LinodeConfig/properties/label"
                  },
                  "devices": {
                    "type": "object",
                    "description": "A dictionary of device disks to use as a device map in a Linode's configuration profile.\n* An empty device disk dictionary or a dictionary with empty values for device slots is allowed. If no devices are specified, booting from this configuration will hold waiting for a device to exist before being able to boot. <br /><br />\n**Note**: An empty device disk dictionary or a dictionary with empty values for device slots previously errored in all cases.\n",
                    "properties": {
                      "sda": {
                        "$ref": "#/components/schemas/Device"
                      },
                      "sdb": {
                        "$ref": "#/components/schemas/Device"
                      },
                      "sdc": {
                        "$ref": "#/components/schemas/Device"
                      },
                      "sdd": {
                        "$ref": "#/components/schemas/Device"
                      },
                      "sde": {
                        "$ref": "#/components/schemas/Device"
                      },
                      "sdf": {
                        "$ref": "#/components/schemas/Device"
                      },
                      "sdg": {
                        "$ref": "#/components/schemas/Device"
                      },
                      "sdh": {
                        "$ref": "#/components/schemas/Device"
                      }
                    }
                  },
                  "root_device": {
                    "type": "string",
                    "pattern": "a-z, A-Z, 0-9, /, _, -",
                    "description": "The root device to boot.\n* If no value or an invalid value is provided, root device will default to `/dev/sda`.<br /><br /> **Note**: Previous validation errored when no value was provided for root device and an empty device map existed for the Linode's configuration profile.\n* If the device specified at the root device location is not mounted, the Linode will not boot until a device is mounted.\n"
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"kernel\": \"linode/latest-64bit\",\n      \"comments\": \"This is my main Config\",\n      \"memory_limit\": 2048,\n      \"run_level\": \"default\",\n      \"virt_mode\": \"paravirt\",\n      \"helpers\": {\n        \"updatedb_disabled\": true,\n        \"distro\": true,\n        \"modules_dep\": true,\n        \"network\": true,\n        \"devtmpfs_automount\": false\n      },\n      \"label\": \"My Config\",\n      \"devices\": {\n        \"sda\": {\n          \"disk_id\": 123456,\n          \"volume_id\": null\n        },\n        \"sdb\": {\n          \"disk_id\": 123457,\n          \"volume_id\": null\n        }\n      }\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/configs/23456\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes config-update 123 23456 \\\n  --kernel \"linode/latest-64bit\" \\\n  --comments \"This is my main Config\" \\\n  --memory_limit 2048 \\\n  --run_level default \\\n  --virt_mode paravirt \\\n  --helpers.updatedb_disabled true \\\n  --helpers.distro true \\\n  --helpers.modules_dep true \\\n  --helpers.network true \\\n  --helpers.devtmpfs_automount false \\\n  --label \"My Config\" \\\n  --devices.sda.disk_id 123456 \\\n  --devices.sdb.disk_id 123457\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration profile successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinodeConfig"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete Configuration Profile",
        "description": "Deletes the specified Configuration profile from the specified Linode.\n",
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "operationId": "deleteLinodeConfig",
        "x-linode-cli-action": "config-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration profile successfully deleted.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/linode/instances/123/configs/23456\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes config-delete 123 23456\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/disks": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Linode Instances"],
        "summary": "List Disks",
        "description": "View Disk information for Disks associated with this Linode.\n",
        "operationId": "getLinodeDisks",
        "x-linode-cli-action": "disks-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of disks associated with this Linode.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Disk"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/disks\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes disks-list 123\n"
          }
        ]
      },
      "post": {
        "tags": ["Linode Instances"],
        "summary": "Create Disk",
        "description": "Adds a new Disk to a Linode. You can optionally create a Disk from an Image (see [/images](/api/v4/images) for a list of available public images, or use one of your own), and optionally provide a StackScript to deploy with this Disk.\n",
        "operationId": "addLinodeDisk",
        "x-linode-cli-action": "disk-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The parameters to set when creating the Disk.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Disk created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disk"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"label\": \"Debian 9 Disk\",\n      \"image\": \"linode/debian9\",\n      \"size\": 1300,\n      \"authorized_keys\": [\n        \"ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer\"\n      ],\n      \"authorized_users\": [\n        \"myUser\",\n        \"secondaryUser\"\n      ],\n      \"root_pass\": \"aComplexP@ssword\",\n      \"stackscript_id\": 10079,\n      \"stackscript_data\": {\n        \"gh_username\": \"linode\"\n      }\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/disks\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes disk-create 123 \\\n  --size 1300 \\\n  --authorized_keys \"ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer\" \\\n  --authorized_users \"myUser\" \\\n  --authorized_users \"secondaryUser\" \\\n  --root_pass aComplex@Password \\\n  --image \"linode/debian9\" \\\n  --stackscript_id 10079 \\\n  --stackscript_data '{\"gh_username\": \"linode\"}'\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/disks/{diskId}": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "diskId",
          "in": "path",
          "description": "ID of the Disk to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Linode Instances"],
        "summary": "View Disk",
        "description": "View Disk information for a Disk associated with this Linode.\n",
        "operationId": "getLinodeDisk",
        "x-linode-cli-action": "disk-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single Disk object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disk"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/disks/25674\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes disk-view 123 25674\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "summary": "Update Disk",
        "description": "Updates a Disk that you have permission to `read_write`.\n",
        "operationId": "updateDisk",
        "x-linode-cli-action": "disk-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Updates the parameters of a single Disk.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Disk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Disk.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disk"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"label\": \"Debian 9 Disk\"\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/disks/25674\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes disk-update 123 25674 \\\n  --label \"Debian 9 Disk\"\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "summary": "Delete Disk",
        "description": "Deletes a Disk you have permission to `read_write`.\n\n**Deleting a Disk is a destructive action and cannot be undone.**\n",
        "operationId": "deleteDisk",
        "x-linode-cli-action": "disk-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/linode/instances/123/disks/25674\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes disk-delete 123 24674\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/disks/{diskId}/clone": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "diskId",
          "in": "path",
          "description": "ID of the Disk to clone.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "summary": "Clone Disk",
        "description": "Copies a disk, byte-for-byte, into a new Disk belonging to the same Linode. The Linode must have enough storage space available to accept a new Disk of the same size as this one or this operation will fail.\n",
        "operationId": "cloneLinodeDisk",
        "x-linode-cli-action": "disk-clone",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Disk clone initiated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disk"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/linode/instances/{linodeId}/disks/{diskId}/password": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "diskId",
          "in": "path",
          "description": "ID of the Disk to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "summary": "Reset Disk Root Password",
        "description": "Resets the password of a Disk you have permission to `read_write`.\n",
        "operationId": "resetDiskPassword",
        "x-linode-cli-action": "disk-reset-password",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The new password.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["password"],
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "The new root password for the OS installed on this Disk.\nThe password must meet the complexity strength validation requirements for a strong password.\n",
                    "example": "another@complex^Password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a single Disk object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"password\": \"another@complex^Password123\"\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/disks/25674/password\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes disk-reset-password \\\n  123 25674 \\\n  --password aComplex@Password\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/disks/{diskId}/resize": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "diskId",
          "in": "path",
          "description": "ID of the Disk to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "summary": "Resize Disk",
        "description": "Resizes a Disk you have permission to `read_write`.\nThe Linode this Disk is attached to must be shut down for resizing to take effect.\nIf you are resizing the Disk to a smaller size, it cannot be made smaller than what is required by the total size of the files current on the Disk. The Disk must not be in use. If the Disk is in use, the request will succeed but the resize will ultimately fail.\n",
        "operationId": "resizeDisk",
        "x-linode-cli-action": "disk-resize",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The new size of the Disk.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["password"],
                "properties": {
                  "size": {
                    "type": "integer",
                    "description": "The desired size, in MB, of the disk.\n",
                    "minimum": 1,
                    "example": 2048
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resize started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"size\": 2048\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/disks/25674/resize\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes disk-resize 123 25674 \\\n  --size 2048\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/ips": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Linode Instances"],
        "summary": "List Networking Information",
        "description": "Returns networking information for a single Linode.\n",
        "operationId": "getLinodeIPs",
        "x-linode-cli-action": "ips-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Requested Linode's networking configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ipv4": {
                      "type": "object",
                      "description": "Information about this Linode's IPv4 addresses.\n",
                      "readOnly": true,
                      "properties": {
                        "public": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/IPAddress"
                          },
                          "description": "A list of public IP Address objects belonging to this Linode.\n",
                          "readOnly": true
                        },
                        "private": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/IPAddressPrivate"
                          },
                          "description": "A list of private IP Address objects belonging to this Linode.\n",
                          "readOnly": true
                        },
                        "shared": {
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "$ref": "#/components/schemas/IPAddress"
                          },
                          "description": "A list of shared IP Address objects assigned to this Linode.\n"
                        },
                        "reserved": {
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "$ref": "#/components/schemas/IPAddress"
                          },
                          "description": "A list of reserved IP Address objects belonging to this Linode.\n"
                        }
                      }
                    },
                    "ipv6": {
                      "type": "object",
                      "description": "Information about this Linode's IPv6 addresses.\n",
                      "readOnly": true,
                      "properties": {
                        "link_local": {
                          "$ref": "#/components/schemas/IPAddressV6LinkLocal"
                        },
                        "slaac": {
                          "$ref": "#/components/schemas/IPAddressV6Slaac"
                        },
                        "global": {
                          "$ref": "#/components/schemas/IPv6Pool"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    https://api.linode.com/v4/linode/instances/123/ips\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes 123 ips-list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "summary": "Allocate IPv4 Address",
        "description": "Allocates a public or private IPv4 address to a Linode. Public IP Addresses, after the one included with each Linode, incur an additional monthly charge. If you need an additional public IP Address you must request one - please [open a support ticket](/api/v4/support-tickets/#post). You may not add more than one private IPv4 address to a single Linode.\n",
        "operationId": "addLinodeIP",
        "x-linode-cli-action": "ip-add",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the address you are creating.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["type", "public"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["ipv4"],
                    "description": "The type of address you are allocating. Only IPv4 addresses may be allocated through this endpoint.\n",
                    "example": "ipv4"
                  },
                  "public": {
                    "type": "boolean",
                    "description": "Whether to create a public or private IPv4 address.\n",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "IP address was successfully allocated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPAddress"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"type\": \"ipv4\",\n      \"public\": true\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/ips\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes ip-add 123 \\\n  --type ipv4 \\\n  --public true\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/ips/{address}": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "The ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "address",
          "in": "path",
          "description": "The IP address to look up.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ip"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Linode Instances"],
        "summary": "View IP Address",
        "description": "View information about the specified IP address associated with the specified Linode.\n",
        "operationId": "getLinodeIP",
        "x-linode-cli-action": "ip-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A single IP address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPAddress"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    https://api.linode.com/v4/linode/instances/123/ips/97.107.143.141\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes ip-view 123 97.107.143.141\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "summary": "Update IP Address",
        "description": "Updates a particular IP Address associated with this Linode. Only allows setting/resetting reverse DNS.\n",
        "operationId": "updateLinodeIP",
        "x-linode-cli-action": "ip-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The information to update for the IP address.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IPAddress"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated IP address record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPAddress"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"rdns\": \"test.example.org\"\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/ips/97.107.143.141\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes ip-update 123 \\\n  97.107.143.141 \\\n  --rdns test.example.org\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["Linode Instances"],
        "summary": "Delete IPv4 Address",
        "description": "Deletes a public IPv4 address associated with this Linode. This will fail if it is the Linode's last remaining public IPv4 address. Private IPv4 addresses cannot be removed via this endpoint.\n",
        "operationId": "removeLinodeIP",
        "x-linode-cli-action": "ip-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "IP address successfully removed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/linode/instances/123/ips/97.107.143.141\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes ip-delete 97.107.143.141\n"
          }
        ]
      }
    },
    "/linode/kernels": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Linode Instances"],
        "summary": "List Kernels",
        "description": "Lists available Kernels.\n",
        "operationId": "getKernels",
        "x-linode-cli-action": "list",
        "responses": {
          "200": {
            "description": "Returns an array of Kernels.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Kernel"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://api.linode.com/v4/linode/kernels\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli kernels list\n"
          }
        ]
      }
    },
    "/linode/kernels/{kernelId}": {
      "parameters": [
        {
          "name": "kernelId",
          "in": "path",
          "description": "ID of the Kernel to look up.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Linode Instances"],
        "summary": "View Kernel",
        "description": "Returns information about a single Kernel.\n",
        "operationId": "getKernel",
        "x-linode-cli-action": "view",
        "responses": {
          "200": {
            "description": "A single Kernel object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kernel"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://api.linode.com/v4/linode/kernels/linode/latest-64bit\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli kernels view latest-64bit\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/migrate": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to migrate.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Initiate DC Migration/Pending Host Migration",
        "description": "Initiate a pending host migration that has been scheduled by Linode or initiate a cross data center (DC) migration.  A list of pending migrations, if any, can be accessed from [GET /account/notifications](/api/v4/account-notifications). When the migration begins, your Linode will be shutdown if not already off. If the migration initiated the shutdown, it will reboot the Linode when completed.\n\nTo initiate a cross DC migration, you must pass a `region` parameter to the request body specifying the target data center region. You can view a list of all available regions and their feature capabilities from [GET /regions](/api/v4/regions). If your Linode has a DC migration already queued or you have initiated a previously scheduled migration, you will not be able to initiate a DC migration until it has completed.\n\n**Note:** Next Generation Network (NGN) data centers do not support IPv6 `/116` pools or IP Failover. If you have these features enabled on your Linode and attempt to migrate to an NGN data center, the migration will not initiate. If a Linode cannot be migrated because of an incompatibility, you will be prompted to select a different data center or contact support.\n",
        "tags": ["Linode Instances"],
        "operationId": "migrateLinodeInstance",
        "x-linode-cli-action": "migrate",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "region": {
                    "type": "string",
                    "description": "The region to which the Linode will be migrated. Must be a valid region slug. A list of regions can be viewed by using the [GET /regions](/api/v4/regions) endpoint. A cross data center migration will cancel a pending migration that has not yet been initiated.\nA cross data center migration will initiate a `linode_migrate_datacenter_create` event.\n",
                    "example": "us-east"
                  },
                  "upgrade": {
                    "type": "boolean",
                    "description": "When initiating a cross DC migration, setting this value to true will also ensure that the Linode is upgraded to the latest generation of hardware that corresponds to your Linode's Type, if any free upgrades are available for it.\nIf no free upgrades are available, and this value is set to true, then the endpoint will return a 400 error code and the migration will not be performed.\nIf the data center set in the `region` field does not allow upgrades, then the endpoint will return a 400 error code and the migration will not be performed.\n",
                    "example": false,
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Scheduled migration started",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"region\": \"us-central\"\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/migrate\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes migrate 123 --region us-central\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/mutate": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to mutate.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Upgrade Linode",
        "description": "Linodes created with now-deprecated Types are entitled to a free upgrade to the next generation. A mutating Linode will be allocated any new resources the upgraded Type provides, and will be subsequently restarted if it was currently running.\nIf any actions are currently running or queued, those actions must be completed first before you can initiate a mutate.\n",
        "tags": ["Linode Instances"],
        "operationId": "mutateLinodeInstance",
        "x-linode-cli-action": "upgrade",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Whether to automatically resize disks or not.",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allow_auto_disk_resize": {
                    "type": "boolean",
                    "description": "Automatically resize disks when resizing a Linode. When resizing down to a smaller plan your Linode's data must fit within the smaller disk size.\n",
                    "example": true,
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mutate started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/linode/instances/123/mutate\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes upgrade 123\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/password": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode for which to reset its root password.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Reset Linode Root Password",
        "description": "Resets the root password for this Linode.\n* Your Linode must be [shut down](/api/v4/linode-instances-linode-id-shutdown/#post) for a password reset to complete.\n* If your Linode has more than one disk (not counting its swap disk), use the [Reset Disk Root Password](/api/v4/linode-instances-linode-id-disks-disk-id-password/#post) endpoint to update a specific disk's root password.\n* A `password_reset` event is generated when a root password reset is successful.\n",
        "tags": ["Linode Instances"],
        "operationId": "resetLinodePassword",
        "x-linode-cli-action": "linode-reset-password",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "This Linode's new root password.",
          "content": {
            "application/json": {
              "schema": {
                "required": ["root_pass"],
                "properties": {
                  "root_pass": {
                    "type": "string",
                    "description": "The root user's password on this Linode. Linode passwords must meet a password strength score requirement that is calculated internally by the API. If the strength requirement is not met, you will receive a Password does not meet strength requirement error.\n",
                    "example": "a$eCure4assw0rd!43v51"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password Reset.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"root_pass\": \"a$eCure4assw0rd!43v51\"\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/password\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes linode-reset-password 123 a$eCure4assw0rd!43v51\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/reboot": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the linode to reboot.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Reboot Linode",
        "description": "Reboots a Linode you have permission to modify. If any actions are currently running or queued, those actions must be completed first before you can initiate a reboot.\n",
        "tags": ["Linode Instances"],
        "operationId": "rebootLinodeInstance",
        "x-linode-cli-action": "reboot",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Optional reboot parameters.",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "config_id": {
                    "type": "integer",
                    "description": "The Linode Config ID to reboot into.  If null or omitted, the last booted config will be used.  If there was no last booted config and this Linode only has one config, it will be used.  If a config cannot be determined, an error will be returned.\n",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reboot started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/linode/instances/123/reboot\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes reboot 123\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/rebuild": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to rebuild.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Rebuild Linode",
        "description": "Rebuilds a Linode you have the `read_write` permission to modify.\nA rebuild will first shut down the Linode, delete all disks and configs on the Linode, and then deploy a new `image` to the Linode with the given attributes. Additionally:\n\n  * Requires an `image` be supplied.\n  * Requires a `root_pass` be supplied to use for the root User's Account.\n  * It is recommended to supply SSH keys for the root User using the\n    `authorized_keys` field.\n",
        "tags": ["Linode Instances"],
        "operationId": "rebuildLinodeInstance",
        "x-linode-cli-action": "rebuild",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The requested state your Linode will be rebuilt into.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["image", "root_pass"],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LinodeRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rebuild started.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Linode"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"image\": \"linode/debian9\",\n      \"root_pass\": \"aComplexP@ssword\",\n      \"authorized_keys\": [\n        \"ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer\"\n      ],\n      \"authorized_users\": [\n        \"myUsername\",\n        \"secondaryUsername\"\n      ],\n      \"booted\": true,\n      \"stackscript_id\": 10079,\n      \"stackscript_data\": {\n        \"gh_username\": \"linode\"\n      }\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/rebuild\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes rebuild 123 \\\n  --image \"linode/debian9\" \\\n  --root_pass aComplex@Password \\\n  --authorized_keys \"ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer\" \\\n  --authorized_users \"myUsername\" \\\n  --authorized_users \"secondaryUsername\" \\\n  --booted true \\\n  --stackscript_id 10079 \\\n  --stackscript_data '{\"gh_username\": \"linode\"}'\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/rescue": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to rescue.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Boot Linode into Rescue Mode",
        "description": "Rescue Mode is a safe environment for performing many system recovery and disk management tasks. Rescue Mode is based on the Finnix recovery distribution, a self-contained and bootable Linux distribution. You can also use Rescue Mode for tasks other than disaster recovery, such as formatting disks to use different filesystems, copying data between disks, and downloading files from a disk via SSH and SFTP.\n* Note that \"sdh\" is reserved and unavailable during rescue.\n",
        "tags": ["Linode Instances"],
        "operationId": "rescueLinodeInstance",
        "x-linode-cli-action": "rescue",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Optional object of devices to be mounted.",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "devices": {
                    "$ref": "#/components/schemas/RescueDevices"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rescue started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"devices\": {\n        \"sda\": {\n          \"disk_id\": 124458,\n          \"volume_id\": null\n        },\n        \"sdb\": {\n          \"disk_id\": null,\n          \"volume_id\": null\n        }\n      }\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/rescue\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes rescue 123 \\\n  --devices.sda.disk_id 124458\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/resize": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to resize.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Resize Linode",
        "description": "Resizes a Linode you have the `read_write` permission to a different Type. If any actions are currently running or queued, those actions must be completed first before you can initiate a resize. Additionally, the following criteria must be met in order to resize a Linode:\n\n  * The Linode must not have a pending migration.\n  * Your Account cannot have an outstanding balance.\n  * The Linode must not have more disk allocation than the new Type allows.\n    * In that situation, you must first delete or resize the disk to be smaller.\n",
        "tags": ["Linode Instances"],
        "operationId": "resizeLinodeInstance",
        "x-linode-cli-action": "resize",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The Type your current Linode will resize to, and whether to attempt to automatically resize the Linode's disks.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type"],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The ID representing the Linode Type.",
                    "example": "g6-standard-2",
                    "x-linode-cli-display": 1
                  },
                  "allow_auto_disk_resize": {
                    "type": "boolean",
                    "description": "Automatically resize disks when resizing a Linode. When resizing down to a smaller plan your Linode's data must fit within the smaller disk size.\n",
                    "example": true,
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resize started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"type\": \"g6-standard-2\"\n    }' \\\n    https://api.linode.com/v4/linode/instances/123/resize\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes resize 123 \\\n  --type g6-standard-2\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/shutdown": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to shutdown.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "summary": "Shut Down Linode",
        "description": "Shuts down a Linode you have permission to modify. If any actions are currently running or queued, those actions must be completed first before you can initiate a shutdown.\n",
        "tags": ["Linode Instances"],
        "operationId": "shutdownLinodeInstance",
        "x-linode-cli-action": "shutdown",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Shutdown started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/linode/instances/123/shutdown\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes shutdown 123\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/transfer": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Linode Instances"],
        "summary": "View Network Transfer",
        "description": "Returns a Linode's network transfer pool statistics for the current month.\n",
        "operationId": "getLinodeTransfer",
        "x-linode-cli-action": "transfer-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of the specified Linode's network transfer statistics.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "used": {
                      "type": "integer",
                      "description": "The amount of network transfer used by this Linode, in bytes, for the current month's billing cycle.\n",
                      "example": 22956600198,
                      "readOnly": true
                    },
                    "quota": {
                      "type": "integer",
                      "description": "The amount of network transfer this Linode adds to your transfer pool, in GB, for the current month's billing cycle.\n",
                      "example": 2000,
                      "readOnly": true
                    },
                    "billable": {
                      "type": "integer",
                      "description": "The amount of network transfer this Linode has used, in GB, past your monthly quota.\n",
                      "example": 0,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/transfer\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes transfer-view 123\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/transfer/{year}/{month}": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "year",
          "in": "path",
          "description": "Numeric value representing the year to look up.",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 2000,
            "maximum": 2037
          }
        },
        {
          "name": "month",
          "in": "path",
          "description": "Numeric value representing the month to look up.",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 1,
            "maximum": 12
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Linode Instances"],
        "summary": "View Network Transfer (year/month)",
        "description": "Returns a Linode's network transfer statistics for a specific month. The year/month values must be either a date in the past, or the current month.\n",
        "operationId": "getLinodeTransferByYearMonth",
        "x-linode-cli-skip": true,
        "x-linode-cli-action": "transfer-month",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of the specified Linode's network transfer statistics for the requested month.\n",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "bytes_in": {
                      "type": "integer",
                      "description": "The amount of inbound public network traffic received by this Linode, in bytes, for a specific year/month.\n",
                      "example": 30471077120,
                      "readOnly": true
                    },
                    "bytes_out": {
                      "type": "integer",
                      "description": "The amount of outbound public network traffic sent by this Linode, in bytes, for a specific year/month.\n",
                      "example": 22956600198,
                      "readOnly": true
                    },
                    "bytes_total": {
                      "type": "integer",
                      "description": "The total amount of public network traffic sent and received by this Linode, in bytes, for a specific year/month.\n",
                      "example": 53427677318,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/transfer/2018/01\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/stats": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["Linode Instances"],
        "summary": "View Linode Statistics",
        "description": "Returns CPU, IO, IPv4, and IPv6 statistics for your Linode for the past 24 hours.\n",
        "operationId": "getLinodeStats",
        "x-linode-cli-skip": true,
        "x-linode-cli-action": "stats",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The Linode's stats for the past 24 hours.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinodeStats"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/stats\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/stats/{year}/{month}": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "year",
          "in": "path",
          "description": "Numeric value representing the year to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "month",
          "in": "path",
          "description": "Numeric value representing the month to look up.",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 1,
            "maximum": 12
          }
        }
      ],
      "get": {
        "tags": ["Linode Instances"],
        "summary": "View Statistics (year/month)",
        "description": "Returns statistics for a specific month. The year/month values must be either a date in the past, or the current month. If the current month, statistics will be retrieved for the past 30 days.\n",
        "operationId": "getLinodeStatsByYearMonth",
        "x-linode-cli-skip": true,
        "x-linode-cli-action": "stats-month",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The Linode's statistics for the requested period.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinodeStats"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/stats/2018/01\n"
          }
        ]
      }
    },
    "/linode/instances/{linodeId}/volumes": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "description": "ID of the Linode to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Linode Instances"],
        "summary": "List Linode's Volumes",
        "description": "View Block Storage Volumes attached to this Linode.\n",
        "operationId": "getLinodeVolumes",
        "x-linode-cli-action": "volumes",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["linodes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Block Storage Volumes attached to this Linode.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volume"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/linode/instances/123/volumes\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linode volumes 123\n"
          }
        ]
      }
    },
    "/linode/stackscripts": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["StackScripts"],
        "summary": "List StackScripts",
        "description": "If the request is not authenticated, only public StackScripts are returned.\n\nFor more information on StackScripts, please read our guide: <a target=\"_top\" href=\"https://linode.com/docs/platform/stackscripts/\">Automate Deployment with StackScripts</a>.\n",
        "operationId": "getStackScripts",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["stackscripts:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A list of StackScripts available to the User, including private StackScripts owned by the User if the request is authenticated.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StackScript"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://api.linode.com/v4/linode/stackscripts\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli stackscripts list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "add_stackscripts",
        "tags": ["StackScripts"],
        "summary": "Create StackScript",
        "description": "Creates a StackScript in your Account.\n",
        "operationId": "addStackScript",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["stackscripts:read_write"]
          }
        ],
        "requestBody": {
          "description": "The properties to set for the new StackScript.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["script", "label", "images"],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StackScript"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "StackScript successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StackScript"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"label\": \"a-stackscript\",\n      \"description\": \"This StackScript installs and configures MySQL\",\n      \"images\": [\n        \"linode/debian9\",\n        \"linode/debian8\"\n      ],\n      \"is_public\": true,\n      \"rev_note\": \"Set up MySQL\",\n      \"script\": \"#!/bin/bash\"\n    }' \\\n    https://api.linode.com/v4/linode/stackscripts\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli stackscripts create \\\n  --label a-stackscript \\\n  --description \"This StackScript install and configures MySQL\" \\\n  --images \"linode/debian9\" \\\n  --images \"linode/debian8\" \\\n  --is_public true \\\n  --rev_note \"Set up MySQL\" \\\n  --script '#!/bin/bash'\n"
          }
        ]
      }
    },
    "/linode/stackscripts/{stackscriptId}": {
      "parameters": [
        {
          "name": "stackscriptId",
          "in": "path",
          "description": "The ID of the StackScript to look up.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["StackScripts"],
        "summary": "View StackScript",
        "description": "Returns all of the information about a specified StackScript, including the contents of the script.\n",
        "operationId": "getStackScript",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["stackscripts:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A single StackScript.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StackScript"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://api.linode.com/v4/linode/stackscripts/10079\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli stackscripts view 10079\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["StackScripts"],
        "summary": "Update StackScript",
        "description": "Updates a StackScript.\n\n**Once a StackScript is made public, it cannot be made private.**\n",
        "operationId": "updateStackScript",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["stackscripts:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StackScript"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "StackScript was successfully modified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StackScript"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"label\": \"a-stackscript\",\n      \"description\": \"This StackScript installs and configures MySQL\",\n      \"images\": [\n        \"linode/debian9\",\n        \"linode/debian8\"\n      ],\n      \"is_public\": true,\n      \"rev_note\": \"Set up MySQL\",\n      \"script\": \"#!/bin/bash\"\n    }' \\\n    https://api.linode.com/v4/linode/stackscripts/10079\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli stackscripts update 10079 \\\n  --label a-stackscript \\\n  --description \"This StackScript installs \\\n    and configures MySQL\" \\\n  --images \"linode/debian9\" \\\n  --images \"linode/debian8\" \\\n  --is_public true \\\n  --rev_note \"Set up MySQL\" \\\n  --script '#!/bin/bash'\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["StackScripts"],
        "summary": "Delete StackScript",
        "description": "Deletes a private StackScript you have permission to `read_write`. You cannot delete a public StackScript.\n",
        "operationId": "deleteStackScript",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["stackscripts:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "StackScript was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/linode/stackscripts/10079\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli stackscripts delete 10079\n"
          }
        ]
      }
    },
    "/linode/types": {
      "get": {
        "tags": ["Linode Types"],
        "summary": "List Types",
        "description": "Returns collection of Linode Types, including pricing and specifications for each Type. These are used when [creating](/api/v4/linode-instances/#post) or [resizing](/api/v4/linode-instances-linode-id-resize/#post) Linodes.\n",
        "x-linode-redoc-load-ids": true,
        "operationId": "getLinodeTypes",
        "x-linode-cli-action": "types",
        "responses": {
          "200": {
            "description": "A collection of Linode Types.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinodeType"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://api.linode.com/v4/linode/types\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes types\n"
          }
        ]
      }
    },
    "/linode/types/{typeId}": {
      "parameters": [
        {
          "name": "typeId",
          "in": "path",
          "description": "The ID of the Linode Type to look up.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Linode Types"],
        "summary": "View Type",
        "description": "Returns information about a specific Linode Type, including pricing and specifications. This is used when [creating](/api/v4/linode-instances/#post) or [resizing](/api/v4/linode-instances-linode-id-resize/#post) Linodes.\n",
        "operationId": "getLinodeType",
        "x-linode-cli-action": "type-view",
        "responses": {
          "200": {
            "description": "A single Linode Type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinodeType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://api.linode.com/v4/linode/types/g6-standard-2\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli linodes type-view g6-standard-2\n"
          }
        ]
      }
    },
    "/lke/clusters": {
      "get": {
        "operationId": "getLKEClusters",
        "x-linode-cli-action": "clusters-list",
        "x-linode-grant": "read_only",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_only"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "List Kubernetes Clusters",
        "description": "Lists current Kubernetes clusters available on your account.\n",
        "responses": {
          "200": {
            "description": "Returns an array of all Kubernetes clusters on your Account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LKECluster"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n      https://api.linode.com/v4/lke/clusters\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke clusters-list\n"
          }
        ]
      },
      "post": {
        "operationId": "createLKECluster",
        "x-linode-cli-action": "cluster-create",
        "x-linode-charge": true,
        "x-linode-grant": "add_clusters",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_write"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "Create Kubernetes Cluster",
        "description": "Creates a Kubernetes cluster. The Kubernetes cluster will be created\nasynchronously. You can use the events system to determine when the\nKubernetes cluster is ready to use. Please note that it often takes 2-5 minutes before the\n[Kubernetes API server endpoint](/api/v4/lke-clusters-cluster-id-api-endpoint) and\nthe [Kubeconfig file](/api/v4/lke-clusters-cluster-id-kubeconfig) for the new cluster\nare ready.\n",
        "requestBody": {
          "description": "Configuration for the Kubernetes cluster",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["label", "region", "k8s_version", "node_pools"],
                "properties": {
                  "label": {
                    "$ref": "#/components/schemas/LKECluster/properties/label"
                  },
                  "region": {
                    "$ref": "#/components/schemas/LKECluster/properties/region"
                  },
                  "k8s_version": {
                    "$ref": "#/components/schemas/LKECluster/properties/k8s_version"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/LKECluster/properties/tags"
                  },
                  "node_pools": {
                    "type": "array",
                    "required": ["type", "count"],
                    "items": {
                      "$ref": "#/components/schemas/LKENodePoolRequestBody"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Kubernetes cluster creation has started.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LKECluster"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n      -H \"Authorization: Bearer $TOKEN\" \\\n      -X POST -d '{\n        \"label\": \"cluster12345\",\n        \"region\": \"us-central\",\n        \"k8s_version\": \"1.16\",\n        \"tags\": [\"ecomm\", \"blogs\"],\n        \"node_pools\": [\n          {\n            \"type\": \"g6-standard-4\",\n            \"count\": 6\n          },\n          {\n            \"type\": \"g6-standard-8\",\n            \"count\": 3\n          }\n        ]\n      }' \\\n      https://api.linode.com/v4/lke/clusters\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke cluster-create \\\n  --label cluster12345 \\\n  --region us-central \\\n  --k8s_version 1.16 \\\n  --node_pools.type g6-standard-4 --node_pools.count 6 \\\n  --node_pools.type g6-standard-8 --node_pools.count 3 \\\n  --tags ecomm\n"
          }
        ]
      }
    },
    "/lke/clusters/{clusterId}": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "ID of the Kubernetes cluster to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getLKECluster",
        "x-linode-cli-action": "cluster-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_only"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "View Kubernetes Cluster",
        "description": "Get a specific Cluster by ID.\n",
        "responses": {
          "200": {
            "description": "Returns a single Kubernetes cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LKECluster"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n      https://api.linode.com/v4/lke/clusters/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke cluster-view 12345"
          }
        ]
      },
      "put": {
        "operationId": "putLKECluster",
        "x-linode-cli-action": "cluster-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_write"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "Update Kubernetes Cluster",
        "description": "Updates a Kubernetes cluster.\n",
        "requestBody": {
          "description": "The fields to update the Kubernetes cluster.",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "label": {
                    "$ref": "#/components/schemas/LKECluster/properties/label"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["prod", "monitoring", "ecomm", "blog"],
                    "description": "An array of tags applied to the Kubernetes cluster. Tags are for organizational purposes only. To delete a tag, exclude it from your `tags` array.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a single Kubernetes cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "label": {
                      "$ref": "#/components/schemas/LKECluster/properties/label"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["prod", "monitoring", "ecomm", "blog"],
                      "description": "An array of tags applied to the Kubernetes cluster. Tags are for organizational purposes only. To delete a tag, exclude it from your `tags` array.\n"
                    },
                    "created": {
                      "$ref": "#/components/schemas/LKECluster/properties/created"
                    },
                    "updated": {
                      "$ref": "#/components/schemas/LKECluster/properties/updated"
                    },
                    "region": {
                      "$ref": "#/components/schemas/LKECluster/properties/region"
                    },
                    "k8s_version": {
                      "$ref": "#/components/schemas/LKECluster/properties/k8s_version"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n      -H \"Authorization: Bearer $TOKEN\" \\\n      -X PUT -d '{\n        \"label\": \"lkecluster54321\"\n        \"tags\" : [\"ecomm\", \"blog\", \"prod\", \"monitoring\"]\n      }' \\\n      https://api.linode.com/v4/lke/clusters/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke cluster-update 12345 \\\n  --label lkecluster54321 \\\n  --tags ecomm \\\n  --tags blog \\\n  --tags prod \\\n  --tags monitoring\n"
          }
        ]
      },
      "delete": {
        "operationId": "deleteLKECluster",
        "x-linode-cli-action": "cluster-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_write"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "Delete Kubernetes Cluster",
        "description": "Deletes a Cluster you have permission to `read_write`.\n\n**Deleting a Cluster is a destructive action and cannot be undone.**\n\nDeleting a Cluster:\n  - Deletes all Linodes in all pools within this Kubernetes cluster\n  - Deletes all supporting Kubernetes services for this Kubernetes\n    cluster (API server, etcd, etc)\n  - Deletes all NodeBalancers created by this Kubernetes cluster\n  - Does not delete any of the volumes created by this Kubernetes\n    cluster\n",
        "responses": {
          "200": {
            "description": "Delete successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n      -X DELETE \\\n      https://api.linode.com/v4/lke/clusters/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke cluster-delete 12345\n"
          }
        ]
      }
    },
    "/lke/clusters/{clusterId}/pools": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "ID of the Kubernetes cluster to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getLKEClusterPools",
        "x-linode-cli-action": "pools-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_only"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "List Node Pools",
        "description": "Returns all active Node Pools on a Kubernetes cluster.\n",
        "responses": {
          "200": {
            "description": "Returns an array of all Pools in this Kubernetes cluster.",
            "content": {
              "application/json": {
                "x-linode-cli-nested-list": "nodes",
                "x-linode-cli-use-schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "x-linode-cli-display": 1
                    },
                    "type": {
                      "x-linode-cli-display": 2
                    },
                    "nodes.id": {
                      "x-linode-cli-display": 3
                    },
                    "nodes.instance_id": {
                      "x-linode-cli-display": 4
                    },
                    "nodes.status": {
                      "x-linode-cli-display": 5
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LKENodePool"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n      https://api.linode.com/v4/lke/clusters/12345/pools\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke pools-list 12345\n"
          }
        ]
      },
      "post": {
        "operationId": "postLKEClusterPools",
        "x-linode-cli-action": "pool-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_write"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "Create Node Pool",
        "description": "Creates a new Node Pool for the designated Kubernetes cluster.\n",
        "requestBody": {
          "description": "Configuration for the Node Pool",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type", "count"],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LKENodePoolRequestBody"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Node Pool has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/LKENodePoolRequestBody/properties/type"
                    },
                    "count": {
                      "$ref": "#/components/schemas/LKENodePoolRequestBody/properties/count"
                    },
                    "disks": {
                      "$ref": "#/components/schemas/LKENodePoolRequestBody/properties/disks"
                    },
                    "id": {
                      "$ref": "#/components/schemas/LKENodePool/properties/id"
                    },
                    "nodes": {
                      "$ref": "#/components/schemas/LKENodePool/properties/nodes"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n      -H \"Authorization: Bearer $TOKEN\" \\\n      -X POST -d '{\n        \"type\": \"g6-standard-4\",\n        \"count\": 6\n      }' \\\n      https://api.linode.com/v4/lke/clusters/12345/pools\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke pool-create 12345 \\\n  --type g6-standard-4 \\\n  --count 6\n"
          }
        ]
      }
    },
    "/lke/clusters/{clusterId}/pools/{poolId}": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "ID of the Kubernetes cluster to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "poolId",
          "in": "path",
          "description": "ID of the Pool to look up",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getLKENodePool",
        "x-linode-cli-action": "pool-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_only"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "View Node Pool",
        "description": "Get a specific Node Pool by ID.\n",
        "responses": {
          "200": {
            "description": "Returns the requested Node Pool.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/LKENodePoolRequestBody/properties/type"
                    },
                    "count": {
                      "$ref": "#/components/schemas/LKENodePoolRequestBody/properties/count"
                    },
                    "disks": {
                      "$ref": "#/components/schemas/LKENodePoolRequestBody/properties/disks"
                    },
                    "id": {
                      "$ref": "#/components/schemas/LKENodePool/properties/id"
                    },
                    "nodes": {
                      "$ref": "#/components/schemas/LKENodePool/properties/nodes"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n      https://api.linode.com/v4/lke/clusters/12345/pools/456\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke pool-view 12345 456\n"
          }
        ]
      },
      "put": {
        "operationId": "putLKENodePool",
        "x-linode-cli-action": "pool-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_write"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "Update Node Pool",
        "description": "Updates a Node Pool's count.\n\nLinodes will be created or deleted to match changes to the Node Pool's count.\n\n**Any local storage on deleted Linodes (such as \"hostPath\" and \"emptyDir\" volumes, or \"local\" PersistentVolumes) will be erased.**\n",
        "requestBody": {
          "description": "The fields to update",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "count": {
                    "$ref": "#/components/schemas/LKENodePoolRequestBody/properties/count"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Node Pool was successfully modified.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/LKENodePoolRequestBody/properties/type"
                    },
                    "count": {
                      "$ref": "#/components/schemas/LKENodePoolRequestBody/properties/count"
                    },
                    "disks": {
                      "$ref": "#/components/schemas/LKENodePoolRequestBody/properties/disks"
                    },
                    "id": {
                      "$ref": "#/components/schemas/LKENodePool/properties/id"
                    },
                    "nodes": {
                      "$ref": "#/components/schemas/LKENodePool/properties/nodes"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n      -H \"Authorization: Bearer $TOKEN\" \\\n      -X PUT -d '{\n        \"count\": 6\n      }' \\\n      https://api.linode.com/v4/lke/clusters/12345/pools/456\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke pool-update 12345 456 \\\n  --count 6 \\\n"
          }
        ]
      },
      "delete": {
        "operationId": "deleteLKENodePool",
        "x-linode-cli-action": "pool-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_write"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "Delete Node Pool",
        "description": "Delete a specific Node Pool from a Kubernetes cluster.\n\n**Deleting a Node Pool is a destructive action and cannot be undone.**\n\nDeleting a Node Pool will delete all Linodes within that Pool.\n",
        "responses": {
          "200": {
            "description": "Delete successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n      -X DELETE \\\n      https://api.linode.com/v4/lke/clusters/12345/pools/456\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke pool-delete 12345 456\n"
          }
        ]
      }
    },
    "/lke/clusters/{clusterId}/pools/{poolId}/recycle": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "ID of the Kubernetes cluster this Node Pool is attached to.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "poolId",
          "in": "path",
          "description": "ID of the Node Pool to be recycled.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "operationId": "postLKEClusterPoolRecycle",
        "x-linode-cli-action": "pool-recycle",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_write"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "Recycle Node Pool",
        "description": "Recycles a Node Pool for the designated Kubernetes Cluster. All Linodes within the Node Pool will be deleted\nand replaced with new Linodes on a rolling basis, which may take several minutes. Replacement Nodes are\ninstalled with the latest available patch for the Cluster's Kubernetes Version.\n\n**Any local storage on deleted Linodes (such as \"hostPath\" and \"emptyDir\" volumes, or \"local\" PersistentVolumes) will be erased.**\n",
        "responses": {
          "200": {
            "description": "Node Pool has been recycled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n      -H \"Authorization: Bearer $TOKEN\" \\\n      -X POST \\\n      https://api.linode.com/v4/lke/clusters/12345/pools/456/recycle\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke pool-recycle 12345 456\n"
          }
        ]
      }
    },
    "/lke/clusters/{clusterId}/api-endpoints": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "ID of the Kubernetes cluster to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getLKEClusterAPIEndpoints",
        "x-linode-cli-action": "api-endpoints-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_only"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "List Kubernetes API Endpoints",
        "description": "List the Kubernetes API server endpoints for this cluster. Please note that it often takes 2-5 minutes before the endpoint is ready after first [creating a new cluster](/api/v4/lke-clusters/#post).\n",
        "responses": {
          "200": {
            "description": "Returns the Kubernetes API server endpoints for this cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The Kubernetes API server endpoints for this cluster.\n",
                        "properties": {
                          "endpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "A Kubernetes API server endpoint for this cluster.\n",
                            "example": "https://192.0.2.1:6443"
                          }
                        }
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n      https://api.linode.com/v4/lke/clusters/12345/api-endpoints\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke api-endpoint-list 12345\n"
          }
        ]
      }
    },
    "/lke/clusters/{clusterId}/kubeconfig": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "ID of the Kubernetes cluster to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getLKEClusterKubeconfig",
        "x-linode-cli-action": "kubeconfig-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_write"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "View Kubeconfig",
        "description": "Get the Kubeconfig file for a Cluster. Please note that it often takes 2-5 minutes before\nthe Kubeconfig file is ready after first [creating a new cluster](/api/v4/lke-clusters/#post).\n",
        "responses": {
          "200": {
            "description": "Returns the Base64-encoded Kubeconfig file for this Kubernetes cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kubeconfig": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The Base64-encoded Kubeconfig file for this Cluster.\n"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n      https://api.linode.com/v4/lke/clusters/12345/kubeconfig\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke kubeconfig-view 12345\n"
          }
        ]
      }
    },
    "/lke/versions": {
      "get": {
        "operationId": "getLKEVersions",
        "x-linode-cli-action": "versions-list",
        "x-linode-grant": "read_only",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_only"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "List Kubernetes Versions",
        "description": "List the Kubernetes versions available for deployment to a Kubernetes cluster.\n",
        "responses": {
          "200": {
            "description": "Returns a list of Kubernetes versions available for deployment to a Kubernetes cluster.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LKEVersion"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n      https://api.linode.com/v4/lke/versions\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke versions-list\n"
          }
        ]
      }
    },
    "/lke/versions/{version}": {
      "parameters": [
        {
          "name": "version",
          "in": "path",
          "required": true,
          "description": "The LKE version to view.",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "getLKEVersion",
        "x-linode-cli-action": "version-view",
        "x-linode-grant": "read_only",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["lke:read_only"]
          }
        ],
        "tags": ["Linode Kubernetes Engine (LKE)"],
        "summary": "View Kubernetes Version",
        "description": "View a Kubernetes version available for deployment to a Kubernetes cluster.\n",
        "responses": {
          "200": {
            "description": "Returns a Kubernetes version object that is available for deployment to a Kubernetes cluster.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LKEVersion"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n      https://api.linode.com/v4/lke/versions/1.16\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli lke version-view 1.16\n"
          }
        ]
      }
    },
    "/longview/clients": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Longview"],
        "summary": "List Longview Clients",
        "description": "Returns a paginated list of Longview Clients you have access to. Longview Client is used to monitor stats on your Linode with the help of the Longview Client application.\n",
        "operationId": "getLongviewClients",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["longview:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Longview Clients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LongviewClient"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/longview/clients\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli longview list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "add_longview",
        "tags": ["Longview"],
        "summary": "Create Longview Client",
        "description": "Creates a Longview Client.  This Client will not begin monitoring the status of your server until you configure the Longview Client application on your Linode using the returning `install_code` and `api_key`.\n",
        "operationId": "createLongviewClient",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["longview:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the LongviewClient to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LongviewClient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Longview Client created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongviewClient"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"label\": \"client789\"\n    }' \\\n    https://api.linode.com/v4/longview/clients\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli longview create \\\n  --label client789\n"
          }
        ]
      }
    },
    "/longview/clients/{clientId}": {
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "required": true,
          "description": "The Longview Client ID to access.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Longview"],
        "summary": "View Longview Client",
        "description": "Returns a single Longview Client you can access.\n",
        "operationId": "getLongviewClient",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["longview:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Longview Client.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongviewClient"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/longview/clients/789\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli longview view 789\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Longview"],
        "summary": "Update Longview Client",
        "description": "Updates a Longview Client.  This cannot update how it monitors your server; use the Longview Client application on your Linode for monitoring configuration.\n",
        "operationId": "updateLongviewClient",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["longview:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LongviewClient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Longview Client updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongviewClient"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"label\": \"client789\"\n    }' \\\n    https://api.linode.com/v4/longview/clients/789\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli longview update 789 \\\n  --label client789\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["Longview"],
        "summary": "Delete Longview Client",
        "description": "Deletes a Longview Client from your Account.\n\n**All information stored for this client will be lost.**\n\nThis _does not_ uninstall the Longview Client application for your Linode - you must do that manually.\n",
        "operationId": "deleteLongviewClient",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["longview:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Longview Client deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/longview/clients/789\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli longview delete 789\n"
          }
        ]
      }
    },
    "/longview/plan": {
      "get": {
        "tags": ["Longview"],
        "summary": "View Longview Plan",
        "description": "Get the details of your current Longview plan. This returns a `LongviewSubscription` object for your current Longview Pro plan, or an empty set `{}` if your current plan is Longview Free.\n\nYou must have at least one of the following `global` [User Grants](/api/v4/account-users-username-grants/) in order to access this endpoint:\n\n  - `\"account_access\": read_write`\n  - `\"account_access\": read_only`\n  - `\"longview_subscription\": true`\n  - `\"add_longview\": true`\n\n\nTo update your subscription plan, send a request to [Update Longview Plan](/api/v4/longview-plan/#put).\n",
        "operationId": "getLongviewPlan",
        "x-linode-cli-action": "plan-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["longview:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The Longview plan details for this account.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongviewSubscription"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/longview/plan\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli longview plan-view\n"
          }
        ]
      },
      "put": {
        "tags": ["Longview"],
        "summary": "Update Longview Plan",
        "description": "Update your Longview plan to that of the given subcription ID. This returns a `LongviewSubscription` object for the updated Longview Pro plan, or an empty set `{}` if the updated plan is Longview Free.\n\nYou must have `\"longview_subscription\": true` configured as a `global` [User Grant](/api/v4/account-users-username-grants/) in order to access this endpoint.\n\nYou can send a request to the [List Longview Subscriptions](/api/v4/longview-subscriptions/) endpoint to receive the details, including `id`'s, of each plan.\n",
        "operationId": "updateLongviewPlan",
        "x-linode-cli-action": "plan-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["longview:read_write"]
          }
        ],
        "requestBody": {
          "description": "Update your Longview subscription plan.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LongviewPlan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Longview plan details for this account.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongviewSubscription"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n        \"longview_subscription\": \"longview-10\"\n    }' \\\n    https://api.linode.com/v4/longview/plan\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli longview plan-update --longview_subscription longview-10\n"
          }
        ]
      }
    },
    "/longview/subscriptions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Longview"],
        "summary": "List Longview Subscriptions",
        "description": "Returns a paginated list of available Longview Subscriptions. This is a public endpoint and requires no authentication.\n",
        "operationId": "getLongviewSubscriptions",
        "x-linode-cli-action": "subscriptions-list",
        "responses": {
          "200": {
            "description": "A paginated list of Longview Subscriptions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LongviewSubscription"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/longview/subscriptions\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli longview subscriptions-list\n"
          }
        ]
      }
    },
    "/longview/subscriptions/{subscriptionId}": {
      "parameters": [
        {
          "name": "subscriptionId",
          "in": "path",
          "required": true,
          "description": "The Longview Subscription to look up.",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Longview"],
        "summary": "View Longview Subscription",
        "description": "Get the Longview plan details as a single `LongviewSubscription` object for the provided subscription ID. This is a public endpoint and requires no authentication.\n",
        "operationId": "getLongviewSubscription",
        "x-linode-cli-action": "subscription-view",
        "responses": {
          "200": {
            "description": "The requested Longview Subscription details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongviewSubscription"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/longview/subscriptions/longview-10\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli longview subscription-view \\\n  longview-10\n"
          }
        ]
      }
    },
    "/managed/contacts": {
      "get": {
        "x-linode-grant": "unrestricted only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Managed"],
        "summary": "List Managed Contacts",
        "description": "Returns a paginated list of Managed Contacts on your Account.\n",
        "operationId": "getManagedContacts",
        "x-linode-cli-action": "contacts-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of ManagedContacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ManagedContact"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/contacts\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed contacts-list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Create Managed Contact",
        "description": "Creates a Managed Contact.  A Managed Contact is someone Linode special forces can contact in the course of attempting to resolve an issue with a Managed Service.\n",
        "operationId": "createManagedContact",
        "x-linode-cli-action": "contact-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the contact to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedContact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedContact"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"name\": \"John Doe\",\n      \"email\": \"john.doe@example.org\",\n      \"phone\": {\n        \"primary\": \"123-456-7890\",\n        \"secondary\": null\n      },\n      \"group\": \"on-call\"\n    }' \\\n    https://api.linode.com/v4/managed/contacts\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed contact-create \\\n  --name \"John Doe\" \\\n  --email \"john.doe@example.org\" \\\n  --phone.primary \"123-456-7890\"\n"
          }
        ]
      }
    },
    "/managed/contacts/{contactId}": {
      "parameters": [
        {
          "name": "contactId",
          "in": "path",
          "required": true,
          "description": "The ID of the contact to access.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "View Managed Contact",
        "description": "Returns a single Managed Contact.\n",
        "operationId": "getManagedContact",
        "x-linode-cli-action": "contact-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Managed Contact.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedContact"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/contacts/567\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed contact-view 567\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Update Managed Contact",
        "description": "Updates information about a Managed Contact.\n",
        "operationId": "updateManagedContact",
        "x-linode-cli-action": "contact-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedContact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedContact"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"name\": \"John Doe\",\n      \"email\": \"john.doe@example.org\",\n      \"phone\": {\n        \"primary\": \"123-456-7890\",\n        \"secondary\": null\n      },\n      \"group\": \"on-call\"\n    }' \\\n    https://api.linode.com/v4/managed/contacts/567\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed contact-update 567 \\\n  --name \"John Doe\" \\\n  --email \"john.doe@example.org\" \\\n  --phone.primary \"123-456-7890\"\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Delete Managed Contact",
        "description": "Deletes a Managed Contact.\n",
        "operationId": "deleteManagedContact",
        "x-linode-cli-action": "contact-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/managed/contacts/567\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed contact-delete 567\n"
          }
        ]
      }
    },
    "/managed/credentials": {
      "get": {
        "x-linode-grant": "unrestricted only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Managed"],
        "summary": "List Managed Credentials",
        "description": "Returns a paginated list of Managed Credentials on your Account.\n",
        "operationId": "getManagedCredentials",
        "x-linode-cli-action": "credentials-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of ManagedCredentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ManagedCredential"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/credentials\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed credentials-list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Create Managed Credential",
        "description": "Creates a Managed Credential. A Managed Credential is stored securely to allow Linode special forces to access your Managed Services and resolve issues.\n",
        "operationId": "createManagedCredential",
        "x-linode-cli-action": "credential-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the Credential to create.",
          "content": {
            "application/json": {
              "schema": {
                "required": ["label", "password"],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ManagedCredential"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 5000,
                        "description": "The username to use when accessing the Managed Service.\n",
                        "example": "johndoe"
                      },
                      "password": {
                        "type": "string",
                        "description": "The password to use when accessing the Managed Service.\n",
                        "example": "s3cur3P@ssw0rd"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credential created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedCredential"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"label\": \"prod-password-1\",\n      \"username\": \"johndoe\",\n      \"password\": \"s3cur3P@ssw0rd\"\n    }' \\\n    https://api.linode.com/v4/managed/credentials\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed credential-create \\\n  --label prod-password-1 \\\n  --username johndoe \\\n  --password s3cur3P@ssw0rd\n"
          }
        ]
      }
    },
    "/managed/credentials/{credentialId}": {
      "parameters": [
        {
          "name": "credentialId",
          "in": "path",
          "required": true,
          "description": "The ID of the Credential to access.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "View Managed Credential",
        "description": "Returns a single Managed Credential.\n",
        "operationId": "getManagedCredential",
        "x-linode-cli-action": "credential-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Managed Credential.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedCredential"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/credentials/9991\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed credential-view 9991\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Update Managed Credential",
        "description": "Updates the label of a Managed Credential. This endpoint does not update the username and password for a Managed Credential. To do this, use the Update Managed Credential Username and Password ([POST /managed/credentials/{credentialId}/update](https://developers.linode.com/api/docs/v4#operation/updateManagedCredentialUsernamePassword)) endpoint instead.\n",
        "operationId": "updateManagedCredential",
        "x-linode-cli-action": "credential-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedCredential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credential updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedCredential"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"label\": \"prod-password-1\"\n    }' \\\n    https://api.linode.com/v4/managed/credentials/9991\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed credential-update 9991 \\\n  --label prod-password-1\n"
          }
        ]
      }
    },
    "/managed/credentials/{credentialId}/update": {
      "parameters": [
        {
          "name": "credentialId",
          "in": "path",
          "required": true,
          "description": "The ID of the Credential to update.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Update Managed Credential Username and Password",
        "description": "Updates the username and password for a Managed Credential.\n",
        "operationId": "updateManagedCredentialUsernamePassword",
        "x-linode-cli-action": "credential-update-username-password",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The new username and password to assign to the Managed Credential.\n",
          "content": {
            "application/json": {
              "schema": {
                "required": ["password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 5000,
                    "description": "The username to use when accessing the Managed Service.\n",
                    "example": "johndoe"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password to use when accessing the Managed Service.\n",
                    "example": "s3cur3P@ssw0rd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credential username and password updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"username\": \"johndoe\",\n      \"password\": \"s3cur3P@ssw0rd\"\n    }' \\\n    https://api.linode.com/v4/managed/credentials/9991/update\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed credential-update-username-password 9991 \\\n  --username johndoe \\\n  --password s3cur3P@ssw0rd\n"
          }
        ]
      }
    },
    "/managed/credentials/{credentialId}/revoke": {
      "parameters": [
        {
          "name": "credentialId",
          "in": "path",
          "required": true,
          "description": "The ID of the Credential to access.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Delete Managed Credential",
        "description": "Deletes a Managed Credential.  Linode special forces will no longer have access to this Credential when attempting to resolve issues.\n",
        "operationId": "deleteManagedCredential",
        "x-linode-cli-action": "credential-revoke",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Credential deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/managed/credentials/9991\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed credential-revoke 9991\n"
          }
        ]
      }
    },
    "/managed/credentials/sshkey": {
      "get": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "View Managed SSH Key",
        "description": "Returns the unique SSH public key assigned to your Linode account's Managed service. If you [add this public key](https://linode.com/docs/platform/linode-managed/#adding-the-public-key) to a Linode on your account, Linode special forces will be able to log in to the Linode with this key when attempting to resolve issues.\n",
        "operationId": "viewManagedSSHKey",
        "x-linode-cli-action": "credential-sshkey-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Managed SSH public key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "A unique SSH public key that allows Linode's special forces to access a Managed server to respond to Issues.\n",
                  "properties": {
                    "ssh_key": {
                      "type": "string",
                      "description": "The unique SSH public key assigned to your Linode account's Managed service.\n",
                      "example": "ssh-rsa AAAAB...oD2ZQ== managedservices@linode",
                      "readOnly": true,
                      "x-linode-cli-display": 1
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/credentials/sshkey\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed credential-sshkey-view\n"
          }
        ]
      }
    },
    "/managed/issues": {
      "get": {
        "x-linode-grant": "unrestricted only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Managed"],
        "summary": "List Managed Issues",
        "description": "Returns a paginated list of recent and ongoing issues detected on your Managed Services.\n",
        "operationId": "getManagedIssues",
        "x-linode-cli-action": "issues-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of open or ongoing Managed Issues.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ManagedIssue"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/issues\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed issues-list\n"
          }
        ]
      }
    },
    "/managed/issues/{issueId}": {
      "parameters": [
        {
          "name": "issueId",
          "in": "path",
          "required": true,
          "description": "The Issue to look up.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "View Managed Issue",
        "description": "Returns a single Issue that is impacting or did impact one of your Managed Services.\n",
        "operationId": "getManagedIssue",
        "x-linode-cli-action": "issue-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested issue.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedIssue"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/issues/823\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed issue-view 823\n"
          }
        ]
      }
    },
    "/managed/linode-settings": {
      "get": {
        "x-linode-grant": "unrestricted only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Managed"],
        "summary": "List Managed Linode Settings",
        "description": "Returns a paginated list of Managed Settings for your Linodes. There will be one entry per Linode on your Account.\n",
        "operationId": "getManagedLinodeSettings",
        "x-linode-cli-action": "linode-settings-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Managed settings for your Linodes.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ManagedLinodeSettings"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/linode-settings\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed linode-settings-list\n"
          }
        ]
      }
    },
    "/managed/linode-settings/{linodeId}": {
      "parameters": [
        {
          "name": "linodeId",
          "in": "path",
          "required": true,
          "description": "The Linode ID whose settings we are accessing.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "View Linode's Managed Settings",
        "description": "Returns a single Linode's Managed settings.\n",
        "operationId": "getManagedLinodeSetting",
        "x-linode-cli-action": "linode-setting-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Linode's Managed settings.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedLinodeSettings"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/linode-settings/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed linode-setting-view 123\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Update Linode's Managed Settings",
        "description": "Updates a single Linode's Managed settings.\n",
        "operationId": "updateManagedLinodeSetting",
        "x-linode-cli-action": "linode-setting-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The settings to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedLinodeSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedLinodeSettings"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"ssh\": {\n        \"access\": true,\n        \"user\": \"linode\",\n        \"ip\": \"12.34.56.78\",\n        \"port\": 22\n      }\n    }' \\\n    https://api.linode.com/v4/managed/linode-settings/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed linode-setting-update \\\n  7833234 \\\n  --ssh.access true \\\n  --ssh.user linode \\\n  --ssh.port 22 \\\n  --ssh.ip 12.34.56.78\n"
          }
        ]
      }
    },
    "/managed/services": {
      "get": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "List Managed Services",
        "description": "Returns a paginated list of Managed Services on your Account. These are the services Linode Managed is monitoring and will report and attempt to resolve issues with.\n",
        "operationId": "getManagedServices",
        "x-linode-cli-action": "services-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Managed Services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ManagedService"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/services\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed services-list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Create Managed Service",
        "description": "Creates a Managed Service. Linode Managed will begin monitoring this service and reporting and attempting to resolve any Issues.\n",
        "operationId": "createManagedService",
        "x-linode-cli-action": "service-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the service to monitor.",
          "content": {
            "application/json": {
              "schema": {
                "required": ["label", "service_type", "address", "timeout"],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ManagedService"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedService"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"service_type\": \"url\",\n      \"label\": \"prod-1\",\n      \"address\": \"https://example.org\",\n      \"timeout\": 30,\n      \"body\": \"it worked\",\n      \"consultation_group\": \"on-call\",\n      \"notes\": \"The service name is my-cool-application\",\n      \"credentials\": [\n        9991\n      ]\n    }' \\\n    https://api.linode.com/v4/managed/services\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed service-create \\\n  --service_type url \\\n  --label prod-1 \\\n  --address \"https://example.org\" \\\n  --timeout 30 \\\n  --body \"it worked\" \\\n  --consultation_group on-call \\\n  --notes \"The service name is \\\n    my-cool-application\" \\\n  --credentials 9991\n"
          }
        ]
      }
    },
    "/managed/services/{serviceId}": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the Managed Service to access.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "View Managed Service",
        "description": "Returns information about a single Managed Service on your Account.\n",
        "operationId": "getManagedService",
        "x-linode-cli-action": "service-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Managed Service.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedService"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/services/9994\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed service-view 9994\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Update Managed Service",
        "description": "Updates information about a Managed Service.\n",
        "operationId": "updateManagedService",
        "x-linode-cli-action": "service-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedService"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"service_type\": \"url\",\n      \"label\": \"prod-1\",\n      \"address\": \"https://example.org\",\n      \"timeout\": 30,\n      \"body\": \"it worked\",\n      \"consultation_group\": \"on-call\",\n      \"notes\": \"The service name is my-cool-application\",\n      \"credentials\": [\n        9991\n      ]\n    }' \\\n    https://api.linode.com/v4/managed/services/9994\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed service-update 9994 \\\n  --service_type url \\\n  --label prod-1 \\\n  --address \"https://example.org\" \\\n  --timeout 30 \\\n  --body \"it worked\" \\\n  --consultation_group on-call \\\n  --notes \"The service name is my-cool-application\" \\\n  --credentials 9991\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Delete Managed Service",
        "description": "Deletes a Managed Service.  This service will no longer be monitored by Linode Managed.\n",
        "operationId": "deleteManagedService",
        "x-linode-cli-action": "service-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Service deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/managed/services/9994\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed service-delete 9994\n"
          }
        ]
      }
    },
    "/managed/services/{serviceId}/disable": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the Managed Service to disable.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Disable Managed Service",
        "description": "Temporarily disables monitoring of a Managed Service.\n",
        "operationId": "disableManagedService",
        "x-linode-cli-action": "service-disable",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Service disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedService"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/managed/services/9994/disable\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed service-disable 9994\n"
          }
        ]
      }
    },
    "/managed/services/{serviceId}/enable": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the Managed Service to enable.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "Enable Managed Service",
        "description": "Enables monitoring of a Managed Service.\n",
        "operationId": "enableManagedService",
        "x-linode-cli-action": "service-enable",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Service enabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedService"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/managed/services/9994/enable\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed service-enable 9994\n"
          }
        ]
      }
    },
    "/managed/stats": {
      "description": "A collection of managed stats.\n",
      "get": {
        "x-linode-grant": "unrestricted only",
        "tags": ["Managed"],
        "summary": "List Managed Stats",
        "description": "Returns a list of Managed Stats on your Account in the form of x and y data points.\nYou can use these data points to plot your own graph visualizations. These stats\nreflect the last 24 hours of combined usage across all managed Linodes on your account\ngiving you a high-level snapshot of data for the following:\n\n\n* cpu\n* disk\n* swap\n* network in\n* network out\n",
        "operationId": "getManagedStats",
        "x-linode-cli-action": "stats-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Managed Stats from the last 24 hours.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "oneOf": [
                        {
                          "x-linode-ref-name": "Stats Available",
                          "$ref": "#/components/schemas/StatsDataAvailable"
                        },
                        {
                          "x-linode-ref-name": "Stats Unavailable",
                          "$ref": "#/components/schemas/StatsDataUnavailable"
                        }
                      ],
                      "discriminator": {
                        "propertyName": "x-linode-ref-name"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/managed/stats\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli managed stats-list\n"
          }
        ]
      }
    },
    "/networking/ips": {
      "description": "A collection of IP Addresses on your Account. Excludes private addresses.\n",
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Networking"],
        "summary": "List IP Addresses",
        "description": "Returns a paginated list of IP Addresses on your Account, excluding private addresses.\n",
        "operationId": "getIPs",
        "x-linode-cli-action": "ips-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["ips:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of IP Addresses.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IPAddress"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/networking/ips\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli networking ips-list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Networking"],
        "summary": "Allocate IP Address",
        "description": "Allocates a new IPv4 Address on your Account. The Linode must be configured to support additional addresses - please [open a support ticket](/api/v4/support-tickets/#post) requesting additional addresses before attempting allocation.\n",
        "operationId": "allocateIP",
        "x-linode-cli-action": "ip-add",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["ips:read_write", "linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the address you are creating.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["type", "public", "linode_id"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["ipv4"],
                    "description": "The type of address you are requesting. Only IPv4 addresses may be allocated through this endpoint.\n",
                    "example": "ipv4"
                  },
                  "public": {
                    "type": "boolean",
                    "description": "Whether to create a public or private IPv4 address.\n",
                    "example": true
                  },
                  "linode_id": {
                    "type": "integer",
                    "description": "The ID of a Linode you you have access to that this address will be allocated to.\n",
                    "example": 123
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "IP Address allocated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPAddress"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"type\": \"ipv4\",\n      \"public\": true,\n      \"linode_id\": 123\n    }' \\\n    https://api.linode.com/v4/networking/ips\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli networking ip-add \\\n  --type ipv4 \\\n  --public true \\\n  --linode_id 123\n"
          }
        ]
      }
    },
    "/networking/ips/{address}": {
      "parameters": [
        {
          "name": "address",
          "in": "path",
          "required": true,
          "description": "The address to operate on.",
          "schema": {
            "type": "string",
            "format": "ip"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Networking"],
        "summary": "View IP Address",
        "description": "Returns information about a single IP Address on your Account.\n",
        "operationId": "getIP",
        "x-linode-cli-action": "ip-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["ips:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested IP Address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPAddress"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/networking/ips/97.107.143.141\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli networking ip-view 97.107.143.141\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Networking"],
        "summary": "Update IP Address RDNS",
        "description": "Sets RDNS on an IP Address. Forward DNS must already be set up for reverse DNS to be applied. If you set the RDNS to `null` for public IPv4 addresses, it will be reset to the default _members.linode.com_ RDNS value.\n",
        "operationId": "updateIP",
        "x-linode-cli-action": "ip-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["ips:read_write"]
          }
        ],
        "requestBody": {
          "description": "The information to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "RDNS set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPAddress"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"rdns\": \"test.example.org\"\n    }' \\\n    https://api.linode.com/v4/networking/ips/97.107.143.141\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli networking ip-update \\\n  97.107.143.141 \\\n  --rdns \"test.example.org\"\n"
          }
        ]
      }
    },
    "/networking/ipv4/assign": {
      "description": "Allows redistribution of IPv4 Addresses within a Region. Any number of IPs may be assigned in one request, as long as all Linodes end up with at least one public and no more than one private IP Address at the end of the assignment.\n",
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Networking"],
        "summary": "Assign IPs to Linodes",
        "description": "Assign multiple IPs to multiple Linodes in one Region. This allows swapping, shuffling, or otherwise reorganizing IPv4 Addresses to your Linodes.  When the assignment is finished, all Linodes must end up with at least one public IPv4 and no more than one private IPv4.\n",
        "operationId": "assignIPs",
        "x-linode-cli-action": "ip-assign",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["ips:read_write", "linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about what IPv4 address to assign, and to which Linode.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["region", "assignments"],
                "properties": {
                  "region": {
                    "type": "string",
                    "description": "The ID of the Region in which these assignments are to take place.  All IPs and Linodes must exist in this Region.\n",
                    "example": "us-east"
                  },
                  "assignments": {
                    "type": "array",
                    "description": "The list of assignments to make.  You must have read_write access to all IPs being assigned and all Linodes being assigned to in order for the assignments to succeed.\n",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "format": "ip",
                          "description": "Ths IP Address for this assignment. Must be a IPv4 address you can access in the Region specified. May be a public or private address.\n",
                          "example": "12.34.56.78"
                        },
                        "linode_id": {
                          "type": "integer",
                          "description": "The ID of the Linode to assign this address to. The IP's previous Linode will lose this address, and must end up with at least one public address and no more than one private address once all assignments have been made.\n",
                          "example": 123
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All assignments completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"region\": \"us-east\",\n      \"assignments\": [\n        {\n          \"address\": \"12.34.56.100\",\n          \"linode_id\": 123\n        },\n        {\n          \"address\": \"23.45.67.200\",\n          \"linode_id\": 234\n        }\n      ]\n    }' \\\n    https://api.linode.com/v4/networking/ipv4/assign\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli networking ip-assign \\\n  --region us-east \\\n  --assignments \\\n    '{\"address\": \"12.34.56.100\", \"linode_id\": 123}' \\\n  --assignments \\\n    '{\"23.45.67.200\", \"linode_id\": 234}'\n"
          }
        ]
      }
    },
    "/networking/ipv4/share": {
      "description": "Configure shared IPs.  A shared IP may be brought up on a Linode other than the one it lists in its response.  This can be used to allow one Linode to begin serving requests should another become unresponsive.\n",
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Networking"],
        "summary": "Configure IP Sharing",
        "description": "Configure shared IPs.  A shared IP may be brought up on a Linode other than the one it lists in its response.  This can be used to allow one Linode to begin serving requests should another become unresponsive.\n",
        "operationId": "shareIPs",
        "x-linode-cli-action": "ip-share",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["ips:read_write", "linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about what IPs to share with which Linode.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["linode_id", "ips"],
                "properties": {
                  "linode_id": {
                    "type": "integer",
                    "description": "The ID of the Linode that the addresses will be shared with.\n",
                    "example": 123
                  },
                  "ips": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "ip",
                      "example": "12.34.56.78"
                    },
                    "description": "A list of IPs that will be shared with this Linode.  When this is finished, the given Linode will be able to bring up these addresses in addition to the Linodes that these addresses belong to.  You must have access to all of these addresses and they must be in the same Region as the Linode.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sharing configured successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"linode_id\": 123,\n      \"ips\": [\n        \"12.34.56.78\"\n      ]\n    }' \\\n    https://api.linode.com/v4/networking/ipv4/share\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli networking ip-share \\\n  --linode_id 123 \\\n  --ips 12.34.56.78\n"
          }
        ]
      }
    },
    "/networking/ipv6/pools": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Networking"],
        "summary": "List IPv6 Pools",
        "description": "Displays the IPv6 pools on your Account. A pool of IPv6 addresses are routed to all of your Linodes in a single [Region](https://developers.linode.com/api/v4/regions). Any Linode on your Account may bring up any address in this pool at any time, with no external configuration required.\n",
        "operationId": "getIPv6Pools",
        "x-linode-cli-action": "v6-pools",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["ips:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The IPv6 pools on your Account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IPv6Pool"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/networking/ipv6/pools\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli networking v6-pools\n"
          }
        ]
      }
    },
    "/networking/ipv6/ranges": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Networking"],
        "summary": "List IPv6 Ranges",
        "description": "Displays the IPv6 ranges on your Account.\n\n\n  * An IPv6 range is a `/64` block of IPv6 addresses routed to a single Linode in a given [Region](https://developers.linode.com/api/v4/regions).\n\n  * Your Linode is responsible for routing individual addresses in the range, or handling traffic for all the addresses in the range.\n\n  * You must [open a support ticket](/api/v4/support-tickets/#post) to request a `/64` block of IPv6 addresses to be added to your account.\n",
        "operationId": "getIPv6Ranges",
        "x-linode-cli-action": "v6-ranges",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["ips:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The IPv6 ranges on your Account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IPv6Range"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/networking/ipv6/ranges\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli networking v6-ranges\n"
          }
        ]
      }
    },
    "/networking/firewalls": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "summary": "List Firewalls",
        "description": "Returns a paginated list of your Firewalls.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "operationId": "getFirewalls",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewalls:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Firewalls.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Firewall"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4beta/networking/firewalls\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "summary": "Create Firewall",
        "description": "Creates a Firewall to filter network traffic. Use the `rules` property to\ncreate inbound and outbound access rules. Use the `devices` property to assign the\nFirewall to a Linode service. Currently, Firewalls can only be assigned to Linode\ninstances.\n\nA Firewall can be assigned to multiple Linode services, and up to three active Firewalls\ncan be assigned to a single Linode service.\n\nA `firewall_create` Event is generated when this endpoint returns successfully.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "operationId": "createFirewalls",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewall:read_write"]
          }
        ],
        "requestBody": {
          "description": "Creates a Firewall object that can be applied to a Linode service to filter the service's network traffic.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["rules"],
                "properties": {
                  "label": {
                    "$ref": "#/components/schemas/Firewall/properties/label"
                  },
                  "rules": {
                    "$ref": "#/components/schemas/Firewall/properties/rules"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/Firewall/properties/tags"
                  },
                  "devices": {
                    "type": "object",
                    "description": "A Firewall Device assigns a Firewall to a Linode service. Currently, Firewalls can only be assigned to Linode instances.\n* A Firewall can be assigned to multiple Linode services, and up to three active Firewalls can be assigned to a single Linode service.\n* Additional disabled Firewalls can be assigned to a service, but they cannot be enabled if three other active Firewalls are already assigned to the same service.\n\n**Note:** When a Firewall is assigned to a Linode and you attempt to [migrate the Linode to a data center](/api/v4/linode-instances-linode-id-migrate/#post) that does not support Cloud Firewalls, the migration will fail. Use the [List Regions](/api/v4/regions) endpoint to view a list of a data center's capabilities.\n",
                    "properties": {
                      "linodes": {
                        "description": "An array of Linode IDs. A Firewall Device will be created for each ID.\n",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        },
                        "example": [123, 456]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns information about the created Firewall.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Firewall"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"label\": \"firewall123\",\n      \"rules\": {\n        \"inbound\": [\n          {\n            \"protocol\": \"TCP\",\n            \"ports\": \"22, 80, 443\",\n            \"addresses\": {\n              \"ipv4\": [\n                \"192.0.2.1\",\n                \"192.0.2.0/24\"\n              ],\n              \"ipv6\": [\n                \"2001:DB8::/32\"\n              ]\n            }\n          }\n        ],\n        \"outbound\": [\n          {\n            \"protocol\": \"TCP\",\n            \"ports\": \"49152-65535\",\n            \"addresses\": {\n              \"ipv4\": [\n                \"192.0.2.1\",\n                \"192.0.2.0/24\"\n              ],\n              \"ipv6\": [\n                \"2001:DB8::/32\"\n              ]\n            }\n          }\n        ]\n      },\n      \"devices\": {\n        \"linodes\": [\n          123,\n          456\n          ]\n      },\n      \"tags\": [\n        \"example tag\",\n        \"another example\"\n      ]\n    }' \\\n    https://api.linode.com/v4beta/networking/firewalls\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls create \\\n  --rules '{\"inbound\": [{\"protocol\": \"TCP\", \"ports\": \"22, 80, 8080, 443\", \"addresses\": {\"ipv4\": [\"192.0.2.1\", \"192.0.2.0/24\"], \"ipv6\": [\"2001:DB8::/32\"]}}]}' \\\n"
          }
        ]
      }
    },
    "/networking/firewalls/{firewallId}": {
      "parameters": [
        {
          "name": "firewallId",
          "in": "path",
          "description": "ID of the Firewall to access.\n",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "summary": "View Firewall",
        "operationId": "getFirewall",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewall:read_only"]
          }
        ],
        "description": "Get a specific Firewall resource by its ID. The Firewall's Devices will not be\nreturned in the response. Instead, use the\n[List Firewall Devices](http://developers.linode.com/api/v4/networking-firewalls-firewall-id-devices/#get)\nendpoint to review them.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "responses": {
          "200": {
            "description": "Returns information about this Firewall.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Firewall"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4beta/networking/firewalls/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls view 123\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "summary": "Update Firewall",
        "description": "Updates information for a Firewall. Some parts of a Firewall's configuration cannot\nbe manipulated by this endpoint:\n\n- A Firewall's Devices cannot be set with this endpoint. Instead, use the\n[Create Firewall Device](http://developers.linode.com/api/v4/networking-firewalls-firewall-id-devices/#post)\nand [Delete Firewall Device](http://developers.linode.com/api/v4/networking-firewalls-firewall-id-devices/#delete)\nendpoints to assign and remove this Firewall from Linode services.\n\n- A Firewall's Rules cannot be changed with this endpoint. Instead, use the\n[Update Firewall Rules](http://developers.linode.com/api/v4/networking-firewalls-firewall-id-rules/#put)\nendpoint to update your Rules.\n\n- A Firewall's status can be set to `enabled` or `disabled` by this endpoint, but it cannot be\nset to `deleted`. Instead, use the\n[Delete Firewall](http://developers.linode.com/api/v4/networking-firewalls-firewall-id/#delete)\nendpoint to delete a Firewall.\n\nIf a Firewall's status is changed with this endpoint, a corresponding `firewall_enable` or\n`firewall_disable` Event will be generated.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "operationId": "updateFirewall",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewall:read_write"]
          }
        ],
        "requestBody": {
          "description": "The Firewall information to update.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "$ref": "#/components/schemas/Firewall/properties/tags"
                  },
                  "label": {
                    "$ref": "#/components/schemas/Firewall/properties/label"
                  },
                  "status": {
                    "$ref": "#/components/schemas/Firewall/properties/status"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Firewall updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Firewall"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"status\": \"disabled\"\n    }' \\\n    https://api.linode.com/v4beta/networking/firewalls/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls update 123 \\\n  --status disabled\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "summary": "Delete Firewall",
        "operationId": "deleteFirewall",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewall:read_write"]
          }
        ],
        "description": "Delete a Firewall resource by its ID. This will remove all of the Firewall's Rules\nfrom any Linode services that the Firewall was assigned to.\n\nA `firewall_delete` Event is generated when this endpoint returns successfully.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "responses": {
          "200": {
            "description": "Delete Successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4beta/networking/firewalls/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls delete 123\n"
          }
        ]
      }
    },
    "/networking/firewalls/{firewallId}/devices": {
      "parameters": [
        {
          "name": "firewallId",
          "in": "path",
          "description": "ID of the Firewall to access.\n",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "summary": "List Firewall Devices",
        "description": "Returns a paginated list of a Firewall's Devices. A Firewall Device assigns a\nFirewall to a Linode service (referred to as the Device's `entity`). Currently,\nonly Devices with an entity of type `linode` are accepted.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "operationId": "getFirewallDevices",
        "x-linode-cli-action": "devices-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewall:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Firewall Devices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FirewallDevices"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4beta/networking/firewalls/123/devices\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls devices-list 123\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "summary": "Create Firewall Device",
        "description": "Creates a Firewall Device, which assigns a Firewall to a Linode service (referred to\nas the Device's `entity`). Currently, only Devices with an entity of type `linode` are accepted.\nA Firewall can be assigned to multiple Linode services, and up to three active Firewalls can\nbe assigned to a single Linode service. Additional disabled Firewalls can be\nassigned to a service, but they cannot be enabled if three other active Firewalls\nare already assigned to the same service.\n\nCreating a Firewall Device will apply the Rules from a Firewall to a Linode service.\nA `firewall_device_add` Event is generated when the Firewall Device is added successfully.\n\n**Note:** When a Firewall is assigned to a Linode and you attempt\nto [migrate the Linode to a data center](/api/v4/linode-instances-linode-id-migrate/#post) that does not support Cloud Firewalls, the migration will fail.\nUse the [List Regions](/api/v4/regions) endpoint to view a list of a data center's capabilities.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "operationId": "createFirewallDevice",
        "x-linode-cli-action": "device-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewall:read_write"]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "type"],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FirewallDevices/properties/entity"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns information about the created Firewall Device.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallDevices"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"type\": \"linode\",\n      \"id\": 123\n    }' \\\n    https://api.linode.com/v4beta/networking/firewalls/123/devices\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls device-create 123 \\\n  --id 456 \\\n  --type \"linode\"\n"
          }
        ]
      }
    },
    "/networking/firewalls/{firewallId}/devices/{deviceId}": {
      "parameters": [
        {
          "name": "firewallId",
          "in": "path",
          "description": "ID of the Firewall to access.\n",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "deviceId",
          "in": "path",
          "description": "ID of the Firewall Device to access.\n",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "summary": "View Firewall Device",
        "description": "Returns information for a Firewall Device, which assigns a Firewall\nto a Linode service (referred to as the Device's `entity`). Currently,\nonly Devices with an entity of type `linode` are accepted.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "operationId": "getFirewallDevice",
        "x-linode-cli-action": "device-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewall:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Firewall Device.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallDevices"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4beta/networking/firewalls/123/devices/456\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls device-view \\\n  123 456\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "summary": "Delete Firewall Device",
        "operationId": "deleteFirewallDevice",
        "x-linode-cli-action": "device-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewall:read_write"]
          }
        ],
        "description": "Removes a Firewall Device, which removes a Firewall from the Linode service it was\nassigned to by the Device. This will remove all of the Firewall's Rules from the Linode\nservice. If any other Firewalls have been assigned to the Linode service, then those Rules\nwill remain in effect.\n\nA `firewall_device_remove` Event is generated when the Firewall Device is removed successfully.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "responses": {
          "200": {
            "description": "Delete Successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4beta/networking/firewalls/123/devices/456\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls device-delete 123 456\n"
          }
        ]
      }
    },
    "/networking/firewalls/{firewallId}/rules": {
      "parameters": [
        {
          "name": "firewallId",
          "in": "path",
          "description": "ID of the Firewall to access.\n",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "summary": "List Firewall Rules",
        "description": "Returns the inbound and outbound Rules for a Firewall.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "operationId": "getFirewallRules",
        "x-linode-cli-action": "rules-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewall:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Firewall Rules.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Firewall/properties/rules"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4beta/networking/firewalls/123/rules\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls rules-list 123\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "servers": [
          {
            "url": "https://api.linode.com/v4beta"
          }
        ],
        "tags": ["Networking"],
        "summary": "Update Firewall Rules",
        "description": "Updates the inbound and outbound Rules for a Firewall. Using this endpoint will\nreplace all of a Firewall's ruleset with the Rules specified in your request.\n\nThis endpoint is in **beta**.\n\n\n* Gain access to [Linode Cloud Firewall](https://www.linode.com/products/firewall/) by signing up for our [Greenlight Beta program](https://www.linode.com/green-light/#sign-up-form).\n* During the beta, Cloud Firewall is only available in the [Sydney data center region](/api/v4/regions).\n* Please make sure to prepend all requests with\n`/v4beta` instead of `/v4`, and be aware that this endpoint may receive breaking\nupdates in the future.  This notice will be removed when this endpoint is out of\nbeta.\n",
        "operationId": "updateFirewallRules",
        "x-linode-cli-action": "rules-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["firewall:read_write"]
          }
        ],
        "requestBody": {
          "description": "The Firewall Rules information to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Firewall/properties/rules"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Firewall Rules updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Firewall/properties/rules"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n        \"inbound\": [\n          {\n            \"protocol\": \"TCP\",\n            \"ports\": \"22, 80, 443\",\n              \"addresses\": {\n              \"ipv4\": [\n                \"192.0.2.1\",\n                \"192.0.2.0/24\"\n              ],\n              \"ipv6\": [\n                \"2001:DB8::/32\"\n              ]\n            }\n          }\n        ],\n        \"outbound\": [\n          {\n            \"protocol\": \"TCP\",\n            \"ports\": \"49152-65535\",\n            \"addresses\": {\n              \"ipv4\": [\n                \"192.0.2.1\",\n                \"192.0.2.0/24\"\n              ],\n              \"ipv6\": [\n                \"2001:DB8::/32\"\n              ]\n            }\n          }\n        ]\n    }' \\\n    https://api.linode.com/v4beta/networking/firewalls/123/rules\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli firewalls rules-update 123 \\\n  --inbound '[{\"protocol\": \"TCP\", \"ports\": \"22, 80, 8080, 443\", \"addresses\": {\"ipv4\": [\"192.0.2.1\", \"192.0.2.0/24\"], \"ipv6\": [\"2001:DB8::/32\"]}}]' \\\n  --outbound '[{\"protocol\": \"TCP\", \"ports\": \"49152-65535\", \"addresses\": {\"ipv4\": [\"192.0.2.1\", \"192.0.2.0/24\"], \"ipv6\": [\"2001:DB8::/32\"]}}]'\n"
          }
        ]
      }
    },
    "/nodebalancers": {
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["NodeBalancers"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "summary": "List NodeBalancers",
        "description": "Returns a paginated list of NodeBalancers you have access to.\n",
        "operationId": "getNodeBalancers",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of NodeBalancers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NodeBalancer"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/nodebalancers\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "add_nodebalancers",
        "tags": ["NodeBalancers"],
        "summary": "Create NodeBalancer",
        "description": "Creates a NodeBalancer in the requested Region. This NodeBalancer will not start serving requests until it is configured.\n",
        "operationId": "createNodeBalancer",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the NodeBalancer to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["region"],
                "properties": {
                  "region": {
                    "type": "string",
                    "description": "The ID of the Region to create this NodeBalancer in.\n",
                    "example": "us-east"
                  },
                  "label": {
                    "$ref": "#/components/schemas/NodeBalancer/properties/label"
                  },
                  "client_conn_throttle": {
                    "$ref": "#/components/schemas/NodeBalancer/properties/client_conn_throttle"
                  },
                  "configs": {
                    "type": "array",
                    "description": "The ports to configure this NodeBalancer with on creation. Each config must have a unique port and at least one Node.\n",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/NodeBalancerConfig"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "nodes": {
                              "type": "array",
                              "description": "The NodeBalancer Nodes that serve this port.  When creating a NodeBalancer this way, at least one Node is required per configured port.\n",
                              "items": {
                                "$ref": "#/components/schemas/NodeBalancerNode"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NodeBalancer created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancer"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"region\": \"us-east\",\n      \"label\": \"balancer12345\",\n      \"client_conn_throttle\": 0\n    }' \\\n    https://api.linode.com/v4/nodebalancers\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers create \\\n  --region us-east \\\n  --label balancer12345 \\\n  --client_conn_throttle 0\n"
          }
        ]
      }
    },
    "/nodebalancers/{nodeBalancerId}": {
      "parameters": [
        {
          "name": "nodeBalancerId",
          "in": "path",
          "description": "The ID of the NodeBalancer to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["NodeBalancers"],
        "summary": "View NodeBalancer",
        "description": "Returns a single NodeBalancer you can access.\n",
        "operationId": "getNodeBalancer",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested NodeBalancer object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancer"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/nodebalancers/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers view 12345\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["NodeBalancers"],
        "summary": "Update NodeBalancer",
        "description": "Updates information about a NodeBalancer you can access.\n",
        "operationId": "updateNodeBalancer",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "requestBody": {
          "description": "The information to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeBalancer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NodeBalancer updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancer"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"label\": \"balancer12345\",\n      \"client_conn_throttle\": 0\n    }' \\\n    https://api.linode.com/v4/nodebalancers/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers update 12345 \\\n  --label balancer12345 \\\n  --client_conn_throttle 0\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["NodeBalancers"],
        "summary": "Delete NodeBalancer",
        "description": "Deletes a NodeBalancer.\n\n**This is a destructive action and cannot be undone.**\n\nDeleting a NodeBalancer will also delete all associated Configs and Nodes, although the backend servers represented by the Nodes will not be changed or removed. Deleting a NodeBalancer will cause you to lose access to the IP Addresses assigned to this NodeBalancer.\n",
        "operationId": "deleteNodeBalancer",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "NodeBalancer deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/nodebalancers/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers delete 12345\n"
          }
        ]
      }
    },
    "/nodebalancers/{nodeBalancerId}/configs": {
      "parameters": [
        {
          "name": "nodeBalancerId",
          "in": "path",
          "description": "The ID of the NodeBalancer to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["NodeBalancers"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "summary": "List Configs",
        "description": "Returns a paginated list of NodeBalancer Configs associated with this NodeBalancer. NodeBalancer Configs represent individual ports that this NodeBalancer will accept traffic on, one Config per port.\n\nFor example, if you wanted to accept standard HTTP traffic, you would need a Config listening on port 80.\n",
        "operationId": "getNodeBalancerConfigs",
        "x-linode-cli-action": "configs-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginted list of NodeBalancer Configs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NodeBalancerConfig"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/nodebalancers/12345/configs\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers configs-list 12345\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["NodeBalancers"],
        "summary": "Create Config",
        "description": "Creates a NodeBalancer Config, which allows the NodeBalancer to accept traffic on a new port. You will need to add NodeBalancer Nodes to the new Config before it can actually serve requests.\n",
        "operationId": "createNodeBalancerConfig",
        "x-linode-cli-action": "config-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the port to configure.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeBalancerConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Config created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancerConfig"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"port\": 80,\n      \"protocol\": \"http\",\n      \"algorithm\": \"roundrobin\",\n      \"stickiness\": \"http_cookie\",\n      \"check\": \"http_body\",\n      \"check_interval\": 90,\n      \"check_timeout\": 10,\n      \"check_attempts\": 3,\n      \"check_path\": \"/test\",\n      \"check_body\": \"it works\",\n      \"check_passive\": true,\n      \"proxy_protocol\": \"v1\",\n      \"cipher_suite\": \"recommended\"\n    }' \\\n    https://api.linode.com/v4/nodebalancers/12345/configs\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers config-create 12345 \\\n  --port 80 \\\n  --protocol http \\\n  --algorithm roundrobin \\\n  --stickiness http_cookie \\\n  --check http_body \\\n  --check_interval 90 \\\n  --check_timeout 10 \\\n  --check_attempts 3 \\\n  --check_path \"/test\" \\\n  --check_body \"it works\" \\\n  --check_passive true \\\n  --proxy_protocol \"v1\" \\\n  --cipher_suite recommended\n"
          }
        ]
      }
    },
    "/nodebalancers/{nodeBalancerId}/configs/{configId}": {
      "parameters": [
        {
          "name": "nodeBalancerId",
          "in": "path",
          "description": "The ID of the NodeBalancer to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "configId",
          "in": "path",
          "description": "The ID of the config to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["NodeBalancers"],
        "summary": "View Config",
        "description": "Returns configuration information for a single port of this NodeBalancer.\n",
        "operationId": "getNodeBalancerConfig",
        "x-linode-cli-action": "config-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested NodeBalancer config.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancerConfig"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/nodebalancers/12345/configs/4567\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers config-view \\\n  12345 4567\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["NodeBalancers"],
        "summary": "Update Config",
        "description": "Updates the configuration for a single port on a NodeBalancer.\n",
        "operationId": "updateNodeBalancerConfig",
        "x-linode-cli-action": "config-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeBalancerConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Config updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancerConfig"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"port\": 80,\n      \"protocol\": \"http\",\n      \"algorithm\": \"roundrobin\",\n      \"stickiness\": \"http_cookie\",\n      \"check\": \"http_body\",\n      \"check_interval\": 90,\n      \"check_timeout\": 10,\n      \"check_attempts\": 3,\n      \"check_path\": \"/test\",\n      \"check_body\": \"it works\",\n      \"check_passive\": true,\n      \"proxy_protocol\": \"v1\",\n      \"cipher_suite\": \"recommended\"\n    }' \\\n    https://api.linode.com/v4/nodebalancers/12345/configs/4567\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers config-update \\\n  12345 4567 \\\n  --port 80 \\\n  --protocol http \\\n  --algorithm roundrobin \\\n  --stickiness http_cookie \\\n  --check http_body \\\n  --check_interval 90 \\\n  --check_timeout 10 \\\n  --check_attempts 3 \\\n  --check_path \"/test\" \\\n  --check_body \"it works\" \\\n  --check_passive true \\\n  --proxy_protocol \"v1\" \\\n  --cipher_suite recommended\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["NodeBalancers"],
        "summary": "Delete Config",
        "description": "Deletes the Config for a port of this NodeBalancer.\n\n**This cannot be undone.**\n\nOnce completed, this NodeBalancer will no longer respond to requests on the given port. This also deletes all associated NodeBalancerNodes, but the Linodes they were routing traffic to will be unchanged and will not be removed.\n",
        "operationId": "deleteNodeBalancerConfig",
        "x-linode-cli-action": "config-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "NodeBalancer Config deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/nodebalancers/12345/configs/4567\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers config-delete \\\n  12345 4567\n"
          }
        ]
      }
    },
    "/nodebalancers/{nodeBalancerId}/configs/{configId}/rebuild": {
      "parameters": [
        {
          "name": "nodeBalancerId",
          "in": "path",
          "description": "The ID of the NodeBalancer to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "configId",
          "in": "path",
          "description": "The ID of the Config to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "add_nodebalancers",
        "tags": ["NodeBalancers"],
        "summary": "Rebuild Config",
        "description": "Rebuilds a NodeBalancer Config and its Nodes that you have permission to modify.\n",
        "operationId": "rebuildNodeBalancerConfig",
        "x-linode-cli-action": "rebuild",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the NodeBalancer Config to rebuild.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "configs": {
                    "type": "array",
                    "description": "Each config must have a unique port and at least one Node. Additionally:\n  * Current Nodes excluded from the request body will be deleted.\n  * Current Nodes (identified by their ID) will be updated.\n  * New Nodes (included without an ID) will be created.\n",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/NodeBalancerConfig"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "nodes": {
                              "type": "array",
                              "description": "The NodeBalancer Node(s) that serve this port. At least one Node is required per configured port.\nSome considerations for Nodes when rebuilding a config:\n  * Current Nodes excluded from the request body will be deleted.\n  * Current Nodes (identified by their ID) will be updated.\n  * New Nodes (included without an ID) will be created.\n",
                              "items": {
                                "type": "object",
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/NodeBalancerNode"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NodeBalancer created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancer"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"port\": 80,\n      \"protocol\": \"http\",\n      \"algorithm\": \"roundrobin\",\n      \"stickiness\": \"http_cookie\",\n      \"check\": \"http_body\",\n      \"check_interval\": 90,\n      \"check_timeout\": 10,\n      \"check_attempts\": 3,\n      \"check_path\": \"/test\",\n      \"check_body\": \"it works\",\n      \"check_passive\": true,\n      \"proxy_protocol\": \"v1\",\n      \"cipher_suite\": \"recommended\",\n      \"nodes\": [\n        {\n          \"id\": 543231,\n          \"address\": \"192.168.210.120:80\",\n          \"label\": \"node54321\",\n          \"weight\": 50,\n          \"mode\": \"accept\"\n        },\n        {\n          \"address\": \"192.168.210.122:81\",\n          \"label\": \"thenewnode\",\n          \"weight\": 50,\n          \"mode\": \"accept\"\n        },\n      ]\n    }' \\\n    https://api.linode.com/v4/nodebalancers/12345/configs/4567/rebuild\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers config-rebuild \\\n  12345 4567 \\\n  --port 80 \\\n  --protocol http \\\n  --algorithm roundrobin \\\n  --stickiness http_cookie \\\n  --check http_body \\\n  --check_interval 90 \\\n  --check_timeout 10 \\\n  --check_attempts 3 \\\n  --check_path \"/test\" \\\n  --check_body \"it works\" \\\n  --check_passive true \\\n  --proxy_protocol \"v1\" \\\n  --cipher_suite recommended\n"
          }
        ]
      }
    },
    "/nodebalancers/{nodeBalancerId}/configs/{configId}/nodes": {
      "parameters": [
        {
          "name": "nodeBalancerId",
          "in": "path",
          "description": "The ID of the NodeBalancer to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "configId",
          "in": "path",
          "description": "The ID of the NodeBalancer config to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["NodeBalancers"],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "summary": "List Nodes",
        "description": "Returns a paginated list of NodeBalancer nodes associated with this Config. These are the backends that will be sent traffic for this port.\n",
        "operationId": "getNodeBalancerConfigNodes",
        "x-linode-cli-action": "nodes-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of NodeBalancer nodes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NodeBalancerNode"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/nodebalancers/12345/configs/4567/nodes\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers nodes-list 12345 4567\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["NodeBalancers"],
        "summary": "Create Node",
        "description": "Creates a NodeBalancer Node, a backend that can accept traffic for this NodeBalancer Config. Nodes are routed requests on the configured port based on their status.\n",
        "operationId": "createNodeBalancerNode",
        "x-linode-cli-action": "node-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the Node to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["label", "address"],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/NodeBalancerNode"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Node created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancerNode"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"address\": \"192.168.210.120:80\",\n      \"label\": \"node54321\",\n      \"weight\": 50,\n      \"mode\": \"accept\"\n    }' \\\n    https://api.linode.com/v4/nodebalancers/12345/configs/4567/nodes\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers node-create \\\n  12345 4567 \\\n  --address 192.168.210.120:80 \\\n  --label node54321 \\\n  --weight 50 \\\n  --mode accept\n"
          }
        ]
      }
    },
    "/nodebalancers/{nodeBalancerId}/configs/{configId}/nodes/{nodeId}": {
      "parameters": [
        {
          "name": "nodeBalancerId",
          "in": "path",
          "description": "The ID of the NodeBalancer to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "configId",
          "in": "path",
          "description": "The ID of the Config to access",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "nodeId",
          "in": "path",
          "description": "The ID of the Node to access",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["NodeBalancers"],
        "summary": "View Node",
        "description": "Returns information about a single Node, a backend for this NodeBalancer's configured port.\n",
        "operationId": "getNodeBalancerNode",
        "x-linode-cli-action": "node-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of NodeBalancer nodes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancerNode"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/nodebalancers/12345/configs/4567/nodes/54321\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers node-view 12345 4567 54321\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["NodeBalancers"],
        "summary": "Update Node",
        "description": "Updates information about a Node, a backend for this NodeBalancer's configured port.\n",
        "operationId": "updateNodeBalancerNode",
        "x-linode-cli-action": "node-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeBalancerNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Node updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancerNode"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"address\": \"192.168.210.120:80\",\n      \"label\": \"node54321\",\n      \"weight\": 50,\n      \"mode\": \"accept\"\n    }' \\\n    https://api.linode.com/v4/nodebalancers/12345/configs/4567/nodes/54321\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers node-create \\\n  12345 4567 54321 \\\n  --address 192.168.210.120:80 \\\n  --label node54321 \\\n  --weight 50 \\\n  --mode accept\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["NodeBalancers"],
        "summary": "Delete Node",
        "description": "Deletes a Node from this Config. This backend will no longer receive traffic for the configured port of this NodeBalancer.\n\nThis does not change or remove the Linode whose address was used in the creation of this Node.\n",
        "operationId": "deleteNodeBalancerConfigNode",
        "x-linode-cli-action": "node-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Node deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/nodebalancers/12345/configs/4567/nodes/54321\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli nodebalancers node-delete \\\n  12345 4567 54321\n"
          }
        ]
      }
    },
    "/nodebalancers/{nodeBalancerId}/stats": {
      "parameters": [
        {
          "name": "nodeBalancerId",
          "in": "path",
          "description": "The ID of the NodeBalancer to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["NodeBalancers"],
        "summary": "View NodeBalancer Statistics",
        "description": "Returns detailed statistics about the requested NodeBalancer.\n",
        "x-linode-cli-action": "stats",
        "x-linode-cli-skip": true,
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["nodebalancers:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested stats.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeBalancerStats"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "operationId": "/nodebalancers/{nodeBalancerId}/stats.get"
      }
    },
    "/object-storage/buckets": {
      "get": {
        "operationId": "getObjectStorageBuckets",
        "x-linode-cli-skip": true,
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "List Object Storage Buckets",
        "description": "Returns a paginated list of all Object Storage Buckets that you own.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/serviceops/) directly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of buckets you own.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ObjectStorageBucket"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  https://api.linode.com/v4/object-storage/buckets/\n"
          }
        ]
      },
      "post": {
        "operationId": "createObjectStorageBucket",
        "x-linode-cli-skip": true,
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Create Object Storage Bucket",
        "description": "Creates an Object Storage Bucket in the cluster specified. If the\nbucket already exists and is owned by you, this endpoint will return a\n`200` response with that bucket as if it had just been created.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#put-bucket) directly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the bucket you want to create.\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["label", "cluster"],
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "The name for this bucket. Must be unique in the cluster you are creating the bucket in, or an error will be returned. Labels will be reserved only for the cluster that active buckets are created and stored in. If you want to reserve this bucket's label in another cluster, you must create a new bucket with the same label in the new cluster.\n",
                    "pattern": "^[a-z0-09][a-z0-9-]*[a-z0-9]?$",
                    "example": "example-bucket"
                  },
                  "cluster": {
                    "type": "string",
                    "description": "The ID of the Object Storage Cluster where this bucket should be created.\n",
                    "example": "us-east-1"
                  },
                  "cors_enabled": {
                    "type": "boolean",
                    "description": "If true, the bucket will be created with CORS enabled for all origins. For more fine-grained controls of CORS, use the S3 API directly.\n",
                    "example": true,
                    "default": false
                  },
                  "acl": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public-read",
                      "authenticated-read",
                      "public-read-write"
                    ],
                    "description": "The Access Control Level of the bucket using a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.\n",
                    "default": "private",
                    "example": "private"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The bucket created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectStorageBucket"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"label\": \"example-bucket\",\n      \"cluster\": \"us-east-1\",\n      \"cors_enabled\": true,\n      \"acl\": \"private\"\n    }' \\\n  https://api.linode.com/v4/object-storage/buckets/\n"
          }
        ]
      }
    },
    "/object-storage/buckets/{clusterId}/{bucket}": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "The ID of the cluster this bucket exists in.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "bucket",
          "in": "path",
          "description": "The bucket name.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "getObjectStorageBucket",
        "x-linode-cli-skip": true,
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "View Object Storage Bucket",
        "description": "Returns a single Object Storage Bucket.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#get-bucket) directly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested bucket.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectStorageBucket"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket\n"
          }
        ]
      },
      "delete": {
        "operationId": "deleteObjectStorageBucket",
        "x-linode-cli-skip": true,
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Remove Object Storage Bucket",
        "description": "Removes a single bucket. While buckets containing objects _may_ be deleted by including the `force` option in the request, such operations will fail if the bucket contains too many objects. The recommended way to empty large buckets is to use the [S3 API to configure lifecycle policies](https://docs.ceph.com/docs/master/radosgw/bucketpolicy/#) that remove all objects, then delete the bucket.\n\nThis endpoint is available for convenience. It is recommended that instead you use the more [fully- featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#delete-bucket) directly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Bucket deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  -X DELETE \\\n  https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket\n"
          }
        ]
      }
    },
    "/object-storage/buckets/{clusterId}": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "The ID of the cluster this bucket exists in.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "getObjectStorageBucketinCluster",
        "x-linode-cli-skip": true,
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "List Object Storage Buckets in Cluster",
        "description": "Returns a list of Buckets in this cluster belonging to this Account.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#get-bucket) directly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of buckets you own in this cluster.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ObjectStorageBucket"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  https://api.linode.com/v4/object-storage/buckets/us-east-1\n"
          }
        ]
      }
    },
    "/object-storage/buckets/{clusterId}/{bucket}/access": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "The ID of the cluster this bucket exists in.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "bucket",
          "in": "path",
          "description": "The bucket name.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "operationId": "modifyObjectStorageBucketAccess",
        "x-linode-cli-skip": true,
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Modify Object Storage Bucket Access",
        "description": "Allows changing basic Cross-origin Resource Sharing (CORS) and Access Control Level (ACL) settings.\nOnly allows enabling/disabling CORS for all origins, and/or setting canned ACLs.\nFor more fine-grained control of both systems, please use the S3 API directly.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#put-bucket-acl) directly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "requestBody": {
          "description": "The changes to make to the bucket's access controls.",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cors_enabled": {
                    "type": "boolean",
                    "description": "If true, the bucket will be created with CORS enabled for all origins. For more fine-grained controls of CORS, use the S3 API directly.\n",
                    "example": true
                  },
                  "acl": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public-read",
                      "authenticated-read",
                      "public-read-write",
                      "custom"
                    ],
                    "description": "The Access Control Level of the bucket, as a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.\n",
                    "example": "private"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access controls updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer $TOKEN\" \\\n  -X POST -d '{\n      \"cors_enabled\": true,\n      \"acl\": \"private\"\n    }' \\\n  https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/access\n"
          }
        ]
      },
      "put": {
        "operationId": "modifyObjectStorageBucketAccess",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Object Storage Bucket Access Update",
        "description": "Allows changing basic Cross-origin Resource Sharing (CORS) and Access Control Level (ACL) settings.\nOnly allows enabling/disabling CORS for all origins, and/or setting canned ACLs.\nFor more fine-grained control of both systems, please use the S3 API directly.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/bucketops/#put-bucket-acl) directly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "requestBody": {
          "description": "The changes to make to the bucket's access controls.",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cors_enabled": {
                    "type": "boolean",
                    "description": "If true, the bucket will be created with CORS enabled for all origins. For more fine-grained controls of CORS, use the S3 API directly.\n",
                    "example": true
                  },
                  "acl": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public-read",
                      "authenticated-read",
                      "public-read-write",
                      "custom"
                    ],
                    "description": "The Access Control Level of the bucket, as a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.\n",
                    "example": "private"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access controls updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/object-storage/buckets/{clusterId}/{bucket}/object-list": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "The ID of the cluster this bucket exists in.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "bucket",
          "in": "path",
          "description": "The bucket name.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "getObjectStorageBucketContent",
        "x-linode-cli-skip": true,
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "List Object Storage Bucket Contents",
        "description": "Returns the contents of a bucket. The contents are paginated using a `marker`,\nwhich is the name of the last object on the previous page.  Objects may\nbe filtered by `prefix` and `delimiter` as well; see Query Parameters for more\ninformation.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/luminous/radosgw/s3/bucketops/#get-bucket) directly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_only"]
          }
        ],
        "parameters": [
          {
            "name": "marker",
            "in": "query",
            "required": false,
            "description": "The \"marker\" for this request, which can be used to paginate through large buckets. Its value should be the value of the `next_marker` property returned with the last page. Listing bucket contents *does not* support arbitrary page access. See the `next_marker` property in the responses section for more details.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delimiter",
            "in": "query",
            "required": false,
            "description": "The delimiter for object names; if given, object names will be returned up to the first occurrence of this character. This is most commonly used with the `/` character to allow bucket transversal in a manner similar to a filesystem, however any delimiter may be used. Use in conjunction with `prefix` to see object names past the first occurrence of the delimiter.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "description": "Filters objects returned to only those whose name start with the given prefix. Commonly used in conjunction with `delimiter` to allow transversal of bucket contents in a manner similar to a filesystem.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "One page of the requested bucket's contents.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "This page of objects in the bucket.",
                      "items": {
                        "$ref": "#/components/schemas/ObjectStorageObject"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/object-list\n"
          }
        ]
      }
    },
    "/object-storage/buckets/{clusterId}/{bucket}/object-url": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "The ID of the cluster this bucket exists in.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "bucket",
          "in": "path",
          "description": "The bucket name.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "operationId": "createObjectStorageObjectURL",
        "x-linode-cli-skip": true,
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Create Object Storage Object URL",
        "description": "Creates a pre-signed URL to access a single Object in a bucket. This\ncan be used to share objects, and also to create/delete objects by using\nthe appropriate HTTP method in your request body's `method` parameter.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more [fully-featured S3 API](https://docs.ceph.com/docs/mimic/radosgw/s3/)\ndirectly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the request to sign.",
          "content": {
            "application/json": {
              "schema": {
                "required": ["name", "method"],
                "properties": {
                  "method": {
                    "type": "string",
                    "description": "The HTTP method allowed to be used with the pre-signed URL.",
                    "example": "GET",
                    "default": "GET"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the object that will be accessed with the pre-signed URL. This object need not exist, and no error will be returned if it doesn't. This behavior is useful for generating pre-signed URLs to upload new objects to by setting the `method` to \"PUT\".\n",
                    "example": "example"
                  },
                  "content_type": {
                    "type": "string",
                    "description": "The expected `Content-type` header of the request this signed URL will be valid for.  If provided, the `Content-type` header _must_ be sent with the request when this URL is used, and _must_ be the same as it was when the signed URL was created. Required for all methods *except* \"GET\" or \"DELETE\".\n",
                    "example": null
                  },
                  "expires_in": {
                    "type": "integer",
                    "minimum": 360,
                    "maximum": 68400,
                    "default": 3600,
                    "description": "How long this signed URL will be valid for, in seconds.  If omitted, the URL will be valid for 3600 seconds (1 hour).\n",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The URL with which to access your object.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The signed URL to perform the request at.",
                      "example": "https://us-east-1.linodeobjects.com/example-bucket/example?Signature=qr98TEucCntPgEG%2BsZQGDsJg93c%3D&Expires=1567609905&AWSAccessKeyId=G4YAF81XWY61DQM94SE0"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer $TOKEN\" \\\n  -X POST -d '{\n      \"method\": \"GET\",\n      \"name\": \"example\"\n    }' \\\n  https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/object-url\n"
          }
        ]
      }
    },
    "/object-storage/clusters": {
      "get": {
        "operationId": "getObjectStorageClusters",
        "x-linode-cli-action": "clusters-list",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "List Clusters",
        "description": "Returns a paginated list of Object Storage Clusters that are available for\nuse.  Users can connect to the clusters with third party clients to create buckets\nand upload objects.\n",
        "tags": ["Object Storage"],
        "responses": {
          "200": {
            "description": "A paginated list of available clusters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ObjectStorageCluster"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  https://api.linode.com/v4/object-storage/clusters\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage clusters-list\n"
          }
        ]
      }
    },
    "/object-storage/clusters/{clusterId}": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "The ID of the Cluster.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "getObjectStorageCluster",
        "x-linode-cli-action": "clusters-view",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "View Cluster",
        "description": "Returns a single Object Storage Cluster.\n",
        "tags": ["Object Storage"],
        "responses": {
          "200": {
            "description": "The requested Cluster",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectStorageCluster"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  https://api.linode.com/v4/object-storage/clusters/us-east-1\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage clusters-view us-east-1\n"
          }
        ]
      }
    },
    "/object-storage/keys": {
      "get": {
        "operationId": "getObjectStorageKeys",
        "x-linode-cli-action": "keys-list",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "tags": ["Object Storage"],
        "summary": "List Object Storage Keys",
        "description": "Returns a paginated list of Object Storage Keys for authenticating to\nthe Object Storage S3 API.\n",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Object Storage Keys",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ObjectStorageKey"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  https://api.linode.com/v4/object-storage/keys\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage keys-list\n"
          }
        ]
      },
      "post": {
        "operationId": "createObjectStorageKeys",
        "x-linode-cli-action": "keys-create",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Create an Object Storage Key",
        "description": "Provisions a new Object Storage Key on your account.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "requestBody": {
          "description": "The label of the key to create. This is used to identify the created key.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectStorageKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The new keypair.  **This is the only time** the secret key is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectStorageKey"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer $TOKEN\" \\\n  -X POST -d '{\n  \"label\": \"my-object-storage-key\",\n  \"bucket_access\": [\n    {\n      \"cluster\": \"ap-south-1\",\n      \"bucket_name\": \"bucket-example-1\",\n      \"permissions\": \"read_write\"\n    },\n    {\n      \"cluster\": \"us-east-1\",\n      \"bucket_name\": \"bucket-example-2\",\n      \"permissions\": \"read_only\"\n    }\n  ]\n}' \\ https://api.linode.com/v4/object-storage/keys\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage keys-create \\\n  --label \"my-object-storage-key\" \\\n  --bucket_access '[{\"cluster\": \"ap-south-1\", \"bucket_name\": \"bucket-example-1\", \"permissions\": \"read_write\" }]'\n"
          }
        ]
      }
    },
    "/object-storage/keys/{keyId}": {
      "parameters": [
        {
          "name": "keyId",
          "in": "path",
          "description": "The key to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getObjectStorageKey",
        "x-linode-cli-action": "keys-view",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "View Object Storage Key",
        "description": "Returns a single Object Storage Key provisioned for your account.\n",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_only"]
          }
        ],
        "tags": ["Object Storage"],
        "responses": {
          "200": {
            "description": "The keypair",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectStorageKey"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  https://api.linode.com/v4/object-storage/keys/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage keys-view \\\n  --keyId 12345\n"
          }
        ]
      },
      "put": {
        "operationId": "updateObjectStorageKey",
        "x-linode-cli-action": "keys-update",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Update an Object Storage Key",
        "description": "Updates an Object Storage Key on your account.\n",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "tags": ["Object Storage"],
        "requestBody": {
          "description": "The fields to update.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "The label for this keypair, for display purposes only.",
                    "example": "my-key"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectStorageKey"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer $TOKEN\" \\\n  -X PUT -d '{\n    \"label\": \"my-object-storage-key\"\n  }' \\\n  https://api.linode.com/v4/object-storage/keys/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage keys-update \\\n  --keyId 12345\n  --label \"my-object-storage-key\"\n"
          }
        ]
      },
      "delete": {
        "operationId": "deleteObjectStorageKey",
        "x-linode-cli-action": "keys-delete",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Revoke Object Storage Key",
        "description": "Revokes an Object Storage Key.  This keypair will no longer be usable by third-party clients.\n",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "tags": ["Object Storage"],
        "responses": {
          "200": {
            "description": "Deletion successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  -X DELETE \\\n  https://api.linode.com/v4/object-storage/keys/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage keys-delete 12345\n"
          }
        ]
      }
    },
    "/object-storage/cancel": {
      "post": {
        "operationId": "cancelObjectStorage",
        "x-linode-cli-action": "cancel",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Cancel Object Storage",
        "description": "Cancel Object Storage on an Account. All buckets on the Account must be empty\nbefore Object Storage can be cancelled:\n\n- To delete a smaller number of objects, review the instructions in our\n[How to Use Object Storage](https://www.linode.com/docs/platform/object-storage/how-to-use-object-storage/)\nguide.\n- To delete large amounts of objects, consult our guide on\n[Lifecycle Policies](https://www.linode.com/docs/platform/object-storage/lifecycle-policies/).\n",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "tags": ["Object Storage"],
        "responses": {
          "200": {
            "description": "Object Storage cancellation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n  -X POST \\\n  https://api.linode.com/v4/object-storage/cancel\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage cancel\n"
          }
        ]
      }
    },
    "/object-storage/buckets/{clusterId}/{bucket}/ssl": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "The ID of the cluster this bucket exists in.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "bucket",
          "in": "path",
          "description": "The bucket name.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "getObjectStorageSSL",
        "x-linode-cli-action": "ssl-view",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "View Object Storage TLS/SSL Cert",
        "description": "Returns a boolean value indicating if this bucket has a corresponding TLS/SSL certificate that was\nuploaded by an Account user.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a boolean value indicating if this bucket has a corresponding TLS/SSL certificate that was uploaded by an Account user.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectStorageSSLResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/ssl\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage ssl-view \\\n  us-east-1 example-bucket\n"
          }
        ]
      },
      "post": {
        "operationId": "createObjectStorageSSL",
        "x-linode-cli-action": "ssl-upload",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Upload Object Storage TLS/SSL Cert",
        "description": "Upload a TLS/SSL certificate and private key to be served when you visit your Object Storage bucket via HTTPS.\nYour TLS/SSL certificate and private key are stored encrypted at rest.\n\n\nTo replace an expired certificate, [delete your current certificate](/api/v4/object-storage-buckets-cluster-id-bucket-ssl/#delete)\nand upload a new one.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "requestBody": {
          "description": "Upload this TLS/SSL certificate with its corresponding secret key.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectStorageSSL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns whether this bucket has a corresponding TLS/SSL certificate that was uploaded by a user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectStorageSSLResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d ‘{\n        \"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDbDCCAlQCCQCl\\n-----END CERTIFICATE-----\",\n        \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADIAQCQI\\n-----END PRIVATE KEY-----\"\n      }’ \\\n    https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/ssl\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage ssl-upload \\\n  us-east-1 example-bucket \\\n  --certificate \"-----BEGIN CERTIFICATE-----\\nMIIDbDCCAlQCCQCl\\n-----END CERTIFICATE-----\" \\\n  --private_key \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADIAQCQI\\n-----END PRIVATE KEY-----\"\n"
          }
        ]
      },
      "delete": {
        "operationId": "getObjectStorageSSL",
        "x-linode-cli-action": "ssl-delete",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Delete Object Storage TLS/SSL Cert",
        "description": "Deletes this Object Storage bucket's user uploaded TLS/SSL certificate and private key.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes this Object Storage bucket's user uploaded TLS/SSL certificate and private key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/object-storage/buckets/us-east-1/example-bucket/ssl\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli object-storage ssl-delete \\\n  us-east-1 example-bucket\n"
          }
        ]
      }
    },
    "/profile": {
      "get": {
        "tags": ["Profile"],
        "summary": "View Profile",
        "description": "Returns information about the current User. This can be used to see who is acting in applications where more than one token is managed. For example, in third-party OAuth applications.\n\nThis endpoint is always accessible, no matter what OAuth scopes the acting token has.\n",
        "operationId": "getProfile",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile view\n"
          }
        ]
      },
      "put": {
        "tags": ["Profile"],
        "summary": "Update Profile",
        "description": "Update information in your Profile.  This endpoint requires the \"account:read_write\" OAuth Scope.\n",
        "operationId": "updateProfile",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"email\": \"example-user@gmail.com\",\n      \"timezone\": \"US/Eastern\",\n      \"email_notifications\": true,\n      \"lish_auth_method\": \"keys_only\",\n      \"authorized_keys\": null,\n      \"two_factor_auth\": true,\n      \"restricted\": false\n    }' \\\n    https://api.linode.com/v4/profile\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile update \\\n  --email example-user@gmail.com \\\n  --timezone US/Eastern \\\n  --email_notifications true \\\n  --list_auth_method keys_only \\\n  --two_factor_auth true \\\n  --restricted false\n"
          }
        ]
      }
    },
    "/profile/apps": {
      "description": "Returns information about OAuth Apps you have authorized to access your Account.\n",
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Profile"],
        "summary": "List Authorized Apps",
        "description": "This is a collection of OAuth apps that you've given access to your Account, and includes the level of access granted.\n",
        "operationId": "getProfileApps",
        "x-linode-cli-action": "apps-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of apps you've authorized.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AuthorizedApp"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/apps\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile apps-list\n"
          }
        ]
      }
    },
    "/profile/apps/{appId}": {
      "parameters": [
        {
          "name": "appId",
          "in": "path",
          "required": true,
          "description": "The authorized app ID to manage.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["Profile"],
        "summary": "View Authorized App",
        "description": "Returns information about a single app you've authorized to access your Account.\n",
        "operationId": "getProfileApp",
        "x-linode-cli-action": "app-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The app requested.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedApp"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/apps/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile app-view 1234\n"
          }
        ]
      },
      "delete": {
        "tags": ["Profile"],
        "summary": "Revoke App Access",
        "description": "Expires this app token. This token may no longer be used to access your Account.\n",
        "operationId": "deleteProfileApp",
        "x-linode-cli-action": "app-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "App's authorization has been revoked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/profile/apps/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile app-delete 123\n"
          }
        ]
      }
    },
    "/profile/grants": {
      "get": {
        "tags": ["Profile"],
        "summary": "List Grants",
        "description": "This returns a GrantsResponse describing what the acting User has been granted access to.  For unrestricted users, this will return a  204 and no body because unrestricted users have access to everything without grants.  This will not return information about entities you do not have access to.  This endpoint is useful when writing third-party OAuth applications to see what options you should present to the acting User.\n\nFor example, if they do not have `global.add_linodes`, you might not display a button to deploy a new Linode.\n\nAny client may access this endpoint; no OAuth scopes are required.\n",
        "operationId": "getProfileGrants",
        "x-linode-cli-action": "grants",
        "x-linode-cli-skip": true,
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": []
          }
        ],
        "responses": {
          "200": {
            "description": "GrantsResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrantsResponse"
                }
              }
            }
          },
          "204": {
            "description": "This is an unrestricted User, who has no grants. This User can access everything on the Account.\n"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/grants\n"
          }
        ]
      }
    },
    "/profile/tfa-disable": {
      "post": {
        "tags": ["Profile"],
        "summary": "Disable Two Factor Authentication",
        "description": "Disables Two Factor Authentication for your User. Once successful, login attempts from untrusted computers will only require a password before being successful. This is less secure, and is discouraged.\n",
        "operationId": "tfaDisable",
        "x-linode-cli-action": "tfa-disable",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "TFA disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/profile/tfa-disable\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile tfa-disable\n"
          }
        ]
      }
    },
    "/profile/tfa-enable": {
      "post": {
        "tags": ["Profile"],
        "summary": "Create Two Factor Secret",
        "description": "Generates a Two Factor secret for your User. TFA will not be enabled until you have successfully confirmed the code you were given with [tfa-enable-confirm](/api/v4/profile-tfa-enable-confirm/#post) (see below). Once enabled, logins from untrusted computers will be required to provide a TFA code before they are successful.\n",
        "operationId": "tfaEnable",
        "x-linode-cli-action": "tfa-enable",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Two Factor secret generated",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "secret": {
                      "type": "string",
                      "description": "Your Two Factor secret. This is used to generate time-based two factor codes required for logging in. Doing this will be required to confirm TFA an actually enable it.\n",
                      "example": "5FXX6KLACOC33GTC"
                    },
                    "expiry": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When this Two Factor secret expires.\n",
                      "example": "2018-03-01T00:01:01.000Z"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/profile/tfa-enable\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile tfa-enable\n"
          }
        ]
      }
    },
    "/profile/tfa-enable-confirm": {
      "post": {
        "tags": ["Profile"],
        "summary": "Confirm/Enable Two Factor Authentication",
        "description": "Confirms that you can successfully generate Two Factor codes and enables TFA on your Account. Once this is complete, login attempts from untrusted computers will be required to provide a Two Factor code before they are successful.\n",
        "operationId": "tfaConfirm",
        "x-linode-cli-action": "tfa-confirm",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The Two Factor code you generated with your Two Factor secret.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tfa_code": {
                    "type": "string",
                    "description": "The Two Factor code you generated with your Two Factor secret. These codes are time-based, so be sure it is current.\n",
                    "example": "213456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TFA enabled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "scratch": {
                      "type": "string",
                      "description": "A one-use code that can be used in place of your Two Factor code, in case you are unable to generate one.  Keep this in a safe place to avoid being locked out of your Account.\n",
                      "example": "sample two factor scratch"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"tfa_code\": \"213456\"\n    }' \\\n    https://api.linode.com/v4/profile/tfa-enable-confirm\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile tfa-confirm \\\n  --tfa_code 213456\n"
          }
        ]
      }
    },
    "/profile/tokens": {
      "description": "A collection of Personal Access Tokens you've created.\n",
      "get": {
        "tags": ["Profile"],
        "summary": "List Personal Access Tokens",
        "description": "Returns a paginated list of Personal Access Tokens currently active for your User.\n",
        "operationId": "getPersonalAccessTokens",
        "x-linode-cli-action": "tokens-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of active tokens.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PersonalAccessToken"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/tokens\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile tokens-list\n"
          }
        ]
      },
      "post": {
        "tags": ["Profile"],
        "summary": "Create Personal Access Token",
        "description": "Creates a Personal Access Token for your User. The raw token will be returned in the response, but will never be returned again afterward so be sure to take note of it. You may create a token with _at most_ the scopes of your current token. The created token will be able to access your Account until the given expiry, or until it is revoked.\n",
        "operationId": "createPersonalAccessToken",
        "x-linode-cli-action": "token-create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Information about the requested token.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "scopes": {
                    "type": "string",
                    "format": "oauth-scope",
                    "description": "The scopes to create the token with.  These cannot be changed after creation, and may not exceed the scopes of the acting token. If omitted, the new token will have the same scopes as the acting token.\n",
                    "example": "*"
                  },
                  "expiry": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this token should be valid until.  If omitted, the new token will be valid until it is manually revoked.\n",
                    "example": null
                  },
                  "label": {
                    "$ref": "#/components/schemas/PersonalAccessToken/properties/label"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessToken"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"scopes\": \"*\",\n      \"expiry\": \"2018-01-01T13:46:32\",\n      \"label\": \"linode-cli\"\n    }' \\\n    https://api.linode.com/v4/profile/tokens\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile token-create \\\n  --scopes '*' \\\n  --expiry '2018-01-01T13:46:32' \\\n  --label linode-cli\n"
          }
        ]
      }
    },
    "/profile/tokens/{tokenId}": {
      "description": "View or revoke a single token.",
      "parameters": [
        {
          "name": "tokenId",
          "in": "path",
          "description": "The ID of the token to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["Profile"],
        "summary": "View Personal Access Token",
        "description": "Returns a single Personal Access Token.\n",
        "operationId": "getPersonalAccessToken",
        "x-linode-cli-action": "token-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessToken"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/tokens/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile token-view 123\n"
          }
        ]
      },
      "put": {
        "tags": ["Profile"],
        "summary": "Update Personal Access Token",
        "description": "Updates a Personal Access Token.\n",
        "operationId": "updatePersonalAccessToken",
        "x-linode-cli-action": "token-update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalAccessToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessToken"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"label\": \"linode-cli\"\n    }' \\\n    https://api.linode.com/v4/profile/tokens/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile token-update 123 \\\n  --label linode-cli\n"
          }
        ]
      },
      "delete": {
        "tags": ["Profile"],
        "summary": "Revoke Personal Access Token",
        "description": "Revokes a Personal Access Token. The token will be invalidated immediately, and requests using that token will fail with a 401. It is possible to revoke access to the token making the request to revoke a token, but keep in mind that doing so could lose you access to the api and require you to create a new token through some other means.\n",
        "operationId": "deletePersonalAccessToken",
        "x-linode-cli-action": "token-delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Token revoked successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/profile/tokens/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile token-delete 123\n"
          }
        ]
      }
    },
    "/profile/logins": {
      "description": "Returns a collection of successful account logins for this user during the last 90 days.\n",
      "get": {
        "tags": ["Profile"],
        "summary": "List Logins",
        "description": "Returns a collection of successful account logins from this user during the last 90 days.\n",
        "operationId": "getProfileLogins",
        "x-linode-cli-action": "logins-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "An array of successful account logins from this user during the last 90 days.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Login"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/logins\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile logins-list\n"
          }
        ]
      }
    },
    "/profile/logins/{loginId}": {
      "description": "A login object that displays information about a successful account login from this user.\n",
      "parameters": [
        {
          "name": "loginId",
          "in": "path",
          "description": "The ID of the login object to access.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["Profile"],
        "summary": "View Login",
        "description": "Returns a login object displaying information about a successful account login from this user.\n",
        "operationId": "getProfileLogin",
        "x-linode-cli-action": "login-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested login object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/logins/1234\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile login-view 1234\n"
          }
        ]
      }
    },
    "/profile/devices": {
      "description": "A collection of active TrustedDevices for your user.\n",
      "get": {
        "tags": ["Profile"],
        "summary": "List Trusted Devices",
        "description": "Returns a paginated list of active TrustedDevices for your User. Browsers with an active Remember Me Session are logged into your account until the session expires or is revoked.\n",
        "operationId": "getDevices",
        "x-linode-cli-action": "devices-list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of TrustedDevice objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TrustedDevice"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/devices\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile devices-list\n"
          }
        ]
      }
    },
    "/profile/devices/{deviceId}": {
      "description": "View or revoke individual TrustedDevices for your User.\n",
      "parameters": [
        {
          "name": "deviceId",
          "in": "path",
          "description": "The ID of the TrustedDevice",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["Profile"],
        "summary": "View Trusted Device",
        "description": "Returns a single active TrustedDevice for your User.\n",
        "operationId": "getTrustedDevice",
        "x-linode-cli-action": "device-view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "The requested TrustedDevice object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustedDevice"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/devices/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile device-view 123\n"
          }
        ]
      },
      "delete": {
        "tags": ["Profile"],
        "summary": "Revoke Trusted Device",
        "description": "Revoke an active TrustedDevice for your User.  Once a TrustedDevice is revoked, this device will have to log in again before accessing your Linode account.\n",
        "operationId": "revokeTrustedDevice",
        "x-linode-cli-action": "device-revoke",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Session revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/profile/devices/123\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli profile device-revoke 123\n"
          }
        ]
      }
    },
    "/profile/sshkeys": {
      "description": "A collection of SSH Keys added by you.\n",
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Profile"],
        "summary": "List SSH Keys",
        "description": "Returns a collection of SSH Keys you've added to your Profile.\n",
        "operationId": "getSSHKeys",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of SSH Key objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SSHKey"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/sshkeys\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli sshkeys list\n"
          }
        ]
      },
      "post": {
        "tags": ["Profile"],
        "summary": "Add SSH Key",
        "description": "Adds an SSH Key to your Account profile.\n",
        "operationId": "addSSHKey",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Add SSH Key",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSHKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SSH Key associated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSHKey"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n        \"label\": \"My SSH Key\"\n        \"ssh_key\": \"ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer\"\n    }' \\\n    https://api.linode.com/v4/profile/sshkeys\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli sshkeys create \\\n  --label \"My SSH Key\"\n  --ssh_key \"ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer\"\n"
          }
        ]
      }
    },
    "/profile/sshkeys/{sshKeyId}": {
      "parameters": [
        {
          "name": "sshKeyId",
          "in": "path",
          "description": "The ID of the SSHKey",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["Profile"],
        "summary": "View SSH Key",
        "description": "Returns a single SSH Key object identified by `id` that you have access to view.\n",
        "operationId": "getSSHKey",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "An SSH Key object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSHKey"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/profile/sshkeys/42\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli sshkeys view 42\n"
          }
        ]
      },
      "put": {
        "tags": ["Profile"],
        "summary": "Update SSH Key",
        "description": "Updates an SSH Key that you have permission to `read_write`.\n",
        "operationId": "updateSSHKey",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The fields to update.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSHKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SSH Key updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSHKey"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"label\": \"my laptop\"\n    }' \\\n    https://api.linode.com/v4/profile/sshkey/42\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli sshkey update 42 \\\n  --label \"my laptop\"\n"
          }
        ]
      },
      "delete": {
        "tags": ["Profile"],
        "summary": "Delete SSH Key",
        "description": "Deletes an SSH Key you have access to.\n\n**Note:** deleting an SSH Key will *not* remove it from any Linode or Disk that was deployed with `authorized_keys`. In those cases, the keys must be manually deleted on the Linode or Disk. This endpoint will only delete the key's association from your Profile.\n",
        "operationId": "deleteSSHKey",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "SSH Key deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authoriztion: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/profile/sshkeys/42\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli sshkey delete 42\n"
          }
        ]
      }
    },
    "/profile/preferences": {
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Profile"],
        "summary": "View User Preferences",
        "description": "View a list of user preferences tied to the OAuth client that generated\nthe token making the request. The user preferences endpoints allow\nconsumers of the API to store arbitrary JSON data, such as a user's font\nsize preference or preferred display name. User preferences are available\nfor each OAuth client registered to your account, and as such an account can\nhave multiple user preferences.\n",
        "operationId": "getUserPreferences",
        "x-linode-cli-action": "preferences-view",
        "x-linode-cli-skip": true,
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object of user preferences.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "A dictionary of user preferences.",
                  "example": {
                    "key1": "value1",
                    "key2": "value2"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X GET \\\n    https://api.linode.com/v4/profile/preferences\n"
          }
        ]
      },
      "put": {
        "tags": ["Profile"],
        "summary": "Update User Preferences",
        "description": "Updates a user's preferences. These preferences are tied to the OAuth client that generated the token making the request. The user preferences endpoints allow consumers of the API to store arbitrary JSON data, such as a user's font size preference or preferred display name. An account may have multiple preferences. Preferences, and the pertaining request body, may contain any arbitrary JSON data that the user would like to store.\n",
        "operationId": "updateUserPreferences",
        "x-linode-cli-action": "preferences-update",
        "x-linode-cli-skip": true,
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The user preferences to update or store.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Arbitrary JSON of your choosing.\n"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an object of user preferences.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "An object of user preferences.",
                  "example": {
                    "key1": "value1",
                    "key2": "value2"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"key1\": \"value1\",\n      \"key1\": \"value2\"\n    }' \\\n    https://api.linode.com/v4/profile/preferences\n"
          }
        ]
      }
    },
    "/regions": {
      "get": {
        "tags": ["Regions"],
        "summary": "List Regions",
        "description": "Lists the Regions available for Linode services. Not all services are guaranteed to be\navailable in all Regions.\n",
        "x-linode-redoc-load-ids": true,
        "operationId": "getRegions",
        "x-linode-cli-action": "list",
        "responses": {
          "200": {
            "description": "Returns an array of Regions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Region"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://api.linode.com/v4/regions\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli regions list\n"
          }
        ]
      }
    },
    "/regions/{regionId}": {
      "parameters": [
        {
          "name": "regionId",
          "in": "path",
          "description": "ID of the Region to look up.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Regions"],
        "summary": "View Region",
        "description": "Returns a single Region.\n",
        "operationId": "getRegion",
        "x-linode-cli-action": "view",
        "responses": {
          "200": {
            "description": "A single Region object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://api.linode.com/v4/regions/us-east\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli regions view us-east\n"
          }
        ]
      }
    },
    "/support/tickets": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Support"],
        "summary": "List Support Tickets",
        "description": "Returns a collection of Support Tickets on your Account. Support Tickets can be both tickets you open with Linode for support, as well as tickets generated by Linode regarding your Account.\nThis collection includes all Support Tickets generated on your Account, with open tickets returned first.\n",
        "operationId": "getTickets",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of SupportTicket objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SupportTicket"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/support/tickets\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli tickets list\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Support"],
        "summary": "Open Support Ticket",
        "description": "Open a Support Ticket.\nOnly one of the ID attributes (`linode_id`, `domain_id`, etc.) can be set on a single Support Ticket.\n",
        "operationId": "createTicket",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Open a Support Ticket.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupportTicketRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Support Ticket opened.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportTicket"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"description\": \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\",\n      \"linode_id\": 123,\n      \"summary\": \"Having trouble resetting root password on my Linode\"\n    }' \\\n    https://api.linode.com/v4/support/tickets\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli tickets create \\\n  --description \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\" \\\n  --linode_id 123 \\\n  --summary \"Having trouble resetting root password on my Linode\"\n"
          }
        ]
      }
    },
    "/support/tickets/{ticketId}": {
      "parameters": [
        {
          "name": "ticketId",
          "in": "path",
          "description": "The ID of the Support Ticket.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "tags": ["Support"],
        "summary": "View Support Ticket",
        "description": "Returns a Support Ticket under your Account.\n",
        "operationId": "getTicket",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single SupportTicket object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportTicket"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/support/tickets/11223344\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli tickets view 11223344\n"
          }
        ]
      }
    },
    "/support/tickets/{ticketId}/attachments": {
      "parameters": [
        {
          "name": "ticketId",
          "in": "path",
          "description": "The ID of the Support Ticket.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Support"],
        "summary": "Create Ticket Attachment",
        "description": "Adds a file attachment to an existing Support Ticket on your Account. File attachments are used to assist our Support team in resolving your Ticket. Examples of attachments are screen shots and text files that provide additional information.\nNote: Accepted file extensions include: .gif, .jpg, .jpeg, .pjpg, .pjpeg, .tif, .tiff, .png, .pdf, or .txt.\n",
        "operationId": "createTicketAttachment",
        "x-linode-cli-skip": true,
        "x-linode-cli-action": "upload-attachment",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Add an attachment.",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["file"],
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "The local, absolute path to the file you want to attach to your Support Ticket.\n",
                    "example": "/Users/LinodeGuy/pictures/screen_shot.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attachment created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    -F 'file=/Users/LinodeGuy/pictures/screen_shot.jpg' \\\n    https://api.linode.com/v4/support/tickets/11223344/attachments\n"
          }
        ]
      }
    },
    "/support/tickets/{ticketId}/close": {
      "parameters": [
        {
          "name": "ticketId",
          "in": "path",
          "description": "The ID of the Support Ticket.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Support"],
        "summary": "Close Support Ticket",
        "description": "Closes a Support Ticket you have access to modify.\n",
        "operationId": "closeTicket",
        "x-linode-cli-action": "close",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Support Ticket closed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/support/tickets/11223344/close\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli tickets close 11223344\n"
          }
        ]
      }
    },
    "/support/tickets/{ticketId}/replies": {
      "parameters": [
        {
          "name": "ticketId",
          "in": "path",
          "description": "The ID of the Support Ticket.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Support"],
        "summary": "List Replies",
        "description": "Returns a collection of replies to a Support Ticket on your Account.\n",
        "operationId": "getTicketReplies",
        "x-linode-cli-action": "replies",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of SupportTicketReply objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SupportTicketReply"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/support/tickets/11223344/replies\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli tickets replies 11223344\n"
          }
        ]
      },
      "post": {
        "x-linode-grant": "read_write",
        "tags": ["Support"],
        "summary": "Create Reply",
        "description": "Adds a reply to an existing Support Ticket.\n",
        "operationId": "createTicketReply",
        "x-linode-cli-action": "reply",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "Add a reply.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["description"],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The content of your reply.\n",
                    "minLength": 1,
                    "maxLength": 65535,
                    "example": "Thank you for your help. I was able to figure out what the problem was and I successfully reset my password. You guys are the best!\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reply created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportTicketReply"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"description\": \"Thank you for your help. I was able to figure out what the problem was and I successfully reset my password. You guys are the best!\"\n    }' \\\n    https://api.linode.com/v4/support/tickets/11223344/replies\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli tickets reply 11223344 \\\n  --description \"Thank you for your help. I was able to figure out what the problem was and I successfully reset my password. You guys are the best!\"\n"
          }
        ]
      }
    },
    "/tags": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Tags"],
        "summary": "List Tags",
        "description": "Tags are User-defined labels attached to objects in your Account, such as Linodes. They are used for specifying and grouping attributes of objects that are relevant to the User.\n\nThis endpoint returns a paginated list of Tags on your account.\n",
        "operationId": "getTags",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Tags",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/tags\n"
          }
        ]
      },
      "post": {
        "tags": ["Tags"],
        "summary": "Create New Tag",
        "description": "Creates a new Tag and optionally tags requested objects with it immediately.\n\n**Important**: You must be an unrestricted User in order to add or modify Tags.\n",
        "operationId": "createTag",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "requestBody": {
          "description": "The tag to create, and optionally the objects to tag.\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["label"],
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "The new Tag.\n",
                    "minLength": 3,
                    "maxLength": 50,
                    "example": "example tag"
                  },
                  "linodes": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "A list of Linode IDs to apply the new Tag to.  You must be allowed to `read_write` all of the requested Linodes, or the Tag will not be created and an error will be returned.\n",
                    "example": [123, 456]
                  },
                  "domains": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "A list of Domain IDs to apply the new Tag to.  You must be allowed to `read_write` all of the requested Domains, or the Tag will not be created and an error will be returned.\n",
                    "example": [564, 565]
                  },
                  "volumes": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "A list of Volume IDs to apply the new Tag to.  You must be allowed to `read_write` all of the requested Volumes, or the Tag will not be created and an error will be returned.\n",
                    "example": [9082, 10003]
                  },
                  "nodebalancers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "A list of NodeBalancer IDs to apply the new Tag to. You must be allowed to `read_write` all of the requested NodeBalancers, or the Tag will not be created and an error will be returned.\n",
                    "example": [10301, 10501]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The new Tag.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n        \"label\": \"example tag\",\n        \"linodes\": [123,456],\n        \"volumes\": [9082,10003]\n    }' \\\n    https://api.linode.com/v4/tags\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli tags create \\\n  --label 'example tag' \\\n  --linodes 123 \\\n  --linodes 456 \\\n  --volumes 9082 \\\n  --volumes 10003\n"
          }
        ]
      }
    },
    "/tags/{label}": {
      "parameters": [
        {
          "name": "label",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "List Tagged Objects",
        "description": "Returns a paginated list of all objects you've tagged with the requested Tag. This is a mixed collection of all object types.\n",
        "tags": ["Tags"],
        "operationId": "getTaggedObjects",
        "x-linode-cli-skip": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of objects, organized by type, that have been tagged with the requested Tag.\n",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "linode"
                          },
                          "data": {
                            "oneOf": [
                              {
                                "x-linode-ref-name": "linode",
                                "$ref": "#/components/schemas/Linode"
                              },
                              {
                                "x-linode-ref-name": "domain",
                                "$ref": "#/components/schemas/Domain"
                              },
                              {
                                "x-linode-ref-name": "volume",
                                "$ref": "#/components/schemas/Volume"
                              },
                              {
                                "x-linode-ref-name": "nodeBalancer",
                                "$ref": "#/components/schemas/NodeBalancer"
                              }
                            ],
                            "discriminator": {
                              "propertyName": "type"
                            }
                          }
                        }
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    \"https://api.linode.com/v4/tags/example tag\"\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete a Tag",
        "description": "Remove a Tag from all objects and delete it.\n\n**Important**: You must be an unrestricted User in order to add or modify Tags.\n",
        "tags": ["Tags"],
        "operationId": "deleteTag",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["account:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Tag deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/volumes": {
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "summary": "List Volumes",
        "description": "Returns a paginated list of Volumes you have permission to view.\n",
        "tags": ["Volumes"],
        "operationId": "getVolumes",
        "x-linode-cli-action": "list",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["volumes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of all Volumes on your Account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volume"
                      }
                    },
                    "page": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/page"
                    },
                    "pages": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/pages"
                    },
                    "results": {
                      "$ref": "#/components/schemas/PaginationEnvelope/properties/results"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/volumes\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli volumes list\n"
          }
        ]
      },
      "post": {
        "x-linode-charge": true,
        "x-linode-grant": "add_volumes",
        "summary": "Create Volume",
        "description": "Creates a Volume on your Account. In order for this to complete successfully, your User must have the `add_volumes` grant. Creating a new Volume will start accruing additional charges on your account.\n",
        "tags": ["Volumes"],
        "operationId": "createVolume",
        "x-linode-cli-action": "create",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["volumes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The requested initial state of a new Volume.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "region": {
                    "type": "string",
                    "description": "The Region to deploy this Volume in. This is only required if a linode_id is not given.\n",
                    "example": null
                  },
                  "linode_id": {
                    "type": "integer",
                    "description": "The Linode this volume should be attached to upon creation. If not given, the volume will be created without an attachment.\n",
                    "example": 123
                  },
                  "size": {
                    "type": "integer",
                    "description": "The initial size of this volume, in GB.  Be aware that volumes may only be resized up after creation.\n",
                    "example": 20,
                    "default": 20
                  },
                  "label": {
                    "type": "string",
                    "description": "The Volume's label, which is also used in the `filesystem_path` of the resulting volume.\n",
                    "example": "my-volume",
                    "minLength": 1,
                    "maxLength": 32,
                    "pattern": "^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$"
                  },
                  "config_id": {
                    "type": "integer",
                    "description": "When creating a Volume attached to a Linode, the ID of the Linode Config to include the new Volume in. This Config must belong to the Linode referenced by `linode_id`. Must _not_ be provided if `linode_id` is not sent. If a `linode_id` is sent without a `config_id`, the volume will be attached:\n\n  * to the Linode's only config if it only has one config.\n  * to the Linode's last used config, if possible.\n\nIf no config can be selected for attachment, an error will be returned.\n",
                    "example": 23456
                  },
                  "tags": {
                    "x-linode-filterable": true,
                    "description": "An array of Tags applied to this object.  Tags are for organizational purposes only.\n",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["example tag", "another example"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Creating Volume.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volume"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"label\": \"my-volume\",\n      \"size\": 20,\n      \"linode_id\": 12346\n    }' \\\n    https://api.linode.com/v4/volumes\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli volumes create \\\n  --label my-volume \\\n  --size 20 \\\n  --linode_id 12346 \\\n  --no-defaults\n"
          }
        ]
      }
    },
    "/volumes/{volumeId}": {
      "parameters": [
        {
          "name": "volumeId",
          "in": "path",
          "description": "ID of the Volume to look up.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "x-linode-grant": "read_only",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "tags": ["Volumes"],
        "summary": "View Volume",
        "description": "Get information about a single Volume.\n",
        "operationId": "getVolume",
        "x-linode-cli-action": "view",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["volumes:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single Volume object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volume"
                }
              }
            },
            "links": {
              "attach": {
                "$ref": "#/components/links/attachVolume"
              },
              "clone": {
                "$ref": "#/components/links/cloneVolume"
              },
              "detach": {
                "$ref": "#/components/links/detachVolume"
              },
              "resize": {
                "$ref": "#/components/links/resizeVolume"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Authorization: Bearer $TOKEN\" \\\n    https://api.linode.com/v4/volumes/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli volumes view 12345\n"
          }
        ]
      },
      "put": {
        "x-linode-grant": "read_write",
        "tags": ["Volumes"],
        "summary": "Update Volume",
        "description": "Updates a Volume that you have permission to `read_write`.\n",
        "operationId": "updateVolume",
        "x-linode-cli-action": "update",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["volumes:read_write"]
          }
        ],
        "requestBody": {
          "description": "If any updated field fails to pass validation, the Volume will not be updated.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Volume"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "size": {
                        "readOnly": true
                      },
                      "linode_id": {
                        "readOnly": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated Volume.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volume"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"label\": \"my-volume\"\n    }' \\\n    https://api.linode.com/v4/volumes/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli volumes update 12345 \\\n  --label my_volume\n"
          }
        ]
      },
      "delete": {
        "x-linode-grant": "read_write",
        "tags": ["Volumes"],
        "summary": "Delete Volume",
        "description": "Deletes a Volume you have permission to `read_write`.\n\n**Deleting a Volume is a destructive action and cannot be undone.**\n\nDeleting stops billing for the Volume. You will be billed for time used within\nthe billing period the Volume was active.\n",
        "operationId": "deleteVolume",
        "x-linode-cli-action": "delete",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["volumes:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Volume deletion successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X DELETE \\\n    https://api.linode.com/v4/volumes/12345\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli volumes delete 12345\n"
          }
        ]
      }
    },
    "/volumes/{volumeId}/attach": {
      "parameters": [
        {
          "name": "volumeId",
          "in": "path",
          "description": "ID of the Volume to attach.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "summary": "Attach Volume",
        "description": "Attaches a Volume on your Account to an existing Linode on your Account. In order for this request to complete successfully, your User must have `read_only` or `read_write` permission to the Volume and `read_write` permission to the Linode. Additionally, the Volume and Linode must be located in the same Region.\n",
        "tags": ["Volumes"],
        "operationId": "attachVolume",
        "x-linode-cli-action": "attach",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["volumes:read_write", "linodes:read_write"]
          }
        ],
        "requestBody": {
          "description": "Volume to attach to a Linode.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["linode_id"],
                "properties": {
                  "linode_id": {
                    "$ref": "#/components/schemas/Volume/properties/linode_id"
                  },
                  "config_id": {
                    "type": "integer",
                    "description": "The ID of the Linode Config to include this Volume in. Must belong to the Linode referenced by `linode_id`. If not given, the last booted Config will be chosen.\n",
                    "example": 23456
                  },
                  "persist_across_boots": {
                    "type": "boolean",
                    "description": "Defaults to true, if false is provided, the Volume will not be attached to the Linode Config. In this case more than 8 Volumes may be attached to a Linode if a Linode has 16GB of RAM or more. The number of volumes that can be attached is equal to the number of GB of RAM that the Linode has, up to a maximum of 64. `config_id` should not be passed if this is set to false and linode_id must be passed. The Linode must be running.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Volume was attached to a Linode.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volume"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"linode_id\": 12346,\n      \"config_id\": 23456\n    }' \\\n    https://api.linode.com/v4/volumes/12345/attach\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli volumes attach 12345 \\\n  --linode_id 12346 \\\n  --config_id 23456\n"
          }
        ]
      }
    },
    "/volumes/{volumeId}/clone": {
      "parameters": [
        {
          "name": "volumeId",
          "in": "path",
          "description": "ID of the Volume to clone.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-charge": true,
        "x-linode-grant": "add_volumes",
        "summary": "Clone Volume",
        "description": "Creates a Volume on your Account. In order for this request to complete successfully, your User must have the `add_volumes` grant. The new Volume will have the same size and data as the source Volume. Creating a new Volume will incur a charge on your Account.\n",
        "tags": ["Volumes"],
        "operationId": "cloneVolume",
        "x-linode-cli-action": "clone",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["volumes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The requested state your Volume will be cloned into.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["label"],
                "properties": {
                  "label": {
                    "$ref": "#/components/schemas/Volume/properties/label"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Clone started.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volume"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X PUT -d '{\n      \"label\": \"my-volume\"\n    }' \\\n    https://api.linode.com/v4/volumes/12345/clone\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli volumes clone 12345 \\\n  --label my-volume\n"
          }
        ]
      }
    },
    "/volumes/{volumeId}/detach": {
      "parameters": [
        {
          "name": "volumeId",
          "in": "path",
          "description": "ID of the Volume to detach.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "summary": "Detach Volume",
        "description": "Detaches a Volume on your Account from a Linode on your Account. In order for this request to complete successfully, your User must have `read_write` access to the Volume and `read_write` access to the Linode.\n",
        "tags": ["Volumes"],
        "operationId": "detachVolume",
        "x-linode-cli-action": "detach",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["volumes:read_write", "linodes:read_write"]
          }
        ],
        "responses": {
          "200": {
            "description": "Volume was detached from a Linode.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST \\\n    https://api.linode.com/v4/volumes/12345/detach\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli volumes detach 12345\n"
          }
        ]
      }
    },
    "/volumes/{volumeId}/resize": {
      "parameters": [
        {
          "name": "volumeId",
          "in": "path",
          "description": "ID of the Volume to resize.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "x-linode-charge": true,
        "summary": "Resize Volume",
        "description": "Resize an existing Volume on your Account. In order for this request to complete successfully, your User must have the `read_write` permissions to the Volume.\n* Volumes can only be resized up.\n",
        "tags": ["Volumes"],
        "operationId": "resizeVolume",
        "x-linode-cli-action": "resize",
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["volumes:read_write"]
          }
        ],
        "requestBody": {
          "description": "The requested size to increase your Volume to.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["size"],
                "properties": {
                  "size": {
                    "$ref": "#/components/schemas/Volume/properties/size"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Volume resize started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer $TOKEN\" \\\n    -X POST -d '{\n      \"size\": 30\n    }' \\\n    https://api.linode.com/v4/volumes/12345/resize\n"
          },
          {
            "lang": "CLI",
            "source": "linode-cli volumes resize 12345 \\\n  --size 30\n"
          }
        ]
      }
    },
    "/object-storage/buckets/{clusterId}/{bucket}/object-acl": {
      "parameters": [
        {
          "name": "clusterId",
          "in": "path",
          "description": "The ID of the cluster this bucket exists in.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "bucket",
          "in": "path",
          "description": "The bucket name.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "viewObjectStorageBucketAccess",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Object Storage Object ACL Config View",
        "description": "This Object Storage bucket's currently configured Access Control List (ACL).\n  ACLs define who can access your buckets and objects and specify the level of access\n  granted to those users.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more more [fully-featured S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/get-object-acl.html) directly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_only"]
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "description": "The `name` of the object for which to retrieve its Access Control List (ACL). Use the [Object Storage Bucket Contents List](/docs/api/object-storage/#object-storage-bucket-contents-list) endpoint to access all object names in a bucket.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Object's canned ACL and policy.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acl": {
                      "type": "string",
                      "enum": [
                        "private",
                        "public-read",
                        "authenticated-read",
                        "public-read-write",
                        "custom"
                      ],
                      "description": "The Access Control Level of the bucket, as a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.\n",
                      "example": "public-read"
                    },
                    "acl_xml": {
                      "type": "string",
                      "description": "The full XML of the object's ACL policy.\n",
                      "example": "<AccessControlPolicy>...</AccessControlPolicy>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "operationId": "viewObjectStorageBucketAccess",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Object Storage Object ACL Config Update",
        "description": "Update an Object's configured Access Control List (ACL) in this Object Storage bucket.\nACLs define who can access your buckets and objects and specify the level of access\ngranted to those users.\n\n\nThis endpoint is available for convenience. It is recommended that instead you\nuse the more more [fully-featured S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/put-object-acl.html) directly.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_write"]
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "description": "The `name` of the object for which to update its Access Control List (ACL). Use the [Object Storage Bucket Contents List](/docs/api/object-storage/#object-storage-bucket-contents-list) endpoint to access all object names in a bucket.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The changes to make to this Object's access controls.",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "acl": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public-read",
                      "authenticated-read",
                      "public-read-write",
                      "custom"
                    ],
                    "description": "The Access Control Level of the bucket, as a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.\n",
                    "example": "public-read"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Object's canned ACL and policy.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acl": {
                      "type": "string",
                      "enum": [
                        "private",
                        "public-read",
                        "authenticated-read",
                        "public-read-write",
                        "custom"
                      ],
                      "description": "The Access Control Level of the bucket, as a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.\n",
                      "example": "public-read"
                    },
                    "acl_xml": {
                      "type": "string",
                      "description": "The full XML of the object's ACL policy.\n",
                      "example": "<AccessControlPolicy>...</AccessControlPolicy>"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/object-storage/transfer": {
      "get": {
        "operationId": "getObjectStorageTransfer",
        "servers": [
          {
            "url": "https://api.linode.com/v4"
          }
        ],
        "summary": "Object Storage Transfer View",
        "description": "The amount of outbound data transfer used by your account's Object Storage buckets.\nObject Storage adds 1 terabyte of outbound data transfer to your data transfer pool.\nSee the [Object Storage Pricing and Limitations](/docs/guides/pricing-and-limitations/)\nguide for details on Object Storage transfer quotas.\n",
        "tags": ["Object Storage"],
        "security": [
          {
            "personalAccessToken": []
          },
          {
            "oauth": ["object_storage:read_only"]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the amount of outbound data transfer used by your account's Object Storage buckets.\n",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "used": {
                      "type": "integer",
                      "description": "The amount of outbound data transfer used by your account's Object Storage buckets, in GB, for the current month’s billing cycle.\n",
                      "example": 12956600198,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "personalAccessToken": {
        "type": "http",
        "scheme": "bearer"
      },
      "oauth": {
        "x-ignore": true,
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://login.linode.com/oauth/authorize",
            "tokenUrl": "https://login.linode.com/oauth/token",
            "scopes": {
              "account:read_only": "Allows access to GET information about your Account.",
              "account:read_write": "Allows access to all endpoints related to your Account.",
              "domains:read_only": "Allows access to GET Domains on your Account.",
              "domains:read_write": "Allows access to all Domain endpoints.",
              "events:read_only": "Allows access to GET your Events.",
              "events:read_write": "Allows access to all endpoints related to your Events.",
              "images:read_only": "Allows access to GET your Images.",
              "images:read_write": "Allows access to all endpoints related to your Images.",
              "ips:read_only": "Allows access to GET your ips.",
              "ips:read_write": "Allows access to all endpoints related to your ips.",
              "linodes:read_only": "Allows access to GET Linodes on your Account.",
              "linodes:read_write": "Allow access to all endpoints related to your Linodes.",
              "lke:read_only": "Allows access to GET LKE Clusters on your Account.",
              "lke:read_write": "Allows access to all endpoints related to LKE Clusters on your Account.",
              "longview:read_only": "Allows access to GET your Longview Clients.",
              "longview:read_write": "Allows access to all endpoints related to your Longview Clients.",
              "nodebalancers:read_only": "Allows access to GET NodeBalancers on your Account.",
              "nodebalancers:read_write": "Allows access to all NodeBalancer endpoints.",
              "stackscripts:read_only": "Allows access to GET your StackScripts.",
              "stackscripts:read_write": "Allows access to all endpoints related to your StackScripts.",
              "volumes:read_only": "Allows access to GET your Volumes.",
              "volumes:read_write": "Allows access to all endpoints related to your Volumes."
            }
          }
        }
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "pageOffset": {
        "name": "page",
        "in": "query",
        "description": "The page of a collection to return.",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "pageSize": {
        "name": "page_size",
        "in": "query",
        "description": "The number of items to return per page.",
        "schema": {
          "type": "integer",
          "minimum": 25,
          "maximum": 100,
          "default": 100
        }
      }
    },
    "links": {
      "bootLinode": {
        "operationId": "bootLinodeInstance",
        "parameters": {
          "linodeId": "$request.body#/id"
        }
      },
      "rebootLinode": {
        "operationId": "rebootLinodeInstance",
        "parameters": {
          "linodeId": "$request.body#/id"
        }
      },
      "shutdownLinode": {
        "operationId": "shutdownLinodeInstance",
        "parameters": {
          "linodeId": "$request.body#/id"
        }
      },
      "updateLinode": {
        "operationId": "updateLinodeInstance",
        "parameters": {
          "linodeId": "$request.body#/id"
        }
      },
      "deleteLinode": {
        "operationId": "deleteLinodeInstance",
        "parameters": {
          "linodeId": "$request.body#/id"
        }
      },
      "rebuildLinode": {
        "operationId": "rebuildLinodeInstance",
        "parameters": {
          "linodeId": "$request.body#/id"
        }
      },
      "mutateLinode": {
        "operationId": "mutateLinodeInstance",
        "parameters": {
          "linodeId": "$request.body#/id"
        }
      },
      "resizeLinode": {
        "operationId": "resizeLinodeInstance",
        "parameters": {
          "linodeId": "$request.body#/id"
        }
      },
      "rescueLinode": {
        "operationId": "rescueLinodeInstance",
        "parameters": {
          "linodeId": "$request.body#/id"
        }
      },
      "cloneLinode": {
        "operationId": "cloneLinodeInstance",
        "parameters": {
          "linodeId": "$request.body#/id"
        }
      },
      "attachVolume": {
        "operationId": "attachVolume",
        "parameters": {
          "volumeID": "$request.body#/id"
        }
      },
      "cloneVolume": {
        "operationId": "cloneVolume",
        "parameters": {
          "volumeId": "$request.body#/id"
        }
      },
      "detachVolume": {
        "operationId": "detachVolume",
        "parameters": {
          "volumeId": "$request.body#/id"
        }
      },
      "resizeVolume": {
        "operationId": "resizeVolume",
        "parameters": {
          "volumeId": "$request.body#/id"
        }
      }
    },
    "schemas": {
      "Account": {
        "type": "object",
        "description": "Account object",
        "properties": {
          "active_promotions": {
            "type": "array",
            "items": {
              "type": "object",
              "readOnly": true,
              "description": "A list of active promotions on your account. Promotions generally\noffer a set amount of credit that can be used toward your Linode\nservices, and the promotion expires after a specified date. As well,\na monthly cap on the promotional offer is set.\n\nSimply put, a promotion offers a certain amount of credit every\nmonth, until either the expiration date is passed, or until the total\npromotional credit is used, whichever comes first.\n",
              "properties": {
                "credit_monthly_cap": {
                  "type": "string",
                  "description": "The amount available to spend per month.\n",
                  "example": "10.00"
                },
                "credit_remaining": {
                  "type": "string",
                  "description": "The total amount of credit left for this promotion.\n",
                  "example": "50.00"
                },
                "description": {
                  "type": "string",
                  "description": "A detailed description of this promotion.\n",
                  "example": "Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends."
                },
                "expire_dt": {
                  "type": "string",
                  "description": "When this promotion's credits expire.\n",
                  "example": "2018-01-31T23:59:59"
                },
                "image_url": {
                  "type": "string",
                  "description": "The location of an image for this promotion.\n",
                  "example": "https://linode.com/10_a_month_promotion.svg"
                },
                "summary": {
                  "type": "string",
                  "description": "Short details of this promotion.\n",
                  "example": "$10 off your Linode a month!"
                },
                "this_month_credit_remaining": {
                  "type": "string",
                  "description": "The amount of credit left for this month for this promotion.\n",
                  "example": "10.00"
                }
              }
            }
          },
          "active_since": {
            "type": "string",
            "format": "date-time",
            "description": "The datetime of when the account was activated.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          },
          "address_1": {
            "type": "string",
            "description": "First line of this Account's billing address.",
            "maxLength": 64,
            "example": "123 Main Street"
          },
          "address_2": {
            "type": "string",
            "description": "Second line of this Account's billing address.",
            "maxLength": 64,
            "example": "Suite A"
          },
          "balance": {
            "type": "number",
            "readOnly": true,
            "description": "This Account's balance, in US dollars.",
            "example": 200,
            "x-linode-cli-display": 4
          },
          "balance_uninvoiced": {
            "type": "number",
            "readOnly": true,
            "description": "This Account's current estimated invoice in US dollars. This is not your final invoice balance. Bandwidth charges are not included in the estimate.\n",
            "example": 145,
            "x-linode-cli-display": 4
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of capabilities your account supports.\n",
            "example": [
              "Linodes",
              "NodeBalancers",
              "Block Storage",
              "Object Storage"
            ],
            "readOnly": true
          },
          "city": {
            "type": "string",
            "description": "The city for this Account's billing address.",
            "maxLength": 24,
            "example": "Philadelphia"
          },
          "credit_card": {
            "type": "object",
            "readOnly": true,
            "description": "Credit Card information associated with this Account.",
            "properties": {
              "last_four": {
                "type": "string",
                "description": "The last four digits of the credit card associated with this Account.\n",
                "example": 1111
              },
              "expiry": {
                "type": "string",
                "description": "The expiration month and year of the credit card.",
                "example": "11/2022"
              }
            }
          },
          "company": {
            "type": "string",
            "description": "The company name associated with this Account.",
            "maxLength": 128,
            "example": "Linode LLC"
          },
          "country": {
            "type": "string",
            "description": "The two-letter country code of this Account's billing address.\n",
            "minLength": 2,
            "maxLength": 2,
            "example": "US"
          },
          "email": {
            "type": "string",
            "description": "The email address of the person associated with this Account.",
            "maxLength": 128,
            "example": "john.smith@linode.com",
            "x-linode-cli-display": 3
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the person associated with this Account.",
            "maxLength": 50,
            "example": "John",
            "x-linode-cli-display": 1
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the person associated with this Account.",
            "maxLength": 50,
            "example": "Smith",
            "x-linode-cli-display": 2
          },
          "phone": {
            "type": "string",
            "description": "The phone number associated with this Account.",
            "maxLength": 32,
            "example": "215-555-1212"
          },
          "state": {
            "type": "string",
            "description": "If billing address is in the United States, this is the State portion of the Account's billing address. If the address is outside the US, this is the Province associated with the Account's billing address.\n",
            "maxLength": 24,
            "example": "Pennsylvania"
          },
          "tax_id": {
            "type": "string",
            "description": "The tax identification number associated with this Account, for tax calculations in some countries. If you do not live in a country that collects tax, this should be `null`.\n",
            "maxLength": 100,
            "example": "ATU99999999"
          },
          "euuid": {
            "type": "string",
            "description": "An external unique identifier for this account.\n",
            "format": "uuid",
            "readOnly": true,
            "example": "E1AF5EEC-526F-487D-B317EBEB34C87D71"
          },
          "zip": {
            "type": "string",
            "description": "The zip code of this Account's billing address.",
            "maxLength": 16,
            "example": 19102
          }
        }
      },
      "AccountSettings": {
        "type": "object",
        "description": "Account Settings object",
        "properties": {
          "managed": {
            "type": "boolean",
            "readOnly": true,
            "description": "Our 24/7 incident response service. This robust, multi-homed monitoring system distributes monitoring checks to ensure that your servers remain online and available at all times. Linode Managed can monitor any service or software stack reachable over TCP or HTTP. Once you add a service to Linode Managed, we'll monitor it for connectivity, response, and total request time.\n",
            "example": true,
            "x-linode-cli-display": 3
          },
          "longview_subscription": {
            "type": "string",
            "readOnly": true,
            "description": "The Longview Pro tier you are currently subscribed to. The value must be a [Longview Subscription](/api/v4/longview-subscriptions) ID or `null` for Longview Free.\n",
            "example": "longview-3",
            "x-linode-cli-display": 2
          },
          "network_helper": {
            "type": "boolean",
            "description": "Enables network helper across all users by default for new Linodes and Linode Configs.\n",
            "example": false,
            "x-linode-cli-display": 1
          },
          "backups_enabled": {
            "type": "boolean",
            "description": "Account-wide backups default.  If `true`, all Linodes created will automatically be enrolled in the Backups service.  If `false`, Linodes will not be enrolled by default, but may still be enrolled on creation or later.\n",
            "example": true,
            "x-linode-cli-display": 4
          },
          "object_storage": {
            "type": "string",
            "readOnly": true,
            "enum": ["disabled", "suspended", "active"],
            "description": "A string describing the status of this account's Object Storage service enrollment.\n",
            "default": "disabled",
            "example": "active",
            "x-linode-cli-display": 5
          }
        }
      },
      "AuthorizedApp": {
        "type": "object",
        "description": "An application you have authorized access to your Account through OAuth.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This authorization's ID, used for revoking access.\n",
            "example": 123,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "label": {
            "type": "string",
            "description": "The name of the application you've authorized.\n",
            "example": "example-app",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "thumbnail_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL at which this app's thumbnail may be accessed.\n",
            "example": null,
            "readOnly": true
          },
          "scopes": {
            "type": "string",
            "format": "oauth-scopes",
            "description": "The OAuth scopes this app was authorized with.  This defines what parts of your Account the app is allowed to access.\n",
            "example": "linodes:read_only",
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this app was authorized.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true,
            "x-linode-filterable": true,
            "x-linode-cli-display": 5
          },
          "expiry": {
            "type": "string",
            "format": "date-time",
            "description": "When the app's access to your account expires. If `null`, the app's access must be revoked manually.\n",
            "example": "2018-01-15T00:01:01",
            "readOnly": true,
            "x-linode-cli-display": 6
          },
          "website": {
            "type": "string",
            "format": "uri",
            "description": "The website where you can get more information about this app.\n",
            "example": "example.org",
            "readOnly": true,
            "x-linode-cli-display": 4
          }
        }
      },
      "Backup": {
        "type": "object",
        "description": "An object representing a Backup or snapshot for a Linode with Backup service enabled.\n",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "The unique ID of this Backup.",
            "example": 123456,
            "x-linode-cli-display": 1
          },
          "type": {
            "type": "string",
            "enum": ["auto", "snapshot"],
            "readOnly": true,
            "description": "This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time.\n",
            "example": "snapshot",
            "x-linode-cli-display": 3
          },
          "status": {
            "type": "string",
            "enum": [
              "paused",
              "pending",
              "running",
              "needsPostProcessing",
              "successful",
              "failed",
              "userAborted"
            ],
            "readOnly": true,
            "description": "The current state of a specific Backup.",
            "example": "successful",
            "x-linode-cli-display": 2,
            "x-linode-cli-color": {
              "successful": "green",
              "failed": "red",
              "userAborted": "f",
              "default_": "yellow"
            }
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date the Backup was taken.",
            "example": "2018-01-15T00:01:01",
            "x-linode-cli-display": 4
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date the Backup was most recently updated.",
            "example": "2018-01-15T00:01:01"
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date the Backup completed.",
            "example": "2018-01-15T00:01:01"
          },
          "label": {
            "type": "string",
            "description": "A label for Backups that are of type `snapshot`.",
            "example": "Webserver-Backup-2018",
            "x-linode-cli-display": 5,
            "nullable": true
          },
          "configs": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "My Debian 9 Config"
            },
            "readOnly": true,
            "description": "A list of the labels of the Configuration profiles that are part of the Backup.\n"
          },
          "disks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "size": {
                  "type": "integer",
                  "example": 9001
                },
                "filesystem": {
                  "$ref": "#/components/schemas/Disk/properties/filesystem"
                },
                "label": {
                  "type": "string",
                  "example": "My Debian 9 Disk"
                }
              }
            },
            "readOnly": true,
            "description": "A list of the disks that are part of the Backup.\n"
          }
        }
      },
      "CreditCard": {
        "type": "object",
        "description": "An object representing the credit card information you have on file with Linode to make Payments against your Account.\n",
        "required": ["card_number", "expiry_month", "expiry_year", "cvv"],
        "properties": {
          "card_number": {
            "type": "string",
            "description": "Your credit card number. No spaces or dashes allowed.",
            "minLength": 13,
            "maxLength": 23,
            "example": 4111111111111111
          },
          "expiry_month": {
            "type": "integer",
            "description": "A value from 1-12 representing the expiration month of your credit card.\n\n  * 1 = January\n  * 2 = February\n  * 3 = March\n  * Etc.\n",
            "example": 12
          },
          "expiry_year": {
            "type": "integer",
            "description": "A four-digit integer representing the expiration year of your credit card.\nThe combination of `expiry_month` and `expiry_year` must result in a month/year combination of the current month or in the future. An expiration date set in the past is invalid.\n",
            "example": 2020
          }
        }
      },
      "Device": {
        "type": "object",
        "description": "Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only one type per slot allowed. Can be null.\nDevices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.\n",
        "properties": {
          "disk_id": {
            "type": "integer",
            "description": "The Disk ID, or `null` if a Volume is assigned to this slot.",
            "example": 124458
          },
          "volume_id": {
            "type": "integer",
            "description": "The Volume ID, or `null` if a Disk is assigned to this slot.",
            "example": null
          }
        }
      },
      "Devices": {
        "type": "object",
        "description": "A dictionary of device disks to use as a device map in a Linode's configuration profile.\n* An empty device disk dictionary or a dictionary with empty values for device slots is allowed.\n* If no devices are specified, booting from this configuration will hold waiting for a device to exist before being able to boot.\n",
        "properties": {
          "sda": {
            "$ref": "#/components/schemas/Device"
          },
          "sdb": {
            "$ref": "#/components/schemas/Device"
          },
          "sdc": {
            "$ref": "#/components/schemas/Device"
          },
          "sdd": {
            "$ref": "#/components/schemas/Device"
          },
          "sde": {
            "$ref": "#/components/schemas/Device"
          },
          "sdf": {
            "$ref": "#/components/schemas/Device"
          },
          "sdg": {
            "$ref": "#/components/schemas/Device"
          },
          "sdh": {
            "$ref": "#/components/schemas/Device"
          }
        }
      },
      "Disk": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This Disk's ID which must be provided for all operations impacting this Disk.\n",
            "example": 25674,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "The Disk's label is for display purposes only.\n",
            "example": "Debian 9 Disk",
            "minLength": 1,
            "maxLength": 48,
            "x-linode-cli-display": 2
          },
          "status": {
            "type": "string",
            "description": "A brief description of this Disk's current state. This field may change without direct action from you, as a result of operations performed to the Disk or the Linode containing the Disk.\n",
            "example": "ready",
            "readOnly": true,
            "enum": ["ready", "not ready", "deleting"],
            "x-linode-cli-display": 3,
            "x-linode-cli-color": {
              "ready": "green",
              "not ready": "red",
              "default_": "yellow"
            }
          },
          "size": {
            "x-linode-filterable": true,
            "type": "integer",
            "readOnly": true,
            "description": "The size of the Disk in MB.",
            "example": 48640,
            "x-linode-cli-display": 4
          },
          "filesystem": {
            "type": "string",
            "description": "The Disk filesystem can be one of:\n\n  * raw - No filesystem, just a raw binary stream.\n  * swap - Linux swap area.\n  * ext3 - The ext3 journaling filesystem for Linux.\n  * ext4 - The ext4 journaling filesystem for Linux.\n  * initrd - initrd (uncompressed initrd, ext2, max 32 MB).\n",
            "example": "ext4",
            "enum": ["raw", "swap", "ext3", "ext4", "initrd"],
            "x-linode-cli-display": 5
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Disk was created.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this Disk was last updated.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          }
        }
      },
      "DiskRequest": {
        "type": "object",
        "description": "Disk object request.",
        "required": ["size", "label"],
        "properties": {
          "size": {
            "x-linode-filterable": true,
            "type": "integer",
            "example": 48640
          },
          "label": {
            "$ref": "#/components/schemas/Disk/properties/label"
          },
          "filesystem": {
            "$ref": "#/components/schemas/Disk/properties/filesystem"
          },
          "read_only": {
            "type": "boolean",
            "description": "If true, this Disk is read-only.\n",
            "example": false
          },
          "image": {
            "type": "string",
            "description": "An Image ID to deploy the Disk from. Official Linode Images start with `linode/ `, while your Images start with `private/`.\nSee [/images](/api/v4/images) for more information on the Images available for you to use.\n",
            "example": "linode/debian9"
          },
          "authorized_keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true,
            "example": [
              "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer"
            ],
            "description": "A list of public SSH keys that will be automatically appended to the root user's `~/.ssh/authorized_keys` file.\n"
          },
          "authorized_users": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true,
            "example": ["myUser", "secondaryUser"],
            "description": "A list of usernames that will have their SSH keys, if any, automatically appended to the root user's `~/.ssh/authorized_keys` file.\n"
          },
          "root_pass": {
            "type": "string",
            "format": "password",
            "writeOnly": true,
            "example": "aComplexP@ssword",
            "description": "This will set the root user's password on the newly-created Linode. Linode passwords have the following constraints:\n\n  * Must meet a password strength score requirement that is calculated internally by the API.\n    If the strength requirement is not met, you will receive a `Password does not meet strength requirement` error.\n"
          },
          "stackscript_id": {
            "type": "integer",
            "example": 10079,
            "description": "A StackScript ID that will cause the referenced StackScript to be run during\ndeployment of this Linode. A compatible `image` is required to use a\nStackScript. To get a list of available StackScript and their permitted Images\nsee [/stackscripts](/api/v4/linode-stackscripts).\nThis field cannot be used when deploying from a Backup or a private Image.\n"
          },
          "stackscript_data": {
            "type": "object",
            "example": {
              "gh_username": "linode"
            },
            "description": "This field is required only if the StackScript being deployed requires input\ndata from the User for successful completion. See\n<a target=\"_top\" href=\"https://www.linode.com/docs/platform/stackscripts/#variables-and-udfs\">Variables and UDFs</a>\nfor more details. This field is required to be valid JSON.\n"
          }
        }
      },
      "Domain": {
        "type": "object",
        "description": "A domain zonefile in our DNS system.  You must own the domain name and tell your registrar to use Linode's nameservers in order for a domain in our system to be treated as authoritative.\n",
        "required": ["id", "domain", "type"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "This Domain's unique ID",
            "example": 1234,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "type": {
            "type": "string",
            "enum": ["master", "slave"],
            "description": "Whether this Domain represents the authoritative source of information for the domain it describes (\"master\"), or whether it is a read-only copy of a master (\"slave\").\n",
            "example": "master",
            "x-linode-cli-display": 3
          },
          "domain": {
            "type": "string",
            "pattern": "([a-zA-Z0-9-_]{1,63}\\.)+([a-zA-Z]{2,3}\\.)?([a-zA-Z]{2,16}|xn--[a-zA-Z0-9]+\\.?)",
            "description": "The domain this Domain represents. Domain labels cannot be longer than 63 characters and must conform to [RFC1035](https://tools.ietf.org/html/rfc1035). Domains must be unique on Linode's platform, including across different Linode accounts; there cannot be two Domains representing the same domain.\n",
            "example": "example.org",
            "x-linode-filterable": true,
            "x-linode-cli-display": 2
          },
          "group": {
            "deprecated": true,
            "type": "string",
            "description": "The group this Domain belongs to.  This is for display purposes only.\n",
            "example": null,
            "minLength": 1,
            "maxLength": 50,
            "x-linode-filterable": true
          },
          "status": {
            "type": "string",
            "enum": ["disabled", "active"],
            "description": "Used to control whether this Domain is currently being rendered.\n",
            "example": "active",
            "x-linode-cli-display": 4,
            "x-linode-cli-color": {
              "active": "green",
              "disabled": "yellow",
              "edit_mode": "yellow",
              "default_": "red"
            }
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "A description for this Domain. This is for display purposes only.\n",
            "example": null
          },
          "soa_email": {
            "type": "string",
            "format": "email",
            "description": "Start of Authority email address. This is required for `type` master Domains.\n",
            "example": "admin@example.org",
            "x-linode-cli-display": 5
          },
          "retry_sec": {
            "type": "integer",
            "description": "The interval, in seconds, at which a failed refresh should be retried. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n",
            "example": 300
          },
          "master_ips": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "ip"
            },
            "description": "The IP addresses representing the master DNS for this Domain. At least one value is required for `type` slave Domains.\n",
            "example": []
          },
          "axfr_ips": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "ip"
            },
            "description": "The list of IPs that may perform a zone transfer for this Domain. This is potentially dangerous, and should be set to an empty list unless you intend to use it.\n",
            "example": []
          },
          "expire_sec": {
            "type": "integer",
            "description": "The amount of time in seconds that may pass before this Domain is no longer authoritative. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n",
            "example": 300
          },
          "refresh_sec": {
            "type": "integer",
            "description": "The amount of time in seconds before this Domain should be refreshed. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n",
            "example": 300
          },
          "ttl_sec": {
            "type": "integer",
            "description": "\"Time to Live\" - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers.\n* Valid values are 0, 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n* ttl_sec will default to 0 if no value is provided.\n* A value of 0 is equivalent to a value of 86400.\n",
            "example": 300
          },
          "tags": {
            "x-linode-filterable": true,
            "description": "An array of tags applied to this object.  Tags are for organizational purposes only.\n",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["example tag", "another example"]
          }
        }
      },
      "DomainRecord": {
        "type": "object",
        "description": "A single record on a Domain.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This Record's unique ID.",
            "example": 123456,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "type": {
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "NS",
              "MX",
              "CNAME",
              "TXT",
              "SRV",
              "PTR",
              "CAA"
            ],
            "description": "The type of Record this is in the DNS system. For example, A records associate a domain name with an IPv4 address, and AAAA records associate a domain name with an IPv6 address.\n",
            "example": "A",
            "x-linode-cli-display": 2
          },
          "name": {
            "type": "string",
            "description": "The name of this Record. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the subdomain being associated with an IP address.\n",
            "minLength": 1,
            "maxLength": 100,
            "example": "test",
            "x-linode-cli-display": 3
          },
          "target": {
            "type": "string",
            "description": "The target for this Record. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the address the named Domain should resolve to.\n",
            "example": "12.34.56.78",
            "x-linode-cli-display": 4
          },
          "priority": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255,
            "description": "The priority of the target host. Lower values are preferred.\n",
            "example": 50,
            "x-linode-cli-display": 6
          },
          "weight": {
            "type": "integer",
            "description": "The relative weight of this Record. Higher values are preferred.\n",
            "example": 50,
            "minimum": 0,
            "maximum": 65535,
            "x-linode-cli-display": 7
          },
          "port": {
            "type": "integer",
            "description": "The port this Record points to.\n",
            "example": 80,
            "minimum": 0,
            "maximum": 65535
          },
          "service": {
            "type": "string",
            "nullable": true,
            "description": "The service this Record identified. Only valid for SRV records.\n",
            "example": null
          },
          "protocol": {
            "type": "string",
            "nullable": true,
            "description": "The protocol this Record's service communicates with. Only valid for SRV records.\n",
            "example": null
          },
          "ttl_sec": {
            "type": "integer",
            "description": "\"Time to Live\" - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.\n",
            "example": 604800,
            "x-linode-cli-display": 5
          },
          "tag": {
            "type": "string",
            "nullable": true,
            "description": "The tag portion of a CAA record. It is invalid to set this on other record types.\n",
            "example": null,
            "x-linode-filterable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Domain Record was created.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this Domain Record was last updated.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          }
        }
      },
      "ErrorObject": {
        "type": "object",
        "description": "An object for describing a single error that occurred during the processing of a request.\n",
        "properties": {
          "reason": {
            "type": "string",
            "description": "What happened to cause this error. In most cases, this can be fixed immediately by changing the data you sent in the request, but in some cases you will be instructed to [open a Support Ticket](/api/v4/support-tickets/#post) or perform some other action before you can complete the request successfully.\n",
            "example": "fieldname must be a valid value"
          },
          "field": {
            "type": "string",
            "description": "The field in the request that caused this error. This may be a path, separated by periods in the case of nested fields. In some cases this may come back as \"null\" if the error is not specific to any single element of the request.\n",
            "example": "fieldname"
          }
        }
      },
      "Event": {
        "type": "object",
        "description": "A collection of Event objects. An Event is an action taken against an entity related to your Account. For example, booting a Linode would create an Event.\nThe Events returned depends on your grants.\n",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "The unique ID of this Event.",
            "example": 123,
            "x-linode-cli-display": 1,
            "x-linode-filterable": true
          },
          "action": {
            "type": "string",
            "enum": [
              "account_update",
              "account_settings_update",
              "backups_enable",
              "backups_cancel",
              "backups_restore",
              "community_question_reply",
              "community_like",
              "credit_card_updated",
              "disk_create",
              "disk_delete",
              "disk_update",
              "disk_duplicate",
              "disk_imagize",
              "disk_resize",
              "dns_record_create",
              "dns_record_delete",
              "dns_record_update",
              "dns_zone_create",
              "dns_zone_delete",
              "dns_zone_import",
              "dns_zone_update",
              "firewall_create",
              "firewall_delete",
              "firewall_disable",
              "firewall_enable",
              "firewall_update",
              "firewall_device_add",
              "firewall_device_remove",
              "host_reboot",
              "image_delete",
              "image_update",
              "ipaddress_update",
              "lassie_reboot",
              "lish_boot",
              "linode_addip",
              "linode_boot",
              "linode_clone",
              "linode_create",
              "linode_delete",
              "linode_update",
              "linode_deleteip",
              "linode_migrate",
              "linode_migrate_datacenter",
              "linode_migrate_datacenter_create",
              "linode_mutate",
              "linode_mutate_create",
              "linode_reboot",
              "linode_rebuild",
              "linode_resize",
              "linode_resize_create",
              "linode_shutdown",
              "linode_snapshot",
              "linode_config_create",
              "linode_config_delete",
              "linode_config_update",
              "lke_node_create",
              "longviewclient_create",
              "longviewclient_delete",
              "longviewclient_update",
              "managed_disabled",
              "managed_enabled",
              "managed_service_create",
              "managed_service_delete",
              "nodebalancer_create",
              "nodebalancer_delete",
              "nodebalancer_update",
              "nodebalancer_config_create",
              "nodebalancer_config_delete",
              "nodebalancer_config_update",
              "nodebalancer_node_create",
              "nodebalancer_node_delete",
              "nodebalancer_node_update",
              "oauth_client_create",
              "oauth_client_delete",
              "oauth_client_secret_reset",
              "oauth_client_update",
              "password_reset",
              "payment_submitted",
              "profile_update",
              "stackscript_create",
              "stackscript_delete",
              "stackscript_update",
              "stackscript_publicize",
              "stackscript_revise",
              "tag_create",
              "tag_delete",
              "tfa_disabled",
              "tfa_enabled",
              "ticket_attachment_upload",
              "ticket_create",
              "ticket_update",
              "token_create",
              "token_delete",
              "token_update",
              "user_create",
              "user_update",
              "user_delete",
              "user_ssh_key_add",
              "user_ssh_key_delete",
              "user_ssh_key_update",
              "vlan_attach",
              "vlan_detach",
              "volume_attach",
              "volume_clone",
              "volume_create",
              "volume_delete",
              "volume_update",
              "volume_detach",
              "volume_resize"
            ],
            "readOnly": true,
            "description": "The action that caused this Event. New actions may be added in the future.\n",
            "example": "ticket_create",
            "x-linode-cli-display": 3,
            "x-linode-filterable": true
          },
          "created": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "description": "When this Event was created.",
            "example": "2018-01-01T00:01:01",
            "x-linode-cli-display": 6,
            "x-linode-filterable": true
          },
          "duration": {
            "type": "number",
            "readOnly": true,
            "description": "The total duration in seconds that it takes for the Event to complete.\n",
            "example": 300.56,
            "x-linode-cli-display": 10
          },
          "entity": {
            "type": "object",
            "readOnly": true,
            "description": "Detailed information about the Event's entity, including ID, type, label, and URL used to access it.\n",
            "x-linode-cli-display": 4,
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique ID for an Event's entity.\n\n\nSome Event entities do not have IDs associated with them, so they\nwill not be returned when filtering by ID. These Events include:\n  * `account`\n  * `profile`\n\nEntities for some Events are assigned the ID of the Linode they correspond to.\nWhen filtering by ID for these Events, use the corresponding Linode's ID.\nThese Events include:\n  * `disks`\n  * `backups`\n\n\nTag Events use a tag's name for the entity ID field. When filtering by ID\nfor tag Events, supply the name of the tag.\n",
                "example": 11111,
                "x-linode-filterable": true
              },
              "label": {
                "type": "string",
                "description": "The current label of this object. The label may reflect changes that occur with this Event.\n",
                "example": "Problem booting my Linode"
              },
              "type": {
                "type": "string",
                "enum": [
                  "account",
                  "backups",
                  "community",
                  "disks",
                  "domain",
                  "firewall",
                  "image",
                  "ipaddress",
                  "linode",
                  "longview",
                  "managed_service",
                  "nodebalancer",
                  "oauth_client",
                  "profile",
                  "stackscript",
                  "tag",
                  "ticket",
                  "token",
                  "user",
                  "user_ssh_key",
                  "volume"
                ],
                "readOnly": true,
                "description": "The type of entity that is being referenced by the Event.\n",
                "example": "ticket",
                "x-linode-filterable": true
              },
              "url": {
                "type": "string",
                "description": "The URL where you can access the object this Event is for. If a relative URL, it is relative to the domain you retrieved the Event from.\n",
                "example": "/v4/support/tickets/11111"
              }
            }
          },
          "secondary_entity": {
            "type": "object",
            "readOnly": true,
            "description": "Detailed information about the Event's secondary entity, which provides additional information\nfor events such as, but not limited to, `linode_boot`, `linode_reboot`, `linode_create`, and `linode_clone` Event actions.\n",
            "x-linode-cli-display": 5,
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the object that is the secondary entity.\n",
                "example": "linode/debian9"
              },
              "label": {
                "type": "string",
                "description": "The label of this object.\n",
                "example": "linode1234"
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "The type of entity that is being referenced by the Event.\n",
                "example": "linode"
              },
              "url": {
                "type": "string",
                "description": "The URL where you can access the object this Event is for. If a relative URL, it is relative to the domain you retrieved the Event from.\n",
                "example": "/v4/linode/instances/1234"
              }
            }
          },
          "percent_complete": {
            "type": "integer",
            "readOnly": true,
            "description": "A percentage estimating the amount of time remaining for an Event.\nReturns `null` for notification events.\n",
            "example": null
          },
          "rate": {
            "type": "string",
            "readOnly": true,
            "description": "The rate of completion of the Event. Only some Events will return rate; for example, migration and resize Events.\n",
            "example": null
          },
          "read": {
            "type": "boolean",
            "readOnly": true,
            "description": "If this Event has been read.",
            "example": true,
            "x-linode-cli-display": 9
          },
          "seen": {
            "type": "boolean",
            "readOnly": true,
            "description": "If this Event has been seen.",
            "example": true,
            "x-linode-cli-display": 8
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "description": "The current status of this Event.",
            "enum": [
              "failed",
              "finished",
              "notification",
              "scheduled",
              "started"
            ],
            "x-linode-cli-display": 7,
            "x-linode-cli-color": {
              "failed": "red",
              "finished": "green",
              "started": "yellow",
              "default_": "white"
            }
          },
          "time_remaining": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "The estimated time remaining until the completion of this Event. This value is only returned for some in-progress migration events. For all other in-progress events, the `percent_complete` attribute will indicate about how much more work is to be done.\n",
            "example": null
          },
          "username": {
            "type": "string",
            "readOnly": true,
            "description": "The username of the User who caused the Event.\n",
            "example": "exampleUser",
            "x-linode-cli-display": 2
          },
          "message": {
            "type": "string",
            "nullable": true,
            "description": "Provides additional information about the event. Additional information may include, but is not limited to, a more detailed representation of events which can help diagnose non-obvious failures.\n",
            "example": "None"
          }
        }
      },
      "Firewall": {
        "type": "object",
        "description": "A resource that controls incoming and outgoing network traffic to a Linode service. A Firewall can be assigned to multiple Linode services, and up to three active Firewalls can be assigned to a single Linode service. [Create a Firewall Device](http://developers.linode.com/api/v4/networking-firewalls-firewall-id-devices/#post) to assign a Firewall to a Linode service. Currently, Firewalls can only be assigned to Linode instances.\n",
        "properties": {
          "id": {
            "x-linode-filterable": true,
            "type": "integer",
            "readOnly": true,
            "description": "The Firewall's unique ID.\n",
            "example": 123,
            "x-linode-cli-display": 1
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "The Firewall's label, for display purposes only. If no label is provided for a Firewall, a default will be assigned.\nFirewall labels have the following constraints:\n\n  * Must begin and end with an alphanumeric character.\n  * May only consist of alphanumeric characters, dashes (`-`), underscores (`_`) or periods (`.`).\n  * Cannot have two dashes (`--`), underscores (`__`) or periods (`..`) in a row.\n  * Must be between 3 and 32 characters.\n",
            "example": "firewall123",
            "minLength": 3,
            "maxLength": 32,
            "pattern": "^[a-zA-Z]((?!--|__|..)[a-zA-Z0-9-_.])+$",
            "x-linode-cli-display": 2
          },
          "created": {
            "x-linode-filterable": true,
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "When this Firewall was created.\n",
            "example": "2018-01-01T00:01:01",
            "x-linode-cli-display": 4
          },
          "updated": {
            "x-linode-filterable": true,
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "When this Firewall was last updated.\n",
            "example": "2018-01-02T00:01:01",
            "x-linode-cli-display": 5
          },
          "status": {
            "type": "string",
            "description": "The status of this Firewall.\n\n  * When a Firewall is first created its status is `enabled`.\n  * Use the [Update Firewall](/api/v4/networking-firewalls-firewall-id/#put) endpoint to set a Firewall's status to `enbaled` or `disabled`.\n  * Use the [Delete Firewall](/api/v4/networking-firewalls-firewall-id/#delete) endpoint to delete a Firewall.\n",
            "enum": ["enabled", "disabled", "deleted"],
            "example": "enabled",
            "x-linode-cli-display": 3
          },
          "rules": {
            "type": "object",
            "description": "The inbound and outbound access rules to apply to the Firewall.\n\n  * A minimum of one open inbound rule is required. Any inbound\n    traffic that is not permitted by your rules will be blocked.\n  * Outbound rules are optional. When no outbound rules are specified,\n    all outbound traffic is allowed. If one or more outbound rules are\n    specified, all outbound traffic that is not permitted by your rules\n    will be blocked.\n\nA Firewall may have up to 25 rules across its inbound and outbound rulesets.\n",
            "properties": {
              "inbound": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FirewallRuleConfig"
                }
              },
              "outbound": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FirewallRuleConfig"
                }
              }
            },
            "required": ["inbound"]
          },
          "tags": {
            "x-linode-filterable": true,
            "description": "An array of tags applied to this object. Tags are for organizational purposes only.\n",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["example tag", "another example"]
          }
        }
      },
      "FirewallRuleConfig": {
        "type": "object",
        "description": "One of a Firewall's inbound or outbound access rules. The `ports` property can be used to allow traffic on a comma-separated list of different ports.\n",
        "required": ["protocol"],
        "properties": {
          "protocol": {
            "type": "string",
            "enum": ["TCP", "UDP", "ICMP"],
            "description": "The type of network traffic to allow.\n",
            "example": "TCP"
          },
          "ports": {
            "type": "string",
            "description": "A string representing the port or ports on which traffic will be allowed:\n\n- The string may be a single port, a range of ports, or a comma-separated list\nof single ports and port ranges. A space is permitted following each comma.\n- A range of ports is inclusive of the start and end values for the range. The\nend value of the range must be greater than the start value.\n- Ports must be within 1 and 65535.\n- Ports may not be specified if a rule's protocol is `ICMP`. At least one port\nmust be specified if a rule's protocol is `TCP` or `UDP`.\n- The ports string can have up to 15 *pieces*, where a single port is treated\nas one piece, and a port range is treated as two pieces. For example,\nthe string \"22-24, 80, 443\" has four pieces.\n",
            "example": "22-24, 80, 443"
          },
          "addresses": {
            "type": "object",
            "description": "Allowed IPv4 or IPv6 addresses. A Rule can have up to 255 addresses or networks listed across its IPv4 and IPv6 arrays. A network and a single IP are treated as equivalent when accounting for this limit.\n",
            "properties": {
              "ipv4": {
                "description": "A list of IPv4 addresses or networks.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["192.0.2.1", "192.0.2.0/24"]
              },
              "ipv6": {
                "description": "A list of IPv6 addresses or networks.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["2001:DB8::/32"]
              }
            }
          }
        }
      },
      "FirewallDevices": {
        "type": "object",
        "description": "Associates a Firewall with a Linode service. A Firewall can be assigned to multiple Linode services, and up to three active Firewalls can be assigned to a single Linode service. Additional disabled Firewalls can be assigned to a service, but they cannot be enabled if three other active Firewalls are already assigned to the same service.\n",
        "properties": {
          "id": {
            "x-linode-filterable": true,
            "type": "integer",
            "description": "The Device's unique ID\n",
            "example": 123,
            "x-linode-cli-display": 2
          },
          "created": {
            "x-linode-filterable": true,
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "When this Device was created.\n",
            "example": "2018-01-01T00:01:01",
            "x-linode-cli-display": 3
          },
          "updated": {
            "x-linode-filterable": true,
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "When this Device was last updated.\n",
            "example": "2018-01-02T00:01:01",
            "x-linode-cli-display": 4
          },
          "entity": {
            "type": "object",
            "readOnly": true,
            "description": "The Linode service that this Firewall has been applied to.\n",
            "properties": {
              "id": {
                "description": "The entity's ID",
                "type": "integer",
                "example": 123
              },
              "type": {
                "description": "The entity's type.",
                "type": "string",
                "enum": ["linode"],
                "example": "linode"
              },
              "label": {
                "description": "The entity's label.",
                "type": "string",
                "readOnly": true,
                "example": "my-linode"
              },
              "url": {
                "description": "The URL you can use to access this entity.\n",
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "example": "/v4/linode/instances/123"
              }
            }
          }
        }
      },
      "Grant": {
        "type": "object",
        "description": "Represents the level of access a restricted User has to a specific resource on the Account.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the entity this grant applies to.\n",
            "example": 123
          },
          "permissions": {
            "type": "string",
            "nullable": true,
            "enum": ["read_only", "read_write"],
            "description": "The level of access this User has to this entity.  If null, this User has no access.\n",
            "example": "read_only"
          },
          "label": {
            "type": "string",
            "description": "The current label of the entity this grant applies to, for display purposes.\n",
            "example": "example-entity",
            "readOnly": true
          }
        }
      },
      "GrantsResponse": {
        "type": "object",
        "description": "A structure representing all grants a restricted User has on the Account. Not available for unrestricted users, as they have access to everything without grants. If retrieved from the `/profile/grants` endpoint, entities to which a User has no access will be omitted.\n",
        "properties": {
          "global": {
            "type": "object",
            "description": "A structure containing the Account-level grants a User has.\n",
            "properties": {
              "add_linodes": {
                "type": "boolean",
                "description": "If true, this User may create Linodes.",
                "example": true
              },
              "add_longview": {
                "type": "boolean",
                "description": "If true, this User may create Longview clients and view the current plan.",
                "example": true
              },
              "longview_subscription": {
                "type": "boolean",
                "description": "If true, this User may manage the Account's Longview subscription.",
                "example": true
              },
              "account_access": {
                "type": "string",
                "nullable": true,
                "enum": ["read_only", "read_write"],
                "description": "The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users.\n",
                "example": "read_only"
              },
              "cancel_account": {
                "type": "boolean",
                "description": "If true, this User may cancel the entire Account.",
                "example": false
              },
              "add_domains": {
                "type": "boolean",
                "description": "If true, this User may add Domains.",
                "example": true
              },
              "add_stackscripts": {
                "type": "boolean",
                "description": "If true, this User may add StackScripts.",
                "example": true
              },
              "add_nodebalancers": {
                "type": "boolean",
                "description": "If true, this User may add NodeBalancers.",
                "example": true
              },
              "add_images": {
                "type": "boolean",
                "description": "If true, this User may add Images.",
                "example": true
              },
              "add_volumes": {
                "type": "boolean",
                "description": "If true, this User may add Volumes.",
                "example": true
              }
            }
          },
          "linode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Grant"
            },
            "description": "The grants this User has pertaining to Linodes on this Account. There will be one entry per Linode on the Account.\n"
          },
          "domain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Grant"
            },
            "description": "The grants this User has pertaining to Domains on this Account. There will be one entry per Domain on the Account.\n"
          },
          "nodebalancer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Grant"
            },
            "description": "The grants this User has pertaining to NodeBalancers on this Account. There will be one entry per NodeBalancer on the Account.\n"
          },
          "image": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Grant"
            },
            "description": "The grants this User has pertaining to Images on this Account. There will be one entry per Image on the Account.\n"
          },
          "longview": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Grant"
            },
            "description": "The grants this User has pertaining to Longview Clients on this Account. There will be one entry per Longview Client on the Account.\n"
          },
          "stackscript": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Grant"
            },
            "description": "The grants this User has pertaining to StackScripts on this Account.  There will be one entry per StackScript on the Account.\n"
          },
          "volume": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Grant"
            },
            "description": "The grants this User has pertaining to Volumes on this Account. There will be one entry per Volume on the Account.\n"
          }
        }
      },
      "ImagePrivate": {
        "type": "object",
        "description": "Private Image object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of this Image.",
            "example": "private/67848373",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "A short description of the Image. Labels cannot contain special characters.\n",
            "example": "My gold-master image",
            "x-linode-cli-display": 2
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Image was created.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this Image was last updated.",
            "example": "2019-01-02T00:01:01",
            "readOnly": true
          },
          "created_by": {
            "type": "string",
            "description": "The name of the User who created this Image.\n",
            "example": "somename",
            "readOnly": true
          },
          "deprecated": {
            "x-linode-filterable": true,
            "type": "boolean",
            "description": "Whether or not this Image is deprecated. Will only be True for deprecated public Images.\n",
            "example": false,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "A detailed description of this Image.",
            "example": "The detailed description of my Image.",
            "x-linode-cli-display": 4,
            "x-linode-cli-color": {
              "None": "black",
              "default_": "white"
            }
          },
          "is_public": {
            "x-linode-filterable": true,
            "description": "True if the Image is public.",
            "type": "boolean",
            "example": false,
            "readOnly": true,
            "x-linode-cli-display": 5
          },
          "size": {
            "x-linode-filterable": true,
            "type": "integer",
            "description": "The minimum size this Image needs to deploy. Size is in MB.\n",
            "example": 2500,
            "readOnly": true,
            "x-linode-cli-display": 6
          },
          "type": {
            "type": "string",
            "description": "How the Image was created. \"Manual\" Images can be created at any time. \"Automatic\" images are created automatically from a deleted Linode.\n",
            "enum": ["manual", "automatic"],
            "example": "manual",
            "readOnly": true
          },
          "expiry": {
            "type": "string",
            "format": "date-time",
            "description": "Only Images created automatically (from a deleted Linode; type=automatic) will expire.\n",
            "example": "2018-08-01T00:01:01",
            "readOnly": true
          },
          "eol": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the image's planned end of life. Some images, like custom private images, will not have an end of life date. In that case this field will be `None`.\n",
            "example": "2200-10-23T00:00:00",
            "readOnly": true
          },
          "vendor": {
            "x-linode-filterable": true,
            "type": "string",
            "nullable": true,
            "description": "The upstream distribution vendor. `None` for private Images.\n",
            "example": null,
            "readOnly": true,
            "x-linode-cli-display": 3,
            "x-linode-cli-color": {
              "None": "black",
              "default_": "white"
            }
          }
        }
      },
      "ImagePublic": {
        "type": "object",
        "description": "Public Image object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of this Image.",
            "example": "linode/ubuntu17.10",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "A short description of the Image.\n",
            "example": "Ubuntu 17.10",
            "x-linode-cli-display": 2
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Image was created.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this Image was last updated.",
            "example": "2019-01-02T00:01:01",
            "readOnly": true
          },
          "created_by": {
            "type": "string",
            "description": "The name of the User who created this Image, or \"linode\" for official Images.\n",
            "example": "linode",
            "readOnly": true
          },
          "deprecated": {
            "x-linode-filterable": true,
            "type": "boolean",
            "description": "Whether or not this Image is deprecated. Will only be true for deprecated public Images.\n",
            "example": false,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "A detailed description of this Image.",
            "example": null,
            "x-linode-cli-display": 4,
            "x-linode-cli-color": {
              "None": "black",
              "default_": "white"
            }
          },
          "is_public": {
            "x-linode-filterable": true,
            "description": "True if the Image is public.",
            "type": "boolean",
            "example": true,
            "readOnly": true,
            "x-linode-cli-display": 5
          },
          "size": {
            "x-linode-filterable": true,
            "type": "integer",
            "description": "The minimum size this Image needs to deploy. Size is in MB.\n",
            "example": 2500,
            "readOnly": true,
            "x-linode-cli-display": 6
          },
          "type": {
            "type": "string",
            "description": "How the Image was created. Manual Images can be created at any time. \"Automatic\" Images are created automatically from a deleted Linode.\n",
            "enum": ["manual", "automatic"],
            "example": "manual",
            "readOnly": true
          },
          "expiry": {
            "type": "string",
            "format": "date-time",
            "description": "Only Images created automatically (from a deleted Linode; type=automatic) will expire.\n",
            "example": null,
            "readOnly": true
          },
          "eol": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the image's planned end of life. Some images, like custom private images, will not have an end of life date. In that case this field will be `None`.\n",
            "example": "2200-10-23T00:00:00",
            "readOnly": true
          },
          "vendor": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "The upstream distribution vendor. `None` for private Images.\n",
            "example": "Ubuntu",
            "readOnly": true,
            "x-linode-cli-display": 3,
            "x-linode-cli-color": {
              "None": "black",
              "default_": "white"
            }
          }
        }
      },
      "Invoice": {
        "type": "object",
        "description": "Account Invoice object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "The Invoice's unique ID.",
            "example": 123,
            "x-linode-cli-display": 1
          },
          "date": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "description": "When this Invoice was generated.",
            "example": "2018-01-01T00:01:01",
            "x-linode-cli-display": 2
          },
          "label": {
            "type": "string",
            "readOnly": true,
            "description": "The Invoice's display label.",
            "example": "Invoice",
            "x-linode-cli-display": 3
          },
          "subtotal": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of the Invoice before taxes in US Dollars.",
            "example": 120.25,
            "x-linode-cli-display": 4
          },
          "tax": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of tax levied on the Invoice in US Dollars.",
            "example": 12.25,
            "x-linode-cli-display": 5
          },
          "total": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of the Invoice after taxes in US Dollars.",
            "example": 132.5,
            "x-linode-cli-display": 6
          }
        }
      },
      "InvoiceItem": {
        "type": "object",
        "description": "An InvoiceItem object.",
        "properties": {
          "amount": {
            "type": "number",
            "readOnly": true,
            "description": "The price, in US dollars, of the Invoice Item. Equal to the unit price multiplied by quantity.",
            "example": 20.2,
            "x-linode-cli-display": 4
          },
          "tax": {
            "type": "number",
            "readOnly": true,
            "description": "The amount of tax levied on this Item in US Dollars.",
            "example": 1.25,
            "x-linode-cli-display": 5
          },
          "total": {
            "type": "number",
            "readOnly": true,
            "description": "The price of this Item after taxes in US Dollars.",
            "example": 21.45,
            "x-linode-cli-display": 6
          },
          "from": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "description": "The date the Invoice Item started, based on month.",
            "example": "2018-01-01T00:01:01",
            "x-linode-cli-display": 2
          },
          "label": {
            "type": "string",
            "readOnly": true,
            "description": "The Invoice Item's display label.",
            "example": "Linode 123",
            "x-linode-cli-display": 1
          },
          "quantity": {
            "type": "integer",
            "readOnly": true,
            "description": "The quantity of this Item for the specified Invoice.",
            "example": 4
          },
          "to": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "description": "The date the Invoice Item ended, based on month.",
            "example": "2018-01-31T11:59:59",
            "x-linode-cli-display": 3
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "description": "The type of service, ether `hourly` or `misc`.",
            "enum": ["hourly", "misc"],
            "example": "hourly"
          },
          "unit_price": {
            "type": "string",
            "readOnly": true,
            "description": "The monthly service fee in US Dollars for this Item.",
            "example": 5.05
          }
        }
      },
      "IPAddress": {
        "type": "object",
        "description": "An IP address that exists in Linode's system, either IPv4 or IPv6.\n",
        "properties": {
          "address": {
            "type": "string",
            "format": "ip",
            "description": "The IP address.\n",
            "example": "97.107.143.141",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "gateway": {
            "type": "string",
            "nullable": true,
            "format": "ip",
            "description": "The default gateway for this address.\n",
            "example": "97.107.143.1",
            "readOnly": true
          },
          "subnet_mask": {
            "type": "string",
            "format": "ip",
            "description": "The mask that separates host bits from network bits for this address.\n",
            "example": "255.255.255.0",
            "readOnly": true
          },
          "prefix": {
            "type": "integer",
            "description": "The number of bits set in the subnet mask.\n",
            "example": 24,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "enum": ["ipv4", "ipv6", "ipv6/pool", "ipv6/range"],
            "description": "The type of address this is.\n",
            "example": "ipv4",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "public": {
            "type": "boolean",
            "description": "Whether this is a public or private IP address.\n",
            "example": true,
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "rdns": {
            "type": "string",
            "description": "The reverse DNS assigned to this address. For public IPv4 addresses, this will be set to a default value provided by Linode if not explicitly set.\n",
            "x-linode-cli-display": 4,
            "example": "test.example.org"
          },
          "linode_id": {
            "type": "integer",
            "description": "The ID of the Linode this address currently belongs to. For IPv4 addresses, this is by default the Linode that this address was assigned to on creation, and these addresses my be moved using the [/networking/ipv4/assign](/api/v4/networking-ipv-4-assign/#post) endpoint. For SLAAC and link-local addresses, this value may not be changed.\n",
            "example": 123,
            "readOnly": true,
            "x-linode-cli-display": 6
          },
          "region": {
            "type": "string",
            "description": "The Region this IP address resides in.\n",
            "example": "us-east",
            "readOnly": true,
            "x-linode-filterable": true,
            "x-linode-cli-display": 5
          }
        }
      },
      "IPAddressPrivate": {
        "type": "object",
        "description": "A private IPv4 address that exists in Linode's system.\n",
        "properties": {
          "address": {
            "type": "string",
            "format": "ip",
            "description": "The private IPv4 address.\n",
            "example": "192.168.133.234",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "gateway": {
            "type": "string",
            "format": "ip",
            "description": "The default gateway for this address.\n",
            "example": null,
            "readOnly": true
          },
          "subnet_mask": {
            "type": "string",
            "format": "ip",
            "description": "The mask that separates host bits from network bits for this address.\n",
            "example": "255.255.128.0",
            "readOnly": true
          },
          "prefix": {
            "type": "integer",
            "description": "The number of bits set in the subnet mask.\n",
            "example": 17,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "The type of address this is.\n",
            "example": "ipv4",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "public": {
            "type": "boolean",
            "description": "Whether this is a public or private IP address.\n",
            "example": false,
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "rdns": {
            "type": "string",
            "description": "The reverse DNS assigned to this address.\n",
            "example": null,
            "x-linode-cli-display": 4
          },
          "linode_id": {
            "type": "integer",
            "description": "The ID of the Linode this address currently belongs to.\n",
            "example": 123,
            "readOnly": true,
            "x-linode-cli-display": 6
          },
          "region": {
            "type": "string",
            "description": "The Region this address resides in.\n",
            "example": "us-east",
            "readOnly": true,
            "x-linode-filterable": true,
            "x-linode-cli-display": 5
          }
        }
      },
      "IPAddressV6LinkLocal": {
        "type": "object",
        "description": "A link-local IPv6 address that exists in Linode's system,.\n",
        "properties": {
          "address": {
            "type": "string",
            "format": "ip",
            "description": "The IPv6 link-local address.\n",
            "example": "fe80::f03c:91ff:fe24:3a2f",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "gateway": {
            "type": "string",
            "description": "The default gateway for this address.\n",
            "example": "fe80::1",
            "readOnly": true
          },
          "subnet_mask": {
            "type": "string",
            "format": "ip",
            "description": "The subnet mask.\n",
            "example": "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff",
            "readOnly": true
          },
          "prefix": {
            "type": "integer",
            "description": "The network prefix.\n",
            "example": 64,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "The type of address this is.\n",
            "example": "ipv6",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "public": {
            "type": "boolean",
            "description": "Whether this is a public or private IP address.\n",
            "example": false,
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "rdns": {
            "type": "string",
            "description": "The reverse DNS assigned to this address.\n",
            "example": null,
            "x-linode-cli-display": 4
          },
          "linode_id": {
            "type": "integer",
            "description": "The ID of the Linode this address currently belongs to.\n",
            "example": 123,
            "readOnly": true,
            "x-linode-cli-display": 6
          },
          "region": {
            "type": "string",
            "description": "The Region this address resides in.\n",
            "example": "us-east",
            "readOnly": true,
            "x-linode-filterable": true,
            "x-linode-cli-display": 5
          }
        }
      },
      "IPAddressV6Slaac": {
        "type": "object",
        "description": "A SLAAC IPv6 address that exists in Linode's system.\n",
        "properties": {
          "address": {
            "type": "string",
            "format": "ip",
            "description": "The address.\n",
            "example": "2600:3c03::f03c:91ff:fe24:3a2f",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "gateway": {
            "type": "string",
            "description": "The default gateway for this address.\n",
            "example": "fe80::1",
            "readOnly": true
          },
          "subnet_mask": {
            "type": "string",
            "format": "ip",
            "description": "The subnet mask.\n",
            "example": "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff",
            "readOnly": true
          },
          "prefix": {
            "type": "integer",
            "description": "The network prefix.\n",
            "example": 64,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "The type of address this is.\n",
            "example": "ipv6",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "public": {
            "type": "boolean",
            "description": "Whether this is a public or private IP address.\n",
            "example": true,
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "rdns": {
            "type": "string",
            "description": "The reverse DNS assigned to this address.\n",
            "example": null,
            "x-linode-cli-display": 4
          },
          "linode_id": {
            "type": "integer",
            "description": "The ID of the Linode this address currently belongs to.\n",
            "example": 123,
            "readOnly": true,
            "x-linode-cli-display": 6
          },
          "region": {
            "type": "string",
            "description": "The Region this address resides in.\n",
            "example": "us-east",
            "readOnly": true,
            "x-linode-filterable": true,
            "x-linode-cli-display": 5
          }
        }
      },
      "IPv6Pool": {
        "type": "object",
        "description": "An object representing an IPv6 pool.\n",
        "properties": {
          "range": {
            "type": "string",
            "description": "The IPv6 range of addresses in this pool.\n",
            "example": "2600:3c01::2:5000:0",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "prefix": {
            "type": "integer",
            "description": "The prefix length of the address, denoting how many addresses can be assigned from this pool calculated as 2 <sup>128-prefix</sup>.\n",
            "example": 124,
            "x-linode-cli-display": 2
          },
          "region": {
            "type": "string",
            "description": "The region for this pool of IPv6 addresses.\n",
            "example": "us-east",
            "readOnly": true,
            "x-linode-cli-display": 3,
            "x-linode-filterable": true
          },
          "route_target": {
            "type": "string",
            "description": "The last address in this block of IPv6 addresses.\n",
            "example": "2600:3c01::2:5000:f",
            "nullable": true
          }
        }
      },
      "IPv6Range": {
        "type": "object",
        "description": "An object representing an IPv6 range.\n",
        "properties": {
          "range": {
            "type": "string",
            "description": "The IPv6 range of addresses in this pool.\n",
            "example": "2600:3c01::",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "prefix": {
            "type": "integer",
            "description": "The prefix length of the address, denoting how many addresses can be assigned from this range calculated as 2 <sup>128-prefix</sup>.\n",
            "example": 64,
            "x-linode-cli-display": 2
          },
          "region": {
            "type": "string",
            "description": "The region for this range of IPv6 addresses.\n",
            "example": "us-east",
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "route_target": {
            "type": "string",
            "description": "The last address in this block of IPv6 addresses.\n",
            "example": "2600:3c01::ffff:ffff:ffff:ffff",
            "nullable": true
          }
        }
      },
      "Kernel": {
        "type": "object",
        "description": "Linux kernel object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of this Kernel.",
            "example": "linode/latest-64bit",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "The friendly name of this Kernel.",
            "example": "Latest 64 bit (4.15.7-x86_64-linode102)",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "version": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "Linux Kernel version.",
            "example": "4.15.7",
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "kvm": {
            "x-linode-filterable": true,
            "type": "boolean",
            "description": "If this Kernel is suitable for KVM Linodes.",
            "example": true,
            "readOnly": true
          },
          "xen": {
            "x-linode-filterable": true,
            "type": "boolean",
            "description": "If this Kernel is suitable for Xen Linodes.",
            "example": false,
            "readOnly": true
          },
          "architecture": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "The architecture of this Kernel.",
            "enum": ["x86_64", "i386"],
            "example": "x86_64",
            "readOnly": true,
            "x-linode-cli-display": 4
          },
          "pvops": {
            "x-linode-filterable": true,
            "type": "boolean",
            "description": "If this Kernel is suitable for paravirtualized operations.",
            "example": false,
            "readOnly": true
          },
          "deprecated": {
            "type": "boolean",
            "description": "If this Kernel is marked as deprecated, this field has a value of true; otherwise, this field is false.",
            "example": false,
            "readOnly": true
          }
        }
      },
      "Linode": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LinodeBase"
          }
        ],
        "properties": {
          "label": {
            "x-linode-filterable": true,
            "x-linode-cli-display": 2,
            "description": "The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.\nLinode labels have the following constraints:\n\n  * Must start with an alpha character.\n  * May only consist of alphanumeric characters, dashes (`-`), underscores (`_`) or periods (`.`).\n  * Cannot have two dashes (`--`), underscores (`__`) or periods (`..`) in a row.\n"
          },
          "region": {
            "x-linode-filterable": true,
            "readOnly": true,
            "description": "This is the location where the Linode was deployed. A Linode's region can only be changed by initiating a [cross data center migration](/api/v4/linode-instances-linode-id-migrate/#post).\n",
            "x-linode-cli-display": 4
          },
          "image": {
            "x-linode-filterable": true,
            "readOnly": true,
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/DiskRequest/properties/image"
              }
            ],
            "x-linode-cli-display": 6
          },
          "type": {
            "readOnly": true,
            "description": "This is the [Linode Type](/api/v4/linode-types) that this Linode was deployed with.\nTo change a Linode's Type, use [POST /linode/instances/{linodeId}/resize](/api/v4/linode-instances-linode-id-resize/#post).\n",
            "x-linode-cli-display": 5
          },
          "group": {
            "deprecated": true,
            "type": "string",
            "x-linode-filterable": true,
            "description": "A deprecated property denoting a group label for this Linode.\n",
            "example": "Linode-Group"
          },
          "tags": {
            "x-linode-filterable": true,
            "description": "An array of tags applied to this object.  Tags are for organizational purposes only.\n",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["example tag", "another example"]
          },
          "id": {
            "x-linode-filterable": true,
            "type": "integer",
            "description": "This Linode's ID which must be provided for all operations impacting this Linode.\n",
            "example": 123,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "status": {
            "type": "string",
            "description": "A brief description of this Linode's current state. This field may change without direct action from you. For example, when a Linode goes into maintenance mode its status will display \"stopped\".\n",
            "example": "running",
            "readOnly": true,
            "enum": [
              "running",
              "offline",
              "booting",
              "rebooting",
              "shutting_down",
              "provisioning",
              "deleting",
              "migrating",
              "rebuilding",
              "cloning",
              "restoring",
              "stopped"
            ],
            "x-linode-cli-display": 7,
            "x-linode-cli-color": {
              "running": "green",
              "offline": "red",
              "default_": "yellow"
            }
          },
          "hypervisor": {
            "type": "string",
            "description": "The virtualization software powering this Linode.\n",
            "example": "kvm",
            "readOnly": true,
            "enum": ["kvm"]
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Linode was created.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this Linode was last updated.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          },
          "ipv4": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["123.45.67.890"],
            "readOnly": true,
            "description": "This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address\nupon creation, and may get a single private IPv4 address if needed. You may need to\n[open a support ticket](/api/v4/support-tickets/#post)\nto get additional IPv4 addresses.\n\nIPv4 addresses may be reassigned between your Linodes, or shared with other Linodes.\nSee the [/networking](#tag/networking) endpoints for details.\n",
            "x-linode-cli-display": 10
          },
          "ipv6": {
            "type": "string",
            "description": "This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared. If the Linode has not been assigned an IPv6 address, the return value will be `null`.\n",
            "example": "c001:d00d::1234",
            "readOnly": true
          },
          "specs": {
            "type": "object",
            "description": "Information about the resources available to this Linode.",
            "readOnly": true,
            "properties": {
              "disk": {
                "type": "integer",
                "description": "The amount of storage space, in MB, this Linode has access to. A typical Linode will divide this space between a primary disk with an `image` deployed to it, and a swap disk, usually 512 MB. This is the default configuration created when deploying a Linode with an `image` through [POST /linode/instances](/api/v4/linode-instances/#post). While this configuration is suitable for 99% of use cases, if you need finer control over your Linode's disks, see the [/linode/instances/{linodeId}/disks](/api/v4/linode-instances-linode-id-disks) endpoints.\n",
                "example": 81920,
                "readOnly": true
              },
              "memory": {
                "type": "integer",
                "description": "The amount of RAM, in MB, this Linode has access to. Typically a Linode will choose to boot with all of its available RAM, but this can be configured in a Config profile, see the [/linode/instances/{linodeId}/configs](/api/v4/linode-instances-linode-id-configs) endpoints and the LinodeConfig object for more information.\n",
                "example": 4096,
                "readOnly": true
              },
              "vcpus": {
                "type": "integer",
                "description": "The number of vcpus this Linode has access to. Typically a Linode will choose to boot with all of its available vcpus, but this can be configured in a Config Profile, see the [/linode/instances/{linodeId}/configs](/api/v4/linode-instances-linode-id-configs) endpoints and the LinodeConfig object for more information.\n",
                "example": 2,
                "readOnly": true
              },
              "transfer": {
                "type": "integer",
                "description": "The amount of network transfer this Linode is allotted each month.",
                "example": 4000,
                "readOnly": true
              }
            }
          },
          "alerts": {
            "type": "object",
            "properties": {
              "cpu": {
                "type": "integer",
                "description": "The percentage of CPU usage required to trigger an alert.\nIf the average CPU usage over two hours exceeds this value, we'll send you an alert.\nYour Linode's total CPU capacity is represented as 100%, multiplied by its number of\ncores.\n\nFor example, a two core Linode's CPU capacity is represented as 200%. If you want\nto be alerted at 90% of a two core Linode's CPU capacity, set the alert value to `180`.\n\nThe default value is 90% multiplied by the number of cores.\n\nIf the value is set to `0` (zero), the alert is disabled.\n",
                "example": 180
              },
              "network_in": {
                "type": "integer",
                "description": "The amount of incoming traffic, in Mbit/s, required to trigger an alert. If the average incoming traffic over two hours exceeds this value, we'll send you an alert. If this is set to `0` (zero), the alert is disabled.\n",
                "example": 10
              },
              "network_out": {
                "type": "integer",
                "description": "The amount of outbound traffic, in Mbit/s, required to trigger an alert. If the average outbound traffic over two hours exceeds this value, we'll send you an alert. If this is set to `0` (zero), the alert is disabled.\n",
                "example": 10
              },
              "transfer_quota": {
                "type": "integer",
                "description": "The percentage of network transfer that may be used before an alert is triggered. When this value is exceeded, we'll alert you. If this is set to `0` (zero), the alert is disabled.\n",
                "example": 80
              },
              "io": {
                "type": "integer",
                "description": "The amount of disk IO operation per second required to trigger an alert. If the average disk IO over two hours exceeds this value, we'll send you an alert. If set to `0` (zero), this alert is disabled.\n",
                "example": 10000
              }
            }
          },
          "backups": {
            "type": "object",
            "description": "Information about this Linode's backups status. For information about available backups, see [/linode/instances/{linodeId}/backups](/api/v4/linode-instances-linode-id-backups).\n",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "If this Linode has the Backup service enabled. To enable backups, see [POST /linode/instances/{linodeId}/backups/enable](/api/v4/linode-instances-linode-id-backups-enable/#post).\n",
                "example": true,
                "readOnly": true
              },
              "schedule": {
                "type": "object",
                "properties": {
                  "day": {
                    "type": "string",
                    "nullable": true,
                    "description": "The day of the week that your Linode's weekly Backup is taken.\nIf not set manually, a day will be chosen for you. Backups\nare taken every day, but backups taken on this day are\npreferred when selecting backups to retain for a longer period.\n\n\nIf not set manually, then when backups are initially enabled, this\nmay come back as `Scheduling` until the `day` is automatically selected.\n",
                    "example": "Saturday",
                    "enum": [
                      "Scheduling",
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ]
                  },
                  "window": {
                    "type": "string",
                    "nullable": true,
                    "description": "The window in which your backups will be taken, in UTC. A\nbackups window is a two-hour span of time in which the backup\nmay occur.\n\n\nFor example, `W10` indicates that your backups should be\ntaken between 10:00 and 12:00. If you do not choose a backup\nwindow, one will be selected for you automatically.\n\n\nIf not set manually, when backups are initially enabled this\nmay come back as `Scheduling` until the `window` is automatically selected.\n",
                    "example": "W22",
                    "enum": [
                      "Scheduling",
                      "W0",
                      "W2",
                      "W4",
                      "W6",
                      "W8",
                      "W10",
                      "W12",
                      "W14",
                      "W16",
                      "W18",
                      "W20",
                      "W22"
                    ]
                  }
                }
              },
              "last_successful": {
                "type": "string",
                "format": "date-time",
                "description": "The last successful backup date. 'null' if there was no previous backup.",
                "readOnly": true,
                "example": "2018-01-01T00:01:01"
              }
            }
          },
          "watchdog_enabled": {
            "type": "boolean",
            "description": "The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible.\nTo prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.\n",
            "example": true
          }
        }
      },
      "LinodeBase": {
        "type": "object",
        "description": "Common properties for Linode Request and Response objects.",
        "properties": {
          "label": {
            "type": "string",
            "description": "The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.\nLinode labels have the following constraints:\n\n  * Must begin and end with an alphanumeric character.\n  * May only consist of alphanumeric characters, dashes (`-`), underscores (`_`) or periods (`.`).\n  * Cannot have two dashes (`--`), underscores (`__`) or periods (`..`) in a row.\n",
            "example": "linode123",
            "minLength": 3,
            "maxLength": 32,
            "pattern": "^[a-zA-Z]((?!--|__|..)[a-zA-Z0-9-_.])+$"
          },
          "group": {
            "deprecated": true,
            "type": "string",
            "x-linode-filterable": true,
            "description": "A deprecated property denoting a group label for this Linode.\n",
            "example": "Linode-Group"
          },
          "type": {
            "$ref": "#/components/schemas/LinodeType/properties/id"
          },
          "region": {
            "$ref": "#/components/schemas/Region/properties/id"
          }
        }
      },
      "LinodeConfig": {
        "type": "object",
        "required": ["label", "devices"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of this Config.",
            "example": 23456,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "kernel": {
            "type": "string",
            "description": "A Kernel ID to boot a Linode with. Defaults to \"linode/latest-64bit\".",
            "example": "linode/latest-64bit",
            "x-linode-cli-display": 3
          },
          "comments": {
            "type": "string",
            "nullable": true,
            "description": "Optional field for arbitrary User comments on this Config.",
            "example": "This is my main Config"
          },
          "memory_limit": {
            "type": "integer",
            "description": "Defaults to the total RAM of the Linode.\n",
            "example": 2048
          },
          "run_level": {
            "type": "string",
            "description": "Defines the state of your Linode after booting. Defaults to `default`.\n",
            "enum": ["default", "single", "binbash"],
            "example": "default"
          },
          "virt_mode": {
            "type": "string",
            "description": "Controls the virtualization mode. Defaults to `paravirt`.\n* `paravirt` is suitable for most cases. Linodes running in paravirt mode\n  share some qualities with the host, ultimately making it run faster since\n  there is less transition between it and the host.\n* `full_virt` affords more customization, but is slower because 100% of the VM\n  is virtualized.\n",
            "enum": ["paravirt", "fullvirt"],
            "example": "paravirt"
          },
          "helpers": {
            "type": "object",
            "description": "Helpers enabled when booting to this Linode Config.",
            "properties": {
              "updatedb_disabled": {
                "type": "boolean",
                "description": "Disables updatedb cron job to avoid disk thrashing.",
                "example": true
              },
              "distro": {
                "type": "boolean",
                "description": "Helps maintain correct inittab/upstart console device.",
                "example": true
              },
              "modules_dep": {
                "type": "boolean",
                "description": "Creates a modules dependency file for the Kernel you run.",
                "example": true
              },
              "network": {
                "type": "boolean",
                "description": "Automatically configures static networking.",
                "example": true
              },
              "devtmpfs_automount": {
                "type": "boolean",
                "description": "Populates the /dev directory early during boot without udev.  Defaults to false.\n",
                "example": false
              }
            }
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "The Config's label is for display purposes only.\n",
            "example": "My Config",
            "minLength": 1,
            "maxLength": 48,
            "x-linode-cli-display": 2
          },
          "devices": {
            "$ref": "#/components/schemas/Devices"
          },
          "root_device": {
            "type": "string",
            "pattern": "a-z, A-Z, 0-9, /, _, -",
            "description": "The root device to boot.\n* If no value or an invalid value is provided, root device will default to `/dev/sda`.\n* If the device specified at the root device location is not mounted, the Linode will not boot until a device is mounted.\n",
            "example": "/dev/sda"
          }
        }
      },
      "LinodeRequest": {
        "type": "object",
        "description": "Common properties for creating and rebuilding Linodes.",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/DiskRequest/properties/image"
          },
          "root_pass": {
            "$ref": "#/components/schemas/DiskRequest/properties/root_pass"
          },
          "authorized_keys": {
            "$ref": "#/components/schemas/DiskRequest/properties/authorized_keys"
          },
          "authorized_users": {
            "$ref": "#/components/schemas/DiskRequest/properties/authorized_users"
          },
          "stackscript_id": {
            "$ref": "#/components/schemas/DiskRequest/properties/stackscript_id"
          },
          "stackscript_data": {
            "$ref": "#/components/schemas/DiskRequest/properties/stackscript_data"
          },
          "booted": {
            "type": "boolean",
            "writeOnly": true,
            "description": "This field defaults to `true` if the Linode is created with an Image or from a Backup.\nIf it is deployed from an Image or a Backup and you wish it to remain `offline` after deployment, set this to `false`.\n"
          }
        }
      },
      "LinodeStats": {
        "type": "object",
        "description": "CPU, IO, IPv4, and IPv6 statistics. Graph data, if available, is in \"[timestamp, reading]\" array format. Timestamp is a UNIX timestamp in EST.\n",
        "readOnly": true,
        "properties": {
          "cpu": {
            "type": "array",
            "description": "Percentage of CPU used.\n",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "example": [1521483600000, 0.42]
              }
            }
          },
          "io": {
            "type": "object",
            "description": "Input/Output statistics.",
            "properties": {
              "io": {
                "type": "array",
                "description": "Block/s written.",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": [1521484800000, 0.19]
                  }
                }
              },
              "swap": {
                "type": "array",
                "description": "Block/s written.",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": [1521484800000, 0]
                  }
                }
              }
            }
          },
          "netv4": {
            "type": "object",
            "description": "IPv4 statistics.",
            "properties": {
              "in": {
                "type": "array",
                "description": "Input stats for IPv4, measured in bits/s (bits/second).",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": [1521484800000, 2004.36]
                  }
                }
              },
              "out": {
                "type": "array",
                "description": "Output stats for IPv4, measured in bits/s (bits/second).",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": [1521484800000, 3928.91]
                  }
                }
              },
              "private_in": {
                "type": "array",
                "description": "Private IPv4 input statistics, measured in bits/s (bits/second).",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": [1521484800000, 0]
                  }
                }
              },
              "private_out": {
                "type": "array",
                "description": "Private IPv4 output statistics, measured in bits/s (bits/second).",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": [1521484800000, 5.6]
                  }
                }
              }
            }
          },
          "netv6": {
            "type": "object",
            "description": "IPv6 statistics.",
            "properties": {
              "in": {
                "type": "array",
                "description": "Input stats for IPv6, measured in bits/s (bits/second).",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": [1521484800000, 0]
                  }
                }
              },
              "out": {
                "type": "array",
                "description": "Output stats for IPv6, measured in bits/s (bits/second).",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": [1521484800000, 0]
                  }
                }
              },
              "private_in": {
                "type": "array",
                "description": "Private IPv6 input statistics, measured in bits/s (bits/second).",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": [1521484800000, 195.18]
                  }
                }
              },
              "private_out": {
                "type": "array",
                "description": "Private IPv6 output statistics, measured in bits/s (bits/second).",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": [1521484800000, 5.6]
                  }
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "The title for this data set.",
            "example": "linode.com - my-linode (linode123456) - day (5 min avg)"
          }
        }
      },
      "LinodeType": {
        "type": "object",
        "description": "Returns collection of Linode types, including pricing and specifications for each type. These are used when [creating](/api/v4/linode-instances/#post) or [resizing](/api/v4/linode-instances-linode-id-resize/#post) Linodes.\n",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The ID representing the Linode Type.",
            "example": "g6-standard-2",
            "x-linode-cli-display": 1
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "readOnly": true,
            "description": "The Linode Type's label is for display purposes only.\n",
            "example": "Linode 4GB",
            "x-linode-cli-display": 2
          },
          "disk": {
            "x-linode-filterable": true,
            "type": "integer",
            "readOnly": true,
            "description": "The Disk size, in MB, of the Linode Type.\n",
            "example": 81920,
            "x-linode-cli-display": 4
          },
          "class": {
            "x-linode-filterable": true,
            "type": "string",
            "readOnly": true,
            "description": "The class of the Linode Type. We currently offer five classes of Linodes:\n\n  * nanode - Nanode instances are good for low-duty workloads,\n    where performance isn't critical. **Note:** As of June 16th, 2020, Nanodes became\n    1 GB Linodes in the Cloud Manager, however, the API, the CLI, and billing will\n    continue to refer to these instances as Nanodes.\n  * standard - Standard Shared instances are good for medium-duty workloads and\n    are a good mix of performance, resources, and price. **Note:** As of June 16th, 2020,\n    Standard Linodes in the Cloud Manager became Shared Linodes, however, the API, the CLI, and\n    billing will continue to refer to these instances as Standard Linodes.\n  * dedicated - Dedicated CPU instances are good for full-duty workloads\n    where consistent performance is important.\n  * gpu - Linodes with dedicated NVIDIA Quadro &reg; RTX 6000 GPUs accelerate highly\n    specialized applications such as machine learning, AI, and video transcoding.\n  * highmem - High Memory instances favor RAM over other resources, and can be\n    good for memory hungry use cases like caching and in-memory databases.\n    All High Memory plans contain dedicated CPU cores.\n",
            "enum": ["nanode", "standard", "dedicated", "gpu", "highmem"],
            "example": "standard",
            "x-linode-cli-display": 3
          },
          "price": {
            "type": "object",
            "readOnly": true,
            "description": "Cost in US dollars, broken down into hourly and monthly charges.\n",
            "properties": {
              "hourly": {
                "type": "integer",
                "description": "Cost (in US dollars) per hour.",
                "example": 0.03,
                "x-linode-cli-display": 9
              },
              "monthly": {
                "type": "integer",
                "description": "Cost (in US dollars) per month.",
                "example": 20,
                "x-linode-cli-display": 10
              }
            }
          },
          "addons": {
            "type": "object",
            "readOnly": true,
            "description": "A list of optional add-on services for Linodes and their associated costs.\n",
            "properties": {
              "backups": {
                "type": "object",
                "readOnly": true,
                "description": "Information about the optional Backup service offered for Linodes.\n",
                "properties": {
                  "price": {
                    "type": "object",
                    "description": "Cost of enabling Backups for this Linode Type.",
                    "properties": {
                      "hourly": {
                        "type": "integer",
                        "description": "The cost (in US dollars) per hour to add Backups service.\n",
                        "example": 0.008
                      },
                      "monthly": {
                        "type": "integer",
                        "description": "The cost (in US dollars) per month to add Backups service.\n",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          },
          "network_out": {
            "x-linode-filterable": true,
            "type": "integer",
            "readOnly": true,
            "description": "The Mbits outbound bandwidth allocation.\n",
            "example": 1000,
            "x-linode-cli-display": 7
          },
          "memory": {
            "x-linode-filterable": true,
            "type": "integer",
            "readOnly": true,
            "description": "Amount of RAM included in this Linode Type.\n",
            "example": 4096,
            "x-linode-cli-display": 5
          },
          "successor": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "The Linode Type that a [mutate](/api/v4/linode-instances-linode-id-mutate/#post) will upgrade to for a Linode of this type.  If \"null\", a Linode of this type may not mutate.\n",
            "example": null
          },
          "transfer": {
            "x-linode-filterable": true,
            "type": "integer",
            "readOnly": true,
            "description": "The monthly outbound transfer amount, in MB.\n",
            "example": 4000,
            "x-linode-cli-display": 8
          },
          "vcpus": {
            "x-linode-filterable": true,
            "type": "integer",
            "readOnly": true,
            "description": "The number of VCPU cores this Linode Type offers.\n",
            "example": 2,
            "x-linode-cli-display": 6
          },
          "gpus": {
            "x-linode-filterable": true,
            "type": "integer",
            "readOnly": true,
            "description": "The number of GPUs this Linode Type offers.\n",
            "example": 0,
            "x-linode-cli-display": 11
          }
        }
      },
      "LKECluster": {
        "type": "object",
        "description": "A Kubernetes cluster.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This Kubernetes cluster's unique ID.",
            "readOnly": true,
            "x-linode-cli-display": 1,
            "example": 1234
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Kubernetes cluster was created.",
            "example": "2019-09-12T21:25:30Z",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this Kubernetes cluster was updated.",
            "example": "2019-09-13T21:24:16Z",
            "readOnly": true
          },
          "label": {
            "type": "string",
            "description": "This Kubernetes cluster's unique label for display purposes only.\nLabels have the following constraints:\n\n  * UTF-8 characters will be returned by the API using escape\n    sequences of their Unicode code points. For example, the\n    Japanese character *か* is 3 bytes in UTF-8 (`0xE382AB`). Its\n    Unicode code point is 2 bytes (`0x30AB`). APIv4 supports this\n    character and the API will return it as the escape sequence\n    using six 1 byte characters which represent 2 bytes of Unicode\n    code point (`\"\\u30ab\"`).\n  * 4 byte UTF-8 characters are not supported.\n  * If the label is entirely composed of UTF-8 characters, the API\n    response will return the code points using up to 193 1 byte\n    characters.\n",
            "minLength": 1,
            "maxLength": 32,
            "x-linode-cli-display": 2,
            "example": "lkecluster12345"
          },
          "region": {
            "type": "string",
            "description": "This Kubernetes cluster's location.",
            "x-linode-cli-display": 3,
            "example": "us-central"
          },
          "k8s_version": {
            "type": "string",
            "description": "The desired Kubernetes version for this Kubernetes cluster in the format of &lt;major&gt;.&lt;minor&gt;, and the latest supported patch version will be deployed.\n",
            "example": "1.16"
          },
          "tags": {
            "x-linode-filterable": true,
            "type": "array",
            "description": "An array of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.\n",
            "items": {
              "type": "string"
            },
            "example": ["ecomm", "blogs"]
          }
        }
      },
      "LKENodePoolRequestBody": {
        "type": "object",
        "description": "Specifies a collection of Linodes which will be members of a Kubernetes cluster.\n",
        "properties": {
          "type": {
            "type": "string",
            "description": "A Linode Type for all of the nodes in the Node Pool.",
            "example": "g6-standard-4"
          },
          "count": {
            "type": "integer",
            "description": "The number of nodes in the Node Pool.",
            "minimum": 1,
            "maximum": 100,
            "example": 6
          },
          "disks": {
            "type": "array",
            "x-linode-cli-format": "json",
            "description": "**Note**: This field should be omitted except for special use cases. The disks specified here are partitions in *addition* to the primary partition and reduce the size of the primary partition, which can lead to stability problems for the Node.\n\nThis Node Pool's custom disk layout. Each item in this array will create a new disk partition for each node in this Node Pool.\n\n  * The custom disk layout is applied to each node in this Node Pool.\n  * The maximum number of custom disk partitions that can be configured is 7.\n  * Once the requested disk paritions are allocated, the remaining disk space is allocated to the node's boot disk.\n  * A Node Pool's custom disk layout is immutable over the lifetime of the Node Pool.\n",
            "items": {
              "type": "object",
              "description": "The values to assign to each partition in this Node Pool's custom disk layout.\n",
              "properties": {
                "size": {
                  "description": "The size of this custom disk partition in MB.\n\n  * The size of this disk partition must not exceed the capacity of the node's plan type.\n",
                  "type": "integer",
                  "example": 1024
                },
                "type": {
                  "description": "This custom disk partition's filesystem type.\n",
                  "type": "string",
                  "enum": ["raw", "ext4"],
                  "example": "ext-4"
                }
              }
            }
          }
        }
      },
      "LKENodePool": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LKENodePoolRequestBody"
          },
          {
            "type": "object"
          }
        ],
        "description": "The set of Node Pools which are members of the Kubernetes cluster. Node Pools consist of a Linode type, the number of Linodes to deploy of that type, and additional status information.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This Node Pool's unique ID.\n",
            "x-linode-filterable": true,
            "example": 456
          },
          "nodes": {
            "type": "array",
            "description": "Status information for the Nodes which are members of this Node Pool. If a Linode has not been provisioned for a given Node slot, the instance_id will be returned as null.\n",
            "items": {
              "$ref": "#/components/schemas/LKENodeStatus"
            }
          }
        }
      },
      "LKENodeStatus": {
        "type": "object",
        "description": "Status information for a Node which is a member of a Kubernetes cluster.\n",
        "readOnly": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "The Node's ID.\n",
            "example": "123456"
          },
          "instance_id": {
            "type": "string",
            "description": "The Linode's ID. When no Linode is currently provisioned for this Node, this will be null.\n",
            "example": 123458
          },
          "status": {
            "type": "string",
            "description": "The Node's status as it pertains to being a Kubernetes node.\n",
            "enum": ["ready", "not_ready"],
            "example": "ready"
          }
        }
      },
      "LKEVersion": {
        "type": "object",
        "description": "LKE versions\n",
        "readOnly": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "A Kubernetes version number available for deployment to a Kubernetes cluster in the format of &lt;major&gt;.&lt;minor&gt;, and the latest supported patch version.\n",
            "example": "1.16"
          }
        }
      },
      "LongviewClient": {
        "type": "object",
        "description": "A LongviewClient is a single monitor set up to track statistics about one of your servers.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This Client's unique ID.\n",
            "example": 789,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 32,
            "pattern": "[a-zA-Z0-9-_]{3,32}",
            "description": "This Client's unique label. This is for display purposes only.\n",
            "example": "client789",
            "x-linode-cli-display": 2
          },
          "api_key": {
            "type": "string",
            "description": "The API key for this Client, used when configuring the Longview Client application on your Linode.\n",
            "example": "BD1B4B54-D752-A76D-5A9BD8A17F39DB61",
            "readOnly": true
          },
          "install_code": {
            "type": "string",
            "description": "The install code for this Client, used when configuring the Longview Client application on your Linode.\n",
            "example": "BD1B5605-BF5E-D385-BA07AD518BE7F321",
            "readOnly": true,
            "x-linode-cli-display": 4
          },
          "apps": {
            "type": "object",
            "description": "The apps this Client is monitoring on your Linode. This is configured when you install the Longview Client application, and is present here for information purposes only.\n",
            "readOnly": true,
            "properties": {
              "apache": {
                "type": "boolean",
                "description": "If True, the Apache Longview Client module is monitoring Apache on your server.\n",
                "example": true,
                "readOnly": true
              },
              "nginx": {
                "type": "boolean",
                "description": "If True, the Nginx Longview Client module is monitoring Nginx on your server.\n",
                "example": false,
                "readOnly": true
              },
              "mysql": {
                "type": "boolean",
                "description": "If True, the MySQL Longview Client modules is monitoring MySQL on your server.\n",
                "example": true,
                "readOnly": true
              }
            }
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Longview Client was created.\n",
            "example": "2018-01-01T00:01:01.000Z",
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this Longview Client was last updated.\n",
            "example": "2018-01-01T00:01:01.000Z",
            "readOnly": true
          }
        }
      },
      "Login": {
        "type": "object",
        "description": "An object representing a previous successful login for a User.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique ID of this login object.\n",
            "example": 1234,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "When the login was initiated.\n",
            "example": "2018-01-01T00:01:01",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "ip": {
            "type": "string",
            "format": "ip",
            "description": "The remote IP address that requested the login.\n",
            "example": "192.0.2.0",
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "username": {
            "type": "string",
            "description": "The username of the User that was logged into.\n",
            "example": "example_user",
            "readOnly": true,
            "x-linode-cli-display": 4
          },
          "restricted": {
            "type": "boolean",
            "description": "True if the User that was logged into was a restricted User, false otherwise.\n",
            "example": true,
            "readOnly": true,
            "x-linode-cli-display": 5
          }
        }
      },
      "LongviewSubscription": {
        "type": "object",
        "description": "A Longview Subscription represents a tier of Longview service you can subscribe to.\n",
        "properties": {
          "id": {
            "type": "string",
            "enum": [
              "longview-3",
              "longview-10",
              "longview-40",
              "longview-100"
            ],
            "description": "The unique ID of this Subscription tier.\n",
            "example": "longview-10",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "price": {
            "type": "object",
            "description": "Pricing information about this Subscription tier.\n",
            "readOnly": true,
            "x-linode-cli-display": 4,
            "properties": {
              "hourly": {
                "type": "number",
                "description": "The hourly price, in US dollars, for this Subscription tier.\n",
                "example": 0.06,
                "readOnly": true
              },
              "monthly": {
                "type": "number",
                "description": "The maximum monthly price in US Dollars for this Subscription tier. You will never be charged more than this amount per month for this subscription.\n",
                "example": 40,
                "readOnly": true
              }
            }
          },
          "label": {
            "type": "string",
            "description": "A display name for this Subscription tier.\n",
            "example": "Longview Pro 10 pack",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "clients_included": {
            "type": "integer",
            "description": "The number of Longview Clients that may be created with this Subscription tier.\n",
            "example": 10,
            "readOnly": true,
            "x-linode-cli-display": 3
          }
        }
      },
      "LongviewPlan": {
        "type": "object",
        "description": "Longview Plan object.\n",
        "properties": {
          "longview_subscription": {
            "type": "string",
            "enum": [
              "longview-3",
              "longview-10",
              "longview-40",
              "longview-100"
            ],
            "nullable": true,
            "description": "The subscription ID for a particular Longview plan. A value of `null` corresponds to Longview Free.\n\nYou can send a request to the [List Longview Subscriptions](/api/v4/longview-subscriptions/) endpoint to receive the details of each plan.\n",
            "example": "longview-10",
            "x-linode-cli-display": 1
          }
        }
      },
      "Maintenance": {
        "type": "object",
        "description": "Information about maintenance affecting an entity.\n",
        "properties": {
          "type": {
            "x-linode-filterable": true,
            "type": "string",
            "enum": ["reboot", "cold_migration", "live_migration"],
            "description": "The type of maintenance.\n",
            "example": "reboot"
          },
          "status": {
            "x-linode-filterable": true,
            "type": "string",
            "enum": ["pending", "ready", "started", "completed"],
            "description": "The maintenance status.\n",
            "example": "started"
          },
          "reason": {
            "type": "string",
            "description": "The reason maintenance is being performed.\n",
            "example": "This maintenance will allow us to update the BIOS on the host’s motherboard."
          },
          "when": {
            "type": "string",
            "description": "When the maintenance will begin.\n",
            "format": "date-time",
            "example": "2020-07-09T00:01:01.000Z"
          },
          "entity": {
            "type": "object",
            "description": "The entity being affected by maintenance.\n",
            "properties": {
              "label": {
                "type": "string",
                "description": "The label of the entity being affected by maintenance.\n",
                "example": "demo-linode"
              },
              "id": {
                "type": "number",
                "description": "The id of the entity being affected by maintenance.\n",
                "example": 1234
              },
              "type": {
                "type": "string",
                "description": "The type of entity.\n",
                "example": "Linode"
              },
              "url": {
                "type": "string",
                "description": "The API endpoint prefix to use in combination with the entity id to find specific information about the entity.\n",
                "example": "https://api.linode.com/v4/linode/instances/{linodeId}"
              }
            }
          }
        }
      },
      "ManagedContact": {
        "type": "object",
        "description": "Information about someone Linode's special forces may contact in case an issue is detected with a manager service.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This Contact's unique ID.\n",
            "example": 567,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "[a-zA-Z0-9-_ ]{2,64}",
            "description": "The name of this Contact.\n",
            "example": "John Doe",
            "x-linode-cli-display": 2
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The address to email this Contact to alert them of issues.\n",
            "example": "john.doe@example.org",
            "x-linode-cli-display": 3
          },
          "phone": {
            "type": "object",
            "description": "Information about how to reach this Contact by phone.\n",
            "x-linode-cli-display": 4,
            "properties": {
              "primary": {
                "type": "string",
                "nullable": true,
                "format": "phone",
                "description": "This Contact's primary phone number.\n",
                "example": "123-456-7890"
              },
              "secondary": {
                "type": "string",
                "nullable": true,
                "format": "phone",
                "description": "This Contact's secondary phone number.\n",
                "example": null
              }
            }
          },
          "group": {
            "x-linode-filterable": true,
            "nullable": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "description": "A grouping for this Contact. This is for display purposes only.\n",
            "example": "on-call",
            "x-linode-cli-display": 5
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this Contact was last updated.\n",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          }
        }
      },
      "ManagedCredential": {
        "type": "object",
        "description": "A securely-stored Credential that allows Linode's special forces to access a Managed server to respond to Issues.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This Credential's unique ID.\n",
            "example": 9991,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "label": {
            "type": "string",
            "minLength": 2,
            "maxLength": 75,
            "pattern": "[a-zA-Z0-9-_ \\.]{2,75}",
            "description": "The unique label for this Credential. This is for display purposes only.\n",
            "example": "prod-password-1",
            "x-linode-cli-display": 2
          },
          "last_decrypted": {
            "type": "string",
            "format": "date-time",
            "description": "The date this Credential was last decrypted by a member of Linode special forces.\n",
            "readOnly": true,
            "example": "2018-01-01T00:01:01",
            "x-linode-cli-display": 3
          }
        }
      },
      "ManagedIssue": {
        "type": "object",
        "description": "An Issue that was detected with a service Linode is managing.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This Issue's unique ID.\n",
            "example": 823,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Issue was created. Issues are created in response to issues detected with Managed Services, so this is also when the Issue was detected.\n",
            "example": "2018-01-01T00:01:01",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "services": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 654
            },
            "description": "An array of Managed Service IDs that were affected by this Issue.\n",
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "entity": {
            "type": "object",
            "description": "The ticket this Managed Issue opened.\n",
            "readOnly": true,
            "x-linode-cli-display": 4,
            "properties": {
              "id": {
                "type": "integer",
                "description": "This ticket's ID\n",
                "example": 98765,
                "readOnly": true
              },
              "type": {
                "type": "string",
                "enum": ["ticket"],
                "description": "The type of entity this is. In this case, it is always a Ticket.\n",
                "example": "ticket",
                "readOnly": true
              },
              "label": {
                "type": "string",
                "description": "The summary for this Ticket.\n",
                "example": "Managed Issue opened!",
                "readOnly": true
              },
              "url": {
                "type": "string",
                "format": "uri",
                "description": "The relative URL where you can access this Ticket.\n",
                "example": "/support/tickets/98765",
                "readOnly": true
              }
            }
          }
        }
      },
      "ManagedLinodeSettings": {
        "type": "object",
        "description": "Settings for a specific Linode related to Managed Services. There is one ManagedLinodeSettings object for each Linode on your Account.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the Linode these Settings are for.\n",
            "example": 123,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "label": {
            "type": "string",
            "description": "The label of the Linode these Settings are for.\n",
            "example": "linode123",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "group": {
            "deprecated": true,
            "type": "string",
            "description": "The group of the Linode these Settings are for. This is for display purposes only.\n",
            "example": "linodes",
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "ssh": {
            "type": "object",
            "description": "The SSH settings for this Linode.\n",
            "x-linode-cli-display": 4,
            "properties": {
              "access": {
                "type": "boolean",
                "description": "If true, Linode special forces may access this Linode over ssh to respond to Issues.\n",
                "example": true
              },
              "user": {
                "type": "string",
                "minLength": 0,
                "maxLength": 32,
                "description": "The user Linode's special forces should use when accessing this Linode to respond to an issue.\n",
                "example": "linode"
              },
              "ip": {
                "type": "string",
                "format": "ip",
                "description": "The IP Linode special forces should use to access this Linode when responding to an Issue.\n",
                "example": "12.34.56.78"
              },
              "port": {
                "type": "integer",
                "minimum": 1,
                "maximum": 65535,
                "description": "The port Linode special forces should use to access this Linode over ssh to respond to an Issue.\n",
                "example": 22
              }
            }
          }
        }
      },
      "ManagedService": {
        "type": "object",
        "description": "A service that Linode is monitoring as part of your Managed services. If issues are detected with this service, a ManagedIssue will be opened and, optionally, Linode special forces will attempt to resolve the Issue.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This Service's unique ID.\n",
            "example": 9944,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "status": {
            "type": "string",
            "enum": ["disabled", "pending", "ok", "problem"],
            "description": "The current status of this Service.\n",
            "example": "ok",
            "readOnly": true,
            "x-linode-cli-display": 2,
            "x-linode-cli-color": {
              "ok": "green",
              "disabled": "red",
              "default_": "yellow"
            }
          },
          "service_type": {
            "type": "string",
            "enum": ["url", "tcp"],
            "description": "How this Service is monitored.\n",
            "example": "url",
            "x-linode-cli-display": 3
          },
          "label": {
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "[a-zA-Z0-9-_ \\.]{3,64}",
            "description": "The label for this Service. This is for display purposes only.\n",
            "example": "prod-1",
            "x-linode-cli-display": 4
          },
          "address": {
            "type": "string",
            "format": "uri",
            "minLength": 3,
            "description": "The URL at which this Service is monitored.\n",
            "example": "https://example.org",
            "x-linode-cli-display": 5
          },
          "timeout": {
            "type": "integer",
            "minimum": 1,
            "maximum": 255,
            "description": "How long to wait, in seconds, for a response before considering the Service to be down.\n",
            "example": 30
          },
          "body": {
            "type": "string",
            "nullable": true,
            "minLength": 0,
            "maxLength": 100,
            "description": "What to expect to find in the response body for the Service to be considered up.\n",
            "example": "it worked"
          },
          "consultation_group": {
            "type": "string",
            "minLength": 0,
            "maxLength": 50,
            "description": "The group of ManagedContacts who should be notified or consulted with when an Issue is detected.\n",
            "example": "on-call",
            "x-linode-cli-display": 6
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "description": "Any information relevant to the Service that Linode special forces should know when attempting to resolve Issues.\n",
            "example": "The service name is my-cool-application"
          },
          "region": {
            "type": "string",
            "description": "The Region in which this Service is located. This is required if address is a private IP, and may not be set otherwise.\n",
            "example": null
          },
          "credentials": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 9991
            },
            "description": "An array of ManagedCredential IDs that should be used when attempting to resolve issues with this Service.\n"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Managed Service was created.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this Managed Service was last updated.",
            "example": "2018-03-01T00:01:01",
            "readOnly": true
          }
        }
      },
      "NodeBalancer": {
        "type": "object",
        "description": "Linode's load balancing solution.  Can handle multiple ports, SSL termination, and any number of backends.  NodeBalancer ports are configured with NodeBalancer Configs, and each config is given one or more NodeBalancer Node that accepts traffic.  The traffic should be routed to the  NodeBalancer's ip address, the NodeBalancer will handle routing individual requests to backends.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This NodeBalancer's unique ID.\n",
            "example": 12345,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 32,
            "pattern": "[a-zA-Z0-9-_]{3,32}",
            "description": "This NodeBalancer's label. These must be unique on your Account.\n",
            "example": "balancer12345",
            "x-linode-cli-display": 2
          },
          "region": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "The Region where this NodeBalancer is located. NodeBalancers only support backends in the same Region.\n",
            "example": "us-east",
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "hostname": {
            "type": "string",
            "description": "This NodeBalancer's hostname, ending with _.nodebalancer.linode.com_\n",
            "example": "nb-207-192-68-16.newark.nodebalancer.linode.com",
            "readOnly": true,
            "x-linode-cli-display": 4
          },
          "ipv4": {
            "type": "string",
            "format": "ip",
            "description": "This NodeBalancer's public IPv4 address.\n",
            "example": "12.34.56.78",
            "readOnly": true,
            "x-linode-cli-display": 5
          },
          "ipv6": {
            "type": "string",
            "nullable": true,
            "format": "ip",
            "description": "This NodeBalancer's public IPv6 address.\n",
            "example": null,
            "readOnly": true,
            "x-linode-cli-display": 6
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this NodeBalancer was created.\n",
            "example": "2018-01-01T00:01:01.000Z",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this NodeBalancer was last updated.\n",
            "example": "2018-03-01T00:01:01.000Z",
            "readOnly": true
          },
          "client_conn_throttle": {
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "description": "Throttle connections per second.  Set to 0 (zero) to disable throttling.\n",
            "example": 0,
            "x-linode-cli-display": 6
          },
          "transfer": {
            "type": "object",
            "description": "Information about the amount of transfer this NodeBalancer has had so far this month.\n",
            "properties": {
              "total": {
                "type": "number",
                "nullable": true,
                "description": "The total transfer, in MB, used by this NodeBalancer this month.\n",
                "example": 32.46078109741211,
                "readOnly": true
              },
              "out": {
                "type": "number",
                "nullable": true,
                "description": "The total inbound transfer, in MB, used for this NodeBalancer this month.\n",
                "example": 3.5487728118896484,
                "readOnly": true
              },
              "in": {
                "type": "number",
                "nullable": true,
                "description": "The total outbound transfer, in MB, used for this NodeBalancer this month.\n",
                "example": 28.91200828552246,
                "readOnly": true
              }
            }
          },
          "tags": {
            "x-linode-filterable": true,
            "description": "An array of Tags applied to this object.  Tags are for organizational purposes only.\n",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["example tag", "another example"]
          }
        }
      },
      "NodeBalancerConfig": {
        "type": "object",
        "description": "A NodeBalancer config represents the configuration of this NodeBalancer on a single port.  For example, a NodeBalancer Config on port 80 would typically represent how this NodeBalancer response to HTTP requests.\n\nNodeBalancer configs have a list of backends, called \"nodes,\" that they forward requests between based on their configuration.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This config's unique ID",
            "example": 4567,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "port": {
            "type": "integer",
            "minimum": 1,
            "maximum": 65535,
            "description": "The port this Config is for. These values must be unique across configs on a single NodeBalancer (you can't have two configs for port 80, for example).  While some ports imply some protocols, no enforcement is done and you may configure your NodeBalancer however is useful to you. For example, while port 443 is generally used for HTTPS, you do not need SSL configured to have a NodeBalancer listening on port 443.\n",
            "example": 80,
            "x-linode-cli-display": 2
          },
          "protocol": {
            "type": "string",
            "enum": ["http", "https", "tcp"],
            "description": "The protocol this port is configured to serve.\n* If using `http` or `tcp` protocol, `ssl_cert` and `ssl_key` are not supported.\n* If using `https` protocol, `ssl_cert` and `ssl_key` are required.\n",
            "example": "http",
            "x-linode-cli-display": 3
          },
          "algorithm": {
            "type": "string",
            "enum": ["roundrobin", "leastconn", "source"],
            "description": "What algorithm this NodeBalancer should use for routing traffic to backends.\n",
            "example": "roundrobin",
            "x-linode-cli-display": 4
          },
          "stickiness": {
            "type": "string",
            "enum": ["none", "table", "http_cookie"],
            "description": "Controls how session stickiness is handled on this port.\n* If set to `none` connections will always be assigned a backend based on the algorithm configured.\n* If set to `table` sessions from the same remote address will be routed to the same\n  backend.\n\n* For HTTP or HTTPS clients, `http_cookie` allows sessions to be\n  routed to the same backend based on a cookie set by the NodeBalancer.\n",
            "example": "http_cookie",
            "x-linode-cli-display": 5
          },
          "check": {
            "type": "string",
            "enum": ["none", "connection", "http", "http_body"],
            "description": "The type of check to perform against backends to ensure they are serving requests. This is used to determine if backends are up or down.\n* If `none` no check is performed.\n* `connection` requires only a connection to the backend to succeed.\n* `http` and `http_body` rely on the backend serving HTTP, and that\n  the response returned matches what is expected.\n",
            "example": "http_body"
          },
          "check_interval": {
            "type": "integer",
            "description": "How often, in seconds, to check that backends are up and serving requests.\n",
            "example": 90
          },
          "check_timeout": {
            "type": "integer",
            "minimum": 1,
            "maximum": 30,
            "description": "How long, in seconds, to wait for a check attempt before considering it failed.\n",
            "example": 10
          },
          "check_attempts": {
            "type": "integer",
            "minimum": 1,
            "maximum": 30,
            "description": "How many times to attempt a check before considering a backend to be down.\n",
            "example": 3
          },
          "check_path": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9\\/\\-%?&=.]*$",
            "description": "The URL path to check on each backend. If the backend does not respond to this request it is considered to be down.\n",
            "example": "/test"
          },
          "check_body": {
            "type": "string",
            "description": "This value must be present in the response body of the check in order for it to pass. If this value is not present in the response body of a check request, the backend is considered to be down.\n",
            "example": "it works"
          },
          "check_passive": {
            "type": "boolean",
            "description": "If true, any response from this backend with a `5xx` status code will be enough for it to be considered unhealthy and taken out of rotation.\n",
            "example": true,
            "x-linode-cli-display": 6
          },
          "proxy_protocol": {
            "description": "ProxyProtocol is a TCP extension that sends initial TCP connection information such as source/destination IPs and ports to backend devices. This information would be lost otherwise. Backend devices must be configured to work with ProxyProtocol if enabled.\n\n* If ommited, or set to `none`, the NodeBalancer doesn't send any auxilary data over TCP connections. This is the default.\n* If set to `v1`, the human-readable header format (Version 1) is used.\n* If set to `v2`, the binary header format (Version 2) is used.\n",
            "type": "string",
            "enum": ["none", "v1", "v2"],
            "example": "none",
            "default": "none"
          },
          "cipher_suite": {
            "type": "string",
            "enum": ["recommended", "legacy"],
            "description": "What ciphers to use for SSL connections served by this NodeBalancer.\n\n* `legacy` is considered insecure and should only be used if necessary.\n",
            "example": "recommended",
            "x-linode-cli-display": 7,
            "x-linode-cli-color": {
              "legacy": "red",
              "default_": "white"
            }
          },
          "nodebalancer_id": {
            "type": "integer",
            "description": "The ID for the NodeBalancer this config belongs to.\n",
            "example": 12345,
            "readOnly": true
          },
          "ssl_commonname": {
            "type": "string",
            "description": "The read-only common name automatically derived from the SSL certificate assigned to this NodeBalancerConfig. Please refer to this field to verify that the appropriate certificate is assigned to your NodeBalancerConfig.\n",
            "example": null,
            "readOnly": true,
            "x-linode-cli-display": 8
          },
          "ssl_fingerprint": {
            "type": "string",
            "description": "The read-only fingerprint automatically derived from the SSL certificate assigned to this NodeBalancerConfig. Please refer to this field to verify that the appropriate certificate is assigned to your NodeBalancerConfig.\n",
            "example": null,
            "readOnly": true,
            "x-linode-cli-display": 9
          },
          "ssl_cert": {
            "type": "string",
            "format": "ssl-cert",
            "nullable": true,
            "description": "The PEM-formatted public SSL certificate (or the combined PEM-formatted SSL\ncertificate and Certificate Authority chain) that should be served on this\nNodeBalancerConfig's port.\n\nThe contents of this field will not be shown in any responses that display\nthe NodeBalancerConfig. Instead, `<REDACTED>` will be printed where the field\nappears.\n\nThe read-only `ssl_commonname` and `ssl_fingerprint` fields in a NodeBalancerConfig\nresponse are automatically derived from your certificate. Please refer to these fields to\nverify that the appropriate certificate was assigned to your NodeBalancerConfig.\n",
            "example": null
          },
          "ssl_key": {
            "type": "string",
            "format": "ssl-key",
            "nullable": true,
            "description": "The PEM-formatted private key for the SSL certificate set in the `ssl_cert` field.\n\nThe contents of this field will not be shown in any responses that display\nthe NodeBalancerConfig. Instead, `<REDACTED>` will be printed where the field\nappears.\n\nThe read-only `ssl_commonname` and `ssl_fingerprint` fields in a NodeBalancerConfig\nresponse are automatically derived from your certificate. Please refer to these fields to\nverify that the appropriate certificate was assigned to your NodeBalancerConfig.\n",
            "example": null
          },
          "nodes_status": {
            "type": "object",
            "description": "A structure containing information about the health of the backends for this port.  This information is updated periodically as checks are performed against backends.\n",
            "readOnly": true,
            "x-linode-cli-display": 10,
            "properties": {
              "up": {
                "type": "integer",
                "description": "The number of backends considered to be \"UP\" and healthy, and that are serving requests.\n",
                "example": 4,
                "readOnly": true
              },
              "down": {
                "type": "integer",
                "description": "The number of backends considered to be \"DOWN\" and unhealthy.  These are not in rotation, and not serving requests.\n",
                "example": 0,
                "readOnly": true
              }
            }
          }
        }
      },
      "NodeBalancerNode": {
        "type": "object",
        "description": "A NodeBalancerNode represents a single backend serving requests for a single port of a NodeBalancer.  Nodes are specific to NodeBalancer Configs, and serve traffic over their private IP.  If the same Linode is serving traffic for more than one port on the same NodeBalancer, one NodeBalancer Node is required for each config (port) it should serve requests on.  For example, if you have four backends, and each should response to both HTTP and HTTPS requests, you will need two NodeBalancerConfigs (port 80 and port 443) and four backends each - one for each of the Linodes serving requests for that port.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This node's unique ID.",
            "example": 54321,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "address": {
            "type": "string",
            "format": "ip",
            "description": "The private IP Address where this backend can be reached. This _must_ be a private IP address.\n",
            "example": "192.168.210.120:80",
            "x-linode-cli-display": 3
          },
          "label": {
            "type": "string",
            "minLength": 3,
            "maxLength": 32,
            "pattern": "[a-zA-Z0-9-_.]{3,32}",
            "description": "The label for this node.  This is for display purposes only.\n",
            "example": "node54321",
            "x-linode-cli-display": 2
          },
          "status": {
            "type": "string",
            "enum": ["unknown", "UP", "DOWN"],
            "description": "The current status of this node, based on the configured checks of its NodeBalancer Config.\n",
            "example": "UP",
            "readOnly": true,
            "x-linode-cli-display": 4,
            "x-linode-cli-color": {
              "UP": "green",
              "unknown": "yellow",
              "DOWN": "red",
              "default_": "white"
            }
          },
          "weight": {
            "type": "integer",
            "minimum": 1,
            "maximum": 255,
            "description": "Used when picking a backend to serve a request and is not pinned to a single backend yet.  Nodes with a higher weight will receive more traffic.\n",
            "example": 50,
            "x-linode-cli-display": 5
          },
          "mode": {
            "type": "string",
            "enum": ["accept", "reject", "drain", "backup"],
            "description": "The mode this NodeBalancer should use when sending traffic to this backend.\n* If set to `accept` this backend is accepting traffic.\n* If set to `reject` this backend will not receive traffic.\n* If set to `drain` this backend will not receive _new_ traffic, but connections already\n  pinned to it will continue to be routed to it.\n\n* If set to `backup`, this backend will only receive traffic if all `accept` nodes\n  are down.\n",
            "example": "accept",
            "x-linode-cli-display": 6
          },
          "config_id": {
            "type": "integer",
            "description": "The NodeBalancer Config ID that this Node belongs to.\n",
            "example": 4567,
            "readOnly": true
          },
          "nodebalancer_id": {
            "type": "integer",
            "description": "The NodeBalancer ID that this Node belongs to.\n",
            "example": 12345,
            "readOnly": true
          }
        }
      },
      "NodeBalancerStats": {
        "type": "object",
        "description": "Stats for this NodeBalancer.\n",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data returned about this NodeBalancers.\n",
            "properties": {
              "connections": {
                "type": "array",
                "description": "An array of key/value pairs representing unix timestamp and reading for connections to this NodeBalancer.\n",
                "items": {
                  "type": "number",
                  "example": [1526391300000, 0]
                }
              },
              "traffic": {
                "type": "object",
                "description": "Traffic statistics for this NodeBalancer.\n",
                "properties": {
                  "in": {
                    "type": "array",
                    "description": "An array of key/value pairs representing unix timestamp and reading for inbound traffic.\n",
                    "items": {
                      "type": "number",
                      "example": [1526391300000, 631.21]
                    }
                  },
                  "out": {
                    "type": "array",
                    "description": "An array of key/value pairs representing unix timestamp and reading for outbound traffic.\n",
                    "items": {
                      "type": "number",
                      "example": [1526391300000, 103.44]
                    }
                  }
                }
              }
            }
          },
          "title": {
            "type": "string",
            "description": "The title for the statistics generated in this response.\n",
            "example": "linode.com - balancer12345 (12345) - day (5 min avg)"
          }
        }
      },
      "Notification": {
        "type": "object",
        "description": "An important, often time-sensitive item related to your Account.\n",
        "properties": {
          "entity": {
            "type": "object",
            "readOnly": true,
            "description": "Detailed information about the Notification.",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique ID of the Notification's entity, based on the entity type.\n",
                "example": 3456
              },
              "label": {
                "type": "string",
                "description": "The current label for this Notification's entity.\n",
                "example": "Linode not booting."
              },
              "type": {
                "type": "string",
                "description": "The type of entity this is related to.",
                "example": "ticket"
              },
              "url": {
                "type": "string",
                "description": "The URL where you can access the object this Notification is for. If a relative URL, it is relative to the domain you retrieved the Notification from.\n",
                "example": "/support/tickets/3456"
              }
            }
          },
          "label": {
            "type": "string",
            "description": "A short description of this Notification.\n",
            "example": "You have an important ticket open!",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "message": {
            "type": "string",
            "readOnly": true,
            "description": "A human-readable description of the Notification.",
            "example": "You have an important ticket open!",
            "x-linode-cli-display": 2
          },
          "body": {
            "type": "string",
            "readOnly": true,
            "description": "A full description of this Notification, in markdown format.  Not all Notifications include bodies.\n",
            "nullable": true,
            "example": null
          },
          "type": {
            "type": "string",
            "enum": [
              "migration_scheduled",
              "migration_imminent",
              "migration_pending",
              "reboot_scheduled",
              "outage",
              "payment_due",
              "ticket_important",
              "ticket_abuse",
              "notice",
              "maintenance",
              "promotion"
            ],
            "readOnly": true,
            "description": "The type of Notification this is.",
            "example": "ticket_important"
          },
          "severity": {
            "type": "string",
            "enum": ["minor", "major", "critical"],
            "description": "The severity of this Notification.  This field can be used to decide how prominently to display the Notification, what color to make the display text, etc.\n",
            "example": "major",
            "readOnly": true,
            "x-linode-cli-display": 3,
            "x-linode-cli-color": {
              "critical": "b",
              "minor": "blue",
              "default_": "white"
            }
          },
          "when": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "description": "If this Notification is of an Event that will happen at a fixed, future time, this is when the named action will be taken. For example, if a Linode is to be migrated in response to a Security Advisory, this field will contain the approximate time the Linode will be taken offline for migration.\n",
            "example": null,
            "x-linode-cli-display": 4,
            "x-linode-cli-color": {
              "None": "black",
              "default_": "white"
            }
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "If this Notification has a duration, this will be the ending time for the Event/action. For example, if there is scheduled maintenance for one of our systems, `until` would be set to the end of the maintenance window.\n",
            "example": null,
            "readOnly": true,
            "x-linode-cli-display": 5,
            "x-linode-cli-color": {
              "None": "black",
              "default_": "white"
            }
          }
        }
      },
      "OAuthClient": {
        "type": "object",
        "description": "A third-party application registered to Linode that users may log into with their Linode account through our authentication server at <a target=\"_top\" href=\"https://login.linode.com\">https://login.linode.com</a>.  Using an OAuth Client, a third-party developer may be given access to some, or all, of a User's account for the purposes of their application.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The OAuth Client ID.  This is used to identify the client, and is a publicly-known value (it is not a secret).\n",
            "example": "2737bf16b39ab5d7b4a1",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "redirect_uri": {
            "type": "string",
            "format": "uri",
            "description": "The location a successful log in from <a target=\"_top\" href=\"https://login.linode.com\">https://login.linode.com</a> should be redirected to for this client.  The receiver of this redirect should be ready to accept an OAuth exchange code and finish the OAuth exchange.\n",
            "example": "https://example.org/oauth/callback",
            "x-linode-cli-display": 5
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 512,
            "description": "The name of this application.  This will be presented to users when they are asked to grant it access to their Account.\n",
            "example": "Test_Client_1",
            "x-linode-cli-display": 2
          },
          "status": {
            "type": "string",
            "enum": ["active", "disabled", "suspended"],
            "description": "The status of this application.  `active` by default.\n",
            "example": "active",
            "readOnly": true,
            "x-linode-cli-display": 3,
            "x-linode-cli-color": {
              "suspended": "red",
              "default_": "white"
            }
          },
          "secret": {
            "type": "string",
            "description": "The OAuth Client secret, used in the OAuth exchange.  This is returned as `<REDACTED>` except when an OAuth Client is created or its secret is reset.  This is a secret, and should not be shared or disclosed publicly.\n",
            "example": "<REDACTED>",
            "readOnly": true
          },
          "thumbnail_url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "description": "The URL where this client's thumbnail may be viewed, or `null` if this client does not have a thumbnail set.\n",
            "example": "https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail",
            "readOnly": true
          },
          "public": {
            "x-linode-filterable": true,
            "type": "boolean",
            "description": "If this is a public or private OAuth Client.  Public clients have a slightly different authentication workflow than private clients.  See the <a target=\"_top\" href=\"https://oauth.net/2/\">OAuth spec</a> for more details.\n",
            "example": false,
            "readOnly": true,
            "x-linode-cli-display": 4
          }
        }
      },
      "ObjectStorageBucket": {
        "type": "object",
        "description": "An Object Storage Bucket. This should be accessed primarily through the S3 API; [click here for more information](https://docs.ceph.com/docs/mimic/radosgw/s3/#api).\n",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this bucket was created.",
            "example": "2019-01-01T01:23:45.000Z"
          },
          "cluster": {
            "type": "string",
            "description": "The ID of the Object Storage Cluster this bucket is in.",
            "example": "us-east-1"
          },
          "label": {
            "type": "string",
            "description": "The name of this bucket.",
            "example": "example-bucket"
          },
          "hostname": {
            "type": "string",
            "description": "The hostname where this bucket can be accessed. This hostname can be accessed through a browser if the bucket is made public.\n",
            "example": "example-bucket.us-east-1.linodeobjects.com"
          },
          "size": {
            "type": "integer",
            "description": "The size of the bucket in bytes.",
            "example": 188318981
          },
          "objects": {
            "type": "integer",
            "description": "The number of objects stored in this bucket.\n",
            "example": 4
          }
        }
      },
      "ObjectStorageObject": {
        "type": "object",
        "description": "An Object in Object Storage, or a \"prefix\" that contains one or more objects when a `delimiter` is used.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this object or prefix.\n",
            "example": "example"
          },
          "etag": {
            "type": "string",
            "description": "An MD-5 hash of the object. `null` if this object represents a prefix.\n",
            "example": "9f254c71e28e033bf9e0e5262e3e72ab"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time this object was last modified. `null` if this object represents a prefix.\n",
            "example": "2019-01-01T01:23:45.000Z"
          },
          "owner": {
            "type": "string",
            "description": "The owner of this object, as a UUID. `null` if this object represents a prefix.\n",
            "example": "bfc70ab2-e3d4-42a4-ad55-83921822270c"
          },
          "size": {
            "type": "integer",
            "description": "The size of this object, in bytes. `null` if this object represents a prefix.\n",
            "example": 123
          },
          "next_marker": {
            "type": "string",
            "description": "Returns the value you should pass to the `marker` query parameter to get the next page of objects. If there is no next page, `null` will be returned.\n",
            "example": "bd021c21-e734-4823-97a4-58b41c2cd4c8.892602.184",
            "nullable": true
          },
          "is_truncated": {
            "type": "boolean",
            "description": "Designates if there is another page of bucket objects.",
            "example": true
          }
        }
      },
      "ObjectStorageCluster": {
        "type": "object",
        "description": "An Object Storage Cluster",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID for this cluster.",
            "example": "us-east-1"
          },
          "domain": {
            "type": "string",
            "description": "The base URL for this cluster, used for connecting with third-party clients.",
            "example": "us-east-1.linodeobjects.com"
          },
          "status": {
            "type": "string",
            "enum": ["available", "unavailable"],
            "description": "This cluster's status.",
            "example": "available"
          },
          "region": {
            "type": "string",
            "description": "The region where this cluster is located.",
            "example": "us-east"
          },
          "static_site_domain": {
            "type": "string",
            "description": "The base URL for this cluster used when hosting static sites.",
            "example": "website-us-east-1.linodeobjects.com"
          }
        }
      },
      "ObjectStorageKey": {
        "type": "object",
        "description": "A keypair used to communicate with the Object Storage S3 API.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This keypair's unique ID",
            "example": 123,
            "readOnly": true
          },
          "label": {
            "type": "string",
            "description": "The label given to this key. For display purposes only.",
            "example": "my-key"
          },
          "access_key": {
            "type": "string",
            "description": "This keypair's access key. This is not secret.",
            "example": "KVAKUTGBA4WTR2NSJQ81",
            "readOnly": true
          },
          "secret_key": {
            "type": "string",
            "description": "This keypair's secret key. Only returned on key creation.",
            "example": "OiA6F5r0niLs3QA2stbyq7mY5VCV7KqOzcmitmHw",
            "readOnly": true
          },
          "limited": {
            "type": "boolean",
            "description": "Whether or not this key is a limited access key. Will return `false` if this key grants full access to all buckets on the user's account.",
            "example": true,
            "readOnly": true
          },
          "bucket_access": {
            "type": "array",
            "description": "Defines this key as a Limited Access Key. Limited Access Keys restrict this Object Storage key's access to only the bucket(s) declared in this array and define their bucket-level permissions.\n\n\n  Limited Access Keys can:\n\n  * [list all buckets](/api/v4/object-storage-buckets/) available on this Account, but cannot perform any actions on a bucket unless it has access to the bucket.\n\n  * [create new buckets](/api/v4/object-storage-buckets/#post), but do not have any access to the buckets it creates, unless explicitly given access to them.\n\n\n  **Note:** You can create an Object Storage Limited Access Key without access to any buckets.\n  This is achieved by sending a request with an empty `bucket_access` array.\n",
            "items": {
              "type": "object",
              "properties": {
                "cluster": {
                  "type": "string",
                  "description": "The Object Storage cluster where a bucket to which the key is granting access is hosted.",
                  "example": "ap-south-1"
                },
                "bucket_name": {
                  "type": "string",
                  "description": "The unique label of the bucket to which the key will grant limited access.",
                  "example": "example-bucket"
                },
                "permissions": {
                  "type": "string",
                  "enum": ["read_write", "read_only"],
                  "description": "This Limited Access Key's permissions for the selected bucket.",
                  "example": "read_only"
                }
              }
            }
          }
        }
      },
      "ObjectStorageSSL": {
        "type": "object",
        "required": ["certificate", "private_key"],
        "description": "Upload a TLS/SSL certificate and private key to be served when you visit your Object Storage bucket via HTTPS.\n",
        "properties": {
          "certificate": {
            "type": "string",
            "description": "Your Base64 encoded and PEM formatted SSL certificate.\n",
            "example": "\"-----BEGIN CERTIFICATE----- MIIFTTCCAzWgAwIBAgIURwtqMl ... -----END CERTIFICATE-----\"\n"
          },
          "private_key": {
            "type": "string",
            "description": "The private key associated with this TLS/SSL certificate.\n",
            "example": "\"-----BEGIN PRIVATE KEY----- MIIEvgIBADANBgkqhkiG9w0BAQE ... -----END PRIVATE KEY-----\"\n"
          }
        }
      },
      "ObjectStorageSSLResponse": {
        "type": "object",
        "description": "If this Object Storage bucket has a corresponding TLS/SSL Certificate.\n",
        "properties": {
          "ssl": {
            "type": "boolean",
            "description": "A boolean indicating if this Bucket has a corresponding TLS/SSL certificate that was uploaded by an Account user.\n",
            "example": true,
            "readOnly": true
          }
        }
      },
      "Payment": {
        "type": "object",
        "description": "Payment object response.",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "The unique ID of the Payment.",
            "example": 123,
            "x-linode-cli-display": 1
          },
          "date": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "description": "When the Payment was made.",
            "example": "2018-01-15T00:01:01",
            "x-linode-cli-display": 2
          },
          "usd": {
            "type": "integer",
            "readOnly": true,
            "description": "The amount, in US dollars, of the Payment.",
            "example": "120.50",
            "x-linode-cli-display": 3
          }
        }
      },
      "PaymentRequest": {
        "type": "object",
        "description": "Payment object request.",
        "required": ["usd"],
        "properties": {
          "cvv": {
            "type": "string",
            "description": "CVV (Card Verification Value) of the credit card to be used for the Payment.\n",
            "example": "123"
          },
          "usd": {
            "type": "string",
            "description": "The amount in US Dollars of the Payment. The maximum credit card payment that can be made is $50,000 dollars.\n",
            "example": "120.50"
          }
        }
      },
      "PayPal": {
        "type": "object",
        "required": ["cancel_url", "redirect_url", "usd"],
        "description": "An object representing the staging of a Payment via PayPal.\n",
        "properties": {
          "cancel_url": {
            "type": "string",
            "description": "The URL to have PayPal redirect to when Payment is cancelled.",
            "example": "https://example.org"
          },
          "redirect_url": {
            "type": "string",
            "description": "The URL to have PayPal redirect to when Payment is approved.",
            "example": "https://example.org"
          },
          "usd": {
            "type": "string",
            "description": "The payment amount in USD. Minimum accepted value of $5 USD. Maximum accepted value of $500 USD or credit card payment limit; whichever value is highest. PayPal's maximum transaction limit is $10,000 USD.",
            "example": "120.50"
          }
        }
      },
      "PayPalExecute": {
        "type": "object",
        "required": ["payer_id", "payment_id"],
        "description": "An object representing an execution of Payment to PayPal to capture the funds and credit your Linode Account.\n",
        "properties": {
          "payer_id": {
            "type": "string",
            "description": "The PayerID returned by PayPal during the transaction authorization process.\n",
            "example": "ABCDEFGHIJKLM"
          },
          "payment_id": {
            "type": "string",
            "description": "The PaymentID returned from [POST /account/payments/paypal](/account-payments-paypal/#post) that has been approved with PayPal.\n",
            "example": "PAY-1234567890ABCDEFGHIJKLMN"
          }
        }
      },
      "PersonalAccessToken": {
        "type": "object",
        "description": "A Personal Access Token is a token generated manually to access the API without going through an OAuth login.  Personal Access Tokens can have scopes just like OAuth tokens do, and are commonly used to give access to command-line tools like the Linode CLI, or when writing your own integrations.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "This token's unique ID, which can be used to revoke it.\n",
            "example": 123,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "scopes": {
            "type": "string",
            "format": "oauth-scopes",
            "description": "The scopes this token was created with. These define what parts of the Account the token can be used to access. Many command-line tools, such as the <a target=\"_top\" href=\"https://github.com/linode/linode-cli\">Linode CLI</a>, require tokens with access to `*`. Tokens with more restrictive scopes are generally more secure.\n",
            "example": "*",
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time this token was created.\n",
            "x-linode-filterable": true,
            "example": "2018-01-01T00:01:01.000Z",
            "readOnly": true,
            "x-linode-cli-display": 4
          },
          "label": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "This token's label.  This is for display purposes only, but can be used to more easily track what you're using each token for.\n",
            "x-linode-filterable": true,
            "example": "linode-cli",
            "x-linode-cli-display": 2
          },
          "token": {
            "type": "string",
            "description": "The token used to access the API.  When the token is created, the full token is returned here.  Otherwise, only the first 16 characters are returned.\n",
            "example": "abcdefghijklmnop",
            "readOnly": true,
            "x-linode-cli-display": 5
          },
          "expiry": {
            "type": "string",
            "format": "date-time",
            "description": "When this token will expire.  Personal Access Tokens cannot be renewed, so after this time the token will be completely unusable and a new token will need to be generated.  Tokens may be created with \"null\" as their expiry and will never expire unless revoked.\n",
            "x-linode-cli-display": 6,
            "example": "2018-01-01T13:46:32",
            "readOnly": true
          }
        }
      },
      "Profile": {
        "type": "object",
        "description": "A Profile represents your User in our system. This is where you can change information about your User. This information is available to any OAuth Client regardless of requested scopes, and can be used to populate User information in third-party applications.\n",
        "properties": {
          "uid": {
            "type": "integer",
            "description": "Your unique ID in our system. This value will never change, and can safely be used to identify your User.\n",
            "example": 1234,
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Your username, used for logging in to our system.\n",
            "example": "exampleUser",
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Your email address.  This address will be used for communication with Linode as necessary.\n",
            "example": "example-user@gmail.com",
            "x-linode-cli-display": 2
          },
          "timezone": {
            "type": "string",
            "description": "The timezone you prefer to see times in. This is not used by the API directly. It is provided for the benefit of clients such as the Linode Cloud Manager and other clients built on the API. All times returned by the API are in UTC.\n",
            "example": "US/Eastern"
          },
          "email_notifications": {
            "type": "boolean",
            "description": "If true, you will receive email notifications about account activity.  If false, you may still receive business-critical communications through email.\n",
            "example": true
          },
          "referrals": {
            "type": "object",
            "description": "Information about your status in our referral program.\n",
            "readOnly": true,
            "properties": {
              "code": {
                "type": "string",
                "description": "Your referral code.  If others use this when signing up for Linode, you will receive account credit.\n",
                "example": "871be32f49c1411b14f29f618aaf0c14637fb8d3",
                "readOnly": true
              },
              "url": {
                "type": "string",
                "format": "uri",
                "description": "Your referral url, used to direct others to sign up for Linode with your referral code.\n",
                "example": "https://www.linode.com/?r=871be32f49c1411b14f29f618aaf0c14637fb8d3",
                "readOnly": true
              },
              "total": {
                "type": "integer",
                "description": "The number of users who have signed up with your referral code.\n",
                "example": 0,
                "readOnly": true
              },
              "completed": {
                "type": "integer",
                "description": "The number of completed signups with your referral code.\n",
                "example": 0,
                "readOnly": true
              },
              "pending": {
                "type": "integer",
                "description": "The number of pending signups with your referral code.  You will not receive credit for these signups until they are completed.\n",
                "example": 0,
                "readOnly": true
              },
              "credit": {
                "type": "integer",
                "description": "The amount of account credit in US Dollars issued to you through the referral program.\n",
                "example": 0,
                "readOnly": true
              }
            }
          },
          "ip_whitelist_enabled": {
            "deprecated": true,
            "type": "boolean",
            "description": "If true, logins for your User will only be allowed from whitelisted IPs. This setting is currently deprecated, and cannot be enabled.\n\nIf you disable this setting, you will not be able to re-enable it.\n",
            "example": false
          },
          "lish_auth_method": {
            "type": "string",
            "enum": ["password_keys", "keys_only", "disabled"],
            "description": "The authentication methods that are allowed when connecting to [the Linode Shell (Lish)](https://www.linode.com/docs/platform/manager/using-the-linode-shell-lish/).\n* `keys_only` is the most secure if you intend to use Lish.\n* `disabled` is recommended if you do not intend to use Lish at all.\n* If this account's Cloud Manager authentication type is set to a Third-Party Authentication method, `password_keys` cannot be used as your Lish authentication method. To view this account's Cloud Manager `authentication_type` field, send a request to the [View Profile](/api/v4/profile) endpoint.\n",
            "example": "keys_only"
          },
          "authorized_keys": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "ssh-key"
            },
            "description": "The list of SSH Keys authorized to use Lish for your User. This value is ignored if `lish_auth_method` is \"disabled.\"\n",
            "example": null
          },
          "two_factor_auth": {
            "type": "boolean",
            "description": "If true, logins from untrusted computers will require Two Factor Authentication.  See [/profile/tfa-enable](/api/v4/profile-tfa-enable/#post) to enable Two Factor Authentication.\n",
            "example": true,
            "x-linode-cli-display": 4
          },
          "restricted": {
            "type": "boolean",
            "description": "If true, your User has restrictions on what can be accessed on your Account. To get details on what entities/actions you can access/perform, see [/profile/grants](/api/v4/profile-grants).\n",
            "example": false,
            "x-linode-cli-display": 3
          },
          "authentication_type": {
            "type": "string",
            "enum": ["password", "github"],
            "description": "This account's Cloud Manager authentication type. Authentication types are chosen through\nCloud Manager and authorized when logging into your account. These authentication types are either\nthe user's password (in conjunction with their username), or the name of their\nindentity provider such as GitHub. For example, if a user:\n\n- Has never used Third-Party Authentication, their authentication type will be `password`.\n- Is using Third-Party Authentication, their authentication type will be the name of their Identity Provider (eg. `github`).\n- Has used Third-Party Authentication and has since revoked it, their authentication type will be `password`.\n\n\n**Note:** This functionality may not yet be available in Cloud Manager.\nSee the [Cloud Manager Changelog](/changelog/cloud-manager/) for the latest updates.\n",
            "example": "password",
            "readOnly": true
          }
        }
      },
      "Region": {
        "type": "object",
        "description": "An area where Linode services are available.",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The unique ID of this Region.",
            "example": "us-east",
            "x-linode-cli-display": 1
          },
          "country": {
            "type": "string",
            "description": "The country where this Region resides.",
            "example": "us",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of capabilities of this region.\n",
            "example": [
              "Linodes",
              "NodeBalancers",
              "Block Storage",
              "Object Storage"
            ],
            "readOnly": true,
            "x-linode-cli-display": 3
          },
          "status": {
            "type": "string",
            "description": "This region's current operational status.\n",
            "example": "ok",
            "enum": ["ok", "outage"],
            "readOnly": true,
            "x-linode-cli-display": 4
          },
          "resolvers": {
            "type": "object",
            "readOnly": true,
            "x-linode-cli-display": 5,
            "properties": {
              "ipv4": {
                "type": "string",
                "description": "The IPv4 addresses for this region's DNS resolvers, separated by commas.\n",
                "example": "192.0.2.0,192.0.2.1",
                "readOnly": true
              },
              "ipv6": {
                "type": "string",
                "description": "The IPv6 addresses for this region's DNS resolvers, separated by commas.\n",
                "example": "2001:0db8::,2001:0db8::1",
                "readOnly": true
              }
            }
          }
        }
      },
      "RescueDevices": {
        "type": "object",
        "properties": {
          "sda": {
            "$ref": "#/components/schemas/Device"
          },
          "sdb": {
            "$ref": "#/components/schemas/Device"
          },
          "sdc": {
            "$ref": "#/components/schemas/Device"
          },
          "sdd": {
            "$ref": "#/components/schemas/Device"
          },
          "sde": {
            "$ref": "#/components/schemas/Device"
          },
          "sdf": {
            "$ref": "#/components/schemas/Device"
          },
          "sdg": {
            "$ref": "#/components/schemas/Device"
          }
        }
      },
      "StackScript": {
        "type": "object",
        "description": "A StackScript enables you to quickly deploy a fully-configured application in an automated manner.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique ID of this StackScript.",
            "example": 10079,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "username": {
            "type": "string",
            "description": "The User who created the StackScript.\n",
            "example": "myuser",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "user_gravatar_id": {
            "type": "string",
            "description": "The Gravatar ID for the User who created the StackScript.\n",
            "example": "a445b305abda30ebc766bc7fda037c37",
            "readOnly": true
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "The StackScript's label is for display purposes only.\n",
            "example": "a-stackscript",
            "minLength": 3,
            "maxLength": 128,
            "x-linode-cli-display": 3
          },
          "description": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "A description for the StackScript.\n",
            "example": "This StackScript installs and configures MySQL\n"
          },
          "images": {
            "type": "array",
            "description": "An array of Image IDs. These are the images that can be deployed with this Stackscript.\n",
            "items": {
              "type": "string"
            },
            "example": ["linode/debian9", "linode/debian8"],
            "x-linode-cli-display": 4
          },
          "deployments_total": {
            "x-linode-filterable": true,
            "type": "integer",
            "description": "The total number of times this StackScript has been deployed.\n",
            "example": 12,
            "readOnly": true
          },
          "deployments_active": {
            "type": "integer",
            "description": "Count of currently active, deployed Linodes created from this StackScript.\n",
            "example": 1,
            "readOnly": true
          },
          "is_public": {
            "x-linode-filterable": true,
            "type": "boolean",
            "description": "This determines whether other users can use your StackScript. **Once a StackScript is made public, it cannot be made private.**\n",
            "example": true,
            "x-linode-cli-display": 5
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date this StackScript was created.\n",
            "readOnly": true,
            "example": "2018-01-01T00:01:01",
            "x-linode-cli-display": 6
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "The date this StackScript was last updated.\n",
            "readOnly": true,
            "example": "2018-01-01T00:01:01",
            "x-linode-cli-display": 7
          },
          "rev_note": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "This field allows you to add notes for the set of revisions made to this StackScript.\n",
            "example": "Set up MySQL"
          },
          "script": {
            "type": "string",
            "description": "The script to execute when provisioning a new Linode with this StackScript.\n",
            "example": "\"#!/bin/bash\"\n",
            "x-linode-cli-format": "file"
          },
          "user_defined_fields": {
            "type": "array",
            "description": "This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized parameters during deployment. See <a target=\"_top\" href=\"https://www.linode.com/docs/platform/stackscripts/#variables-and-udfs\">Variables and UDFs</a> for more information.\n",
            "items": {
              "$ref": "#/components/schemas/UserDefinedField"
            },
            "readOnly": true,
            "example": {
              "label": "Enter the DB password",
              "name": "DB_PASSWORD",
              "example": "hunter2"
            }
          }
        }
      },
      "StatsDataAvailable": {
        "type": "object",
        "description": "A collection of graph data returned for managed stats.\n",
        "properties": {
          "cpu": {
            "type": "array",
            "description": "CPU usage stats from the last 24 hours.",
            "items": {
              "$ref": "#/components/schemas/StatsData"
            }
          },
          "disk": {
            "type": "array",
            "description": "Disk usage stats from the last 24 hours.",
            "items": {
              "$ref": "#/components/schemas/StatsData"
            }
          },
          "swap": {
            "type": "array",
            "description": "Swap usage stats from the last 24 hours.",
            "items": {
              "$ref": "#/components/schemas/StatsData"
            }
          },
          "net_in": {
            "type": "array",
            "description": "Inbound network traffic stats from the last 24 hours.",
            "items": {
              "$ref": "#/components/schemas/StatsData"
            }
          },
          "net_out": {
            "type": "array",
            "description": "Outbound network traffic stats from the last 24 hours.",
            "items": {
              "$ref": "#/components/schemas/StatsData"
            }
          }
        }
      },
      "StatsDataUnavailable": {
        "type": "array",
        "readOnly": true,
        "description": "An array of error messages if managed stats are unavaliable.\n",
        "items": {
          "type": "string",
          "example": "Graphs are not yet available."
        }
      },
      "StatsData": {
        "type": "object",
        "description": "A stat data point.\n",
        "properties": {
          "x": {
            "type": "integer",
            "readOnly": true,
            "description": "A stats graph data point.\n",
            "example": 11513761600000
          },
          "y": {
            "type": "integer",
            "readOnly": true,
            "description": "A stats graph data point.\n",
            "example": 29.94
          }
        }
      },
      "SupportTicket": {
        "type": "object",
        "description": "A Support Ticket opened on your Account.\n",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "The ID of the Support Ticket.\n",
            "example": 11223344,
            "x-linode-cli-display": 1
          },
          "attachments": {
            "type": "array",
            "description": "A list of filenames representing attached files associated with this Ticket.\n",
            "readOnly": true,
            "items": {
              "type": "string",
              "example": ["screenshot.jpg", "screenshot.txt"]
            }
          },
          "closed": {
            "x-linode-filterable": true,
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "readOnly": true,
            "description": "The date and time this Ticket was closed.\n",
            "example": "2015-06-04T16:07:03"
          },
          "closable": {
            "type": "boolean",
            "description": "Whether the Support Ticket may be closed.\n",
            "example": false
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "description": "The full details of the issue or question.\n",
            "minLength": 1,
            "maxLength": 65000,
            "example": "I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\n",
            "x-linode-cli-display": 5
          },
          "entity": {
            "type": "object",
            "nullable": true,
            "readOnly": true,
            "description": "The entity this Ticket was opened for.\n",
            "x-linode-cli-display": 6,
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "description": "The unique ID for this Ticket's entity.\n",
                "example": 10400
              },
              "label": {
                "type": "string",
                "readOnly": true,
                "description": "The current label of this entity.\n",
                "example": "linode123456"
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "The type of entity this is related to.\n",
                "example": "linode"
              },
              "url": {
                "type": "string",
                "readOnly": true,
                "description": "The URL where you can access the object this event is for. If a relative URL, it is relative to the domain you retrieved the entity from.\n",
                "example": "/v4/linode/instances/123456"
              }
            }
          },
          "gravatar_id": {
            "type": "string",
            "readOnly": true,
            "description": "The Gravatar ID of the User who opened this Ticket.\n",
            "example": "474a1b7373ae0be4132649e69c36ce30"
          },
          "opened": {
            "x-linode-filterable": true,
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date and time this Ticket was created.\n",
            "example": "2015-06-04T14:16:44",
            "x-linode-cli-display": 4
          },
          "opened_by": {
            "type": "string",
            "readOnly": true,
            "description": "The User who opened this Ticket.\n",
            "example": "some_user",
            "x-linode-cli-display": 3
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "description": "The current status of this Ticket.",
            "enum": ["closed", "new", "open"],
            "example": "open"
          },
          "summary": {
            "type": "string",
            "readOnly": true,
            "minLength": 1,
            "maxLength": 64,
            "description": "The summary or title for this Ticket.\n",
            "example": "Having trouble resetting root password on my Linode\n",
            "x-linode-cli-display": 2
          },
          "updated": {
            "x-linode-filterable": true,
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date and time this Ticket was last updated.\n",
            "example": "2015-06-04T16:07:03"
          },
          "updated_by": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "description": "The User who last updated this Ticket.\n",
            "example": "some_other_user"
          }
        }
      },
      "SupportTicketReply": {
        "type": "object",
        "description": "An object representing a reply to a Support Ticket.\n",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date and time this Ticket reply was created.\n",
            "example": "2015-06-02T14:31:41",
            "x-linode-cli-display": 3
          },
          "created_by": {
            "type": "string",
            "readOnly": true,
            "description": "The User who submitted this reply.\n",
            "example": "John Q. Linode",
            "x-linode-cli-display": 2
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "description": "The body of this Support Ticket reply.\n",
            "example": "Hello,\\nI'm sorry to hear that you are having trouble resetting the root password of your Linode. Just to be sure, have you tried to follow the instructions in our online documentation? The link is here:\\n \\nhttps://linode.com/docs/quick-answers/linode-platform/reset-the-root-password-on-your-linode/ \\n\\nIf you have, please reply with any additional steps you have also taken.\\n\\nRegards, Linode Support Team\n"
          },
          "from_linode": {
            "type": "boolean",
            "readOnly": true,
            "description": "If set to true, this reply came from a Linode employee.\n",
            "example": true
          },
          "gravatar_id": {
            "type": "string",
            "readOnly": true,
            "description": "The Gravatar ID of the User who created this reply.\n",
            "example": "474a1b7373ae0be4132649e69c36ce30"
          },
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "The unique ID of this Support Ticket reply.\n",
            "example": 11223345,
            "x-linode-cli-display": 1
          }
        }
      },
      "SupportTicketRequest": {
        "type": "object",
        "required": ["summary", "description"],
        "description": "An object representing a created Support Ticket - a question or issue and request for help from the Linode support team.\nOnly one of the ID attributes (`linode_id`, `domain_id`, etc.) can be set on a single Support Ticket.\n",
        "properties": {
          "description": {
            "type": "string",
            "description": "The full details of the issue or question.\n",
            "minLength": 1,
            "maxLength": 65000,
            "example": "I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\n"
          },
          "domain_id": {
            "type": "integer",
            "description": "The ID of the Domain this ticket is regarding, if relevant.\n",
            "example": null
          },
          "linode_id": {
            "type": "integer",
            "description": "The ID of the Linode this ticket is regarding, if relevant.\n",
            "example": 123
          },
          "longviewclient_id": {
            "type": "integer",
            "description": "The ID of the Longview client this ticket is regarding, if relevant.\n",
            "example": null
          },
          "nodebalancer_id": {
            "type": "integer",
            "description": "The ID of the NodeBalancer this ticket is regarding, if relevant.\n",
            "example": null
          },
          "summary": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "description": "The summary or title for this SupportTicket.\n",
            "example": "Having trouble resetting root password on my Linode\n"
          },
          "managed_issue": {
            "type": "boolean",
            "description": "Designates if this ticket is related to a [Managed service](https://www.linode.com/products/managed/). If `true`, the following constraints will apply:\n* No ID attributes (i.e. `linode_id`, `domain_id`, etc.) should be provided with this request.\n* Your account must have a [Managed service enabled](/api/v4/managed-services-service-id-enable/#post).\n",
            "example": false
          },
          "volume_id": {
            "type": "integer",
            "description": "The ID of the Volume this ticket is regarding, if relevant.\n",
            "example": null
          }
        }
      },
      "Transfer": {
        "type": "object",
        "description": "An object representing your network utilization for the current month, in Gigabytes.\n",
        "properties": {
          "billable": {
            "type": "integer",
            "readOnly": true,
            "description": "The amount of your transfer pool that is billable this billing cycle.\n",
            "example": 0,
            "x-linode-cli-display": 3
          },
          "quota": {
            "type": "integer",
            "readOnly": true,
            "description": "The amount of network usage allowed this billing cycle.\n",
            "example": 9141,
            "x-linode-cli-display": 1
          },
          "used": {
            "type": "integer",
            "readOnly": true,
            "description": "The amount of network usage you have used this billing cycle.\n",
            "example": 2,
            "x-linode-cli-display": 2
          }
        }
      },
      "Tag": {
        "type": "object",
        "description": "A tag that has been applied to an object on your Account. Tags are currently for organizational purposes only.\n",
        "properties": {
          "label": {
            "type": "string",
            "description": "A Label used for organization of objects on your Account.\n",
            "example": "example tag"
          }
        }
      },
      "User": {
        "type": "object",
        "description": "A User on your Account. Unrestricted users can log in and access information about your Account, while restricted users may only access entities or perform actions they've been granted access to.\n",
        "properties": {
          "username": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]((?![_-]{2,})[a-zA-Z0-9-_])+[a-zA-Z0-9]$",
            "minLength": 3,
            "maxLength": 32,
            "description": "This User's username. This is used for logging in, and may also be displayed alongside actions the User performs (for example, in Events or public StackScripts).\n",
            "x-linode-filterable": true,
            "example": "example_user",
            "x-linode-cli-display": 1
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address for this User, for account management communications, and may be used for other communications as configured.\n",
            "example": "example_user@linode.com",
            "readOnly": true,
            "x-linode-cli-display": 2
          },
          "restricted": {
            "type": "boolean",
            "description": "If true, this User must be granted access to perform actions or access entities on this Account. See [/account/users/{username}/grants](/api/v4/account-users-username-grants) for details on how to configure grants for a restricted User.\n",
            "example": true,
            "x-linode-cli-display": 3
          },
          "ssh_keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of SSH Key labels added by this User. These are the keys that will be deployed if this User is included in the `authorized_users` field of a [create Linode](/api/v4/linode-instances/#post), [rebuild Linode](/api/v4/linode-instances-linode-id-rebuild/#post), or [create Disk](/api/v4/linode-instances-linode-id-disks/#post) request.\n",
            "example": ["home-pc", "laptop"]
          },
          "tfa_enabled": {
            "type": "boolean",
            "readOnly": true,
            "description": "A boolean value indicating if the User has Two Factor Authentication (TFA) enabled. See the Create Two Factor Secret ([/profile/tfa-enable](/api/v4/profile-tfa-enable/#post)) endpoint to enable TFA.\n"
          }
        }
      },
      "UserDefinedField": {
        "type": "object",
        "required": ["label", "name", "example"],
        "description": "A custom field defined by the User with a special syntax within a StackScript. Derived from the contents of the script.\n",
        "properties": {
          "label": {
            "type": "string",
            "description": "A human-readable label for the field that will serve as the input prompt for entering the value during deployment.\n",
            "example": "Enter the password",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The name of the field.\n",
            "example": "DB_PASSWORD",
            "readOnly": true
          },
          "example": {
            "type": "string",
            "description": "An example value for the field.\n",
            "example": "hunter2",
            "readOnly": true
          },
          "oneOf": {
            "type": "string",
            "description": "A list of acceptable single values for the field.\n",
            "example": "avalue,anothervalue,thirdvalue",
            "readOnly": true
          },
          "manyOf": {
            "type": "string",
            "description": "A list of acceptable values for the field in any quantity, combination or order.\n",
            "example": "avalue,anothervalue,thirdvalue",
            "readOnly": true
          },
          "default": {
            "type": "string",
            "description": "The default value.  If not specified, this value will be used.\n",
            "readOnly": true
          }
        }
      },
      "TrustedDevice": {
        "type": "object",
        "description": "A trusted device object represents an active Remember Me session with <a target=\"_top\" href=\"https://login.linode.com\">login.linode.com</a>.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique ID for this TrustedDevice",
            "example": 123,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Remember Me session was started.  This corresponds to the time of login with the \"Remember Me\" box checked.\n",
            "example": "2018-01-01T01:01:01",
            "readOnly": true
          },
          "expiry": {
            "type": "string",
            "format": "date-time",
            "description": "When this TrustedDevice session expires.  Sessions typically last 30 days.\n",
            "example": "2018-01-31T01:01:01",
            "readOnly": true
          },
          "user_agent": {
            "type": "string",
            "description": "The User Agent of the browser that created this TrustedDevice session.\n",
            "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36 Vivaldi/2.1.1337.36\n",
            "readOnly": true
          },
          "last_authenticated": {
            "type": "string",
            "format": "date-time",
            "description": "The last time this TrustedDevice was successfully used to authenticate to <a target=\"_top\" href=\"https://login.linode.com\">login.linode.com</a>.\n",
            "example": "2018-01-05T12:57:12",
            "readOnly": true
          },
          "last_remote_addr": {
            "type": "string",
            "description": "The last IP Address to successfully authenticate with this TrustedDevice.\n",
            "example": "12.34.56.78",
            "readOnly": true
          }
        }
      },
      "SSHKey": {
        "type": "object",
        "description": "A credential object for authenticating a User's secure shell connection to a Linode.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of an SSH Key object.\n",
            "example": 42,
            "readOnly": true
          },
          "label": {
            "type": "string",
            "description": "A label for the SSH Key.\n",
            "example": "My SSH Key",
            "minLength": 0,
            "maxLength": 64
          },
          "ssh_key": {
            "type": "string",
            "format": "ssh-key",
            "description": "The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.\n",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date this key was added.\n",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          }
        }
      },
      "SSHKeyRequest": {
        "type": "object",
        "description": "An object consisting of a user identified name as the `label` and the generated key as the `ssh-key`.\n",
        "properties": {
          "label": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "description": "A label for the key.\n",
            "example": "My SSH Key"
          },
          "ssh_key": {
            "type": "string",
            "format": "ssh-key",
            "description": "The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.\n"
          }
        }
      },
      "Volume": {
        "type": "object",
        "required": ["label"],
        "description": "A Block Storage Volume associated with your Account.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique ID of this Volume.",
            "example": 12345,
            "readOnly": true,
            "x-linode-cli-display": 1
          },
          "label": {
            "x-linode-filterable": true,
            "type": "string",
            "description": "The Volume's label is for display purposes only.\n",
            "example": "my-volume",
            "minLength": 1,
            "maxLength": 32,
            "pattern": "^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$",
            "x-linode-cli-display": 2
          },
          "filesystem_path": {
            "type": "string",
            "description": "The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0Linode_Volume_ + Volume label.\n",
            "example": "/dev/disk/by-id/scsi-0Linode_Volume_my-volume",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "The current status of the volume.  Can be one of:\n\n  * `creating` - the Volume is being created and is not yet available\n    for use.\n  * `active` - the Volume is online and available for use.\n  * `resizing` - the Volume is in the process of upgrading\n    its current capacity.\n  * `contact_support` - there is a problem with your Volume. Please\n    [open a Support Ticket](/api/v4/support-tickets/#post) to resolve the issue.\n",
            "enum": ["creating", "active", "resizing", "contact_support"],
            "example": "active",
            "readOnly": true,
            "x-linode-cli-display": 3,
            "x-linode-cli-color": {
              "active": "green",
              "contact_support": "red",
              "default_": "yellow"
            }
          },
          "size": {
            "type": "integer",
            "description": "The Volume's size, in GiB.\n",
            "maximum": 10240,
            "x-linode-cli-display": 4,
            "example": 30
          },
          "region": {
            "$ref": "#/components/schemas/Region/properties/id",
            "x-linode-cli-display": 5
          },
          "linode_id": {
            "type": "integer",
            "nullable": true,
            "description": "If a Volume is attached to a specific Linode, the ID of that Linode will be displayed here.\n",
            "example": 12346,
            "x-linode-cli-display": 6
          },
          "linode_label": {
            "type": "string",
            "nullable": true,
            "description": "If a Volume is attached to a specific Linode, the label of that Linode will be displayed here.\n",
            "example": "linode123",
            "x-linode-cli-display": 7,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this Volume was created.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "When this Volume was last updated.",
            "example": "2018-01-01T00:01:01",
            "readOnly": true
          },
          "tags": {
            "x-linode-filterable": true,
            "description": "An array of Tags applied to this object.  Tags are for organizational purposes only.\n",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["example tag", "another example"]
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Account",
      "description": "Use the Account endpoints to manage user settings, billing, and payments. You can also initiate and maintain OAuth client application authentication, enable the Linode Managed service, and create new users on your account."
    },
    {
      "name": "Domains",
      "description": "Use the Domains endpoints to create and manage domains and domain records on your account."
    },
    {
      "name": "Images",
      "description": "Use the Images endpoints to capture, store, and manage custom Linode images."
    },
    {
      "name": "Linode Instances",
      "description": "Use the Linode Instances endpoints to create, configure, and manage your Linode instances. You can also manage the Linode Backup service; maintain and manage configuration profiles; create and maintain disks, intiate a host migration; view Linode Instance statistics; and more."
    },
    {
      "name": "Linode Types",
      "description": "Use the Linode Types endpoints to retrieve information about Linode plan types, including pricing information, hardware resources, and network transfer allotment."
    },
    {
      "name": "Linode Kubernetes Engine (LKE)",
      "description": "Linode Kubernetes Engine (LKE) is Linode’s managed Kubernetes service. Use the LKE endpoints to create and manage Kubernetes clusters and their associated Node Pools."
    },
    {
      "name": "Longview",
      "description": "Longview is Linode’s system-level monitoring and graphing service. Use the Longview endpoints to manage your Longview subscription and plan and to create and maintain Longview clients."
    },
    {
      "name": "Managed",
      "description": "Managed is Linode’s incident response service. Use the Managed endpoints to register a service to be monitored by the Managed Service team, provide secure access to your managed services,  view information about detected issues, and more."
    },
    {
      "name": "Networking",
      "description": "Use the Networking endpoints to view all IP addresses on your account, reorganize assigned IPv4 addresses, update RDNS, and configure IP sharing."
    },
    {
      "name": "NodeBalancers",
      "description": "NodeBalancers is Linode’s load balancing service. Use the NodeBalancers endpoints to create and manage NodeBalancers. You can also create and maintain configurations; create and maintain nodes, and view statistics."
    },
    {
      "name": "Object Storage",
      "description": "Object Storage is Linode’s S3-compatible data storage service. Use the Object Storage endpoints to create and maintaining buckets, add and remove objects from buckets, create and maintain Object Storage keys, and cancel the Object Storage service."
    },
    {
      "name": "Profile",
      "description": "Use the Profile endpoints to manage your Linode user profile preferences and security settings. This includes creating and maintaining personal access tokens, creating and maintaining SSH keys, confirming and enabling two-factor authentication, and updating user and profile preferences."
    },
    {
      "name": "Regions",
      "description": "Use the Regions endpoints to view information about the various Linode data center regions, including the service capabilities for each region, country, status, and more."
    },
    {
      "name": "StackScripts",
      "description": "Linode StackScripts allow you to create reusable scripts to configure new Linode instances. Use the StackScripts endpoints to create and manage StackScripts on your account."
    },
    {
      "name": "Support",
      "description": "Use the Support endpoints to open, view, and close Linode Support tickets. You can also create and manage your Support ticket replies."
    },
    {
      "name": "Tags",
      "description": "Tags allow you to organize and group your various Linode services. Use the Tags endpoints to create, assign, and delete your account tags."
    },
    {
      "name": "Volumes",
      "description": "Volumes is Linode’s block storage service. Use the Volumes endpoints to create, attach, and manage your account Volumes."
    }
  ]
}
