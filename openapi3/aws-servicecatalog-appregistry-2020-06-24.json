{
  "openapi": "3.0.0",
  "info": {
    "version": "2020-06-24",
    "title": "AWS Service Catalog App Registry",
    "description": "AWS Service Catalog AppRegistry enables organizations to understand the application context of their AWS resources. AppRegistry provides a repository of your applications, their resources, and the application metadata that you use within your enterprise.",
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    }
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/servicecatalog-appregistry/"
  },
  "servers": [
    {
      "url": "http://servicecatalog-appregistry.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-east-1",
            "ap-south-1",
            "sa-east-1",
            "me-south-1"
          ],
          "default": "us-east-1"
        }
      },
      "description": "The AppRegistry multi-region endpoint"
    },
    {
      "url": "https://servicecatalog-appregistry.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-east-1",
            "ap-south-1",
            "sa-east-1",
            "me-south-1"
          ],
          "default": "us-east-1"
        }
      },
      "description": "The AppRegistry multi-region endpoint"
    },
    {
      "url": "http://servicecatalog-appregistry.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": ["cn-north-1", "cn-northwest-1"],
          "default": "cn-north-1"
        }
      },
      "description": "The AppRegistry endpoint for China (Beijing) and China (Ningxia)"
    },
    {
      "url": "https://servicecatalog-appregistry.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": ["cn-north-1", "cn-northwest-1"],
          "default": "cn-north-1"
        }
      },
      "description": "The AppRegistry endpoint for China (Beijing) and China (Ningxia)"
    }
  ],
  "paths": {
    "/applications/{application}/attribute-groups/{attributeGroup}": {
      "put": {
        "operationId": "AssociateAttributeGroup",
        "description": "Associates an attribute group with an application to augment the application's metadata with the group's attributes. This way applications can be described with user-defined details which are machine-readable (e.g. for third-party integrations).",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateAttributeGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "483": {
            "description": "ServiceQuotaExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceQuotaExceededException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "The name or ID of the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          },
          {
            "name": "attributeGroup",
            "in": "path",
            "required": true,
            "description": "The name or ID of the attribute group that holds the attributes to describe the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "summary": "Associate Attribute Group"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "delete": {
        "operationId": "DisassociateAttributeGroup",
        "description": "Disassociates an attribute group from an application to remove the extra attributes contained in the attribute group from the application's metadata. This operation reverts AssociateAttributeGroup.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociateAttributeGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "The name or ID of the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          },
          {
            "name": "attributeGroup",
            "in": "path",
            "required": true,
            "description": "The name or ID of the attribute group that holds the attributes to describe the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "summary": "Disassociate Attribute Group"
      }
    },
    "/applications/{application}/resources/{resourceType}/{resource}": {
      "put": {
        "operationId": "AssociateResource",
        "description": "Associates a resource with an application. Both the resource and the application can be specified either by ID or name.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceQuotaExceededException"
                }
              }
            }
          },
          "483": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "The name or ID of the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": ["CFN_STACK"]
            }
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "description": "The name or ID of the resource of which the application will be associated.",
            "schema": {
              "type": "string",
              "pattern": "\\S+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "summary": "Associate Resource"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "delete": {
        "operationId": "DisassociateResource",
        "description": "Disassociates a resource from application. Both the resource and the application can be specified either by ID or name.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociateResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "The name or ID of the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "description": "The type of the resource that's being disassociated.",
            "schema": {
              "type": "string",
              "enum": ["CFN_STACK"]
            }
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "description": "The name or ID of the resource of which the application will be associated.",
            "schema": {
              "type": "string",
              "pattern": "\\S+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "summary": "Disassociate Resource"
      },
      "get": {
        "operationId": "GetAssociatedResource",
        "description": "Gets the resource associated with the application.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssociatedResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "The name or ID of the application.",
            "schema": {
              "type": "string",
              "pattern": "[-.\\w]+",
              "minLength": 1,
              "maxLength": 256
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "description": "The type of resource associated with the application.",
            "schema": {
              "type": "string",
              "enum": ["CFN_STACK"]
            }
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "description": "The name or ID of the resource associated with the application.",
            "schema": {
              "type": "string",
              "pattern": "\\S+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "summary": "Get Associated Resource"
      }
    },
    "/applications": {
      "post": {
        "operationId": "CreateApplication",
        "description": "Creates a new application that is the top-level node in a hierarchy of related cloud resource abstractions.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApplicationResponse"
                }
              }
            }
          },
          "480": {
            "description": "ServiceQuotaExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceQuotaExceededException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "clientToken"],
                "properties": {
                  "name": {
                    "description": "The name of the application. The name must be unique in the region in which you are creating the application.",
                    "type": "string",
                    "pattern": "\\w+",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "description": {
                    "description": "The description of the application.",
                    "type": "string",
                    "maxLength": 1024
                  },
                  "tags": {
                    "description": "Key-value pairs you can use to associate with the application.",
                    "type": "object",
                    "minProperties": 0,
                    "maxProperties": 50,
                    "additionalProperties": {
                      "$ref": "#/components/schemas/TagValue"
                    }
                  },
                  "clientToken": {
                    "description": "A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the clientToken, the same response is returned for each repeated request.",
                    "type": "string",
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                    "minLength": 1,
                    "maxLength": 128
                  }
                }
              }
            }
          }
        },
        "summary": "Create Application"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListApplications",
        "description": "Retrieves a list of all of your applications. Results are paginated.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListApplicationsResponse"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "nextToken",
            "in": "query",
            "required": false,
            "description": "The token to use to get the next page of results after a previous API call. ",
            "schema": {
              "type": "string",
              "pattern": "[A-Za-z0-9+/=]+",
              "minLength": 1,
              "maxLength": 2024
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "description": "The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 25
            }
          }
        ],
        "summary": "List Applications"
      }
    },
    "/attribute-groups": {
      "post": {
        "operationId": "CreateAttributeGroup",
        "description": "Creates a new attribute group as a container for user-defined attributes. This approach enables users to have full control over their cloud application's metadata in a rich machine-readable format to facilitate integration with automated workflows and third-party tools.",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAttributeGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "ServiceQuotaExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceQuotaExceededException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "attributes", "clientToken"],
                "properties": {
                  "name": {
                    "description": "The name of the attribute group.",
                    "type": "string",
                    "pattern": "\\w+",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "description": {
                    "description": "The description of the attribute group that the user provides.",
                    "type": "string",
                    "maxLength": 1024
                  },
                  "attributes": {
                    "description": "A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.",
                    "type": "string",
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
                    "minLength": 1,
                    "maxLength": 8000
                  },
                  "tags": {
                    "description": "Key-value pairs you can use to associate with the attribute group.",
                    "type": "object",
                    "minProperties": 0,
                    "maxProperties": 50,
                    "additionalProperties": {
                      "$ref": "#/components/schemas/TagValue"
                    }
                  },
                  "clientToken": {
                    "description": "A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the clientToken, the same response is returned for each repeated request.",
                    "type": "string",
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                    "minLength": 1,
                    "maxLength": 128
                  }
                }
              }
            }
          }
        },
        "summary": "Create Attribute Group"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListAttributeGroups",
        "description": "Lists all attribute groups which you have access to. Results are paginated.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttributeGroupsResponse"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "nextToken",
            "in": "query",
            "required": false,
            "description": "The token to use to get the next page of results after a previous API call. ",
            "schema": {
              "type": "string",
              "pattern": "[A-Za-z0-9+/=]+",
              "minLength": 1,
              "maxLength": 2024
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "description": "The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 25
            }
          }
        ],
        "summary": "List Attribute Groups"
      }
    },
    "/applications/{application}": {
      "delete": {
        "operationId": "DeleteApplication",
        "description": "Delete an application, specified either by its application ID or name.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteApplicationResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "The name or ID of the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "summary": "Delete Application"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetApplication",
        "description": "Retrieves metadata information about one of your applications. The application can be specified either by its unique ID or by its name (which is unique within one account in one region at a given point in time). Specify by ID in automated workflows if you want to make sure that the exact same application is returned or a ResourceNotFoundException is thrown, avoiding the ABA addressing problem.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "The name or ID of the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "summary": "Get Application"
      },
      "patch": {
        "operationId": "UpdateApplication",
        "description": "Updates an existing application with new attributes.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateApplicationResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "The name or ID of the application. The name must be unique in the region in which you are updating the attribute group.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The anme of the application. The name must be unique in the region in which you are creating the application.",
                    "type": "string",
                    "pattern": "\\w+",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "description": {
                    "description": "The description of the application.",
                    "type": "string",
                    "maxLength": 1024
                  }
                }
              }
            }
          }
        },
        "summary": "Update Application"
      }
    },
    "/attribute-groups/{attributeGroup}": {
      "delete": {
        "operationId": "DeleteAttributeGroup",
        "description": "Deletes an attribute group, specified either by its attribute group ID or name.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAttributeGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "attributeGroup",
            "in": "path",
            "required": true,
            "description": "The name or ID of the attribute group that holds the attributes to describe the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "summary": "Delete Attribute Group"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetAttributeGroup",
        "description": "Retrieves an attribute group, either by its name or its ID.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAttributeGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "attributeGroup",
            "in": "path",
            "required": true,
            "description": "The name or ID of the attribute group that holds the attributes to describe the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "summary": "Get Attribute Group"
      },
      "patch": {
        "operationId": "UpdateAttributeGroup",
        "description": "Updates an existing attribute group with new details. ",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAttributeGroupResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "attributeGroup",
            "in": "path",
            "required": true,
            "description": "The name or ID of the attribute group that holds the attributes to describe the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The new name of the attribute group. The name must be unique in the region in which you are updating the attribute group.",
                    "type": "string",
                    "pattern": "\\w+",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "description": {
                    "description": "The description of the attribute group that the user provides.",
                    "type": "string",
                    "maxLength": 1024
                  },
                  "attributes": {
                    "description": "A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.",
                    "type": "string",
                    "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
                    "minLength": 1,
                    "maxLength": 8000
                  }
                }
              }
            }
          }
        },
        "summary": "Update Attribute Group"
      }
    },
    "/applications/{application}/attribute-groups": {
      "get": {
        "operationId": "ListAssociatedAttributeGroups",
        "description": "Lists all attribute groups that are associated with specified application. Results are paginated.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssociatedAttributeGroupsResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "The name or ID of the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          },
          {
            "name": "nextToken",
            "in": "query",
            "required": false,
            "description": "The token to use to get the next page of results after a previous API call. ",
            "schema": {
              "type": "string",
              "pattern": "[A-Za-z0-9+/=]+",
              "minLength": 1,
              "maxLength": 2024
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "description": "The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 25
            }
          }
        ],
        "summary": "List Associated Attribute Groups"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/applications/{application}/resources": {
      "get": {
        "operationId": "ListAssociatedResources",
        "description": "Lists all resources that are associated with specified application. Results are paginated.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssociatedResourcesResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "The name or ID of the application.",
            "schema": {
              "type": "string",
              "pattern": "\\w+",
              "minLength": 1,
              "maxLength": 256
            }
          },
          {
            "name": "nextToken",
            "in": "query",
            "required": false,
            "description": "The token to use to get the next page of results after a previous API call. ",
            "schema": {
              "type": "string",
              "pattern": "[A-Za-z0-9+/=]+",
              "minLength": 1,
              "maxLength": 2024
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "description": "The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 25
            }
          }
        ],
        "summary": "List Associated Resources"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/tags/{resourceArn}": {
      "get": {
        "operationId": "ListTagsForResource",
        "description": "Lists all of the tags on the resource.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTagsForResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "resourceArn",
            "in": "path",
            "required": true,
            "description": "The Amazon resource name (ARN) that specifies the resource.",
            "schema": {
              "type": "string",
              "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
              "minLength": 1,
              "maxLength": 1600
            }
          }
        ],
        "summary": "List Tags For Resource"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "operationId": "TagResource",
        "description": "<p>Assigns one or more tags (key-value pairs) to the specified resource.</p> <p>Each tag consists of a key and an optional value. If a tag with the same key is already associated with the resource, this action updates its value.</p> <p>This operation returns an empty response if the call was successful.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "resourceArn",
            "in": "path",
            "required": true,
            "description": "The Amazon resource name (ARN) that specifies the resource.",
            "schema": {
              "type": "string",
              "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
              "minLength": 1,
              "maxLength": 1600
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["tags"],
                "properties": {
                  "tags": {
                    "description": "The new or modified tags for the resource.",
                    "type": "object",
                    "minProperties": 0,
                    "maxProperties": 50,
                    "additionalProperties": {
                      "$ref": "#/components/schemas/TagValue"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Tag Resource"
      }
    },
    "/sync/{resourceType}/{resource}": {
      "post": {
        "operationId": "SyncResource",
        "description": "<p>Syncs the resource with current AppRegistry records.</p> <p>Specifically, the resource’s AppRegistry system tags sync with its associated application. We remove the resource's AppRegistry system tags if it does not associate with the application. The caller must have permissions to read and update the resource.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "481": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "482": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "description": "The type of resource of which the application will be associated.",
            "schema": {
              "type": "string",
              "enum": ["CFN_STACK"]
            }
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "description": "An entity you can work with and specify with a name or ID. Examples include an Amazon EC2 instance, an Amazon Web Services CloudFormation stack, or an Amazon S3 bucket.",
            "schema": {
              "type": "string",
              "pattern": "\\S+",
              "minLength": 1,
              "maxLength": 256
            }
          }
        ],
        "summary": "Sync Resource"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/tags/{resourceArn}#tagKeys": {
      "delete": {
        "operationId": "UntagResource",
        "description": "<p>Removes tags from a resource.</p> <p>This operation returns an empty response if the call was successful.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UntagResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "resourceArn",
            "in": "path",
            "required": true,
            "description": "The Amazon resource name (ARN) that specifies the resource.",
            "schema": {
              "type": "string",
              "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
              "minLength": 1,
              "maxLength": 1600
            }
          },
          {
            "name": "tagKeys",
            "in": "query",
            "required": true,
            "description": "A list of the tag keys to remove from the specified resource.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagKey"
              },
              "minItems": 0,
              "maxItems": 50
            }
          }
        ],
        "summary": "Untag Resource"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    }
  },
  "components": {
    "parameters": {
      "X-Amz-Content-Sha256": {
        "name": "X-Amz-Content-Sha256",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Date": {
        "name": "X-Amz-Date",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Algorithm": {
        "name": "X-Amz-Algorithm",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Credential": {
        "name": "X-Amz-Credential",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Security-Token": {
        "name": "X-Amz-Security-Token",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Signature": {
        "name": "X-Amz-Signature",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-SignedHeaders": {
        "name": "X-Amz-SignedHeaders",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      }
    },
    "securitySchemes": {
      "hmac": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Amazon Signature authorization v4"
      }
    },
    "schemas": {
      "AssociateAttributeGroupResponse": {
        "type": "object",
        "properties": {
          "applicationArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationArn"
              },
              {
                "description": "The Amazon resource name (ARN) of the application that was augmented with attributes."
              }
            ]
          },
          "attributeGroupArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupArn"
              },
              {
                "description": "The Amazon resource name (ARN) of the attribute group that contains the application's new attributes."
              }
            ]
          }
        }
      },
      "ResourceNotFoundException": {},
      "ValidationException": {},
      "InternalServerException": {},
      "ServiceQuotaExceededException": {},
      "AssociateResourceResponse": {
        "type": "object",
        "properties": {
          "applicationArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationArn"
              },
              {
                "description": "The Amazon resource name (ARN) of the application that was augmented with attributes."
              }
            ]
          },
          "resourceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Arn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the resource."
              }
            ]
          }
        }
      },
      "ConflictException": {},
      "CreateApplicationResponse": {
        "type": "object",
        "properties": {
          "application": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Application"
              },
              {
                "description": "The name or ID of the application."
              }
            ]
          }
        }
      },
      "TagValue": {
        "type": "string",
        "pattern": "[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*",
        "maxLength": 256
      },
      "CreateAttributeGroupResponse": {
        "type": "object",
        "properties": {
          "attributeGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroup"
              },
              {
                "description": "The name or ID of the attribute group that holds the attributes to describe the application."
              }
            ]
          }
        }
      },
      "DeleteApplicationResponse": {
        "type": "object",
        "properties": {
          "application": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationSummary"
              },
              {
                "description": "The name or ID of the application."
              }
            ]
          }
        }
      },
      "DeleteAttributeGroupResponse": {
        "type": "object",
        "properties": {
          "attributeGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupSummary"
              },
              {
                "description": "The name or ID of the attribute group that holds the attributes to describe the application."
              }
            ]
          }
        }
      },
      "DisassociateAttributeGroupResponse": {
        "type": "object",
        "properties": {
          "applicationArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationArn"
              },
              {
                "description": "The Amazon resource name (ARN) of the application that was augmented with attributes."
              }
            ]
          },
          "attributeGroupArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupArn"
              },
              {
                "description": "The Amazon resource name (ARN) of the attribute group that contains the application's new attributes."
              }
            ]
          }
        }
      },
      "DisassociateResourceResponse": {
        "type": "object",
        "properties": {
          "applicationArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationArn"
              },
              {
                "description": "The Amazon resource name (ARN) of the application that was augmented with attributes."
              }
            ]
          },
          "resourceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Arn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the resource."
              }
            ]
          }
        }
      },
      "GetApplicationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationId"
              },
              {
                "description": "The identifier of the application."
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationArn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the application across services."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Name"
              },
              {
                "description": "The name of the application. The name must be unique in the region in which you are creating the application."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Description"
              },
              {
                "description": "The description of the application."
              }
            ]
          },
          "creationTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The ISO-8601 formatted timestamp of the moment when the application was created."
              }
            ]
          },
          "lastUpdateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The ISO-8601 formatted timestamp of the moment when the application was last updated."
              }
            ]
          },
          "associatedResourceCount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssociationCount"
              },
              {
                "description": "The number of top-level resources that were registered as part of this application."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "description": "Key-value pairs you can use to associate with the application."
              }
            ]
          },
          "integrations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Integrations"
              },
              {
                "description": "The information about the integration of the application with other services, such as Resource Groups."
              }
            ]
          }
        }
      },
      "GetAttributeGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupId"
              },
              {
                "description": "The identifier of the application."
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupArn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the application across services."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Name"
              },
              {
                "description": "The name of the attribute group."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Description"
              },
              {
                "description": "The description of the attribute group that the user provides."
              }
            ]
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Attributes"
              },
              {
                "description": "A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components."
              }
            ]
          },
          "creationTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The ISO-8601 formatted timestamp of the moment the attribute group was created."
              }
            ]
          },
          "lastUpdateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "description": "Key-value pairs you can use to associate with the attribute group."
              }
            ]
          }
        }
      },
      "ListApplicationsResponse": {
        "type": "object",
        "properties": {
          "applications": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationSummaries"
              },
              {
                "description": "The name or ID of the application."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token to use to get the next page of results after a previous API call. "
              }
            ]
          }
        }
      },
      "ListAssociatedAttributeGroupsResponse": {
        "type": "object",
        "properties": {
          "attributeGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupIds"
              },
              {
                "description": "A list of attribute group IDs."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token to use to get the next page of results after a previous API call. "
              }
            ]
          }
        }
      },
      "ListAssociatedResourcesResponse": {
        "type": "object",
        "properties": {
          "resources": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Resources"
              },
              {
                "description": "The name or ID of the resource of which the application will be associated."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token to use to get the next page of results after a previous API call. "
              }
            ]
          }
        }
      },
      "ListAttributeGroupsResponse": {
        "type": "object",
        "properties": {
          "attributeGroups": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupSummaries"
              },
              {
                "description": "A list of attribute group IDs."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NextToken"
              },
              {
                "description": "The token to use to get the next page of results after a previous API call. "
              }
            ]
          }
        }
      },
      "UpdateApplicationResponse": {
        "type": "object",
        "properties": {
          "application": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Application"
              },
              {
                "description": "The name or ID of the application."
              }
            ]
          }
        }
      },
      "UpdateAttributeGroupResponse": {
        "type": "object",
        "properties": {
          "attributeGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroup"
              },
              {
                "description": "The name or ID of the attribute group that holds the attributes to describe the application."
              }
            ]
          }
        }
      },
      "ApplicationId": {
        "type": "string",
        "pattern": "[a-z0-9]{12}",
        "minLength": 26,
        "maxLength": 26
      },
      "ApplicationArn": {
        "type": "string",
        "pattern": "arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:/applications/[a-z0-9]+"
      },
      "Name": {
        "type": "string",
        "pattern": "\\w+",
        "minLength": 1,
        "maxLength": 256
      },
      "Description": {
        "type": "string",
        "maxLength": 1024
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "Tags": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/components/schemas/TagValue"
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationId"
              },
              {
                "description": "The identifier of the application."
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationArn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the application across services."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Name"
              },
              {
                "description": "The name of the application. The name must be unique in the region in which you are creating the application."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Description"
              },
              {
                "description": "The description of the application."
              }
            ]
          },
          "creationTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The ISO-8601 formatted timestamp of the moment when the application was created."
              }
            ]
          },
          "lastUpdateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": " The ISO-8601 formatted timestamp of the moment when the application was last updated."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "description": "Key-value pairs you can use to associate with the application."
              }
            ]
          }
        },
        "description": "Represents a Service Catalog AppRegistry application that is the top-level node in a hierarchy of related cloud resource abstractions."
      },
      "ApplicationSummary": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationId"
              },
              {
                "description": "The identifier of the application."
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationArn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the application across services."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Name"
              },
              {
                "description": "The name of the application. The name must be unique in the region in which you are creating the application."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Description"
              },
              {
                "description": "The description of the application."
              }
            ]
          },
          "creationTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The ISO-8601 formatted timestamp of the moment when the application was created."
              }
            ]
          },
          "lastUpdateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": " The ISO-8601 formatted timestamp of the moment when the application was last updated."
              }
            ]
          }
        },
        "description": "Summary of a Service Catalog AppRegistry application."
      },
      "ApplicationSummaries": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApplicationSummary"
        }
      },
      "Arn": {
        "type": "string",
        "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
        "minLength": 1,
        "maxLength": 1600
      },
      "AttributeGroupArn": {
        "type": "string",
        "pattern": "arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:/attribute-groups/[a-z0-9]+"
      },
      "ResourceSpecifier": {
        "type": "string",
        "pattern": "\\S+",
        "minLength": 1,
        "maxLength": 256
      },
      "AssociationCount": {
        "type": "integer",
        "minimum": 0
      },
      "AttributeGroupId": {
        "type": "string",
        "pattern": "[a-z0-9]{12}",
        "minLength": 1,
        "maxLength": 100
      },
      "AttributeGroup": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupId"
              },
              {
                "description": "The globally unique attribute group identifier of the attribute group."
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupArn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the application across services."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Name"
              },
              {
                "description": "The name of the attribute group."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Description"
              },
              {
                "description": "The description of the attribute group that the user provides."
              }
            ]
          },
          "creationTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The ISO-8601 formatted timestamp of the moment the attribute group was created."
              }
            ]
          },
          "lastUpdateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "description": "Key-value pairs you can use to associate with the attribute group."
              }
            ]
          }
        },
        "description": "Represents a Service Catalog AppRegistry attribute group that is rich metadata which describes an application and its components."
      },
      "AttributeGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AttributeGroupId"
        }
      },
      "AttributeGroupSummary": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupId"
              },
              {
                "description": "The globally unique attribute group identifier of the attribute group."
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributeGroupArn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the application across services."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Name"
              },
              {
                "description": "The name of the attribute group."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Description"
              },
              {
                "description": "The description of the attribute group that the user provides."
              }
            ]
          },
          "creationTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The ISO-8601 formatted timestamp of the moment the attribute group was created."
              }
            ]
          },
          "lastUpdateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group."
              }
            ]
          }
        },
        "description": "Summary of a Service Catalog AppRegistry attribute group."
      },
      "AttributeGroupSummaries": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AttributeGroupSummary"
        }
      },
      "Attributes": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
        "minLength": 1,
        "maxLength": 8000
      },
      "NextToken": {
        "type": "string",
        "pattern": "[A-Za-z0-9+/=]+",
        "minLength": 1,
        "maxLength": 2024
      },
      "Resources": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResourceInfo"
        }
      },
      "StackArn": {
        "type": "string",
        "pattern": "arn:aws[-a-z]*:cloudformation:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:stack/[a-zA-Z][-A-Za-z0-9]{0,127}/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}"
      },
      "ResourceInfo": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceSpecifier"
              },
              {
                "description": "The name of the resource."
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StackArn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the application across services."
              }
            ]
          }
        },
        "description": "Information about the resource."
      },
      "TagKey": {
        "type": "string",
        "pattern": "(?!aws:)[a-zA-Z+-=._:/]+",
        "minLength": 1,
        "maxLength": 128
      },
      "GetAssociatedResourceResponse": {
        "type": "object",
        "properties": {
          "resource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Resource"
              },
              {
                "description": "The resource associated with the application."
              }
            ]
          }
        }
      },
      "ListTagsForResourceResponse": {
        "type": "object",
        "properties": {
          "tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "description": "The tags on the resource."
              }
            ]
          }
        }
      },
      "SyncResourceResponse": {
        "type": "object",
        "properties": {
          "applicationArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationArn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the application."
              }
            ]
          },
          "resourceArn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Arn"
              },
              {
                "description": "The Amazon resource name (ARN) that specifies the resource."
              }
            ]
          },
          "actionTaken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncAction"
              },
              {
                "description": "The results of the output if an application is associated with an ARN value, which could be <code>syncStarted</code> or None."
              }
            ]
          }
        }
      },
      "TagResourceResponse": {
        "type": "object",
        "properties": {}
      },
      "UntagResourceResponse": {
        "type": "object",
        "properties": {}
      },
      "Integrations": {
        "type": "object",
        "properties": {
          "resourceGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceGroup"
              },
              {
                "description": " The information about the resource group integration."
              }
            ]
          }
        },
        "description": " The information about the service integration."
      },
      "Resource": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceSpecifier"
              },
              {
                "description": "The name of the resource."
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StackArn"
              },
              {
                "description": "The Amazon resource name (ARN) of the resource."
              }
            ]
          },
          "associationTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timestamp"
              },
              {
                "description": "The time the resource was associated with the application."
              }
            ]
          },
          "integrations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceIntegrations"
              },
              {
                "description": "The service integration information about the resource. "
              }
            ]
          }
        },
        "description": " The information about the resource."
      },
      "ResourceGroup": {
        "type": "object",
        "properties": {
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceGroupState"
              },
              {
                "description": "<p>The state of the propagation process for the resource group. The states includes:</p> <p> <code>CREATING </code>if the resource group is in the process of being created.</p> <p> <code>CREATE_COMPLETE</code> if the resource group was created successfully.</p> <p> <code>CREATE_FAILED</code> if the resource group failed to be created.</p> <p> <code>UPDATING</code> if the resource group is in the process of being updated.</p> <p> <code>UPDATE_COMPLETE</code> if the resource group updated successfully.</p> <p> <code>UPDATE_FAILED</code> if the resource group could not update successfully.</p>"
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Arn"
              },
              {
                "description": "The Amazon resource name (ARN) of the resource group."
              }
            ]
          },
          "errorMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/String"
              },
              {
                "description": "The error message that generates when the propagation process for the resource group fails."
              }
            ]
          }
        },
        "description": "The information about the resource group integration."
      },
      "ResourceIntegrations": {
        "type": "object",
        "properties": {
          "resourceGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceGroup"
              },
              {
                "description": "The information about the integration of Resource Groups."
              }
            ]
          }
        },
        "description": "The service integration information about the resource."
      },
      "ResourceGroupState": {
        "type": "string",
        "enum": ["CREATING", "CREATE_COMPLETE", "CREATE_FAILED", "UPDATING", "UPDATE_COMPLETE", "UPDATE_FAILED"]
      },
      "String": {
        "type": "string"
      },
      "SyncAction": {
        "type": "string",
        "enum": ["START_SYNC", "NO_ACTION"]
      }
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "x-metadata": {
    "apiVersion": "2020-06-24",
    "endpointPrefix": "servicecatalog-appregistry",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "AppRegistry",
    "serviceFullName": "AWS Service Catalog App Registry",
    "serviceId": "Service Catalog AppRegistry",
    "signatureVersion": "v4",
    "signingName": "servicecatalog",
    "uid": "AWS242AppRegistry",
    "targetPrefix": "AWS242AppRegistry"
  }
}
