{
  "openapi": "3.0.0",
  "info": {
    "version": "2019-12-03",
    "x-release": "v4",
    "title": "AWS Outposts",
    "description": "AWS Outposts is a fully-managed service that extends AWS infrastructure, APIs, and tools to customer premises. By providing local access to AWS-managed infrastructure, AWS Outposts enables customers to build and run applications on premises using the same programming interfaces as in AWS Regions, while using local compute and storage resources for lower latency and local data processing needs.",
    "x-logo": {
      "url": "https://raw.githubusercontent.com/chainjet/assets/master/integrations/aws/Arch_AWS-Outposts_64.svg"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "x-providerName": "amazonaws.com",
    "x-serviceName": "outposts",
    "x-origin": [
      {
        "contentType": "application/json",
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/outposts-2019-12-03.normal.json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "x-apisguru-driver": "external"
      }
    ],
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": ["cloud"],
    "x-preferred": true
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/outposts/"
  },
  "servers": [
    {
      "url": "http://outposts.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-east-1",
            "ap-south-1",
            "sa-east-1",
            "me-south-1"
          ],
          "default": "us-east-1"
        }
      },
      "description": "The Outposts multi-region endpoint"
    },
    {
      "url": "https://outposts.{region}.amazonaws.com",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "us-gov-west-1",
            "us-gov-east-1",
            "ca-central-1",
            "eu-north-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-central-1",
            "eu-south-1",
            "af-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-east-1",
            "ap-south-1",
            "sa-east-1",
            "me-south-1"
          ],
          "default": "us-east-1"
        }
      },
      "description": "The Outposts multi-region endpoint"
    },
    {
      "url": "http://outposts.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": ["cn-north-1", "cn-northwest-1"],
          "default": "cn-north-1"
        }
      },
      "description": "The Outposts endpoint for China (Beijing) and China (Ningxia)"
    },
    {
      "url": "https://outposts.{region}.amazonaws.com.cn",
      "variables": {
        "region": {
          "description": "The AWS region",
          "enum": ["cn-north-1", "cn-northwest-1"],
          "default": "cn-north-1"
        }
      },
      "description": "The Outposts endpoint for China (Beijing) and China (Ningxia)"
    }
  ],
  "paths": {
    "/outposts": {
      "post": {
        "operationId": "CreateOutpost",
        "description": "Creates an Outpost.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOutpostOutput"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "484": {
            "description": "ServiceQuotaExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceQuotaExceededException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceQuotaExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceQuotaExceededException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["SiteId", "SiteId"],
                "properties": {
                  "Name": {
                    "description": "The name of the Outpost.",
                    "type": "string",
                    "pattern": "^[\\S ]+$",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "Description": {
                    "description": "The Outpost description.",
                    "type": "string",
                    "pattern": "^[\\S ]+$",
                    "minLength": 1,
                    "maxLength": 1000
                  },
                  "SiteId": {
                    "description": "The ID of the site.",
                    "type": "string",
                    "pattern": "os-[a-f0-9]{17}",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "AvailabilityZone": {
                    "description": "<p>The Availability Zone.</p> <p>You must specify <code>AvailabilityZone</code> or <code>AvailabilityZoneId</code>.</p>",
                    "type": "string",
                    "pattern": "[a-z\\d-]+",
                    "minLength": 1,
                    "maxLength": 1000
                  },
                  "AvailabilityZoneId": {
                    "description": "<p>The ID of the Availability Zone.</p> <p>You must specify <code>AvailabilityZone</code> or <code>AvailabilityZoneId</code>.</p>",
                    "type": "string",
                    "pattern": "[a-z]+[0-9]+-az[0-9]+",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "Tags": {
                    "description": "The tags to apply to the Outpost.",
                    "type": "object",
                    "minProperties": 1,
                    "maxProperties": 50,
                    "additionalProperties": {
                      "$ref": "#/components/schemas/TagValue"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create Outpost"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "ListOutposts",
        "description": "List the Outposts for your AWS account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOutpostsOutput"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "NextToken",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "description": "The pagination token.",
              "minLength": 1,
              "maxLength": 1005
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer",
              "description": "The maximum page size.",
              "minimum": 1,
              "maximum": 1000
            }
          },
          {
            "name": "LifeCycleStatusFilter",
            "in": "query",
            "required": false,
            "description": "<p> A filter for the lifecycle status of the Outpost. </p> <p> Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values. </p>",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LifeCycleStatus"
              },
              "minItems": 1,
              "maxItems": 5
            }
          },
          {
            "name": "AvailabilityZoneFilter",
            "in": "query",
            "required": false,
            "description": "<p> A filter for the Availibility Zone (<code>us-east-1a</code>) of the Outpost. </p> <p> Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values. </p>",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AvailabilityZone"
              },
              "minItems": 1,
              "maxItems": 5
            }
          },
          {
            "name": "AvailabilityZoneIdFilter",
            "in": "query",
            "required": false,
            "description": "<p> A filter for the AZ IDs (<code>use1-az1</code>) of the Outpost. </p> <p> Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values. </p>",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AvailabilityZoneId"
              },
              "minItems": 1,
              "maxItems": 5
            }
          }
        ],
        "summary": "List Outposts"
      }
    },
    "/outposts/{OutpostId}": {
      "delete": {
        "operationId": "DeleteOutpost",
        "description": "Deletes the Outpost.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOutpostOutput"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "484": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "OutpostId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$",
              "description": "The ID of the Outpost.",
              "minLength": 1,
              "maxLength": 180
            }
          }
        ],
        "summary": "Delete Outpost"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "get": {
        "operationId": "GetOutpost",
        "description": "Gets information about the specified Outpost.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOutpostOutput"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "OutpostId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$",
              "description": "The ID of the Outpost.",
              "minLength": 1,
              "maxLength": 180
            }
          }
        ],
        "summary": "Get Outpost"
      }
    },
    "/sites/{SiteId}": {
      "delete": {
        "operationId": "DeleteSite",
        "description": "Deletes the site.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSiteOutput"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "484": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "SiteId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "pattern": "os-[a-f0-9]{17}",
              "description": "The ID of the site.",
              "minLength": 1,
              "maxLength": 255
            }
          }
        ],
        "summary": "Delete Site"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/outposts/{OutpostId}/instanceTypes": {
      "get": {
        "operationId": "GetOutpostInstanceTypes",
        "description": "Lists the instance types for the specified Outpost.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOutpostInstanceTypesOutput"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "OutpostId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$",
              "description": "The ID of the Outpost.",
              "minLength": 1,
              "maxLength": 180
            }
          },
          {
            "name": "NextToken",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "description": "The pagination token.",
              "minLength": 1,
              "maxLength": 1005
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer",
              "description": "The maximum page size.",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "summary": "Get Outpost Instance Types"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/sites": {
      "get": {
        "operationId": "ListSites",
        "description": "Lists the sites for the specified AWS account.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSitesOutput"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "482": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "NextToken",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "pattern": ".*\\S.*",
              "description": "The pagination token.",
              "minLength": 1,
              "maxLength": 1005
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer",
              "description": "The maximum page size.",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "summary": "List Sites"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/orders": {
      "post": {
        "operationId": "CreateOrder",
        "description": "Creates an order for an Outpost.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderOutput"
                }
              }
            }
          },
          "480": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "481": {
            "description": "ConflictException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictException"
                }
              }
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "483": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "484": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "485": {
            "description": "ServiceQuotaExceededException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceQuotaExceededException"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["OutpostIdentifier", "LineItems", "PaymentOption"],
                "properties": {
                  "OutpostIdentifier": {
                    "description": " The ID or the Amazon Resource Name (ARN) of the Outpost. ",
                    "type": "string",
                    "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$",
                    "minLength": 1,
                    "maxLength": 180
                  },
                  "LineItems": {
                    "description": "The line items that make up the order.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LineItemRequest"
                    },
                    "minItems": 1,
                    "maxItems": 20
                  },
                  "PaymentOption": {
                    "description": "The payment option for the order.",
                    "type": "string",
                    "enum": ["ALL_UPFRONT", "NO_UPFRONT", "PARTIAL_UPFRONT"]
                  },
                  "PaymentTerm": {
                    "description": "The payment terms for the order.",
                    "type": "string",
                    "enum": ["THREE_YEARS"]
                  }
                }
              }
            }
          }
        },
        "summary": "Create Order"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/tags/{ResourceArn}": {
      "get": {
        "operationId": "ListTagsForResource",
        "description": "Lists the tags for the specified resource.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTagsForResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ResourceArn",
            "in": "path",
            "required": true,
            "description": "The Amazon Resource Name (ARN) of the resource.",
            "schema": {
              "type": "string",
              "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:([a-z\\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$",
              "maxLength": 1011
            }
          }
        ],
        "summary": "List Tags For Resource"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "operationId": "TagResource",
        "description": "Adds tags to the specified resource.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ResourceArn",
            "in": "path",
            "required": true,
            "description": "The Amazon Resource Name (ARN) of the resource.",
            "schema": {
              "type": "string",
              "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:([a-z\\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$",
              "maxLength": 1011
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Tags"],
                "properties": {
                  "Tags": {
                    "description": "The tags to add to the resource.",
                    "type": "object",
                    "minProperties": 1,
                    "maxProperties": 50,
                    "additionalProperties": {
                      "$ref": "#/components/schemas/TagValue"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Tag Resource"
      }
    },
    "/tags/{ResourceArn}#tagKeys": {
      "delete": {
        "operationId": "UntagResource",
        "description": "Removes tags from the specified resource.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UntagResourceResponse"
                }
              }
            }
          },
          "480": {
            "description": "InternalServerException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "481": {
            "description": "ValidationException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "482": {
            "description": "NotFoundException",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ResourceArn",
            "in": "path",
            "required": true,
            "description": "The Amazon Resource Name (ARN) of the resource.",
            "schema": {
              "type": "string",
              "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:([a-z\\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$",
              "maxLength": 1011
            }
          },
          {
            "name": "tagKeys",
            "in": "query",
            "required": true,
            "description": "The tag keys.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagKey"
              },
              "minItems": 1,
              "maxItems": 50
            }
          }
        ],
        "summary": "Untag Resource"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/components/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/components/parameters/X-Amz-SignedHeaders"
        }
      ]
    }
  },
  "components": {
    "parameters": {
      "X-Amz-Content-Sha256": {
        "name": "X-Amz-Content-Sha256",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Date": {
        "name": "X-Amz-Date",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Algorithm": {
        "name": "X-Amz-Algorithm",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Credential": {
        "name": "X-Amz-Credential",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Security-Token": {
        "name": "X-Amz-Security-Token",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-Signature": {
        "name": "X-Amz-Signature",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      },
      "X-Amz-SignedHeaders": {
        "name": "X-Amz-SignedHeaders",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false,
        "x-ignore": true
      }
    },
    "securitySchemes": {
      "hmac": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Amazon Signature authorization v4",
        "x-amazon-apigateway-authtype": "awsSigv4"
      }
    },
    "schemas": {
      "CreateOutpostOutput": {
        "type": "object",
        "properties": {
          "Outpost": {
            "$ref": "#/components/schemas/Outpost"
          }
        }
      },
      "ValidationException": {},
      "NotFoundException": {},
      "AccessDeniedException": {},
      "InternalServerException": {},
      "ServiceQuotaExceededException": {},
      "DeleteOutpostOutput": {
        "type": "object",
        "properties": {}
      },
      "DeleteSiteOutput": {
        "type": "object",
        "properties": {}
      },
      "GetOutpostOutput": {
        "type": "object",
        "properties": {
          "Outpost": {
            "$ref": "#/components/schemas/Outpost"
          }
        }
      },
      "GetOutpostInstanceTypesOutput": {
        "type": "object",
        "properties": {
          "InstanceTypes": {
            "$ref": "#/components/schemas/InstanceTypeListDefinition"
          },
          "NextToken": {
            "$ref": "#/components/schemas/Token"
          },
          "OutpostId": {
            "$ref": "#/components/schemas/OutpostId",
            "allOf": [
              {
                "$ref": "#/components/schemas/OutpostId"
              },
              {
                "description": " The ID of the Outpost. "
              }
            ]
          },
          "OutpostArn": {
            "$ref": "#/components/schemas/OutpostArn"
          }
        }
      },
      "ListOutpostsOutput": {
        "type": "object",
        "properties": {
          "Outposts": {
            "$ref": "#/components/schemas/outpostListDefinition"
          },
          "NextToken": {
            "$ref": "#/components/schemas/Token"
          }
        }
      },
      "ListSitesOutput": {
        "type": "object",
        "properties": {
          "Sites": {
            "$ref": "#/components/schemas/siteListDefinition"
          },
          "NextToken": {
            "$ref": "#/components/schemas/Token"
          }
        }
      },
      "AccountId": {
        "type": "string",
        "description": "The ID of the AWS account.",
        "minLength": 12,
        "maxLength": 12,
        "pattern": "\\d{12}"
      },
      "AvailabilityZone": {
        "type": "string",
        "pattern": "[a-z\\d-]+",
        "description": "<p>The Availability Zone.</p> <p>You must specify <code>AvailabilityZone</code> or <code>AvailabilityZoneId</code>.</p>",
        "minLength": 1,
        "maxLength": 1000
      },
      "AvailabilityZoneId": {
        "type": "string",
        "pattern": "[a-z]+[0-9]+-az[0-9]+",
        "description": "<p>The ID of the Availability Zone.</p> <p>You must specify <code>AvailabilityZone</code> or <code>AvailabilityZoneId</code>.</p>",
        "minLength": 1,
        "maxLength": 255
      },
      "OutpostName": {
        "type": "string",
        "pattern": "^[\\S ]+$",
        "description": "The name of the Outpost.",
        "minLength": 1,
        "maxLength": 255
      },
      "OutpostDescription": {
        "type": "string",
        "pattern": "^[\\S ]+$",
        "description": "The Outpost description.",
        "minLength": 1,
        "maxLength": 1000
      },
      "SiteId": {
        "type": "string",
        "pattern": "os-[a-f0-9]{17}",
        "description": "The ID of the site.",
        "minLength": 1,
        "maxLength": 255
      },
      "Outpost": {
        "type": "object",
        "properties": {
          "OutpostId": {
            "$ref": "#/components/schemas/OutpostId",
            "allOf": [
              {
                "$ref": "#/components/schemas/OutpostId"
              },
              {
                "description": " The ID of the Outpost. "
              }
            ]
          },
          "OwnerId": {
            "$ref": "#/components/schemas/OwnerId"
          },
          "OutpostArn": {
            "$ref": "#/components/schemas/OutpostArn"
          },
          "SiteId": {
            "$ref": "#/components/schemas/SiteId"
          },
          "Name": {
            "$ref": "#/components/schemas/OutpostName"
          },
          "Description": {
            "$ref": "#/components/schemas/OutpostDescription"
          },
          "LifeCycleStatus": {
            "$ref": "#/components/schemas/LifeCycleStatus"
          },
          "AvailabilityZone": {
            "$ref": "#/components/schemas/AvailabilityZone"
          },
          "AvailabilityZoneId": {
            "$ref": "#/components/schemas/AvailabilityZoneId"
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagMap"
              },
              {
                "description": "The Outpost tags."
              }
            ]
          },
          "SiteArn": {
            "$ref": "#/components/schemas/SiteArn"
          }
        },
        "description": "Information about an Outpost."
      },
      "OutpostId": {
        "type": "string",
        "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$",
        "description": "The ID of the Outpost.",
        "minLength": 1,
        "maxLength": 180
      },
      "Token": {
        "type": "string",
        "pattern": ".*\\S.*",
        "description": "The pagination token.",
        "minLength": 1,
        "maxLength": 1005
      },
      "InstanceTypeListDefinition": {
        "type": "array",
        "description": "Information about the instance types.",
        "items": {
          "$ref": "#/components/schemas/InstanceTypeItem"
        }
      },
      "OutpostArn": {
        "type": "string",
        "pattern": "^arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/op-[a-f0-9]{17}$",
        "description": "The Amazon Resource Name (ARN) of the Outpost.",
        "minLength": 1,
        "maxLength": 255
      },
      "InstanceType": {
        "type": "string",
        "description": "The instance type."
      },
      "InstanceTypeItem": {
        "type": "object",
        "properties": {
          "InstanceType": {
            "$ref": "#/components/schemas/InstanceType"
          }
        },
        "description": "Information about an instance type."
      },
      "LifeCycleStatus": {
        "type": "string",
        "description": "The life cycle status.",
        "pattern": "^[ A-Za-z]+$",
        "minLength": 1,
        "maxLength": 20
      },
      "outpostListDefinition": {
        "type": "array",
        "description": "Information about the Outposts.",
        "items": {
          "$ref": "#/components/schemas/Outpost"
        }
      },
      "siteListDefinition": {
        "type": "array",
        "description": "Information about the sites.",
        "items": {
          "$ref": "#/components/schemas/Site"
        }
      },
      "OwnerId": {
        "type": "string",
        "pattern": "\\d{12}",
        "description": "The AWS account ID of the Outpost owner.",
        "minLength": 12,
        "maxLength": 12
      },
      "SiteName": {
        "type": "string",
        "pattern": "^[\\S ]+$",
        "description": "The name of the site.",
        "minLength": 1,
        "maxLength": 1000
      },
      "SiteDescription": {
        "type": "string",
        "pattern": "^[\\S ]+$",
        "description": "The description of the site.",
        "minLength": 1,
        "maxLength": 1000
      },
      "Site": {
        "type": "object",
        "properties": {
          "SiteId": {
            "$ref": "#/components/schemas/SiteId"
          },
          "AccountId": {
            "$ref": "#/components/schemas/AccountId"
          },
          "Name": {
            "$ref": "#/components/schemas/SiteName"
          },
          "Description": {
            "$ref": "#/components/schemas/SiteDescription"
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagMap"
              },
              {
                "description": "The site tags."
              }
            ]
          },
          "SiteArn": {
            "$ref": "#/components/schemas/SiteArn"
          }
        },
        "description": "Information about a site."
      },
      "CreateOrderOutput": {
        "type": "object",
        "properties": {
          "Order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Order"
              },
              {
                "description": "Information about this order."
              }
            ]
          }
        }
      },
      "LineItemRequest": {
        "type": "object",
        "properties": {
          "CatalogItemId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkuCode"
              },
              {
                "description": "The ID of the catalog item."
              }
            ]
          },
          "Quantity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemQuantity"
              },
              {
                "description": "The quantity of a line item request."
              }
            ]
          }
        },
        "description": "Information about a line item request."
      },
      "ConflictException": {},
      "TagValue": {
        "type": "string",
        "pattern": "^[\\S \\n]+$",
        "maxLength": 256
      },
      "ListTagsForResourceResponse": {
        "type": "object",
        "properties": {
          "Tags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagMap"
              },
              {
                "description": "The resource tags."
              }
            ]
          }
        }
      },
      "TagResourceResponse": {
        "type": "object",
        "properties": {}
      },
      "UntagResourceResponse": {
        "type": "object",
        "properties": {}
      },
      "TagKey": {
        "type": "string",
        "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "PaymentOption": {
        "type": "string",
        "enum": ["ALL_UPFRONT", "NO_UPFRONT", "PARTIAL_UPFRONT"]
      },
      "Order": {
        "type": "object",
        "properties": {
          "OutpostId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OutpostIdOnly"
              },
              {
                "description": " The ID of the Outpost. "
              }
            ]
          },
          "OrderId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderId"
              },
              {
                "description": "The ID of the order."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              },
              {
                "description": "The status of the order"
              }
            ]
          },
          "LineItems": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemListDefinition"
              },
              {
                "description": "The line items for the order"
              }
            ]
          },
          "PaymentOption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentOption"
              },
              {
                "description": "The payment option for the order."
              }
            ]
          },
          "OrderSubmissionDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO8601Timestamp"
              },
              {
                "description": "The submission date for the order."
              }
            ]
          },
          "OrderFulfilledDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO8601Timestamp"
              },
              {
                "description": "The fulfillment date of the order."
              }
            ]
          }
        },
        "description": "Information about an order."
      },
      "TagMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/components/schemas/TagValue"
        }
      },
      "ISO8601Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "SkuCode": {
        "type": "string",
        "pattern": "OR-[A-Z0-9]{7}",
        "minLength": 1,
        "maxLength": 10
      },
      "LineItemId": {
        "type": "string",
        "pattern": "ooi-[a-f0-9]{17}"
      },
      "LineItemQuantity": {
        "type": "integer",
        "minimum": 1,
        "maximum": 20
      },
      "Status": {
        "type": "string",
        "pattern": "^[\\S ]+$",
        "minLength": 1,
        "maxLength": 1000
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "CatalogItemId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkuCode"
              },
              {
                "description": " The ID of the catalog item. "
              }
            ]
          },
          "LineItemId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemId"
              },
              {
                "description": "The ID of the line item."
              }
            ]
          },
          "Quantity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LineItemQuantity"
              },
              {
                "description": "The quantity of the line item."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              },
              {
                "description": "The status of the line item."
              }
            ]
          }
        },
        "description": "Information about a line item."
      },
      "LineItemListDefinition": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LineItem"
        }
      },
      "OutpostIdOnly": {
        "type": "string",
        "pattern": "^op-[a-f0-9]{17}$",
        "minLength": 1,
        "maxLength": 20
      },
      "OrderId": {
        "type": "string",
        "pattern": "oo-[a-f0-9]{17}$",
        "minLength": 1,
        "maxLength": 20
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "RECEIVED",
          "PENDING",
          "PROCESSING",
          "INSTALLING",
          "FULFILLED",
          "CANCELLED"
        ]
      },
      "SiteArn": {
        "type": "string",
        "pattern": "^arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:site/(os-[a-f0-9]{17})$",
        "description": "The Amazon Resource Name (ARN) of the site.",
        "minLength": 1,
        "maxLength": 255
      }
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "x-metadata": {
    "apiVersion": "2019-12-03",
    "endpointPrefix": "outposts",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "Outposts",
    "serviceFullName": "AWS Outposts",
    "serviceId": "Outposts",
    "signatureVersion": "v4",
    "signingName": "outposts",
    "uid": "outposts-2019-12-03",
    "targetPrefix": "OutpostsOlafService"
  }
}
