{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://cloudidentity.googleapis.com/"
    }
  ],
  "info": {
    "title": "Google Cloud Identity",
    "version": "v1",
    "x-logo": {
      "url": "https://lh3.googleusercontent.com/OvIiYrdH6Ya1aa5LLBzm9a0dThx_fryqFAG65-C3U5fNdbm1RK5ZOLmfxK9hnyeom3BcZAk2LDTCZFYH0FAI=w160-h160"
    },
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "API for provisioning and managing identity resources.",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/"
  },
  "externalDocs": {
    "url": "https://cloud.google.com/identity/"
  },
  "tags": [
    {
      "name": "devices"
    },
    {
      "name": "groups"
    },
    {
      "name": "groups"
    }
  ],
  "paths": {
    "/v1/devices": {
      "get": {
        "description": "Lists/Searches devices.",
        "operationId": "cloudidentity.devices.list",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer in the format: `customers/{customer_id}`, where customer_id is the customer to whom the device belongs. If you're using this API for your own organization, use `customers/my_customer`. If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "in": "query",
            "name": "customer",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Additional restrictions when fetching list of devices. [Help Center article link](https://support.google.com/a/answer/7549103)",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Order specification for devices in the response. Only one of the following field names may be used to specify the order: `create_time`, `last_sync_time`, `model`, `os_version`, `device_type` and `serial_number`. `desc` may be specified optionally at the end to specify results to be sorted in descending order. Default order is ascending.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The maximum number of Devices to return. If unspecified, at most 20 Devices will be returned. The maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Optional. A page token, received from a previous `ListDevices` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDevices` must match the call that provided the page token.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The view to use for the List request.",
            "in": "query",
            "name": "view",
            "schema": {
              "enum": ["VIEW_UNSPECIFIED", "COMPANY_INVENTORY", "USER_ASSIGNED_DEVICES"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1ListDevicesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "tags": ["devices"],
        "summary": "list devices",
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices.readonly"]
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Creates a device. Only company-owned device may be created.",
        "operationId": "cloudidentity.devices.create",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "in": "query",
            "name": "customer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1Device"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "tags": ["devices"],
        "summary": "create devices",
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices"]
          }
        ]
      }
    },
    "/v1/groups": {
      "get": {
        "description": "Lists groups within a customer or a domain.",
        "operationId": "cloudidentity.groups.list",
        "parameters": [
          {
            "description": "The default page size is 200 (max 1000) for the BASIC view, and 50 (max 500) for the FULL view.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The next_page_token value returned from a previous list request, if any.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. Customer ID to list all groups from.",
            "in": "query",
            "name": "parent",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Group resource view to be returned. Defaults to [View.BASIC]().",
            "in": "query",
            "name": "view",
            "schema": {
              "enum": ["VIEW_UNSPECIFIED", "BASIC", "FULL"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListGroupsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "list groups"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Creates a Group.",
        "operationId": "cloudidentity.groups.create",
        "parameters": [
          {
            "description": "Optional. The initial configuration option for the `Group`.",
            "in": "query",
            "name": "initialGroupConfig",
            "schema": {
              "enum": ["INITIAL_GROUP_CONFIG_UNSPECIFIED", "WITH_INITIAL_OWNER", "EMPTY"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "create groups"
      }
    },
    "/v1/groups:lookup": {
      "get": {
        "description": "Looks up [resource name](https://cloud.google.com/apis/design/resource_names) of a Group by its EntityKey.",
        "operationId": "cloudidentity.groups.lookup",
        "parameters": [
          {
            "description": "The ID of the entity within the given namespace. The ID must be unique within its namespace.",
            "in": "query",
            "name": "groupKey.id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Namespaces provide isolation for IDs, so an ID only needs to be unique within its namespace. Namespaces are currently only created as part of IdentitySource creation from Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is created corresponding to every Identity Source `identity_source_id`.",
            "in": "query",
            "name": "groupKey.namespace",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupGroupNameResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "lookup groups"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/groups:search": {
      "get": {
        "description": "Searches for Groups.",
        "operationId": "cloudidentity.groups.search",
        "parameters": [
          {
            "description": "The default page size is 200 (max 1000) for the BASIC view, and 50 (max 500) for the FULL view.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The next_page_token value returned from a previous search request, if any.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. `Required`. Query string for performing search on groups. Users can search on parent and label attributes of groups. EXACT match ('==') is supported on parent, and CONTAINS match ('in') is supported on labels.",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Group resource view to be returned. Defaults to [View.BASIC]().",
            "in": "query",
            "name": "view",
            "schema": {
              "enum": ["VIEW_UNSPECIFIED", "BASIC", "FULL"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchGroupsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "search groups"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/{name}": {
      "delete": {
        "description": "Deletes a Membership.",
        "operationId": "cloudidentity.groups.memberships.delete",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Membership to be deleted. Format: `groups/{group_id}/memberships/{member_id}`, where `group_id` is the unique ID assigned to the Group to which Membership belongs to, and member_id is the unique ID assigned to the member.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "in": "query",
            "name": "customer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "delete memberships"
      },
      "get": {
        "description": "Retrieves a Membership.",
        "operationId": "cloudidentity.groups.memberships.get",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Membership to be retrieved. Format: `groups/{group_id}/memberships/{member_id}`, where `group_id` is the unique id assigned to the Group to which Membership belongs to, and `member_id` is the unique ID assigned to the member.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "in": "query",
            "name": "customer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Membership"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "get memberships"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "patch": {
        "description": "Updates a Group.",
        "operationId": "cloudidentity.groups.patch",
        "parameters": [
          {
            "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Group in the format: `groups/{group_id}`, where group_id is the unique ID assigned to the Group. Must be left blank while creating a Group.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. Editable fields: `display_name`, `description`",
            "in": "query",
            "name": "updateMask",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "patch groups"
      }
    },
    "/v1/{name}:approve": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Approves device to access user data.",
        "operationId": "cloudidentity.devices.deviceUsers.approve",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where device_id is the unique ID assigned to the Device, and device_user_id is the unique ID assigned to the User.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "tags": ["devices"],
        "summary": "approve device Users",
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices"]
          }
        ]
      }
    },
    "/v1/{name}:block": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Blocks device from accessing user data",
        "operationId": "cloudidentity.devices.deviceUsers.block",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where device_id is the unique ID assigned to the Device, and device_user_id is the unique ID assigned to the User.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "tags": ["devices"],
        "summary": "block device Users",
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices"]
          }
        ]
      }
    },
    "/v1/{name}:cancelWipe": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Cancels an unfinished user account wipe. This operation can be used to cancel device wipe in the gap between the wipe operation returning success and the device being wiped.",
        "operationId": "cloudidentity.devices.deviceUsers.cancelWipe",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where device_id is the unique ID assigned to the Device, and device_user_id is the unique ID assigned to the User.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "tags": ["devices"],
        "summary": "cancel Wipe device Users",
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices"]
          }
        ]
      }
    },
    "/v1/{name}:modifyMembershipRoles": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Modifies the `MembershipRole`s of a `Membership`.",
        "operationId": "cloudidentity.groups.memberships.modifyMembershipRoles",
        "parameters": [
          {
            "description": "Required. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership` whose roles are to be modified. Must be of the form `groups/{group_id}/memberships/{membership_id}`.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyMembershipRolesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyMembershipRolesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "modify Membership Roles memberships"
      }
    },
    "/v1/{name}:wipe": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Wipes the user's account on a device. Other data on the device that is not associated with the user's work account is not affected. For example, if a Gmail app is installed on a device that is used for personal and work purposes, and the user is logged in to the Gmail app with their personal account as well as their work account, wiping the \"deviceUser\" by their work administrator will not affect their personal account within Gmail or other apps such as Photos.",
        "operationId": "cloudidentity.devices.deviceUsers.wipe",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where device_id is the unique ID assigned to the Device, and device_user_id is the unique ID assigned to the User.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "tags": ["devices"],
        "summary": "wipe device Users",
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices"]
          }
        ]
      }
    },
    "/v1/{parent}/clientStates": {
      "get": {
        "description": "Lists the client states for the given search query.",
        "operationId": "cloudidentity.devices.deviceUsers.clientStates.list",
        "parameters": [
          {
            "description": "Required. To list all ClientStates, set this to \"devices/-/deviceUsers/-\". To list all ClientStates owned by a DeviceUser, set this to the resource name of the DeviceUser. Format: devices/{device}/deviceUsers/{deviceUser}",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "in": "query",
            "name": "customer",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Additional restrictions when fetching list of client states.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Order specification for client states in the response.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. A page token, received from a previous `ListClientStates` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListClientStates` must match the call that provided the page token.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1ListClientStatesResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "tags": ["devices"],
        "summary": "list client States",
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices.readonly"]
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/{parent}/deviceUsers": {
      "get": {
        "description": "Lists/Searches DeviceUsers.",
        "operationId": "cloudidentity.devices.deviceUsers.list",
        "parameters": [
          {
            "description": "Required. To list all DeviceUsers, set this to \"devices/-\". To list all DeviceUsers owned by a device, set this to the resource name of the device. Format: devices/{device}",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "in": "query",
            "name": "customer",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Additional restrictions when fetching list of devices. [HC article](https://support.google.com/a/answer/7549103)",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Order specification for devices in the response.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The maximum number of DeviceUsers to return. If unspecified, at most 5 DeviceUsers will be returned. The maximum value is 20; values above 20 will be coerced to 20.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Optional. A page token, received from a previous `ListDeviceUsers` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListBooks` must match the call that provided the page token.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "tags": ["devices"],
        "summary": "list device Users",
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices.readonly"]
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/{parent}/memberships": {
      "get": {
        "description": "Lists Memberships within a Group.",
        "operationId": "cloudidentity.groups.memberships.list",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Group to list Memberships within. Format: `groups/{group_id}`, where `group_id` is the unique ID assigned to the Group.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The default page size is 200 (max 1000) for the BASIC view, and 50 (max 500) for the FULL view.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The next_page_token value returned from a previous list request, if any.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Membership resource view to be returned. Defaults to View.BASIC.",
            "in": "query",
            "name": "view",
            "schema": {
              "enum": ["VIEW_UNSPECIFIED", "BASIC", "FULL"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMembershipsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "list memberships"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Creates a Membership.",
        "operationId": "cloudidentity.groups.memberships.create",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Group to create Membership within. Format: `groups/{group_id}`, where `group_id` is the unique ID assigned to the Group.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Membership"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "create memberships"
      }
    },
    "/v1/{parent}/memberships:lookup": {
      "get": {
        "description": "Looks up [resource name](https://cloud.google.com/apis/design/resource_names) of a Membership within a Group by member's EntityKey.",
        "operationId": "cloudidentity.groups.memberships.lookup",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Group to lookup Membership within. Format: `groups/{group_id}`, where `group_id` is the unique ID assigned to the Group.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the entity within the given namespace. The ID must be unique within its namespace.",
            "in": "query",
            "name": "memberKey.id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Namespaces provide isolation for IDs, so an ID only needs to be unique within its namespace. Namespaces are currently only created as part of IdentitySource creation from Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is created corresponding to every Identity Source `identity_source_id`.",
            "in": "query",
            "name": "memberKey.namespace",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupMembershipNameResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "lookup memberships"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/{parent}:lookup": {
      "get": {
        "description": "Looks up resource names of the DeviceUsers associated with the caller's credentials, as well as the properties provided in the request. This method must be called with end-user credentials with the scope: https://www.googleapis.com/auth/cloud-identity.devices.lookup If multiple properties are provided, only DeviceUsers having all of these properties are considered as matches - i.e. the query behaves like an AND. Different platforms require different amounts of information from the caller to ensure that the DeviceUser is uniquely identified. - iOS: No properties need to be passed, the caller's credentials are sufficient to identify the corresponding DeviceUser. - Android: Specifying the 'android_id' field is required. - Desktop: Specifying the 'raw_resource_id' field is required.",
        "operationId": "cloudidentity.devices.deviceUsers.lookup",
        "parameters": [
          {
            "description": "Must be set to \"devices/-/deviceUsers\" to search across all DeviceUser belonging to the user.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Android Id returned by [Settings.Secure#ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).",
            "in": "query",
            "name": "androidId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of DeviceUsers to return. If unspecified, at most 20 DeviceUsers will be returned. The maximum value is 20; values above 20 will be coerced to 20.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "A page token, received from a previous `LookupDeviceUsers` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `LookupDeviceUsers` must match the call that provided the page token.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Raw Resource Id used by Google Endpoint Verification. If the user is enrolled into Google Endpoint Verification, this id will be saved as the 'device_resource_id' field in the following platform dependent files. Mac: ~/.secureConnect/context_aware_config.json Windows: C:\\Users\\%USERPROFILE%\\.secureConnect\\context_aware_config.json Linux: ~/.secureConnect/context_aware_config.json",
            "in": "query",
            "name": "rawResourceId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user whose DeviceUser's resource name will be fetched. Must be set to 'me' to fetch the DeviceUser's resource name for the calling user.",
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.devices.lookup"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.devices.lookup"]
          }
        ],
        "tags": ["devices"],
        "summary": "lookup device Users"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/{name}:cancel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Cancels a UserInvitation that was already sent.",
        "operationId": "cloudidentity.customers.userinvitations.cancel",
        "parameters": [
          {
            "description": "Required. `UserInvitation` name in the format `customers/{customer}/userinvitations/{user_email_address}`",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelUserInvitationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.userinvitations"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.userinvitations"]
          }
        ],
        "tags": ["customers"],
        "summary": "cancel userinvitations"
      }
    },
    "/v1/{name}:isInvitableUser": {
      "get": {
        "description": "Verifies whether a user account is eligible to receive a UserInvitation (is an unmanaged account). Eligibility is based on the following criteria: * the email address is a consumer account and it's the primary email address of the account, and * the domain of the email address matches an existing verified Google Workspace or Cloud Identity domain If both conditions are met, the user is eligible. **Note:** This method is not supported for Workspace Essentials customers.",
        "operationId": "cloudidentity.customers.userinvitations.isInvitableUser",
        "parameters": [
          {
            "description": "Required. `UserInvitation` name in the format `customers/{customer}/userinvitations/{user_email_address}`",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsInvitableUserResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.userinvitations"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.userinvitations"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.userinvitations.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.userinvitations.readonly"]
          }
        ],
        "tags": ["customers"],
        "summary": "is Invitable User userinvitations"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/{name}:send": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Sends a UserInvitation to email. If the `UserInvitation` does not exist for this request and it is a valid request, the request creates a `UserInvitation`. **Note:** The `get` and `list` methods have a 48-hour delay where newly-created consumer accounts will not appear in the results. You can still send a `UserInvitation` to those accounts if you know the unmanaged email address and IsInvitableUser==True.",
        "operationId": "cloudidentity.customers.userinvitations.send",
        "parameters": [
          {
            "description": "Required. `UserInvitation` name in the format `customers/{customer}/userinvitations/{user_email_address}`",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendUserInvitationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.userinvitations"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.userinvitations"]
          }
        ],
        "tags": ["customers"],
        "summary": "send userinvitations"
      }
    },
    "/v1/{parent}/memberships:checkTransitiveMembership": {
      "get": {
        "description": "Check a potential member for membership in a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A member has membership to a group as long as there is a single viewable transitive membership between the group and the member. The actor must have view permissions to at least one transitive membership between the member and group.",
        "operationId": "cloudidentity.groups.memberships.checkTransitiveMembership",
        "parameters": [
          {
            "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the group to check the transitive membership in. Format: `groups/{group}`, where `group` is the unique id assigned to the Group to which the Membership belongs to.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. A CEL expression that MUST include member specification. This is a `required` field. Certain groups are uniquely identified by both a 'member_key_id' and a 'member_key_namespace', which requires an additional query input: 'member_key_namespace'. Example query: `member_key_id == 'member_key_id_value'`",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTransitiveMembershipResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "check Transitive Membership memberships"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/{parent}/memberships:getMembershipGraph": {
      "get": {
        "description": "Get a membership graph of just a member or both a member and a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. Given a member, the response will contain all membership paths from the member. Given both a group and a member, the response will contain all membership paths between the group and the member.",
        "operationId": "cloudidentity.groups.memberships.getMembershipGraph",
        "parameters": [
          {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the group to search transitive memberships in. Format: `groups/{group}`, where `group` is the unique ID assigned to the Group to which the Membership belongs to. group can be a wildcard collection id \"-\". When a group is specified, the membership graph will be constrained to paths between the member (defined in the query) and the parent. If a wildcard collection is provided, all membership paths connected to the member will be returned.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. A CEL expression that MUST include member specification AND label(s). Certain groups are uniquely identified by both a 'member_key_id' and a 'member_key_namespace', which requires an additional query input: 'member_key_namespace'. Example query: `member_key_id == 'member_key_id_value' && in labels`",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "get Membership Graph memberships"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/{parent}/memberships:searchTransitiveGroups": {
      "get": {
        "description": "Search transitive groups of a member. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive group is any group that has a direct or indirect membership to the member. Actor must have view permissions all transitive groups.",
        "operationId": "cloudidentity.groups.memberships.searchTransitiveGroups",
        "parameters": [
          {
            "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the group to search transitive memberships in. Format: `groups/{group}`, where `group` is always '-' as this API will search across all groups for a given member.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The default page size is 200 (max 1000).",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The next_page_token value returned from a previous list request, if any.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Required. A CEL expression that MUST include member specification AND label(s). This is a `required` field. Users can search on label attributes of groups. CONTAINS match ('in') is supported on labels. Identity-mapped groups are uniquely identified by both a `member_key_id` and a `member_key_namespace`, which requires an additional query input: `member_key_namespace`. Example query: `member_key_id == 'member_key_id_value' && in labels`",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTransitiveGroupsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "search Transitive Groups memberships"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/{parent}/memberships:searchTransitiveMemberships": {
      "get": {
        "description": "Search transitive memberships of a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the group is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive membership is any direct or indirect membership of a group. Actor must have view permissions to all transitive memberships.",
        "operationId": "cloudidentity.groups.memberships.searchTransitiveMemberships",
        "parameters": [
          {
            "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the group to search transitive memberships in. Format: `groups/{group}`, where `group` is the unique ID assigned to the Group.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The default page size is 200 (max 1000).",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The next_page_token value returned from a previous list request, if any.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTransitiveMembershipsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.groups.readonly"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          }
        ],
        "tags": ["groups"],
        "summary": "search Transitive Memberships memberships"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1/{parent}/userinvitations": {
      "get": {
        "description": "Retrieves a list of UserInvitation resources. **Note:** New consumer accounts with the customer's verified domain created within the previous 48 hours will not appear in the result. This delay also applies to newly-verified domains.",
        "operationId": "cloudidentity.customers.userinvitations.list",
        "parameters": [
          {
            "description": "Required. The customer ID of the Google Workspace or Cloud Identity account the UserInvitation resources are associated with.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. A query string for filtering `UserInvitation` results by their current state, in the format: `\"state=='invited'\"`.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The sort order of the list results. You can sort the results in descending order based on either email or last update timestamp but not both, using `order_by=\"email desc\"`. Currently, sorting is supported for `update_time asc`, `update_time desc`, `email asc`, and `email desc`. If not specified, results will be returned based on `email asc` order.",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The maximum number of UserInvitation resources to return. If unspecified, at most 100 resources will be returned. The maximum value is 200; values above 200 will be set to 200.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Optional. A page token, received from a previous `ListUserInvitations` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListBooks` must match the call that provided the page token.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUserInvitationsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.userinvitations"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.userinvitations"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-identity.userinvitations.readonly"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-identity.userinvitations.readonly"]
          }
        ],
        "tags": ["customers"],
        "summary": "list userinvitations"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    }
  },
  "components": {
    "parameters": {
      "_.xgafv": {
        "description": "V1 error format.",
        "in": "query",
        "name": "$.xgafv",
        "schema": {
          "enum": ["1", "2"],
          "type": "string"
        },
        "x-ignore": true
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "alt": {
        "description": "Data format for response.",
        "in": "query",
        "name": "alt",
        "schema": {
          "enum": ["json", "media", "proto"],
          "type": "string"
        },
        "x-ignore": true
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "prettyPrint": {
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "schema": {
          "type": "boolean"
        },
        "x-ignore": true
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      }
    },
    "schemas": {
      "EntityKey": {
        "description": "An EntityKey uniquely identifies an Entity. Namespaces are used to provide isolation for IDs. A single ID can be reused across namespaces but the combination of a namespace and an ID must be unique.",
        "properties": {
          "id": {
            "description": "The ID of the entity within the given namespace. The ID must be unique within its namespace.",
            "type": "string"
          },
          "namespace": {
            "description": "Namespaces provide isolation for IDs, so an ID only needs to be unique within its namespace. Namespaces are currently only created as part of IdentitySource creation from Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is created corresponding to every Identity Source `identity_source_id`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1AndroidAttributes": {
        "description": "Resource representing the Android specific attributes of a Device.",
        "properties": {
          "enabledUnknownSources": {
            "description": "Whether applications from unknown sources can be installed on device.",
            "type": "boolean"
          },
          "ownerProfileAccount": {
            "description": "Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.",
            "type": "boolean"
          },
          "ownershipPrivilege": {
            "description": "Ownership privileges on device.",
            "enum": ["OWNERSHIP_PRIVILEGE_UNSPECIFIED", "DEVICE_ADMINISTRATOR", "PROFILE_OWNER", "DEVICE_OWNER"],
            "type": "string"
          },
          "supportsWorkProfile": {
            "description": "Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the \"Enforce Work Profile\" policy.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest": {
        "description": "Request message for approving the device to access user data.",
        "properties": {
          "customer": {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest": {
        "description": "Request message for blocking account on device.",
        "properties": {
          "customer": {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest": {
        "description": "Request message for cancelling an unfinished user account wipe.",
        "properties": {
          "customer": {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1ClientState": {
        "description": "Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users",
        "properties": {
          "assetTags": {
            "description": "The caller can specify asset tags for this resource",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "complianceState": {
            "description": "The compliance state of the resource as specified by the API client.",
            "enum": ["COMPLIANCE_STATE_UNSPECIFIED", "COMPLIANT", "NON_COMPLIANT"],
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the client state data was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "customId": {
            "description": "This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field.",
            "type": "string"
          },
          "etag": {
            "description": "The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest",
            "type": "string"
          },
          "healthScore": {
            "description": "The Health score of the resource. The Health score is the callers specification of the condition of the device from a usability point of view. For example, a third-party device management provider may specify a health score based on its compliance with organizational policies.",
            "enum": ["HEALTH_SCORE_UNSPECIFIED", "VERY_POOR", "POOR", "NEUTRAL", "GOOD", "VERY_GOOD"],
            "type": "string"
          },
          "keyValuePairs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1CustomAttributeValue"
            },
            "description": "The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.",
            "type": "object"
          },
          "lastUpdateTime": {
            "description": "Output only. The time the client state data was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "managed": {
            "description": "The management state of the resource as specified by the API client.",
            "enum": ["MANAGED_STATE_UNSPECIFIED", "MANAGED", "UNMANAGED"],
            "type": "string"
          },
          "name": {
            "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device_id}/deviceUsers/{device_user_id}/clientState/{partner_id}`, where partner_id corresponds to the partner storing the data. For partners belonging to the \"BeyondCorp Alliance\", this is the partner ID specified to you by Google. For all other callers, this is a string of the form: `{customer_id}-suffix`, where `customer_id` is your customer ID. The *suffix* is any string the caller specifies. This string will be displayed verbatim in the administration console. This suffix is used in setting up Custom Access Levels in Context-Aware Access. Your organization's customer ID can be obtained from the URL: `GET https://www.googleapis.com/admin/directory/v1/customers/my_customer` The `id` field in the response contains the customer ID starting with the letter 'C'. The customer ID to be used in this API is the string after the letter 'C' (not including 'C')",
            "readOnly": true,
            "type": "string"
          },
          "ownerType": {
            "description": "Output only. The owner of the ClientState",
            "enum": ["OWNER_TYPE_UNSPECIFIED", "OWNER_TYPE_CUSTOMER", "OWNER_TYPE_PARTNER"],
            "readOnly": true,
            "type": "string"
          },
          "scoreReason": {
            "description": "A descriptive cause of the health score.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1CustomAttributeValue": {
        "description": "Additional custom attribute values may be one of these types",
        "properties": {
          "boolValue": {
            "description": "Represents a boolean value.",
            "type": "boolean"
          },
          "numberValue": {
            "description": "Represents a double value.",
            "format": "double",
            "type": "number"
          },
          "stringValue": {
            "description": "Represents a string value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1Device": {
        "description": " A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.",
        "properties": {
          "androidSpecificAttributes": {
            "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1AndroidAttributes",
            "description": "Output only. Attributes specific to Android devices.",
            "readOnly": true
          },
          "assetTag": {
            "description": "Asset tag of the device.",
            "type": "string"
          },
          "basebandVersion": {
            "description": "Output only. Baseband version of the device.",
            "readOnly": true,
            "type": "string"
          },
          "bootloaderVersion": {
            "description": "Output only. Device bootloader version. Example: 0.6.7.",
            "readOnly": true,
            "type": "string"
          },
          "brand": {
            "description": "Output only. Device brand. Example: Samsung.",
            "readOnly": true,
            "type": "string"
          },
          "buildNumber": {
            "description": "Output only. Build number of the device.",
            "readOnly": true,
            "type": "string"
          },
          "compromisedState": {
            "description": "Output only. Represents whether the Device is compromised.",
            "enum": ["COMPROMISED_STATE_UNSPECIFIED", "COMPROMISED", "UNCOMPROMISED"],
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deviceType": {
            "description": "Output only. Type of device.",
            "enum": [
              "DEVICE_TYPE_UNSPECIFIED",
              "ANDROID",
              "IOS",
              "GOOGLE_SYNC",
              "WINDOWS",
              "MAC_OS",
              "LINUX",
              "CHROME_OS"
            ],
            "readOnly": true,
            "type": "string"
          },
          "enabledDeveloperOptions": {
            "description": "Output only. Whether developer options is enabled on device.",
            "readOnly": true,
            "type": "boolean"
          },
          "enabledUsbDebugging": {
            "description": "Output only. Whether USB debugging is enabled on device.",
            "readOnly": true,
            "type": "boolean"
          },
          "encryptionState": {
            "description": "Output only. Device encryption state.",
            "enum": ["ENCRYPTION_STATE_UNSPECIFIED", "UNSUPPORTED_BY_DEVICE", "ENCRYPTED", "NOT_ENCRYPTED"],
            "readOnly": true,
            "type": "string"
          },
          "imei": {
            "description": "Output only. IMEI number of device if GSM device; empty otherwise.",
            "readOnly": true,
            "type": "string"
          },
          "kernelVersion": {
            "description": "Output only. Kernel version of the device.",
            "readOnly": true,
            "type": "string"
          },
          "lastSyncTime": {
            "description": "Most recent time when device synced with this service.",
            "format": "google-datetime",
            "type": "string"
          },
          "managementState": {
            "description": "Output only. Management state of the device",
            "enum": [
              "MANAGEMENT_STATE_UNSPECIFIED",
              "APPROVED",
              "BLOCKED",
              "PENDING",
              "UNPROVISIONED",
              "WIPING",
              "WIPED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "manufacturer": {
            "description": "Output only. Device manufacturer. Example: Motorola.",
            "readOnly": true,
            "type": "string"
          },
          "meid": {
            "description": "Output only. MEID number of device if CDMA device; empty otherwise.",
            "readOnly": true,
            "type": "string"
          },
          "model": {
            "description": "Output only. Model name of device. Example: Pixel 3.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.",
            "readOnly": true,
            "type": "string"
          },
          "networkOperator": {
            "description": "Output only. Mobile or network operator of device, if available.",
            "readOnly": true,
            "type": "string"
          },
          "osVersion": {
            "description": "Output only. OS version of the device. Example: Android 8.1.0.",
            "readOnly": true,
            "type": "string"
          },
          "otherAccounts": {
            "description": "Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: \"com.example\", \"xyz.com\".",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "ownerType": {
            "description": "Output only. Whether the device is owned by the company or an individual",
            "enum": ["DEVICE_OWNERSHIP_UNSPECIFIED", "COMPANY", "BYOD"],
            "readOnly": true,
            "type": "string"
          },
          "releaseVersion": {
            "description": "Output only. OS release version. Example: 6.0.",
            "readOnly": true,
            "type": "string"
          },
          "securityPatchTime": {
            "description": "Output only. OS security patch update time on device.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial Number of device. Example: HT82V1A01076.",
            "type": "string"
          },
          "wifiMacAddresses": {
            "description": "WiFi MAC addresses of device.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "deviceId": {
            "description": "Unique identifier for the device.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1DeviceUser": {
        "description": "Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device",
        "properties": {
          "compromisedState": {
            "description": "Compromised State of the DeviceUser object",
            "enum": ["COMPROMISED_STATE_UNSPECIFIED", "COMPROMISED", "NOT_COMPROMISED"],
            "type": "string"
          },
          "createTime": {
            "description": "When the user first signed in to the device",
            "format": "google-datetime",
            "type": "string"
          },
          "firstSyncTime": {
            "description": "Output only. Most recent time when user registered with this service.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "languageCode": {
            "description": "Output only. Default locale used on device, in IETF BCP-47 format.",
            "readOnly": true,
            "type": "string"
          },
          "lastSyncTime": {
            "description": "Output only. Last time when user synced with policies.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "managementState": {
            "description": "Output only. Management state of the user on the device.",
            "enum": [
              "MANAGEMENT_STATE_UNSPECIFIED",
              "WIPING",
              "WIPED",
              "APPROVED",
              "BLOCKED",
              "PENDING_APPROVAL",
              "UNENROLLED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the DeviceUser in format: `devices/{device_id}/deviceUsers/{user_id}`, where user_id is the ID of the user associated with the user session.",
            "readOnly": true,
            "type": "string"
          },
          "passwordState": {
            "description": "Password state of the DeviceUser object",
            "enum": ["PASSWORD_STATE_UNSPECIFIED", "PASSWORD_SET", "PASSWORD_NOT_SET"],
            "type": "string"
          },
          "userAgent": {
            "description": "Output only. User agent on the device for this specific user",
            "readOnly": true,
            "type": "string"
          },
          "userEmail": {
            "description": "Email address of the user registered on the device.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1ListClientStatesResponse": {
        "description": "Response message that is returned in ListClientStates.",
        "properties": {
          "clientStates": {
            "description": "Client states meeting the list restrictions.",
            "items": {
              "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1ClientState"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "Token to retrieve the next page of results. Empty if there are no more results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse": {
        "description": "Response message that is returned from the ListDeviceUsers method.",
        "properties": {
          "deviceUsers": {
            "description": "Devices meeting the list restrictions.",
            "items": {
              "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "Token to retrieve the next page of results. Empty if there are no more results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1ListDevicesResponse": {
        "description": "Response message that is returned from the ListDevices method.",
        "properties": {
          "devices": {
            "description": "Devices meeting the list restrictions.",
            "items": {
              "$ref": "#/components/schemas/GoogleAppsCloudidentityDevicesV1Device"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "Token to retrieve the next page of results. Empty if there are no more results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse": {
        "description": "Response containing resource names of the DeviceUsers associated with the caller's credentials.",
        "properties": {
          "customer": {
            "description": "The obfuscated customer Id that may be passed back to other Devices API methods such as List, Get, etc.",
            "type": "string"
          },
          "names": {
            "description": "[Resource names](https://cloud.google.com/apis/design/resource_names) of the DeviceUsers in the format: `devices/{device_id}/deviceUsers/{user_resource_id}`, where device_id is the unique ID assigned to a Device and user_resource_id is the unique user ID",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "Token to retrieve the next page of results. Empty if there are no more results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest": {
        "description": "Request message for starting an account wipe on device.",
        "properties": {
          "customer": {
            "description": "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Group": {
        "description": "Resource representing a Group.",
        "properties": {
          "createTime": {
            "description": "Output only. The time when the Group was created. Output only.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "An extended description to help users determine the purpose of a Group. For example, you can include information about who should join the Group, the types of messages to send to the Group, links to FAQs about the Group, or related Groups. Maximum length is 4,096 characters.",
            "type": "string"
          },
          "displayName": {
            "description": "The Group's display name.",
            "type": "string"
          },
          "groupKey": {
            "$ref": "#/components/schemas/EntityKey",
            "description": "Required. Immutable. EntityKey of the Group. Must be set when creating a Group, read-only afterwards."
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Required. `Required`. Labels for Group resource. For creating Groups under a namespace, set label key to 'labels/system/groups/external' and label value as empty.",
            "type": "object"
          },
          "name": {
            "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Group in the format: `groups/{group_id}`, where group_id is the unique ID assigned to the Group. Must be left blank while creating a Group.",
            "readOnly": true,
            "type": "string"
          },
          "parent": {
            "description": "Required. Immutable. The entity under which this Group resides in Cloud Identity resource hierarchy. Must be set when creating a Group, read-only afterwards. Currently allowed types: `identitysources`.",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time when the Group was last updated. Output only.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "dynamicGroupMetadata": {
            "$ref": "#/components/schemas/DynamicGroupMetadata",
            "description": "Optional. Dynamic group metadata like queries and status."
          }
        },
        "type": "object"
      },
      "ListGroupsResponse": {
        "description": "Response message for ListGroups operation.",
        "properties": {
          "groups": {
            "description": "Groups returned in response to list request. The results are not sorted.",
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "Token to retrieve the next page of results, or empty if there are no more results available for listing.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListMembershipsResponse": {
        "properties": {
          "memberships": {
            "description": "List of Memberships.",
            "items": {
              "$ref": "#/components/schemas/Membership"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "Token to retrieve the next page of results, or empty if there are no more results available for listing.",
            "type": "string"
          }
        },
        "type": "object",
        "description": "The response message for MembershipsService.ListMemberships."
      },
      "LookupGroupNameResponse": {
        "properties": {
          "name": {
            "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the Group in the format: `groups/{group_id}`, where `group_id` is the unique ID assigned to the Group.",
            "type": "string"
          }
        },
        "type": "object",
        "description": "The response message for GroupsService.LookupGroupName."
      },
      "LookupMembershipNameResponse": {
        "properties": {
          "name": {
            "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the Membership being looked up. Format: `groups/{group_id}/memberships/{member_id}`, where `group_id` is the unique ID assigned to the Group to which Membership belongs to, and `member_id` is the unique ID assigned to the member.",
            "type": "string"
          }
        },
        "type": "object",
        "description": "The response message for MembershipsService.LookupMembershipName."
      },
      "Membership": {
        "description": "Resource representing a Membership within a Group",
        "properties": {
          "createTime": {
            "description": "Output only. Creation timestamp of the Membership. Output only.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Membership in the format: `groups/{group_id}/memberships/{member_id}`, where group_id is the unique ID assigned to the Group to which Membership belongs to, and member_id is the unique ID assigned to the member Must be left blank while creating a Membership.",
            "readOnly": true,
            "type": "string"
          },
          "preferredMemberKey": {
            "$ref": "#/components/schemas/EntityKey",
            "description": "Required. Immutable. EntityKey of the entity to be added as the member. Must be set while creating a Membership, read-only afterwards. Currently allowed entity types: `Users`, `Groups`."
          },
          "roles": {
            "description": "Roles for a member within the Group. Currently supported MembershipRoles: `\"MEMBER\"`.",
            "items": {
              "$ref": "#/components/schemas/MembershipRole"
            },
            "type": "array"
          },
          "type": {
            "description": "Output only. The type of the membership.",
            "enum": ["TYPE_UNSPECIFIED", "USER", "SERVICE_ACCOUNT", "GROUP", "OTHER", "OTHER"],
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Last updated timestamp of the Membership. Output only.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MembershipRole": {
        "description": "Resource representing a role within a Membership.",
        "properties": {
          "name": {
            "description": "MembershipRole in string format. Currently supported MembershipRoles: `\"MEMBER\"`.",
            "type": "string"
          },
          "expiryDetail": {
            "$ref": "#/components/schemas/ExpiryDetail",
            "description": "The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value."
          },
          "restrictionEvaluations": {
            "$ref": "#/components/schemas/RestrictionEvaluations",
            "description": "Evaluations of restrictions applied to parent group on this membership."
          }
        },
        "type": "object"
      },
      "ModifyMembershipRolesRequest": {
        "description": "The request message for MembershipsService.ModifyMembershipRoles.",
        "properties": {
          "addRoles": {
            "description": "The `MembershipRole`s to be added. Adding or removing roles in the same request as updating roles is not supported. Must not be set if `update_roles_params` is set.",
            "items": {
              "$ref": "#/components/schemas/MembershipRole"
            },
            "type": "array"
          },
          "removeRoles": {
            "description": "The `name`s of the `MembershipRole`s to be removed. Adding or removing roles in the same request as updating roles is not supported. It is not possible to remove the `MEMBER` `MembershipRole`. If you wish to delete a `Membership`, call MembershipsService.DeleteMembership instead. Must not contain `MEMBER`. Must not be set if `update_roles_params` is set.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "updateRolesParams": {
            "description": "The `MembershipRole`s to be updated. Updating roles in the same request as adding or removing roles is not supported. Must not be set if either `add_roles` or `remove_roles` is set.",
            "items": {
              "$ref": "#/components/schemas/UpdateMembershipRolesParams"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ModifyMembershipRolesResponse": {
        "description": "The response message for MembershipsService.ModifyMembershipRoles.",
        "properties": {
          "membership": {
            "$ref": "#/components/schemas/Membership",
            "description": "The `Membership` resource after modifying its `MembershipRole`s."
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "This resource represents a long-running operation that is the result of a network API call.",
        "properties": {
          "done": {
            "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/Status",
            "description": "The error result of the operation in case of failure or cancellation."
          },
          "metadata": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "type": "object"
          },
          "name": {
            "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "type": "string"
          },
          "response": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "SearchGroupsResponse": {
        "properties": {
          "groups": {
            "description": "List of Groups satisfying the search query.",
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "Token to retrieve the next page of results, or empty if there are no more results available for specified query.",
            "type": "string"
          }
        },
        "type": "object",
        "description": "The response message for GroupsService.SearchGroups."
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CancelUserInvitationRequest": {
        "description": "Request to cancel sent invitation for target email in UserInvitation.",
        "properties": {},
        "type": "object"
      },
      "CheckTransitiveMembershipResponse": {
        "description": "The response message for MembershipsService.CheckTransitiveMembership.",
        "properties": {
          "hasMembership": {
            "description": "Response does not include the possible roles of a member since the behavior of this rpc is not all-or-nothing unlike the other rpcs. So, it may not be possible to list all the roles definitively, due to possible lack of authorization in some of the paths.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DynamicGroupMetadata": {
        "description": "Dynamic group metadata like queries and status.",
        "properties": {
          "queries": {
            "description": "Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.",
            "items": {
              "$ref": "#/components/schemas/DynamicGroupQuery"
            },
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/DynamicGroupStatus",
            "description": "Output only. Status of the dynamic group.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DynamicGroupQuery": {
        "description": "Defines a query on a resource.",
        "properties": {
          "query": {
            "description": "Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`",
            "type": "string"
          },
          "resourceType": {
            "description": "Resource type for the Dynamic Group Query",
            "enum": ["RESOURCE_TYPE_UNSPECIFIED", "USER"],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DynamicGroupStatus": {
        "description": "The current status of a dynamic group along with timestamp.",
        "properties": {
          "status": {
            "description": "Status of the dynamic group.",
            "enum": ["STATUS_UNSPECIFIED", "UP_TO_DATE", "UPDATING_MEMBERSHIPS", "INVALID_QUERY"],
            "type": "string"
          },
          "statusTime": {
            "description": "The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExpiryDetail": {
        "description": "The `MembershipRole` expiry details.",
        "properties": {
          "expireTime": {
            "description": "The time at which the `MembershipRole` will expire.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GroupRelation": {
        "description": "Message representing a transitive group of a user or a group.",
        "properties": {
          "displayName": {
            "description": "Display name for this group.",
            "type": "string"
          },
          "group": {
            "description": "Resource name for this group.",
            "type": "string"
          },
          "groupKey": {
            "$ref": "#/components/schemas/EntityKey",
            "description": "Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace."
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels for Group resource.",
            "type": "object"
          },
          "relationType": {
            "description": "The relation between the member and the transitive group.",
            "enum": ["RELATION_TYPE_UNSPECIFIED", "DIRECT", "INDIRECT", "DIRECT_AND_INDIRECT"],
            "type": "string"
          },
          "roles": {
            "description": "Membership roles of the member for the group.",
            "items": {
              "$ref": "#/components/schemas/TransitiveMembershipRole"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IsInvitableUserResponse": {
        "description": "Response for IsInvitableUser RPC.",
        "properties": {
          "isInvitableUser": {
            "description": "Returns true if the email address is invitable.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ListUserInvitationsResponse": {
        "description": "Response message for UserInvitation listing request.",
        "properties": {
          "nextPageToken": {
            "description": "The token for the next page. If not empty, indicates that there may be more `UserInvitation` resources that match the listing request; this value can be used in a subsequent ListUserInvitationsRequest to get continued results with the current list call.",
            "type": "string"
          },
          "userInvitations": {
            "description": "The list of UserInvitation resources.",
            "items": {
              "$ref": "#/components/schemas/UserInvitation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MemberRelation": {
        "description": "Message representing a transitive membership of a group.",
        "properties": {
          "member": {
            "description": "Resource name for this member.",
            "type": "string"
          },
          "preferredMemberKey": {
            "description": "Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.",
            "items": {
              "$ref": "#/components/schemas/EntityKey"
            },
            "type": "array"
          },
          "relationType": {
            "description": "The relation between the group and the transitive member.",
            "enum": ["RELATION_TYPE_UNSPECIFIED", "DIRECT", "INDIRECT", "DIRECT_AND_INDIRECT"],
            "type": "string"
          },
          "roles": {
            "description": "The membership role details (i.e name of role and expiry time).",
            "items": {
              "$ref": "#/components/schemas/TransitiveMembershipRole"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MembershipRoleRestrictionEvaluation": {
        "description": "The evaluated state of this restriction.",
        "properties": {
          "state": {
            "description": "Output only. The current state of the restriction",
            "enum": ["STATE_UNSPECIFIED", "COMPLIANT", "FORWARD_COMPLIANT", "NON_COMPLIANT", "EVALUATING"],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestrictionEvaluations": {
        "description": "Evaluations of restrictions applied to parent group on this membership.",
        "properties": {
          "memberRestrictionEvaluation": {
            "$ref": "#/components/schemas/MembershipRoleRestrictionEvaluation",
            "description": "Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation."
          }
        },
        "type": "object"
      },
      "SearchTransitiveGroupsResponse": {
        "description": "The response message for MembershipsService.SearchTransitiveGroups.",
        "properties": {
          "memberships": {
            "description": "List of transitive groups satisfying the query.",
            "items": {
              "$ref": "#/components/schemas/GroupRelation"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "Token to retrieve the next page of results, or empty if there are no more results available for listing.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchTransitiveMembershipsResponse": {
        "description": "The response message for MembershipsService.SearchTransitiveMemberships.",
        "properties": {
          "memberships": {
            "description": "List of transitive members satisfying the query.",
            "items": {
              "$ref": "#/components/schemas/MemberRelation"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "Token to retrieve the next page of results, or empty if there are no more results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SendUserInvitationRequest": {
        "description": "A request to send email for inviting target user corresponding to the UserInvitation.",
        "properties": {},
        "type": "object"
      },
      "TransitiveMembershipRole": {
        "description": "Message representing the role of a TransitiveMembership.",
        "properties": {
          "role": {
            "description": "TransitiveMembershipRole in string format. Currently supported TransitiveMembershipRoles: `\"MEMBER\"`, `\"OWNER\"`, and `\"MANAGER\"`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateMembershipRolesParams": {
        "description": "The details of an update to a `MembershipRole`.",
        "properties": {
          "fieldMask": {
            "description": "The fully-qualified names of fields to update. May only contain the field `expiry_detail.expire_time`.",
            "format": "google-fieldmask",
            "type": "string"
          },
          "membershipRole": {
            "$ref": "#/components/schemas/MembershipRole",
            "description": "The `MembershipRole`s to be updated. Only `MEMBER` `MembershipRole` can currently be updated."
          }
        },
        "type": "object"
      },
      "UserInvitation": {
        "description": "The `UserInvitation` resource represents an email that can be sent to an unmanaged user account inviting them to join the customer's Google Workspace or Cloud Identity account. An unmanaged account shares an email address domain with the Google Workspace or Cloud Identity account but is not managed by it yet. If the user accepts the `UserInvitation`, the user account will become managed.",
        "properties": {
          "mailsSentCount": {
            "description": "Number of invitation emails sent to the user.",
            "format": "int64",
            "type": "string"
          },
          "name": {
            "description": "Shall be of the form `customers/{customer}/userinvitations/{user_email_address}`.",
            "type": "string"
          },
          "state": {
            "description": "State of the `UserInvitation`.",
            "enum": ["STATE_UNSPECIFIED", "NOT_YET_SENT", "INVITED", "ACCEPTED", "DECLINED"],
            "type": "string"
          },
          "updateTime": {
            "description": "Time when the `UserInvitation` was last updated.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "Oauth2": {
        "description": "Oauth 2.0 implicit authentication",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
            "scopes": {
              "https://www.googleapis.com/auth/cloud-identity.devices.lookup": "See your device details",
              "https://www.googleapis.com/auth/cloud-identity.groups": "See, change, create, and delete any of the Cloud Identity Groups that you can access, including the members of each group",
              "https://www.googleapis.com/auth/cloud-identity.groups.readonly": "See any Cloud Identity Groups that you can access, including group members and their emails",
              "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
              "https://www.googleapis.com/auth/cloud-identity": "Private Service: https://www.googleapis.com/auth/cloud-identity",
              "https://www.googleapis.com/auth/cloud-identity.devices": "Private Service: https://www.googleapis.com/auth/cloud-identity.devices",
              "https://www.googleapis.com/auth/cloud-identity.devices.readonly": "Private Service: https://www.googleapis.com/auth/cloud-identity.devices.readonly",
              "https://www.googleapis.com/auth/cloud-identity.userinvitations": "See, send, or cancel any Cloud Identity UserInvitations to join your organization to users",
              "https://www.googleapis.com/auth/cloud-identity.userinvitations.readonly": "See, send, or cancel any Cloud Identity UserInvitations to join your organization to users"
            }
          }
        },
        "type": "oauth2"
      },
      "Oauth2c": {
        "description": "Oauth 2.0 authorizationCode authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth?prompt=consent&access_type=offline",
            "scopes": {
              "https://www.googleapis.com/auth/cloud-identity.devices.lookup": "See your device details",
              "https://www.googleapis.com/auth/cloud-identity.groups": "See, change, create, and delete any of the Cloud Identity Groups that you can access, including the members of each group",
              "https://www.googleapis.com/auth/cloud-identity.groups.readonly": "See any Cloud Identity Groups that you can access, including group members and their emails",
              "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
              "https://www.googleapis.com/auth/cloud-identity": "Private Service: https://www.googleapis.com/auth/cloud-identity",
              "https://www.googleapis.com/auth/cloud-identity.devices": "Private Service: https://www.googleapis.com/auth/cloud-identity.devices",
              "https://www.googleapis.com/auth/cloud-identity.devices.readonly": "Private Service: https://www.googleapis.com/auth/cloud-identity.devices.readonly",
              "https://www.googleapis.com/auth/cloud-identity.userinvitations": "See, send, or cancel any Cloud Identity UserInvitations to join your organization to users",
              "https://www.googleapis.com/auth/cloud-identity.userinvitations.readonly": "See, send, or cancel any Cloud Identity UserInvitations to join your organization to users"
            },
            "tokenUrl": "https://accounts.google.com/o/oauth2/token"
          }
        },
        "type": "oauth2",
        "x-credentialsKey": "google"
      }
    }
  },
  "source": {
    "url": {}
  }
}
