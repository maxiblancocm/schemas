{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://servicenetworking.googleapis.com/"
    }
  ],
  "info": {
    "title": "Google Service Networking",
    "version": "v1",
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "Provides automatic management of network configurations necessary for certain services.",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/"
  },
  "externalDocs": {
    "url": "https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started"
  },
  "tags": [
    {
      "name": "operations"
    },
    {
      "name": "services"
    }
  ],
  "paths": {
    "/v1/{name}": {
      "delete": {
        "description": "Deletes a peered DNS domain.",
        "operationId": "servicenetworking.services.projects.global.networks.peeredDnsDomains.delete",
        "parameters": [
          {
            "description": "Required. The name of the peered DNS domain to delete in the format: `services/{service}/projects/{project}/global/networks/{network}/peeredDnsDomains/{name}`. {service} is the peering service that is managing connectivity for the service producer's organization. For Google services that support this functionality, this value is `servicenetworking.googleapis.com`. {project} is the number of the project that contains the service consumer's VPC network e.g. `12345`. {network} is the name of the service consumer's VPC network. {name} is the name of the peered DNS domain.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "delete peered Dns Domains"
      },
      "get": {
        "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
        "operationId": "servicenetworking.operations.list",
        "parameters": [
          {
            "description": "The name of the operation's parent resource.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The standard list filter.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The standard list page size.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The standard list page token.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOperationsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["operations"],
        "summary": "list operations"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "patch": {
        "description": "Updates the allocated ranges that are assigned to a connection.",
        "operationId": "servicenetworking.services.connections.patch",
        "parameters": [
          {
            "description": "The private service connection that connects to a service producer organization. The name includes both the private service name and the VPC network peering name in the format of `services/{peering_service_name}/connections/{vpc_peering_name}`. For Google services that support this functionality, this is `services/servicenetworking.googleapis.com/connections/servicenetworking-googleapis-com`.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If a previously defined allocated range is removed, force flag must be set to true.",
            "in": "query",
            "name": "force",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The update mask. If this is omitted, it defaults to \"*\". You can only update the listed peering ranges.",
            "in": "query",
            "name": "updateMask",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "patch connections"
      },
      "post": {
        "description": "Deletes a private service access connection.",
        "operationId": "servicenetworking.services.connections.deleteConnection",
        "parameters": [
          {
            "description": "Required. The private service connection that connects to a service producer organization. The name includes both the private service name and the VPC network peering name in the format of `services/{peering_service_name}/connections/{vpc_peering_name}`. For Google services that support this functionality, this is `services/servicenetworking.googleapis.com/connections/servicenetworking-googleapis-com`.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteConnectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "delete Connection connections"
      }
    },
    "/v1/{name}:cancel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
        "operationId": "servicenetworking.operations.cancel",
        "parameters": [
          {
            "description": "The name of the operation resource to be cancelled.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelOperationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["operations"],
        "summary": "cancel operations"
      }
    },
    "/v1/{parent}/connections": {
      "get": {
        "description": "List the private connections that are configured in a service consumer's VPC network.",
        "operationId": "servicenetworking.services.connections.list",
        "parameters": [
          {
            "description": "The service that is managing peering connectivity for a service producer's organization. For Google services that support this functionality, this value is `services/servicenetworking.googleapis.com`. If you specify `services/-` as the parameter value, all configured peering services are listed.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of service consumer's VPC network that's connected with service producer network through a private connection. The network name must be in the following format: `projects/{project}/global/networks/{network}`. {project} is a project number, such as in `12345` that includes the VPC service consumer's VPC network. {network} is the name of the service consumer's VPC network.",
            "in": "query",
            "name": "network",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListConnectionsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "list connections"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Creates a private connection that establishes a VPC Network Peering connection to a VPC network in the service producer's organization. The administrator of the service consumer's VPC network invokes this method. The administrator must assign one or more allocated IP ranges for provisioning subnetworks in the service producer's VPC network. This connection is used for all supported services in the service producer's organization, so it only needs to be invoked once.",
        "operationId": "servicenetworking.services.connections.create",
        "parameters": [
          {
            "description": "The service that is managing peering connectivity for a service producer's organization. For Google services that support this functionality, this value is `services/servicenetworking.googleapis.com`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "create connections"
      }
    },
    "/v1/{parent}/dnsRecordSets:add": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Service producers can use this method to add DNS record sets to private DNS zones in the shared producer host project.",
        "operationId": "servicenetworking.services.dnsRecordSets.add",
        "parameters": [
          {
            "description": "Required. The service that is managing peering connectivity for a service producer's organization. For Google services that support this functionality, this value is `services/servicenetworking.googleapis.com`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDnsRecordSetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "add dns Record Sets"
      }
    },
    "/v1/{parent}/dnsRecordSets:remove": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Service producers can use this method to remove DNS record sets from private DNS zones in the shared producer host project.",
        "operationId": "servicenetworking.services.dnsRecordSets.remove",
        "parameters": [
          {
            "description": "Required. The service that is managing peering connectivity for a service producer's organization. For Google services that support this functionality, this value is `services/servicenetworking.googleapis.com`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveDnsRecordSetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "remove dns Record Sets"
      }
    },
    "/v1/{parent}/dnsRecordSets:update": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Service producers can use this method to update DNS record sets from private DNS zones in the shared producer host project.",
        "operationId": "servicenetworking.services.dnsRecordSets.update",
        "parameters": [
          {
            "description": "Required. The service that is managing peering connectivity for a service producer's organization. For Google services that support this functionality, this value is `services/servicenetworking.googleapis.com`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDnsRecordSetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "update dns Record Sets"
      }
    },
    "/v1/{parent}/dnsZones:add": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Service producers can use this method to add private DNS zones in the shared producer host project and matching peering zones in the consumer project.",
        "operationId": "servicenetworking.services.dnsZones.add",
        "parameters": [
          {
            "description": "Required. The service that is managing peering connectivity for a service producer's organization. For Google services that support this functionality, this value is `services/servicenetworking.googleapis.com`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDnsZoneRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "add dns Zones"
      }
    },
    "/v1/{parent}/dnsZones:remove": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Service producers can use this method to remove private DNS zones in the shared producer host project and matching peering zones in the consumer project.",
        "operationId": "servicenetworking.services.dnsZones.remove",
        "parameters": [
          {
            "description": "Required. The service that is managing peering connectivity for a service producer's organization. For Google services that support this functionality, this value is `services/servicenetworking.googleapis.com`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveDnsZoneRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "remove dns Zones"
      }
    },
    "/v1/{parent}/peeredDnsDomains": {
      "get": {
        "description": "Lists peered DNS domains for a connection.",
        "operationId": "servicenetworking.services.projects.global.networks.peeredDnsDomains.list",
        "parameters": [
          {
            "description": "Required. Parent resource identifying the connection which owns this collection of peered DNS domains in the format: `services/{service}/projects/{project}/global/networks/{network}`. {service} is the peering service that is managing connectivity for the service producer's organization. For Google services that support this functionality, this value is `servicenetworking.googleapis.com`. {project} is a project number e.g. `12345` that contains the service consumer's VPC network. {network} is the name of the service consumer's VPC network.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPeeredDnsDomainsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "list peered Dns Domains"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Creates a peered DNS domain which sends requests for records in given namespace originating in the service producer VPC network to the consumer VPC network to be resolved.",
        "operationId": "servicenetworking.services.projects.global.networks.peeredDnsDomains.create",
        "parameters": [
          {
            "description": "Required. Parent resource identifying the connection for which the peered DNS domain will be created in the format: `services/{service}/projects/{project}/global/networks/{network}` {service} is the peering service that is managing connectivity for the service producer's organization. For Google services that support this functionality, this value is `servicenetworking.googleapis.com`. {project} is the number of the project that contains the service consumer's VPC network e.g. `12345`. {network} is the name of the service consumer's VPC network.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeeredDnsDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "create peered Dns Domains"
      }
    },
    "/v1/{parent}/roles:add": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Service producers can use this method to add roles in the shared VPC host project. Each role is bound to the provided member. Each role must be selected from within a whitelisted set of roles. Each role is applied at only the granularity specified in the whitelist.",
        "operationId": "servicenetworking.services.roles.add",
        "parameters": [
          {
            "description": "Required. This is in a form services/{service} where {service} is the name of the private access management service. For example 'service-peering.example.com'.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRolesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "add roles"
      }
    },
    "/v1/{parent}:addSubnetwork": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "For service producers, provisions a new subnet in a peered service's shared VPC network in the requested region and with the requested size that's expressed as a CIDR range (number of leading bits of ipV4 network mask). The method checks against the assigned allocated ranges to find a non-conflicting IP address range. The method will reuse a subnet if subsequent calls contain the same subnet name, region, and prefix length. This method will make producer's tenant project to be a shared VPC service project as needed.",
        "operationId": "servicenetworking.services.addSubnetwork",
        "parameters": [
          {
            "description": "Required. A tenant project in the service producer organization, in the following format: services/{service}/{collection-id}/{resource-id}. {collection-id} is the cloud resource collection type that represents the tenant project. Only `projects` are supported. {resource-id} is the tenant project numeric id, such as `123456`. {service} the name of the peering service, such as `service-peering.example.com`. This service must already be enabled in the service consumer's project.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSubnetworkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "add Subnetwork services"
      }
    },
    "/v1/{parent}:disableVpcServiceControls": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "patch": {
        "description": "Disables VPC service controls for a connection.",
        "operationId": "servicenetworking.services.disableVpcServiceControls",
        "parameters": [
          {
            "description": "The service that is managing peering connectivity for a service producer's organization. For Google services that support this functionality, this value is `services/servicenetworking.googleapis.com`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisableVpcServiceControlsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "disable Vpc Service Controls services"
      }
    },
    "/v1/{parent}:enableVpcServiceControls": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "patch": {
        "description": "Enables VPC service controls for a connection.",
        "operationId": "servicenetworking.services.enableVpcServiceControls",
        "parameters": [
          {
            "description": "The service that is managing peering connectivity for a service producer's organization. For Google services that support this functionality, this value is `services/servicenetworking.googleapis.com`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableVpcServiceControlsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "enable Vpc Service Controls services"
      }
    },
    "/v1/{parent}:searchRange": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Service producers can use this method to find a currently unused range within consumer allocated ranges. This returned range is not reserved, and not guaranteed to remain unused. It will validate previously provided allocated ranges, find non-conflicting sub-range of requested size (expressed in number of leading bits of ipv4 network mask, as in CIDR range notation).",
        "operationId": "servicenetworking.services.searchRange",
        "parameters": [
          {
            "description": "Required. This is in a form services/{service}. {service} the name of the private access management service, for example 'service-peering.example.com'.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRangeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "search Range services"
      }
    },
    "/v1/{parent}:validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Service producers use this method to validate if the consumer provided network, project and requested range are valid. This allows them to use a fail-fast mechanism for consumer requests, and not have to wait for AddSubnetwork operation completion to determine if user request is invalid.",
        "operationId": "servicenetworking.services.validate",
        "parameters": [
          {
            "description": "Required. This is in a form services/{service} where {service} is the name of the private access management service. For example 'service-peering.example.com'.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateConsumerConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateConsumerConfigResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "validate services"
      }
    },
    "/v1/{parent}:updateConsumerConfig": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "patch": {
        "description": "Service producers use this method to update the configuration of their connection including the import/export of custom routes and subnetwork routes with public IP.",
        "operationId": "servicenetworking.services.projects.global.networks.updateConsumerConfig",
        "parameters": [
          {
            "description": "Required. Parent resource identifying the connection for which the consumer config is being updated in the format: `services/{service}/projects/{project}/global/networks/{network}` {service} is the peering service that is managing connectivity for the service producer's organization. For Google services that support this functionality, this value is `servicenetworking.googleapis.com`. {project} is the number of the project that contains the service consumer's VPC network e.g. `12345`. {network} is the name of the service consumer's VPC network.",
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConsumerConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/cloud-platform"],
            "Oauth2c": ["https://www.googleapis.com/auth/cloud-platform"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/service.management"],
            "Oauth2c": ["https://www.googleapis.com/auth/service.management"]
          }
        ],
        "tags": ["services"],
        "summary": "update Consumer Config networks"
      }
    }
  },
  "components": {
    "parameters": {
      "_.xgafv": {
        "description": "V1 error format.",
        "in": "query",
        "name": "$.xgafv",
        "schema": {
          "enum": ["1", "2"],
          "type": "string"
        },
        "x-ignore": true
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "alt": {
        "description": "Data format for response.",
        "in": "query",
        "name": "alt",
        "schema": {
          "enum": ["json", "media", "proto"],
          "type": "string"
        },
        "x-ignore": true
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "prettyPrint": {
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "schema": {
          "type": "boolean"
        },
        "x-ignore": true
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      }
    },
    "schemas": {
      "AddDnsRecordSetRequest": {
        "description": "Request to add a record set to a private managed DNS zone in the shared producer host project.",
        "properties": {
          "consumerNetwork": {
            "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name.",
            "type": "string"
          },
          "dnsRecordSet": {
            "$ref": "#/components/schemas/DnsRecordSet",
            "description": "Required. The DNS record set to add."
          },
          "zone": {
            "description": "Required. The name of the private DNS zone in the shared producer host project to which the record set will be added.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddDnsZoneRequest": {
        "description": "Request to add a private managed DNS zone in the shared producer host project and a matching DNS peering zone in the consumer project.",
        "properties": {
          "consumerNetwork": {
            "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name.",
            "type": "string"
          },
          "dnsSuffix": {
            "description": "Required. The DNS name suffix for the zones e.g. `example.com`.",
            "type": "string"
          },
          "name": {
            "description": "Required. The name for both the private zone in the shared producer host project and the peering zone in the consumer project. Must be unique within both projects. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddRolesRequest": {
        "description": "Request for AddRoles to allow Service Producers to add roles in the shared VPC host project for them to use.",
        "properties": {
          "consumerNetwork": {
            "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is a network name.",
            "type": "string"
          },
          "policyBinding": {
            "description": "Required. List of policy bindings to add to shared VPC host project.",
            "items": {
              "$ref": "#/components/schemas/PolicyBinding"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AddSubnetworkRequest": {
        "description": "Request to create a subnetwork in a previously peered service network.",
        "properties": {
          "consumer": {
            "description": "Required. A resource that represents the service consumer, such as `projects/123456`. The project number can be different from the value in the consumer network parameter. For example, the network might be part of a Shared VPC network. In those cases, Service Networking validates that this resource belongs to that Shared VPC.",
            "type": "string"
          },
          "consumerNetwork": {
            "description": "Required. The name of the service consumer's VPC network. The network must have an existing private connection that was provisioned through the connections.create method. The name must be in the following format: `projects/{project}/global/networks/{network}`, where {project} is a project number, such as `12345`. {network} is the name of a VPC network in the project.",
            "type": "string"
          },
          "description": {
            "description": "Optional. Description of the subnet.",
            "type": "string"
          },
          "ipPrefixLength": {
            "description": "Required. The prefix length of the subnet's IP address range. Use CIDR range notation, such as `30` to provision a subnet with an `x.x.x.x/30` CIDR range. The IP address range is drawn from a pool of available ranges in the service consumer's allocated range.",
            "format": "int32",
            "type": "integer"
          },
          "region": {
            "description": "Required. The name of a [region](/compute/docs/regions-zones) for the subnet, such `europe-west1`.",
            "type": "string"
          },
          "requestedAddress": {
            "description": "Optional. The starting address of a range. The address must be a valid IPv4 address in the x.x.x.x format. This value combined with the IP prefix range is the CIDR range for the subnet. The range must be within the allocated range that is assigned to the private connection. If the CIDR range isn't available, the call fails.",
            "type": "string"
          },
          "subnetwork": {
            "description": "Required. A name for the new subnet. For information about the naming requirements, see [subnetwork](/compute/docs/reference/rest/v1/subnetworks) in the Compute API documentation.",
            "type": "string"
          },
          "subnetworkUsers": {
            "description": "A list of members that are granted the `compute.networkUser` role on the subnet.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "secondaryIpRangeSpecs": {
            "description": "Optional. A list of secondary IP ranges to be created within the new subnetwork.",
            "items": {
              "$ref": "#/components/schemas/SecondaryIpRangeSpec"
            },
            "type": "array"
          },
          "checkServiceNetworkingUsePermission": {
            "description": "Optional. The IAM permission check determines whether the consumer project has 'servicenetworking.services.use' permission or not.",
            "type": "boolean"
          },
          "computeIdempotencyWindow": {
            "description": "Optional. Specifies a custom time bucket for Arcus subnetwork request idempotency. If two equivalent concurrent requests are made, Arcus will know to ignore the request if it has already been completed or is in progress. Only requests with matching compute_idempotency_window have guaranteed idempotency. Changing this time window between requests results in undefined behavior. Zero (or empty) value with custom_compute_idempotency_window=true specifies no idempotency (i.e. no request ID is provided to Arcus). Maximum value of 14 days (enforced by Arcus limit). For more information on how to use, see: go/revisit-sn-idempotency-window",
            "format": "google-duration",
            "type": "string"
          },
          "outsideAllocationPublicIpRange": {
            "description": "Optional. Enable outside allocation using public IP addresses. Any public IP range may be specified. If this field is provided, we will not use customer reserved ranges for this primary IP range.",
            "type": "string"
          },
          "privateIpv6GoogleAccess": {
            "description": "Optional. The private IPv6 google access type for the VMs in this subnet. For information about the access types that can be set using this field, see [subnetwork](https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks) in the Compute API documentation.",
            "type": "string"
          },
          "purpose": {
            "description": "Optional. Defines the purpose field of the subnet, e.g. 'PRIVATE_SERVICE_CONNECT'. For information about the purposes that can be set using this field, see [subnetwork](https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks) in the Compute API documentation.",
            "type": "string"
          },
          "requestedRanges": {
            "description": "Optional. The name of one or more allocated IP address ranges associated with this private service access connection. If no range names are provided all ranges associated with this connection will be considered. If a CIDR range with the specified IP prefix length is not available within these ranges, the call fails.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "useCustomComputeIdempotencyWindow": {
            "description": "Optional. Specifies if Service Networking should use a custom time bucket for Arcus idempotency. If false, Service Networking uses a 300 second (5 minute) Arcus idempotency window. If true, Service Networking uses a custom idempotency window provided by the user in field compute_idempotency_window. For more information on how to use, see: go/revisit-sn-idempotency-window",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CancelOperationRequest": {
        "description": "The request message for Operations.CancelOperation.",
        "properties": {},
        "type": "object"
      },
      "Connection": {
        "description": "Represents a private connection resource. A private connection is implemented as a VPC Network Peering connection between a service producer's VPC network and a service consumer's VPC network.",
        "properties": {
          "network": {
            "description": "The name of service consumer's VPC network that's connected with service producer network, in the following format: `projects/{project}/global/networks/{network}`. `{project}` is a project number, such as in `12345` that includes the VPC service consumer's VPC network. `{network}` is the name of the service consumer's VPC network.",
            "type": "string"
          },
          "peering": {
            "description": "Output only. The name of the VPC Network Peering connection that was created by the service producer.",
            "readOnly": true,
            "type": "string"
          },
          "reservedPeeringRanges": {
            "description": "The name of one or more allocated IP address ranges for this service producer of type `PEERING`. Note that invoking CreateConnection method with a different range when connection is already established will not modify already provisioned service producer subnetworks. If CreateConnection method is invoked repeatedly to reconnect when peering connection had been disconnected on the consumer side, leaving this field empty will restore previously allocated IP ranges.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "service": {
            "description": "Output only. The name of the peering service that's associated with this connection, in the following format: `services/{service name}`.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConsumerProject": {
        "description": "Represents a consumer project.",
        "properties": {
          "projectNum": {
            "description": "Required. Project number of the consumer that is launching the service instance. It can own the network that is peered with Google or, be a service project in an XPN where the host project has the network.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomHttpPattern": {
        "description": "A custom pattern is used for defining custom HTTP verb.",
        "properties": {
          "kind": {
            "description": "The name of this custom HTTP verb.",
            "type": "string"
          },
          "path": {
            "description": "The path matched by this custom verb.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DisableVpcServiceControlsRequest": {
        "description": "Request to disable VPC service controls.",
        "properties": {
          "consumerNetwork": {
            "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is network name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DnsRecordSet": {
        "description": "Represents a DNS record set resource.",
        "properties": {
          "data": {
            "description": "Required. As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) for examples see https://cloud.google.com/dns/records/json-record.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "domain": {
            "description": "Required. The DNS or domain name of the record set, e.g. `test.example.com`.",
            "type": "string"
          },
          "ttl": {
            "description": "Required. The period of time for which this RecordSet can be cached by resolvers.",
            "format": "google-duration",
            "type": "string"
          },
          "type": {
            "description": "Required. The identifier of a supported record type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Empty": {
        "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
        "properties": {},
        "type": "object"
      },
      "EnableVpcServiceControlsRequest": {
        "description": "Request to enable VPC service controls.",
        "properties": {
          "consumerNetwork": {
            "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is network name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HttpRule": {
        "description": "# gRPC Transcoding gRPC Transcoding is a feature for mapping between a gRPC method and one or more HTTP REST endpoints. It allows developers to build a single API service that supports both gRPC APIs and REST APIs. Many systems, including [Google APIs](https://github.com/googleapis/googleapis), [Cloud Endpoints](https://cloud.google.com/endpoints), [gRPC Gateway](https://github.com/grpc-ecosystem/grpc-gateway), and [Envoy](https://github.com/envoyproxy/envoy) proxy support this feature and use it for large scale production services. `HttpRule` defines the schema of the gRPC/REST mapping. The mapping specifies how different portions of the gRPC request message are mapped to the URL path, URL query parameters, and HTTP request body. It also controls how the gRPC response message is mapped to the HTTP response body. `HttpRule` is typically specified as an `google.api.http` annotation on the gRPC method. Each mapping specifies a URL path template and an HTTP method. The path template may refer to one or more fields in the gRPC request message, as long as each field is a non-repeated field with a primitive (non-message) type. The path template controls how fields of the request message are mapped to the URL path. Example: service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http) = { get: \"/v1/{name=messages/*}\" }; } } message GetMessageRequest { string name = 1; // Mapped to URL path. } message Message { string text = 1; // The resource content. } This enables an HTTP REST to gRPC mapping as below: HTTP | gRPC -----|----- `GET /v1/messages/123456` | `GetMessage(name: \"messages/123456\")` Any fields in the request message which are not bound by the path template automatically become HTTP query parameters if there is no HTTP request body. For example: service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http) = { get:\"/v1/messages/{message_id}\" }; } } message GetMessageRequest { message SubMessage { string subfield = 1; } string message_id = 1; // Mapped to URL path. int64 revision = 2; // Mapped to URL query parameter `revision`. SubMessage sub = 3; // Mapped to URL query parameter `sub.subfield`. } This enables a HTTP JSON to RPC mapping as below: HTTP | gRPC -----|----- `GET /v1/messages/123456?revision=2&sub.subfield=foo` | `GetMessage(message_id: \"123456\" revision: 2 sub: SubMessage(subfield: \"foo\"))` Note that fields which are mapped to URL query parameters must have a primitive type or a repeated primitive type or a non-repeated message type. In the case of a repeated type, the parameter can be repeated in the URL as `...?param=A&param=B`. In the case of a message type, each field of the message is mapped to a separate parameter, such as `...?foo.a=A&foo.b=B&foo.c=C`. For HTTP methods that allow a request body, the `body` field specifies the mapping. Consider a REST update method on the message resource collection: service Messaging { rpc UpdateMessage(UpdateMessageRequest) returns (Message) { option (google.api.http) = { patch: \"/v1/messages/{message_id}\" body: \"message\" }; } } message UpdateMessageRequest { string message_id = 1; // mapped to the URL Message message = 2; // mapped to the body } The following HTTP JSON to RPC mapping is enabled, where the representation of the JSON in the request body is determined by protos JSON encoding: HTTP | gRPC -----|----- `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id: \"123456\" message { text: \"Hi!\" })` The special name `*` can be used in the body mapping to define that every field not bound by the path template should be mapped to the request body. This enables the following alternative definition of the update method: service Messaging { rpc UpdateMessage(Message) returns (Message) { option (google.api.http) = { patch: \"/v1/messages/{message_id}\" body: \"*\" }; } } message Message { string message_id = 1; string text = 2; } The following HTTP JSON to RPC mapping is enabled: HTTP | gRPC -----|----- `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id: \"123456\" text: \"Hi!\")` Note that when using `*` in the body mapping, it is not possible to have HTTP parameters, as all fields not bound by the path end in the body. This makes this option more rarely used in practice when defining REST APIs. The common usage of `*` is in custom methods which don't use the URL at all for transferring data. It is possible to define multiple HTTP methods for one RPC by using the `additional_bindings` option. Example: service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http) = { get: \"/v1/messages/{message_id}\" additional_bindings { get: \"/v1/users/{user_id}/messages/{message_id}\" } }; } } message GetMessageRequest { string message_id = 1; string user_id = 2; } This enables the following two alternative HTTP JSON to RPC mappings: HTTP | gRPC -----|----- `GET /v1/messages/123456` | `GetMessage(message_id: \"123456\")` `GET /v1/users/me/messages/123456` | `GetMessage(user_id: \"me\" message_id: \"123456\")` ## Rules for HTTP mapping 1. Leaf request fields (recursive expansion nested messages in the request message) are classified into three categories: - Fields referred by the path template. They are passed via the URL path. - Fields referred by the HttpRule.body. They are passed via the HTTP request body. - All other fields are passed via the URL query parameters, and the parameter name is the field path in the request message. A repeated field can be represented as multiple query parameters under the same name. 2. If HttpRule.body is \"*\", there is no URL query parameter, all fields are passed via URL path and HTTP request body. 3. If HttpRule.body is omitted, there is no HTTP request body, all fields are passed via URL path and URL query parameters. ### Path template syntax Template = \"/\" Segments [ Verb ] ; Segments = Segment { \"/\" Segment } ; Segment = \"*\" | \"**\" | LITERAL | Variable ; Variable = \"{\" FieldPath [ \"=\" Segments ] \"}\" ; FieldPath = IDENT { \".\" IDENT } ; Verb = \":\" LITERAL ; The syntax `*` matches a single URL path segment. The syntax `**` matches zero or more URL path segments, which must be the last part of the URL path except the `Verb`. The syntax `Variable` matches part of the URL path as specified by its template. A variable template must not contain other variables. If a variable matches a single path segment, its template may be omitted, e.g. `{var}` is equivalent to `{var=*}`. The syntax `LITERAL` matches literal text in the URL path. If the `LITERAL` contains any reserved character, such characters should be percent-encoded before the matching. If a variable contains exactly one path segment, such as `\"{var}\"` or `\"{var=*}\"`, when such a variable is expanded into a URL path on the client side, all characters except `[-_.~0-9a-zA-Z]` are percent-encoded. The server side does the reverse decoding. Such variables show up in the [Discovery Document](https://developers.google.com/discovery/v1/reference/apis) as `{var}`. If a variable contains multiple path segments, such as `\"{var=foo/*}\"` or `\"{var=**}\"`, when such a variable is expanded into a URL path on the client side, all characters except `[-_.~/0-9a-zA-Z]` are percent-encoded. The server side does the reverse decoding, except \"%2F\" and \"%2f\" are left unchanged. Such variables show up in the [Discovery Document](https://developers.google.com/discovery/v1/reference/apis) as `{+var}`. ## Using gRPC API Service Configuration gRPC API Service Configuration (service config) is a configuration language for configuring a gRPC service to become a user-facing product. The service config is simply the YAML representation of the `google.api.Service` proto message. As an alternative to annotating your proto file, you can configure gRPC transcoding in your service config YAML files. You do this by specifying a `HttpRule` that maps the gRPC method to a REST endpoint, achieving the same effect as the proto annotation. This can be particularly useful if you have a proto that is reused in multiple services. Note that any transcoding specified in the service config will override any matching transcoding configuration in the proto. Example: http: rules: # Selects a gRPC method and applies HttpRule to it. - selector: example.v1.Messaging.GetMessage get: /v1/messages/{message_id}/{sub.subfield} ## Special notes When gRPC Transcoding is used to map a gRPC to JSON REST endpoints, the proto to JSON conversion must follow the [proto3 specification](https://developers.google.com/protocol-buffers/docs/proto3#json). While the single segment variable follows the semantics of [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String Expansion, the multi segment variable **does not** follow RFC 6570 Section 3.2.3 Reserved Expansion. The reason is that the Reserved Expansion does not expand special characters like `?` and `#`, which would lead to invalid URLs. As the result, gRPC Transcoding uses a custom encoding for multi segment variables. The path variables **must not** refer to any repeated or mapped field, because client libraries are not capable of handling such variable expansion. The path variables **must not** capture the leading \"/\" character. The reason is that the most common use case \"{var}\" does not capture the leading \"/\" character. For consistency, all path variables must share the same behavior. Repeated message fields must not be mapped to URL query parameters, because no client library can support such complicated mapping. If an API needs to use a JSON array for request or response body, it can map the request or response body to a repeated field. However, some gRPC Transcoding implementations may not support this feature.",
        "properties": {
          "additionalBindings": {
            "description": "Additional HTTP bindings for the selector. Nested bindings must not contain an `additional_bindings` field themselves (that is, the nesting may only be one level deep).",
            "items": {
              "$ref": "#/components/schemas/HttpRule"
            },
            "type": "array"
          },
          "allowHalfDuplex": {
            "description": "When this flag is set to true, HTTP requests will be allowed to invoke a half-duplex streaming method.",
            "type": "boolean"
          },
          "body": {
            "description": "The name of the request field whose value is mapped to the HTTP request body, or `*` for mapping all request fields not captured by the path pattern to the HTTP body, or omitted for not having any HTTP request body. NOTE: the referred field must be present at the top-level of the request message type.",
            "type": "string"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomHttpPattern",
            "description": "The custom pattern is used for specifying an HTTP method that is not included in the `pattern` field, such as HEAD, or \"*\" to leave the HTTP method unspecified for this rule. The wild-card rule is useful for services that provide content to Web (HTML) clients."
          },
          "delete": {
            "description": "Maps to HTTP DELETE. Used for deleting a resource.",
            "type": "string"
          },
          "get": {
            "description": "Maps to HTTP GET. Used for listing and getting information about resources.",
            "type": "string"
          },
          "patch": {
            "description": "Maps to HTTP PATCH. Used for updating a resource.",
            "type": "string"
          },
          "post": {
            "description": "Maps to HTTP POST. Used for creating a resource or performing an action.",
            "type": "string"
          },
          "put": {
            "description": "Maps to HTTP PUT. Used for replacing a resource.",
            "type": "string"
          },
          "responseBody": {
            "description": "Optional. The name of the response field whose value is mapped to the HTTP response body. When omitted, the entire response message will be used as the HTTP response body. NOTE: The referred field must be present at the top-level of the response message type.",
            "type": "string"
          },
          "selector": {
            "description": "Selects a method to which this rule applies. Refer to selector for syntax details.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListConnectionsResponse": {
        "description": "ListConnectionsResponse is the response to list peering states for the given service and consumer project.",
        "properties": {
          "connections": {
            "description": "The list of Connections.",
            "items": {
              "$ref": "#/components/schemas/Connection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListOperationsResponse": {
        "description": "The response message for Operations.ListOperations.",
        "properties": {
          "nextPageToken": {
            "description": "The standard List next-page token.",
            "type": "string"
          },
          "operations": {
            "description": "A list of operations that matches the specified filter in the request.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListPeeredDnsDomainsResponse": {
        "description": "Response to list peered DNS domains for a given connection.",
        "properties": {
          "peeredDnsDomains": {
            "description": "The list of peered DNS domains.",
            "items": {
              "$ref": "#/components/schemas/PeeredDnsDomain"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "This resource represents a long-running operation that is the result of a network API call.",
        "properties": {
          "done": {
            "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/Status",
            "description": "The error result of the operation in case of failure or cancellation."
          },
          "metadata": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "type": "object"
          },
          "name": {
            "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "type": "string"
          },
          "response": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Page": {
        "description": "Represents a documentation page. A page can contain subpages to represent nested documentation set structure.",
        "properties": {
          "content": {
            "description": "The Markdown content of the page. You can use (== include {path} ==) to include content from a Markdown file.",
            "type": "string"
          },
          "name": {
            "description": "The name of the page. It will be used as an identity of the page to generate URI of the page, text of the link to this page in navigation, etc. The full page name (start from the root page name to this page concatenated with `.`) can be used as reference to the page in your documentation. For example: pages: - name: Tutorial content: (== include tutorial.md ==) subpages: - name: Java content: (== include tutorial_java.md ==) You can reference `Java` page using Markdown reference link syntax: `Java`.",
            "type": "string"
          },
          "subpages": {
            "description": "Subpages of this page. The order of subpages specified here will be honored in the generated docset.",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeeredDnsDomain": {
        "description": "DNS domain suffix for which requests originating in the producer VPC network are resolved in the associated consumer VPC network.",
        "properties": {
          "dnsSuffix": {
            "description": "The DNS domain name suffix e.g. `example.com.`.",
            "type": "string"
          },
          "name": {
            "description": "User assigned name for this resource. Must be unique within the consumer network. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PolicyBinding": {
        "description": "Grouping of IAM role and IAM member.",
        "properties": {
          "member": {
            "description": "Required. Member to bind the role with. See /iam/docs/reference/rest/v1/Policy#Binding for how to format each member. Eg. - user:myuser@mydomain.com - serviceAccount:my-service-account@app.gserviceaccount.com",
            "type": "string"
          },
          "role": {
            "description": "Required. Role to apply. Only whitelisted roles can be used at the specified granularity. The role must be one of the following: - 'roles/container.hostServiceAgentUser' applied on the shared VPC host project - 'roles/compute.securityAdmin' applied on the shared VPC host project",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RangeReservation": {
        "description": "Represents a range reservation.",
        "properties": {
          "ipPrefixLength": {
            "description": "Required. The size of the desired subnet. Use usual CIDR range notation. For example, '30' to find unused x.x.x.x/30 CIDR range. The goal is to determine if one of the allocated ranges has enough free space for a subnet of the requested size.",
            "format": "int32",
            "type": "integer"
          },
          "secondaryRangeIpPrefixLengths": {
            "description": "Optional. DO NOT USE - Under development. The size of the desired secondary ranges for the subnet. Use usual CIDR range notation. For example, '30' to find unused x.x.x.x/30 CIDR range. The goal is to determine that the allocated ranges have enough free space for all the requested secondary ranges.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "requestedRanges": {
            "description": "Optional. The name of one or more allocated IP address ranges associated with this private service access connection. If no range names are provided all ranges associated with this connection will be considered. If a CIDR range with the specified IP prefix length is not available within these ranges the validation fails.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "subnetworkCandidates": {
            "description": "Optional. List of subnetwork candidates to validate. The required input fields are `name`, `network`, and `region`. Subnetworks from this list which exist will be returned in the response with the `ip_cidr_range`, `secondary_ip_cider_ranges`, and `outside_allocation` fields set.",
            "items": {
              "$ref": "#/components/schemas/Subnetwork"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RemoveDnsRecordSetRequest": {
        "description": "Request to remove a record set from a private managed DNS zone in the shared producer host project. The name, type, ttl, and data values must all exactly match an existing record set in the specified zone.",
        "properties": {
          "consumerNetwork": {
            "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name.",
            "type": "string"
          },
          "dnsRecordSet": {
            "$ref": "#/components/schemas/DnsRecordSet",
            "description": "Required. The DNS record set to remove."
          },
          "zone": {
            "description": "Required. The name of the private DNS zone in the shared producer host project from which the record set will be removed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RemoveDnsZoneRequest": {
        "description": "Request to remove a private managed DNS zone in the shared producer host project and a matching DNS peering zone in the consumer project.",
        "properties": {
          "consumerNetwork": {
            "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name.",
            "type": "string"
          },
          "name": {
            "description": "Required. The name for both the private zone in the shared producer host project and the peering zone in the consumer project.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchRangeRequest": {
        "description": "Request to search for an unused range within allocated ranges.",
        "properties": {
          "ipPrefixLength": {
            "description": "Required. The prefix length of the IP range. Use usual CIDR range notation. For example, '30' to find unused x.x.x.x/30 CIDR range. Actual range will be determined using allocated range for the consumer peered network and returned in the result.",
            "format": "int32",
            "type": "integer"
          },
          "network": {
            "description": "Network name in the consumer project. This network must have been already peered with a shared VPC network using CreateConnection method. Must be in a form 'projects/{project}/global/networks/{network}'. {project} is a project number, as in '12345' {network} is network name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Subnetwork": {
        "description": "Represents a subnet that was created or discovered by a private access management service.",
        "properties": {
          "ipCidrRange": {
            "description": "Subnetwork CIDR range in `10.x.x.x/y` format.",
            "type": "string"
          },
          "name": {
            "description": "Subnetwork name. See https://cloud.google.com/compute/docs/vpc/",
            "type": "string"
          },
          "network": {
            "description": "In the Shared VPC host project, the VPC network that's peered with the consumer network. For example: `projects/1234321/global/networks/host-network`",
            "type": "string"
          },
          "outsideAllocation": {
            "description": "This is a discovered subnet that is not within the current consumer allocated ranges.",
            "type": "boolean"
          },
          "secondaryIpRanges": {
            "description": "List of secondary IP ranges in this subnetwork.",
            "items": {
              "$ref": "#/components/schemas/SecondaryIpRange"
            },
            "type": "array"
          },
          "region": {
            "description": "GCP region where the subnetwork is located.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDnsRecordSetRequest": {
        "description": "Request to update a record set from a private managed DNS zone in the shared producer host project. The name, type, ttl, and data values of the existing record set must all exactly match an existing record set in the specified zone.",
        "properties": {
          "consumerNetwork": {
            "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name.",
            "type": "string"
          },
          "existingDnsRecordSet": {
            "$ref": "#/components/schemas/DnsRecordSet",
            "description": "Required. The existing DNS record set to update."
          },
          "newDnsRecordSet": {
            "$ref": "#/components/schemas/DnsRecordSet",
            "description": "Required. The new values that the DNS record set should be updated to hold."
          },
          "zone": {
            "description": "Required. The name of the private DNS zone in the shared producer host project from which the record set will be removed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ValidateConsumerConfigRequest": {
        "properties": {
          "consumerNetwork": {
            "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is network name.",
            "type": "string"
          },
          "consumerProject": {
            "$ref": "#/components/schemas/ConsumerProject",
            "description": "NETWORK_NOT_IN_CONSUMERS_PROJECT, NETWORK_NOT_IN_CONSUMERS_HOST_PROJECT, and HOST_PROJECT_NOT_FOUND are done when consumer_project is provided."
          },
          "rangeReservation": {
            "$ref": "#/components/schemas/RangeReservation",
            "description": "RANGES_EXHAUSTED, RANGES_EXHAUSTED, and RANGES_DELETED_LATER are done when range_reservation is provided."
          },
          "validateNetwork": {
            "description": "The validations will be performed in the order listed in the ValidationError enum. The first failure will return. If a validation is not requested, then the next one will be performed. SERVICE_NETWORKING_NOT_ENABLED and NETWORK_NOT_PEERED checks are performed for all requests where validation is requested. NETWORK_NOT_FOUND and NETWORK_DISCONNECTED checks are done for requests that have validate_network set to true.",
            "type": "boolean"
          },
          "checkServiceNetworkingUsePermission": {
            "description": "Optional. The IAM permission check determines whether the consumer project has 'servicenetworking.services.use' permission or not.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ValidateConsumerConfigResponse": {
        "properties": {
          "isValid": {
            "type": "boolean",
            "description": "Indicates whether all the requested validations passed."
          },
          "validationError": {
            "enum": [
              "VALIDATION_ERROR_UNSPECIFIED",
              "VALIDATION_NOT_REQUESTED",
              "SERVICE_NETWORKING_NOT_ENABLED",
              "NETWORK_NOT_FOUND",
              "NETWORK_NOT_PEERED",
              "NETWORK_PEERING_DELETED",
              "NETWORK_NOT_IN_CONSUMERS_PROJECT",
              "NETWORK_NOT_IN_CONSUMERS_HOST_PROJECT",
              "HOST_PROJECT_NOT_FOUND",
              "CONSUMER_PROJECT_NOT_SERVICE_PROJECT",
              "RANGES_EXHAUSTED",
              "RANGES_NOT_RESERVED",
              "RANGES_DELETED_LATER",
              "COMPUTE_API_NOT_ENABLED",
              "USE_PERMISSION_NOT_FOUND"
            ],
            "type": "string",
            "description": "The first validation which failed."
          },
          "existingSubnetworkCandidates": {
            "description": "List of subnetwork candidates from the request which exist with the `ip_cidr_range`, `secondary_ip_cider_ranges`, and `outside_allocation` fields set.",
            "items": {
              "$ref": "#/components/schemas/Subnetwork"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConsumerConfig": {
        "description": "Configuration information for a private service access connection.",
        "properties": {
          "consumerExportCustomRoutes": {
            "description": "Export custom routes flag value for peering from consumer to producer.",
            "type": "boolean"
          },
          "consumerExportSubnetRoutesWithPublicIp": {
            "description": "Export subnet routes with public ip flag value for peering from consumer to producer.",
            "type": "boolean"
          },
          "consumerImportCustomRoutes": {
            "description": "Import custom routes flag value for peering from consumer to producer.",
            "type": "boolean"
          },
          "consumerImportSubnetRoutesWithPublicIp": {
            "description": "Import subnet routes with public ip flag value for peering from consumer to producer.",
            "type": "boolean"
          },
          "producerExportCustomRoutes": {
            "description": "Export custom routes flag value for peering from producer to consumer.",
            "type": "boolean"
          },
          "producerExportSubnetRoutesWithPublicIp": {
            "description": "Export subnet routes with public ip flag value for peering from producer to consumer.",
            "type": "boolean"
          },
          "producerImportCustomRoutes": {
            "description": "Import custom routes flag value for peering from producer to consumer.",
            "type": "boolean"
          },
          "producerImportSubnetRoutesWithPublicIp": {
            "description": "Import subnet routes with public ip flag value for peering from producer to consumer.",
            "type": "boolean"
          },
          "producerNetwork": {
            "description": "Output only. The VPC host network that is used to host managed service instances. In the format, projects/{project}/global/networks/{network} where {project} is the project number e.g. '12345' and {network} is the network name.",
            "readOnly": true,
            "type": "string"
          },
          "reservedRanges": {
            "description": "Output only. The name of the allocated IP address ranges for this private service access connection.",
            "items": {
              "type": "string",
              "$ref": "#/components/schemas/GoogleCloudServicenetworkingV1ConsumerConfigReservedRange"
            },
            "readOnly": true,
            "type": "array"
          },
          "cloudsqlConfigs": {
            "description": "Represents one or multiple Cloud SQL configurations.",
            "items": {
              "$ref": "#/components/schemas/CloudSQLConfig"
            },
            "type": "array"
          },
          "usedIpRanges": {
            "description": "Output only. The IP ranges already in use by consumer or producer",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "vpcScReferenceArchitectureEnabled": {
            "description": "Output only. Indicates whether the VPC Service Controls reference architecture is configured for the producer VPC host network.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SecondaryIpRange": {
        "properties": {
          "ipCidrRange": {
            "description": "Secondary IP CIDR range in `x.x.x.x/y` format.",
            "type": "string"
          },
          "rangeName": {
            "description": "Name of the secondary IP range.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecondaryIpRangeSpec": {
        "properties": {
          "ipPrefixLength": {
            "description": "Required. The prefix length of the secondary IP range. Use CIDR range notation, such as `30` to provision a secondary IP range with an `x.x.x.x/30` CIDR range. The IP address range is drawn from a pool of available ranges in the service consumer's allocated range.",
            "format": "int32",
            "type": "integer"
          },
          "rangeName": {
            "description": "Required. A name for the secondary IP range. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.",
            "type": "string"
          },
          "requestedAddress": {
            "description": "Optional. The starting address of a range. The address must be a valid IPv4 address in the x.x.x.x format. This value combined with the IP prefix range is the CIDR range for the secondary IP range. The range must be within the allocated range that is assigned to the private connection. If the CIDR range isn't available, the call fails.",
            "type": "string"
          },
          "outsideAllocationPublicIpRange": {
            "description": "Optional. Enable outside allocation using public IP addresses. Any public IP range may be specified. If this field is provided, we will not use customer reserved ranges for this secondary IP range.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateConsumerConfigRequest": {
        "description": "Request to update the configuration of a service networking connection including the import/export of custom routes and subnetwork routes with public IP.",
        "properties": {
          "consumerConfig": {
            "$ref": "#/components/schemas/ConsumerConfig",
            "description": "Required. The updated peering config."
          }
        },
        "type": "object"
      },
      "CloudSQLConfig": {
        "description": "Cloud SQL configuration.",
        "properties": {
          "service": {
            "description": "Peering service used for peering with the Cloud SQL project.",
            "type": "string"
          },
          "umbrellaNetwork": {
            "description": "The name of the umbrella network in the Cloud SQL umbrella project.",
            "type": "string"
          },
          "umbrellaProject": {
            "description": "The project number of the Cloud SQL umbrella project.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteConnectionRequest": {
        "description": "Request to delete a private service access connection. The call will fail if there are any managed service instances using this connection.",
        "properties": {
          "consumerNetwork": {
            "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is a network name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudServicenetworkingV1ConsumerConfigReservedRange": {
        "description": "Allocated IP address ranges for this private service access connection.",
        "properties": {
          "address": {
            "description": "The starting address of the reserved range. The address must be a valid IPv4 address in the x.x.x.x format. This value combined with the IP prefix length is the CIDR range for the reserved range.",
            "type": "string"
          },
          "ipPrefixLength": {
            "description": "The prefix length of the reserved range.",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "The name of the reserved range.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "Oauth2": {
        "description": "Oauth 2.0 implicit authentication",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
            "scopes": {
              "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
              "https://www.googleapis.com/auth/service.management": "Manage your Google API service configuration"
            }
          }
        },
        "type": "oauth2"
      },
      "Oauth2c": {
        "description": "Oauth 2.0 authorizationCode authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth?prompt=consent&access_type=offline",
            "scopes": {
              "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
              "https://www.googleapis.com/auth/service.management": "Manage your Google API service configuration"
            },
            "tokenUrl": "https://accounts.google.com/o/oauth2/token"
          }
        },
        "type": "oauth2",
        "x-credentialsKey": "google"
      }
    }
  },
  "source": {
    "url": {}
  }
}
