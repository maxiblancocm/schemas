{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://alertcenter.googleapis.com/"
    }
  ],
  "info": {
    "title": "Google G Suite Alert Center",
    "version": "v1beta1",
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "Manages alerts on issues affecting your domain.",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/"
  },
  "externalDocs": {
    "url": "https://developers.google.com/admin-sdk/alertcenter/"
  },
  "tags": [
    {
      "name": "alerts"
    },
    {
      "name": "v1beta1"
    }
  ],
  "paths": {
    "/v1beta1/alerts": {
      "get": {
        "description": "Lists the alerts.",
        "operationId": "alertcenter.alerts.list",
        "parameters": [
          {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alerts are associated with. Inferred from the caller identity if not provided.",
            "in": "query",
            "name": "customerId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. A query string for filtering alert results. For more details, see [Query filters](/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](/admin-sdk/alertcenter/reference/filter-fields#alerts.list).",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The sort order of the list results. If not specified results may be returned in arbitrary order. You can sort the results in descending order based on the creation timestamp using `order_by=\"create_time desc\"`. Currently, supported sorting are `create_time asc`, `create_time desc`, `update_time desc`",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The requested page size. Server may return fewer items than requested. If unspecified, server picks an appropriate default.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Optional. A token identifying a page of results the server should return. If empty, a new iteration is started. To continue an iteration, pass in the value from the previous ListAlertsResponse's next_page_token field.",
            "in": "query",
            "name": "pageToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAlertsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["alerts"],
        "summary": "list alerts"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1beta1/alerts/{alertId}": {
      "delete": {
        "description": "Marks the specified alert for deletion. An alert that has been marked for deletion is removed from Alert Center after 30 days. Marking an alert for deletion has no effect on an alert which has already been marked for deletion. Attempting to mark a nonexistent alert for deletion results in a `NOT_FOUND` error.",
        "operationId": "alertcenter.alerts.delete",
        "parameters": [
          {
            "description": "Required. The identifier of the alert to delete.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
            "in": "query",
            "name": "customerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["alerts"],
        "summary": "delete alerts"
      },
      "get": {
        "description": "Gets the specified alert. Attempting to get a nonexistent alert returns `NOT_FOUND` error.",
        "operationId": "alertcenter.alerts.get",
        "parameters": [
          {
            "description": "Required. The identifier of the alert to retrieve.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
            "in": "query",
            "name": "customerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["alerts"],
        "summary": "get alerts"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1beta1/alerts/{alertId}/feedback": {
      "get": {
        "description": "Lists all the feedback for an alert. Attempting to list feedbacks for a non-existent alert returns `NOT_FOUND` error.",
        "operationId": "alertcenter.alerts.feedback.list",
        "parameters": [
          {
            "description": "Required. The alert identifier. The \"-\" wildcard could be used to represent all alerts.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alert feedback are associated with. Inferred from the caller identity if not provided.",
            "in": "query",
            "name": "customerId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. A query string for filtering alert feedback results. For more details, see [Query filters](/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](/admin-sdk/alertcenter/reference/filter-fields#alerts.feedback.list).",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAlertFeedbackResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["alerts"],
        "summary": "list feedback"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Creates new feedback for an alert. Attempting to create a feedback for a non-existent alert returns `NOT_FOUND` error. Attempting to create a feedback for an alert that is marked for deletion returns `FAILED_PRECONDITION' error.",
        "operationId": "alertcenter.alerts.feedback.create",
        "parameters": [
          {
            "description": "Required. The identifier of the alert this feedback belongs to.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
            "in": "query",
            "name": "customerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertFeedback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertFeedback"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["alerts"],
        "summary": "create feedback"
      }
    },
    "/v1beta1/alerts/{alertId}/metadata": {
      "get": {
        "description": "Returns the metadata of an alert. Attempting to get metadata for a non-existent alert returns `NOT_FOUND` error.",
        "operationId": "alertcenter.alerts.getMetadata",
        "parameters": [
          {
            "description": "Required. The identifier of the alert this metadata belongs to.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alert metadata is associated with. Inferred from the caller identity if not provided.",
            "in": "query",
            "name": "customerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertMetadata"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["alerts"],
        "summary": "get Metadata alerts"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ]
    },
    "/v1beta1/alerts/{alertId}:undelete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Restores, or \"undeletes\", an alert that was marked for deletion within the past 30 days. Attempting to undelete an alert which was marked for deletion over 30 days ago (which has been removed from the Alert Center database) or a nonexistent alert returns a `NOT_FOUND` error. Attempting to undelete an alert which has not been marked for deletion has no effect.",
        "operationId": "alertcenter.alerts.undelete",
        "parameters": [
          {
            "description": "Required. The identifier of the alert to undelete.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UndeleteAlertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["alerts"],
        "summary": "undelete alerts"
      }
    },
    "/v1beta1/alerts:batchDelete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Performs batch delete operation on alerts.",
        "operationId": "alertcenter.alerts.batchDelete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteAlertsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDeleteAlertsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["alerts"],
        "summary": "batch Delete alerts"
      }
    },
    "/v1beta1/alerts:batchUndelete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "post": {
        "description": "Performs batch undelete operation on alerts.",
        "operationId": "alertcenter.alerts.batchUndelete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchUndeleteAlertsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUndeleteAlertsResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["alerts"],
        "summary": "batch Undelete alerts"
      }
    },
    "/v1beta1/settings": {
      "get": {
        "description": "Returns customer-level settings.",
        "operationId": "alertcenter.getSettings",
        "parameters": [
          {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alert settings are associated with. Inferred from the caller identity if not provided.",
            "in": "query",
            "name": "customerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["v1beta1"],
        "summary": "get Settings alertcenter"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_.xgafv"
        },
        {
          "$ref": "#/components/parameters/access_token"
        },
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/key"
        },
        {
          "$ref": "#/components/parameters/oauth_token"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/quotaUser"
        },
        {
          "$ref": "#/components/parameters/upload_protocol"
        },
        {
          "$ref": "#/components/parameters/uploadType"
        }
      ],
      "patch": {
        "description": "Updates the customer-level settings.",
        "operationId": "alertcenter.updateSettings",
        "parameters": [
          {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alert settings are associated with. Inferred from the caller identity if not provided.",
            "in": "query",
            "name": "customerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Settings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/apps.alerts"],
            "Oauth2c": ["https://www.googleapis.com/auth/apps.alerts"]
          }
        ],
        "tags": ["v1beta1"],
        "summary": "update Settings alertcenter"
      }
    }
  },
  "components": {
    "parameters": {
      "_.xgafv": {
        "description": "V1 error format.",
        "in": "query",
        "name": "$.xgafv",
        "schema": {
          "enum": ["1", "2"],
          "type": "string"
        },
        "x-ignore": true
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "alt": {
        "description": "Data format for response.",
        "in": "query",
        "name": "alt",
        "schema": {
          "enum": ["json", "media", "proto"],
          "type": "string"
        },
        "x-ignore": true
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "prettyPrint": {
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "schema": {
          "type": "boolean"
        },
        "x-ignore": true
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "schema": {
          "type": "string"
        },
        "x-ignore": true
      }
    },
    "schemas": {
      "Alert": {
        "description": "An alert affecting a customer.",
        "properties": {
          "alertId": {
            "description": "Output only. The unique identifier for the alert.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time this alert was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "customerId": {
            "description": "Output only. The unique identifier of the Google account of the customer.",
            "type": "string"
          },
          "data": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised.",
            "type": "object"
          },
          "deleted": {
            "description": "Output only. `True` if this alert is marked for deletion.",
            "type": "boolean"
          },
          "endTime": {
            "description": "Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert.",
            "format": "google-datetime",
            "type": "string"
          },
          "etag": {
            "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly.",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AlertMetadata",
            "description": "Output only. The metadata associated with this alert."
          },
          "securityInvestigationToolLink": {
            "description": "Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert.",
            "type": "string"
          },
          "source": {
            "description": "Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Domain wide takeout * State sponsored attack * Google identity",
            "type": "string"
          },
          "startTime": {
            "description": "Required. The time the event that caused this alert was started or detected.",
            "format": "google-datetime",
            "type": "string"
          },
          "type": {
            "description": "Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [G Suite Alert types](/admin-sdk/alertcenter/reference/alert-types).",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time this alert was last updated.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AlertFeedback": {
        "description": "A customer feedback about an alert.",
        "properties": {
          "alertId": {
            "description": "Output only. The alert identifier.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time this feedback was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "customerId": {
            "description": "Output only. The unique identifier of the Google account of the customer.",
            "type": "string"
          },
          "email": {
            "description": "Output only. The email of the user that provided the feedback.",
            "type": "string"
          },
          "feedbackId": {
            "description": "Output only. The unique identifier for the feedback.",
            "type": "string"
          },
          "type": {
            "description": "Required. The type of the feedback.",
            "enum": ["ALERT_FEEDBACK_TYPE_UNSPECIFIED", "NOT_USEFUL", "SOMEWHAT_USEFUL", "VERY_USEFUL"],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AlertMetadata": {
        "description": "An alert metadata.",
        "properties": {
          "alertId": {
            "description": "Output only. The alert identifier.",
            "type": "string"
          },
          "assignee": {
            "description": "The email address of the user assigned to the alert.",
            "type": "string"
          },
          "customerId": {
            "description": "Output only. The unique identifier of the Google account of the customer.",
            "type": "string"
          },
          "etag": {
            "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metatdata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly.",
            "type": "string"
          },
          "severity": {
            "description": "The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW",
            "type": "string"
          },
          "status": {
            "description": "The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time this metadata was last updated.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BatchDeleteAlertsRequest": {
        "description": "A request to perform batch delete on alerts.",
        "properties": {
          "alertId": {
            "description": "Required. list of alert IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customerId": {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alerts are associated with.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BatchDeleteAlertsResponse": {
        "description": "Response to batch delete operation on alerts.",
        "properties": {
          "failedAlertStatus": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Status"
            },
            "description": "The status details for each failed alert_id.",
            "type": "object"
          },
          "successAlertIds": {
            "description": "The successful list of alert IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BatchUndeleteAlertsRequest": {
        "description": "A request to perform batch undelete on alerts.",
        "properties": {
          "alertId": {
            "description": "Required. list of alert IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customerId": {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alerts are associated with.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BatchUndeleteAlertsResponse": {
        "description": "Response to batch undelete operation on alerts.",
        "properties": {
          "failedAlertStatus": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Status"
            },
            "description": "The status details for each failed alert_id.",
            "type": "object"
          },
          "successAlertIds": {
            "description": "The successful list of alert IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CloudPubsubTopic": {
        "description": "A reference to a Cloud Pubsub topic. To register for notifications, the owner of the topic must grant `alerts-api-push-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission.",
        "properties": {
          "payloadFormat": {
            "description": "Optional. The format of the payload that would be sent. If not specified the format will be JSON.",
            "enum": ["PAYLOAD_FORMAT_UNSPECIFIED", "JSON"],
            "type": "string"
          },
          "topicName": {
            "description": "The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Empty": {
        "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
        "properties": {},
        "type": "object"
      },
      "ListAlertFeedbackResponse": {
        "description": "Response message for an alert feedback listing request.",
        "properties": {
          "feedback": {
            "description": "The list of alert feedback. Feedback entries for each alert are ordered by creation time descending.",
            "items": {
              "$ref": "#/components/schemas/AlertFeedback"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListAlertsResponse": {
        "description": "Response message for an alert listing request.",
        "properties": {
          "alerts": {
            "description": "The list of alerts.",
            "items": {
              "$ref": "#/components/schemas/Alert"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Notification": {
        "description": "Settings for callback notifications. For more details see [G Suite Alert Notification](/admin-sdk/alertcenter/guides/notifications).",
        "properties": {
          "cloudPubsubTopic": {
            "$ref": "#/components/schemas/CloudPubsubTopic",
            "description": "A Google Cloud Pub/sub topic destination."
          }
        },
        "type": "object"
      },
      "Settings": {
        "description": "Customer-level settings.",
        "properties": {
          "notifications": {
            "description": "The list of notifications.",
            "items": {
              "$ref": "#/components/schemas/Notification"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UndeleteAlertRequest": {
        "description": "A request to undelete a specific alert that was marked for deletion.",
        "properties": {
          "customerId": {
            "description": "Optional. The unique identifier of the G Suite organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "Oauth2": {
        "description": "Oauth 2.0 implicit authentication",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
            "scopes": {
              "https://www.googleapis.com/auth/apps.alerts": "See and delete your domain's G Suite alerts, and send alert feedback"
            }
          }
        },
        "type": "oauth2"
      },
      "Oauth2c": {
        "description": "Oauth 2.0 authorizationCode authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth?prompt=consent&access_type=offline",
            "scopes": {
              "https://www.googleapis.com/auth/apps.alerts": "See and delete your domain's G Suite alerts, and send alert feedback"
            },
            "tokenUrl": "https://accounts.google.com/o/oauth2/token"
          }
        },
        "type": "oauth2",
        "x-credentialsKey": "google"
      }
    }
  }
}
